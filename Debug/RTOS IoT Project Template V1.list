
RTOS IoT Project Template V1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000140a8  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000183c  08014238  08014238  00015238  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08015a74  08015a74  00017240  2**0
                  CONTENTS
  4 .ARM          00000008  08015a74  08015a74  00016a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08015a7c  08015a7c  00017240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08015a7c  08015a7c  00016a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08015a80  08015a80  00016a80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000240  20000000  08015a84  00017000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00006b80  20000240  08015cc4  00017240  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20006dc0  08015cc4  00017dc0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00017240  2**0
                  CONTENTS, READONLY
 12 .debug_info   00034438  00000000  00000000  00017270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00007989  00000000  00000000  0004b6a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002dc0  00000000  00000000  00053038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000023bc  00000000  00000000  00055df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000aafb  00000000  00000000  000581b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0003b326  00000000  00000000  00062caf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001167a1  00000000  00000000  0009dfd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001b4776  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d694  00000000  00000000  001b47bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000b8  00000000  00000000  001c1e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000240 	.word	0x20000240
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08014220 	.word	0x08014220

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000244 	.word	0x20000244
 80001cc:	08014220 	.word	0x08014220

080001d0 <strcmp>:
 80001d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001d8:	2a01      	cmp	r2, #1
 80001da:	bf28      	it	cs
 80001dc:	429a      	cmpcs	r2, r3
 80001de:	d0f7      	beq.n	80001d0 <strcmp>
 80001e0:	1ad0      	subs	r0, r2, r3
 80001e2:	4770      	bx	lr
	...

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b96a 	b.w	8000eb4 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9d08      	ldr	r5, [sp, #32]
 8000bfe:	460c      	mov	r4, r1
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	d14e      	bne.n	8000ca2 <__udivmoddi4+0xaa>
 8000c04:	4694      	mov	ip, r2
 8000c06:	458c      	cmp	ip, r1
 8000c08:	4686      	mov	lr, r0
 8000c0a:	fab2 f282 	clz	r2, r2
 8000c0e:	d962      	bls.n	8000cd6 <__udivmoddi4+0xde>
 8000c10:	b14a      	cbz	r2, 8000c26 <__udivmoddi4+0x2e>
 8000c12:	f1c2 0320 	rsb	r3, r2, #32
 8000c16:	4091      	lsls	r1, r2
 8000c18:	fa20 f303 	lsr.w	r3, r0, r3
 8000c1c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c20:	4319      	orrs	r1, r3
 8000c22:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c26:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c2a:	fa1f f68c 	uxth.w	r6, ip
 8000c2e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c32:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c36:	fb07 1114 	mls	r1, r7, r4, r1
 8000c3a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c3e:	fb04 f106 	mul.w	r1, r4, r6
 8000c42:	4299      	cmp	r1, r3
 8000c44:	d90a      	bls.n	8000c5c <__udivmoddi4+0x64>
 8000c46:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c4e:	f080 8112 	bcs.w	8000e76 <__udivmoddi4+0x27e>
 8000c52:	4299      	cmp	r1, r3
 8000c54:	f240 810f 	bls.w	8000e76 <__udivmoddi4+0x27e>
 8000c58:	3c02      	subs	r4, #2
 8000c5a:	4463      	add	r3, ip
 8000c5c:	1a59      	subs	r1, r3, r1
 8000c5e:	fa1f f38e 	uxth.w	r3, lr
 8000c62:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c66:	fb07 1110 	mls	r1, r7, r0, r1
 8000c6a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c6e:	fb00 f606 	mul.w	r6, r0, r6
 8000c72:	429e      	cmp	r6, r3
 8000c74:	d90a      	bls.n	8000c8c <__udivmoddi4+0x94>
 8000c76:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000c7e:	f080 80fc 	bcs.w	8000e7a <__udivmoddi4+0x282>
 8000c82:	429e      	cmp	r6, r3
 8000c84:	f240 80f9 	bls.w	8000e7a <__udivmoddi4+0x282>
 8000c88:	4463      	add	r3, ip
 8000c8a:	3802      	subs	r0, #2
 8000c8c:	1b9b      	subs	r3, r3, r6
 8000c8e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000c92:	2100      	movs	r1, #0
 8000c94:	b11d      	cbz	r5, 8000c9e <__udivmoddi4+0xa6>
 8000c96:	40d3      	lsrs	r3, r2
 8000c98:	2200      	movs	r2, #0
 8000c9a:	e9c5 3200 	strd	r3, r2, [r5]
 8000c9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca2:	428b      	cmp	r3, r1
 8000ca4:	d905      	bls.n	8000cb2 <__udivmoddi4+0xba>
 8000ca6:	b10d      	cbz	r5, 8000cac <__udivmoddi4+0xb4>
 8000ca8:	e9c5 0100 	strd	r0, r1, [r5]
 8000cac:	2100      	movs	r1, #0
 8000cae:	4608      	mov	r0, r1
 8000cb0:	e7f5      	b.n	8000c9e <__udivmoddi4+0xa6>
 8000cb2:	fab3 f183 	clz	r1, r3
 8000cb6:	2900      	cmp	r1, #0
 8000cb8:	d146      	bne.n	8000d48 <__udivmoddi4+0x150>
 8000cba:	42a3      	cmp	r3, r4
 8000cbc:	d302      	bcc.n	8000cc4 <__udivmoddi4+0xcc>
 8000cbe:	4290      	cmp	r0, r2
 8000cc0:	f0c0 80f0 	bcc.w	8000ea4 <__udivmoddi4+0x2ac>
 8000cc4:	1a86      	subs	r6, r0, r2
 8000cc6:	eb64 0303 	sbc.w	r3, r4, r3
 8000cca:	2001      	movs	r0, #1
 8000ccc:	2d00      	cmp	r5, #0
 8000cce:	d0e6      	beq.n	8000c9e <__udivmoddi4+0xa6>
 8000cd0:	e9c5 6300 	strd	r6, r3, [r5]
 8000cd4:	e7e3      	b.n	8000c9e <__udivmoddi4+0xa6>
 8000cd6:	2a00      	cmp	r2, #0
 8000cd8:	f040 8090 	bne.w	8000dfc <__udivmoddi4+0x204>
 8000cdc:	eba1 040c 	sub.w	r4, r1, ip
 8000ce0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ce4:	fa1f f78c 	uxth.w	r7, ip
 8000ce8:	2101      	movs	r1, #1
 8000cea:	fbb4 f6f8 	udiv	r6, r4, r8
 8000cee:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf2:	fb08 4416 	mls	r4, r8, r6, r4
 8000cf6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000cfa:	fb07 f006 	mul.w	r0, r7, r6
 8000cfe:	4298      	cmp	r0, r3
 8000d00:	d908      	bls.n	8000d14 <__udivmoddi4+0x11c>
 8000d02:	eb1c 0303 	adds.w	r3, ip, r3
 8000d06:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d0a:	d202      	bcs.n	8000d12 <__udivmoddi4+0x11a>
 8000d0c:	4298      	cmp	r0, r3
 8000d0e:	f200 80cd 	bhi.w	8000eac <__udivmoddi4+0x2b4>
 8000d12:	4626      	mov	r6, r4
 8000d14:	1a1c      	subs	r4, r3, r0
 8000d16:	fa1f f38e 	uxth.w	r3, lr
 8000d1a:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d1e:	fb08 4410 	mls	r4, r8, r0, r4
 8000d22:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d26:	fb00 f707 	mul.w	r7, r0, r7
 8000d2a:	429f      	cmp	r7, r3
 8000d2c:	d908      	bls.n	8000d40 <__udivmoddi4+0x148>
 8000d2e:	eb1c 0303 	adds.w	r3, ip, r3
 8000d32:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d36:	d202      	bcs.n	8000d3e <__udivmoddi4+0x146>
 8000d38:	429f      	cmp	r7, r3
 8000d3a:	f200 80b0 	bhi.w	8000e9e <__udivmoddi4+0x2a6>
 8000d3e:	4620      	mov	r0, r4
 8000d40:	1bdb      	subs	r3, r3, r7
 8000d42:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d46:	e7a5      	b.n	8000c94 <__udivmoddi4+0x9c>
 8000d48:	f1c1 0620 	rsb	r6, r1, #32
 8000d4c:	408b      	lsls	r3, r1
 8000d4e:	fa22 f706 	lsr.w	r7, r2, r6
 8000d52:	431f      	orrs	r7, r3
 8000d54:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d58:	fa04 f301 	lsl.w	r3, r4, r1
 8000d5c:	ea43 030c 	orr.w	r3, r3, ip
 8000d60:	40f4      	lsrs	r4, r6
 8000d62:	fa00 f801 	lsl.w	r8, r0, r1
 8000d66:	0c38      	lsrs	r0, r7, #16
 8000d68:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000d6c:	fbb4 fef0 	udiv	lr, r4, r0
 8000d70:	fa1f fc87 	uxth.w	ip, r7
 8000d74:	fb00 441e 	mls	r4, r0, lr, r4
 8000d78:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000d7c:	fb0e f90c 	mul.w	r9, lr, ip
 8000d80:	45a1      	cmp	r9, r4
 8000d82:	fa02 f201 	lsl.w	r2, r2, r1
 8000d86:	d90a      	bls.n	8000d9e <__udivmoddi4+0x1a6>
 8000d88:	193c      	adds	r4, r7, r4
 8000d8a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000d8e:	f080 8084 	bcs.w	8000e9a <__udivmoddi4+0x2a2>
 8000d92:	45a1      	cmp	r9, r4
 8000d94:	f240 8081 	bls.w	8000e9a <__udivmoddi4+0x2a2>
 8000d98:	f1ae 0e02 	sub.w	lr, lr, #2
 8000d9c:	443c      	add	r4, r7
 8000d9e:	eba4 0409 	sub.w	r4, r4, r9
 8000da2:	fa1f f983 	uxth.w	r9, r3
 8000da6:	fbb4 f3f0 	udiv	r3, r4, r0
 8000daa:	fb00 4413 	mls	r4, r0, r3, r4
 8000dae:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db2:	fb03 fc0c 	mul.w	ip, r3, ip
 8000db6:	45a4      	cmp	ip, r4
 8000db8:	d907      	bls.n	8000dca <__udivmoddi4+0x1d2>
 8000dba:	193c      	adds	r4, r7, r4
 8000dbc:	f103 30ff 	add.w	r0, r3, #4294967295
 8000dc0:	d267      	bcs.n	8000e92 <__udivmoddi4+0x29a>
 8000dc2:	45a4      	cmp	ip, r4
 8000dc4:	d965      	bls.n	8000e92 <__udivmoddi4+0x29a>
 8000dc6:	3b02      	subs	r3, #2
 8000dc8:	443c      	add	r4, r7
 8000dca:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000dce:	fba0 9302 	umull	r9, r3, r0, r2
 8000dd2:	eba4 040c 	sub.w	r4, r4, ip
 8000dd6:	429c      	cmp	r4, r3
 8000dd8:	46ce      	mov	lr, r9
 8000dda:	469c      	mov	ip, r3
 8000ddc:	d351      	bcc.n	8000e82 <__udivmoddi4+0x28a>
 8000dde:	d04e      	beq.n	8000e7e <__udivmoddi4+0x286>
 8000de0:	b155      	cbz	r5, 8000df8 <__udivmoddi4+0x200>
 8000de2:	ebb8 030e 	subs.w	r3, r8, lr
 8000de6:	eb64 040c 	sbc.w	r4, r4, ip
 8000dea:	fa04 f606 	lsl.w	r6, r4, r6
 8000dee:	40cb      	lsrs	r3, r1
 8000df0:	431e      	orrs	r6, r3
 8000df2:	40cc      	lsrs	r4, r1
 8000df4:	e9c5 6400 	strd	r6, r4, [r5]
 8000df8:	2100      	movs	r1, #0
 8000dfa:	e750      	b.n	8000c9e <__udivmoddi4+0xa6>
 8000dfc:	f1c2 0320 	rsb	r3, r2, #32
 8000e00:	fa20 f103 	lsr.w	r1, r0, r3
 8000e04:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e08:	fa24 f303 	lsr.w	r3, r4, r3
 8000e0c:	4094      	lsls	r4, r2
 8000e0e:	430c      	orrs	r4, r1
 8000e10:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e14:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e18:	fa1f f78c 	uxth.w	r7, ip
 8000e1c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e20:	fb08 3110 	mls	r1, r8, r0, r3
 8000e24:	0c23      	lsrs	r3, r4, #16
 8000e26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e2a:	fb00 f107 	mul.w	r1, r0, r7
 8000e2e:	4299      	cmp	r1, r3
 8000e30:	d908      	bls.n	8000e44 <__udivmoddi4+0x24c>
 8000e32:	eb1c 0303 	adds.w	r3, ip, r3
 8000e36:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e3a:	d22c      	bcs.n	8000e96 <__udivmoddi4+0x29e>
 8000e3c:	4299      	cmp	r1, r3
 8000e3e:	d92a      	bls.n	8000e96 <__udivmoddi4+0x29e>
 8000e40:	3802      	subs	r0, #2
 8000e42:	4463      	add	r3, ip
 8000e44:	1a5b      	subs	r3, r3, r1
 8000e46:	b2a4      	uxth	r4, r4
 8000e48:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e4c:	fb08 3311 	mls	r3, r8, r1, r3
 8000e50:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e54:	fb01 f307 	mul.w	r3, r1, r7
 8000e58:	42a3      	cmp	r3, r4
 8000e5a:	d908      	bls.n	8000e6e <__udivmoddi4+0x276>
 8000e5c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e60:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e64:	d213      	bcs.n	8000e8e <__udivmoddi4+0x296>
 8000e66:	42a3      	cmp	r3, r4
 8000e68:	d911      	bls.n	8000e8e <__udivmoddi4+0x296>
 8000e6a:	3902      	subs	r1, #2
 8000e6c:	4464      	add	r4, ip
 8000e6e:	1ae4      	subs	r4, r4, r3
 8000e70:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000e74:	e739      	b.n	8000cea <__udivmoddi4+0xf2>
 8000e76:	4604      	mov	r4, r0
 8000e78:	e6f0      	b.n	8000c5c <__udivmoddi4+0x64>
 8000e7a:	4608      	mov	r0, r1
 8000e7c:	e706      	b.n	8000c8c <__udivmoddi4+0x94>
 8000e7e:	45c8      	cmp	r8, r9
 8000e80:	d2ae      	bcs.n	8000de0 <__udivmoddi4+0x1e8>
 8000e82:	ebb9 0e02 	subs.w	lr, r9, r2
 8000e86:	eb63 0c07 	sbc.w	ip, r3, r7
 8000e8a:	3801      	subs	r0, #1
 8000e8c:	e7a8      	b.n	8000de0 <__udivmoddi4+0x1e8>
 8000e8e:	4631      	mov	r1, r6
 8000e90:	e7ed      	b.n	8000e6e <__udivmoddi4+0x276>
 8000e92:	4603      	mov	r3, r0
 8000e94:	e799      	b.n	8000dca <__udivmoddi4+0x1d2>
 8000e96:	4630      	mov	r0, r6
 8000e98:	e7d4      	b.n	8000e44 <__udivmoddi4+0x24c>
 8000e9a:	46d6      	mov	lr, sl
 8000e9c:	e77f      	b.n	8000d9e <__udivmoddi4+0x1a6>
 8000e9e:	4463      	add	r3, ip
 8000ea0:	3802      	subs	r0, #2
 8000ea2:	e74d      	b.n	8000d40 <__udivmoddi4+0x148>
 8000ea4:	4606      	mov	r6, r0
 8000ea6:	4623      	mov	r3, r4
 8000ea8:	4608      	mov	r0, r1
 8000eaa:	e70f      	b.n	8000ccc <__udivmoddi4+0xd4>
 8000eac:	3e02      	subs	r6, #2
 8000eae:	4463      	add	r3, ip
 8000eb0:	e730      	b.n	8000d14 <__udivmoddi4+0x11c>
 8000eb2:	bf00      	nop

08000eb4 <__aeabi_idiv0>:
 8000eb4:	4770      	bx	lr
 8000eb6:	bf00      	nop

08000eb8 <net_init>:
/* Private variables ---------------------------------------------------------*/
/* Private function prototypes -----------------------------------------------*/
/* Functions Definition ------------------------------------------------------*/

int net_init(net_hnd_t * nethnd, net_if_t interface, net_if_init_t *f_netinit)
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	b086      	sub	sp, #24
 8000ebc:	af00      	add	r7, sp, #0
 8000ebe:	60f8      	str	r0, [r7, #12]
 8000ec0:	460b      	mov	r3, r1
 8000ec2:	607a      	str	r2, [r7, #4]
 8000ec4:	72fb      	strb	r3, [r7, #11]
  int rc = NET_ERR;
 8000ec6:	f04f 33ff 	mov.w	r3, #4294967295
 8000eca:	617b      	str	r3, [r7, #20]
  net_ctxt_t *ctxt = NULL;
 8000ecc:	2300      	movs	r3, #0
 8000ece:	613b      	str	r3, [r7, #16]

  if (f_netinit == NULL)
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	2b00      	cmp	r3, #0
 8000ed4:	d103      	bne.n	8000ede <net_init+0x26>
  {
    rc = NET_PARAM;
 8000ed6:	f06f 0301 	mvn.w	r3, #1
 8000eda:	617b      	str	r3, [r7, #20]
 8000edc:	e036      	b.n	8000f4c <net_init+0x94>
  }
  else
  {
    ctxt = net_malloc(sizeof(net_ctxt_t));
 8000ede:	2008      	movs	r0, #8
 8000ee0:	f00f fcda 	bl	8010898 <malloc>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	613b      	str	r3, [r7, #16]
    if (ctxt == NULL)
 8000ee8:	693b      	ldr	r3, [r7, #16]
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d10b      	bne.n	8000f06 <net_init+0x4e>
    {
      msg_error("net_init: allocation failed.\n");
 8000eee:	2253      	movs	r2, #83	@ 0x53
 8000ef0:	491f      	ldr	r1, [pc, #124]	@ (8000f70 <net_init+0xb8>)
 8000ef2:	4820      	ldr	r0, [pc, #128]	@ (8000f74 <net_init+0xbc>)
 8000ef4:	f010 fb5c 	bl	80115b0 <iprintf>
 8000ef8:	481f      	ldr	r0, [pc, #124]	@ (8000f78 <net_init+0xc0>)
 8000efa:	f010 fbc9 	bl	8011690 <puts>
      rc = NET_ERR;
 8000efe:	f04f 33ff 	mov.w	r3, #4294967295
 8000f02:	617b      	str	r3, [r7, #20]
 8000f04:	e022      	b.n	8000f4c <net_init+0x94>
    }
    else
    {
      memset(ctxt, 0, sizeof(net_ctxt_t));
 8000f06:	2208      	movs	r2, #8
 8000f08:	2100      	movs	r1, #0
 8000f0a:	6938      	ldr	r0, [r7, #16]
 8000f0c:	f010 fd4a 	bl	80119a4 <memset>
      switch(interface)
 8000f10:	7afb      	ldrb	r3, [r7, #11]
 8000f12:	2b01      	cmp	r3, #1
 8000f14:	d10b      	bne.n	8000f2e <net_init+0x76>
      {
    #ifdef USE_WIFI
        case NET_IF_WLAN:
          ctxt->itf = interface;  // TODO: register a list of function pointers in function of the interface type. (to be provided by the caller?)
 8000f16:	693b      	ldr	r3, [r7, #16]
 8000f18:	7afa      	ldrb	r2, [r7, #11]
 8000f1a:	701a      	strb	r2, [r3, #0]
          if(f_netinit(NULL) == 0)
 8000f1c:	687b      	ldr	r3, [r7, #4]
 8000f1e:	2000      	movs	r0, #0
 8000f20:	4798      	blx	r3
 8000f22:	4603      	mov	r3, r0
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	d110      	bne.n	8000f4a <net_init+0x92>
          {
            rc = NET_OK;
 8000f28:	2300      	movs	r3, #0
 8000f2a:	617b      	str	r3, [r7, #20]
          }
          break;
 8000f2c:	e00d      	b.n	8000f4a <net_init+0x92>
            rc = NET_OK;
          }
          break;
    #endif /* USE_LWIP */
        default:
          msg_error("net_init: interface type of %d not implemented.\n", interface);
 8000f2e:	2277      	movs	r2, #119	@ 0x77
 8000f30:	490f      	ldr	r1, [pc, #60]	@ (8000f70 <net_init+0xb8>)
 8000f32:	4810      	ldr	r0, [pc, #64]	@ (8000f74 <net_init+0xbc>)
 8000f34:	f010 fb3c 	bl	80115b0 <iprintf>
 8000f38:	7afb      	ldrb	r3, [r7, #11]
 8000f3a:	4619      	mov	r1, r3
 8000f3c:	480f      	ldr	r0, [pc, #60]	@ (8000f7c <net_init+0xc4>)
 8000f3e:	f010 fb37 	bl	80115b0 <iprintf>
          rc = NET_PARAM;
 8000f42:	f06f 0301 	mvn.w	r3, #1
 8000f46:	617b      	str	r3, [r7, #20]
 8000f48:	e000      	b.n	8000f4c <net_init+0x94>
          break;
 8000f4a:	bf00      	nop
      }
    }
  }

  if (rc == NET_OK)
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d103      	bne.n	8000f5a <net_init+0xa2>
  {
    *nethnd = (net_hnd_t) ctxt;
 8000f52:	68fb      	ldr	r3, [r7, #12]
 8000f54:	693a      	ldr	r2, [r7, #16]
 8000f56:	601a      	str	r2, [r3, #0]
 8000f58:	e005      	b.n	8000f66 <net_init+0xae>
  }
  else
  {
    if (ctxt != NULL)
 8000f5a:	693b      	ldr	r3, [r7, #16]
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d002      	beq.n	8000f66 <net_init+0xae>
    {
      net_free(ctxt);
 8000f60:	6938      	ldr	r0, [r7, #16]
 8000f62:	f00f fca1 	bl	80108a8 <free>
    }
  }
  
  return rc;
 8000f66:	697b      	ldr	r3, [r7, #20]
}
 8000f68:	4618      	mov	r0, r3
 8000f6a:	3718      	adds	r7, #24
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	bd80      	pop	{r7, pc}
 8000f70:	08015510 	.word	0x08015510
 8000f74:	08014238 	.word	0x08014238
 8000f78:	08014248 	.word	0x08014248
 8000f7c:	08014268 	.word	0x08014268

08000f80 <net_get_ip_address>:
  return rc;
}


int net_get_ip_address(net_hnd_t nethnd, net_ipaddr_t * ipAddress)
{
 8000f80:	b580      	push	{r7, lr}
 8000f82:	b086      	sub	sp, #24
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
 8000f88:	6039      	str	r1, [r7, #0]
  net_ctxt_t *ctxt = (net_ctxt_t *) nethnd;
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	613b      	str	r3, [r7, #16]
  int rc = NET_ERR;
 8000f8e:	f04f 33ff 	mov.w	r3, #4294967295
 8000f92:	617b      	str	r3, [r7, #20]
  
  if (ipAddress == NULL)
 8000f94:	683b      	ldr	r3, [r7, #0]
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d103      	bne.n	8000fa2 <net_get_ip_address+0x22>
  {
    rc = NET_PARAM;
 8000f9a:	f06f 0301 	mvn.w	r3, #1
 8000f9e:	617b      	str	r3, [r7, #20]
 8000fa0:	e02f      	b.n	8001002 <net_get_ip_address+0x82>
  }
  else
  {
    switch(ctxt->itf)
 8000fa2:	693b      	ldr	r3, [r7, #16]
 8000fa4:	781b      	ldrb	r3, [r3, #0]
 8000fa6:	2b01      	cmp	r3, #1
 8000fa8:	d11a      	bne.n	8000fe0 <net_get_ip_address+0x60>
#ifdef USE_WIFI
      case NET_IF_WLAN:
      {
        uint8_t addr[4];
        /* WIFI_GetIP_Address() returns IPv4 addresses in binary format, network byte order. */
        WIFI_Status_t ret = WIFI_GetIP_Address(addr);
 8000faa:	f107 0308 	add.w	r3, r7, #8
 8000fae:	4618      	mov	r0, r3
 8000fb0:	f00f fb04 	bl	80105bc <WIFI_GetIP_Address>
 8000fb4:	4603      	mov	r3, r0
 8000fb6:	73fb      	strb	r3, [r7, #15]
        if (ret == WIFI_STATUS_OK)
 8000fb8:	7bfb      	ldrb	r3, [r7, #15]
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	d120      	bne.n	8001000 <net_get_ip_address+0x80>
        {
          ipAddress->ipv = NET_IP_V4;
 8000fbe:	683b      	ldr	r3, [r7, #0]
 8000fc0:	2200      	movs	r2, #0
 8000fc2:	701a      	strb	r2, [r3, #0]
          memset(ipAddress->ip, 0xFF, sizeof(ipAddress->ip));
 8000fc4:	683b      	ldr	r3, [r7, #0]
 8000fc6:	3301      	adds	r3, #1
 8000fc8:	2210      	movs	r2, #16
 8000fca:	21ff      	movs	r1, #255	@ 0xff
 8000fcc:	4618      	mov	r0, r3
 8000fce:	f010 fce9 	bl	80119a4 <memset>
          memcpy(&ipAddress->ip[12], addr, 4);
 8000fd2:	683b      	ldr	r3, [r7, #0]
 8000fd4:	330d      	adds	r3, #13
 8000fd6:	68ba      	ldr	r2, [r7, #8]
 8000fd8:	601a      	str	r2, [r3, #0]
          rc = NET_OK;
 8000fda:	2300      	movs	r3, #0
 8000fdc:	617b      	str	r3, [r7, #20]
        }
        break;
 8000fde:	e00f      	b.n	8001000 <net_get_ip_address+0x80>
        }
        break;
      }
#endif /* USE_LWIP */
      default:
        msg_error("net_get_ip_address: interface type of %d not implemented.\n", ctxt->itf);
 8000fe0:	f44f 729b 	mov.w	r2, #310	@ 0x136
 8000fe4:	4909      	ldr	r1, [pc, #36]	@ (800100c <net_get_ip_address+0x8c>)
 8000fe6:	480a      	ldr	r0, [pc, #40]	@ (8001010 <net_get_ip_address+0x90>)
 8000fe8:	f010 fae2 	bl	80115b0 <iprintf>
 8000fec:	693b      	ldr	r3, [r7, #16]
 8000fee:	781b      	ldrb	r3, [r3, #0]
 8000ff0:	4619      	mov	r1, r3
 8000ff2:	4808      	ldr	r0, [pc, #32]	@ (8001014 <net_get_ip_address+0x94>)
 8000ff4:	f010 fadc 	bl	80115b0 <iprintf>
        rc = NET_PARAM;
 8000ff8:	f06f 0301 	mvn.w	r3, #1
 8000ffc:	617b      	str	r3, [r7, #20]
 8000ffe:	e000      	b.n	8001002 <net_get_ip_address+0x82>
        break;
 8001000:	bf00      	nop
    }
  }
  
  return rc;
 8001002:	697b      	ldr	r3, [r7, #20]
}
 8001004:	4618      	mov	r0, r3
 8001006:	3718      	adds	r7, #24
 8001008:	46bd      	mov	sp, r7
 800100a:	bd80      	pop	{r7, pc}
 800100c:	0801551c 	.word	0x0801551c
 8001010:	08014238 	.word	0x08014238
 8001014:	08014304 	.word	0x08014304

08001018 <net_get_mac_address>:


int net_get_mac_address(net_hnd_t nethnd, net_macaddr_t * macAddress)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	b086      	sub	sp, #24
 800101c:	af00      	add	r7, sp, #0
 800101e:	6078      	str	r0, [r7, #4]
 8001020:	6039      	str	r1, [r7, #0]
  net_ctxt_t *ctxt = (net_ctxt_t *) nethnd;
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	613b      	str	r3, [r7, #16]
  int rc = NET_ERR;
 8001026:	f04f 33ff 	mov.w	r3, #4294967295
 800102a:	617b      	str	r3, [r7, #20]
  switch (ctxt->itf)
 800102c:	693b      	ldr	r3, [r7, #16]
 800102e:	781b      	ldrb	r3, [r3, #0]
 8001030:	2b01      	cmp	r3, #1
 8001032:	d114      	bne.n	800105e <net_get_mac_address+0x46>
  {
#ifdef USE_WIFI
    case NET_IF_WLAN:
    {
      uint8_t addr[6];  /* WIFI_GetMAC_Address() returns in binary format. */
      WIFI_Status_t ret = WIFI_GetMAC_Address(addr);
 8001034:	f107 0308 	add.w	r3, r7, #8
 8001038:	4618      	mov	r0, r3
 800103a:	f00f faa9 	bl	8010590 <WIFI_GetMAC_Address>
 800103e:	4603      	mov	r3, r0
 8001040:	73fb      	strb	r3, [r7, #15]
      if (ret == WIFI_STATUS_OK)
 8001042:	7bfb      	ldrb	r3, [r7, #15]
 8001044:	2b00      	cmp	r3, #0
 8001046:	d11a      	bne.n	800107e <net_get_mac_address+0x66>
      {
        memcpy(macAddress->mac, addr, MIN(sizeof(macAddress->mac), 6));
 8001048:	683b      	ldr	r3, [r7, #0]
 800104a:	461a      	mov	r2, r3
 800104c:	f107 0308 	add.w	r3, r7, #8
 8001050:	6818      	ldr	r0, [r3, #0]
 8001052:	6010      	str	r0, [r2, #0]
 8001054:	889b      	ldrh	r3, [r3, #4]
 8001056:	8093      	strh	r3, [r2, #4]
        rc = NET_OK;
 8001058:	2300      	movs	r3, #0
 800105a:	617b      	str	r3, [r7, #20]
      }
      break;
 800105c:	e00f      	b.n	800107e <net_get_mac_address+0x66>
      }
    }
    break;
#endif /* USE_LWIP */
    default:
      msg_error("net_get_mac_address: interface type of %d not implemented.\n", ctxt->itf);
 800105e:	f44f 72b9 	mov.w	r2, #370	@ 0x172
 8001062:	490a      	ldr	r1, [pc, #40]	@ (800108c <net_get_mac_address+0x74>)
 8001064:	480a      	ldr	r0, [pc, #40]	@ (8001090 <net_get_mac_address+0x78>)
 8001066:	f010 faa3 	bl	80115b0 <iprintf>
 800106a:	693b      	ldr	r3, [r7, #16]
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	4619      	mov	r1, r3
 8001070:	4808      	ldr	r0, [pc, #32]	@ (8001094 <net_get_mac_address+0x7c>)
 8001072:	f010 fa9d 	bl	80115b0 <iprintf>
      rc = NET_PARAM;
 8001076:	f06f 0301 	mvn.w	r3, #1
 800107a:	617b      	str	r3, [r7, #20]
 800107c:	e000      	b.n	8001080 <net_get_mac_address+0x68>
      break;
 800107e:	bf00      	nop
  }
  
  return rc;
 8001080:	697b      	ldr	r3, [r7, #20]
}
 8001082:	4618      	mov	r0, r3
 8001084:	3718      	adds	r7, #24
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}
 800108a:	bf00      	nop
 800108c:	08015530 	.word	0x08015530
 8001090:	08014238 	.word	0x08014238
 8001094:	08014340 	.word	0x08014340

08001098 <net_sock_create>:
  return rc;
}


int net_sock_create(net_hnd_t nethnd, net_sockhnd_t * sockhnd, net_proto_t proto)
{
 8001098:	b580      	push	{r7, lr}
 800109a:	b086      	sub	sp, #24
 800109c:	af00      	add	r7, sp, #0
 800109e:	60f8      	str	r0, [r7, #12]
 80010a0:	60b9      	str	r1, [r7, #8]
 80010a2:	4613      	mov	r3, r2
 80010a4:	71fb      	strb	r3, [r7, #7]
  net_ctxt_t *ctxt = (net_ctxt_t *) nethnd;
 80010a6:	68fb      	ldr	r3, [r7, #12]
 80010a8:	617b      	str	r3, [r7, #20]
  switch(proto)
 80010aa:	79fb      	ldrb	r3, [r7, #7]
 80010ac:	2b01      	cmp	r3, #1
 80010ae:	d001      	beq.n	80010b4 <net_sock_create+0x1c>
 80010b0:	2b03      	cmp	r3, #3
 80010b2:	d10b      	bne.n	80010cc <net_sock_create+0x34>
  {
    case NET_PROTO_TCP:
    case NET_PROTO_UDP:
      switch(ctxt->itf)
 80010b4:	697b      	ldr	r3, [r7, #20]
 80010b6:	781b      	ldrb	r3, [r3, #0]
 80010b8:	2b01      	cmp	r3, #1
 80010ba:	d116      	bne.n	80010ea <net_sock_create+0x52>
      {
#ifdef USE_WIFI
        case NET_IF_WLAN:
          return net_sock_create_wifi(nethnd, sockhnd, proto);
 80010bc:	79fb      	ldrb	r3, [r7, #7]
 80010be:	461a      	mov	r2, r3
 80010c0:	68b9      	ldr	r1, [r7, #8]
 80010c2:	68f8      	ldr	r0, [r7, #12]
 80010c4:	f000 f928 	bl	8001318 <net_sock_create_wifi>
 80010c8:	4603      	mov	r3, r0
 80010ca:	e011      	b.n	80010f0 <net_sock_create+0x58>
#ifdef USE_MBED_TLS
    case NET_PROTO_TLS:
      return net_sock_create_mbedtls(nethnd, sockhnd, proto);
#endif /* USE_MBED_TLS */
    default:
      msg_error("net_sock_create: interface type of %d not implemented.\n", ctxt->itf);
 80010cc:	f44f 72ed 	mov.w	r2, #474	@ 0x1da
 80010d0:	4909      	ldr	r1, [pc, #36]	@ (80010f8 <net_sock_create+0x60>)
 80010d2:	480a      	ldr	r0, [pc, #40]	@ (80010fc <net_sock_create+0x64>)
 80010d4:	f010 fa6c 	bl	80115b0 <iprintf>
 80010d8:	697b      	ldr	r3, [r7, #20]
 80010da:	781b      	ldrb	r3, [r3, #0]
 80010dc:	4619      	mov	r1, r3
 80010de:	4808      	ldr	r0, [pc, #32]	@ (8001100 <net_sock_create+0x68>)
 80010e0:	f010 fa66 	bl	80115b0 <iprintf>
      return NET_PARAM;
 80010e4:	f06f 0301 	mvn.w	r3, #1
 80010e8:	e002      	b.n	80010f0 <net_sock_create+0x58>
      break;
 80010ea:	bf00      	nop
  }
  return NET_PARAM;
 80010ec:	f06f 0301 	mvn.w	r3, #1
}
 80010f0:	4618      	mov	r0, r3
 80010f2:	3718      	adds	r7, #24
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bd80      	pop	{r7, pc}
 80010f8:	08015544 	.word	0x08015544
 80010fc:	08014238 	.word	0x08014238
 8001100:	0801437c 	.word	0x0801437c

08001104 <net_sock_open>:


int net_sock_open(net_sockhnd_t sockhnd, const char * hostname, int remoteport, int localport)
{
 8001104:	b590      	push	{r4, r7, lr}
 8001106:	b087      	sub	sp, #28
 8001108:	af00      	add	r7, sp, #0
 800110a:	60f8      	str	r0, [r7, #12]
 800110c:	60b9      	str	r1, [r7, #8]
 800110e:	607a      	str	r2, [r7, #4]
 8001110:	603b      	str	r3, [r7, #0]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 8001112:	68fb      	ldr	r3, [r7, #12]
 8001114:	617b      	str	r3, [r7, #20]
  return sock->methods.open(sockhnd, hostname, remoteport, localport);
 8001116:	697b      	ldr	r3, [r7, #20]
 8001118:	689c      	ldr	r4, [r3, #8]
 800111a:	683b      	ldr	r3, [r7, #0]
 800111c:	687a      	ldr	r2, [r7, #4]
 800111e:	68b9      	ldr	r1, [r7, #8]
 8001120:	68f8      	ldr	r0, [r7, #12]
 8001122:	47a0      	blx	r4
 8001124:	4603      	mov	r3, r0
}
 8001126:	4618      	mov	r0, r3
 8001128:	371c      	adds	r7, #28
 800112a:	46bd      	mov	sp, r7
 800112c:	bd90      	pop	{r4, r7, pc}
	...

08001130 <net_sock_setopt>:


int net_sock_setopt(net_sockhnd_t sockhnd, const char * optname, const uint8_t * optbuf, size_t optlen)
{
 8001130:	b580      	push	{r7, lr}
 8001132:	b088      	sub	sp, #32
 8001134:	af00      	add	r7, sp, #0
 8001136:	60f8      	str	r0, [r7, #12]
 8001138:	60b9      	str	r1, [r7, #8]
 800113a:	607a      	str	r2, [r7, #4]
 800113c:	603b      	str	r3, [r7, #0]
  int rc = NET_PARAM;
 800113e:	f06f 0301 	mvn.w	r3, #1
 8001142:	61fb      	str	r3, [r7, #28]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 8001144:	68fb      	ldr	r3, [r7, #12]
 8001146:	61bb      	str	r3, [r7, #24]
  bool has_opt_data = (optbuf != NULL) && (optlen > 0);
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	2b00      	cmp	r3, #0
 800114c:	d004      	beq.n	8001158 <net_sock_setopt+0x28>
 800114e:	683b      	ldr	r3, [r7, #0]
 8001150:	2b00      	cmp	r3, #0
 8001152:	d001      	beq.n	8001158 <net_sock_setopt+0x28>
 8001154:	2301      	movs	r3, #1
 8001156:	e000      	b.n	800115a <net_sock_setopt+0x2a>
 8001158:	2300      	movs	r3, #0
 800115a:	75fb      	strb	r3, [r7, #23]
 800115c:	7dfb      	ldrb	r3, [r7, #23]
 800115e:	f003 0301 	and.w	r3, r3, #1
 8001162:	75fb      	strb	r3, [r7, #23]
      }
    }
  }
#endif /* USE_MBED_TLS */
  
  if (strcmp(optname, "sock_blocking") == 0)
 8001164:	4928      	ldr	r1, [pc, #160]	@ (8001208 <net_sock_setopt+0xd8>)
 8001166:	68b8      	ldr	r0, [r7, #8]
 8001168:	f7ff f832 	bl	80001d0 <strcmp>
 800116c:	4603      	mov	r3, r0
 800116e:	2b00      	cmp	r3, #0
 8001170:	d10b      	bne.n	800118a <net_sock_setopt+0x5a>
  {
    if (!has_opt_data)
 8001172:	7dfb      	ldrb	r3, [r7, #23]
 8001174:	f083 0301 	eor.w	r3, r3, #1
 8001178:	b2db      	uxtb	r3, r3
 800117a:	2b00      	cmp	r3, #0
 800117c:	d005      	beq.n	800118a <net_sock_setopt+0x5a>
    {
      sock->blocking = true;
 800117e:	69bb      	ldr	r3, [r7, #24]
 8001180:	2201      	movs	r2, #1
 8001182:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
      rc = NET_OK;
 8001186:	2300      	movs	r3, #0
 8001188:	61fb      	str	r3, [r7, #28]
    }
  }
  if (strcmp(optname, "sock_noblocking") == 0)
 800118a:	4920      	ldr	r1, [pc, #128]	@ (800120c <net_sock_setopt+0xdc>)
 800118c:	68b8      	ldr	r0, [r7, #8]
 800118e:	f7ff f81f 	bl	80001d0 <strcmp>
 8001192:	4603      	mov	r3, r0
 8001194:	2b00      	cmp	r3, #0
 8001196:	d10b      	bne.n	80011b0 <net_sock_setopt+0x80>
  {
    if (!has_opt_data)
 8001198:	7dfb      	ldrb	r3, [r7, #23]
 800119a:	f083 0301 	eor.w	r3, r3, #1
 800119e:	b2db      	uxtb	r3, r3
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d005      	beq.n	80011b0 <net_sock_setopt+0x80>
    {
      sock->blocking = false;
 80011a4:	69bb      	ldr	r3, [r7, #24]
 80011a6:	2200      	movs	r2, #0
 80011a8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
      rc = NET_OK;
 80011ac:	2300      	movs	r3, #0
 80011ae:	61fb      	str	r3, [r7, #28]
    }
  }
  if (strcmp(optname, "sock_read_timeout") == 0)
 80011b0:	4917      	ldr	r1, [pc, #92]	@ (8001210 <net_sock_setopt+0xe0>)
 80011b2:	68b8      	ldr	r0, [r7, #8]
 80011b4:	f7ff f80c 	bl	80001d0 <strcmp>
 80011b8:	4603      	mov	r3, r0
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d10b      	bne.n	80011d6 <net_sock_setopt+0xa6>
  {
    if (has_opt_data)
 80011be:	7dfb      	ldrb	r3, [r7, #23]
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d008      	beq.n	80011d6 <net_sock_setopt+0xa6>
    {
      sock->read_timeout = atoi((char const *)optbuf);
 80011c4:	6878      	ldr	r0, [r7, #4]
 80011c6:	f00f fb4f 	bl	8010868 <atoi>
 80011ca:	4603      	mov	r3, r0
 80011cc:	b29a      	uxth	r2, r3
 80011ce:	69bb      	ldr	r3, [r7, #24]
 80011d0:	84da      	strh	r2, [r3, #38]	@ 0x26
      rc = NET_OK;
 80011d2:	2300      	movs	r3, #0
 80011d4:	61fb      	str	r3, [r7, #28]
    }
  }
  if (strcmp(optname, "sock_write_timeout") == 0)
 80011d6:	490f      	ldr	r1, [pc, #60]	@ (8001214 <net_sock_setopt+0xe4>)
 80011d8:	68b8      	ldr	r0, [r7, #8]
 80011da:	f7fe fff9 	bl	80001d0 <strcmp>
 80011de:	4603      	mov	r3, r0
 80011e0:	2b00      	cmp	r3, #0
 80011e2:	d10b      	bne.n	80011fc <net_sock_setopt+0xcc>
  {
    if (has_opt_data)
 80011e4:	7dfb      	ldrb	r3, [r7, #23]
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d008      	beq.n	80011fc <net_sock_setopt+0xcc>
    {
      sock->write_timeout = atoi((char const *)optbuf);
 80011ea:	6878      	ldr	r0, [r7, #4]
 80011ec:	f00f fb3c 	bl	8010868 <atoi>
 80011f0:	4603      	mov	r3, r0
 80011f2:	b29a      	uxth	r2, r3
 80011f4:	69bb      	ldr	r3, [r7, #24]
 80011f6:	851a      	strh	r2, [r3, #40]	@ 0x28
      rc = NET_OK;
 80011f8:	2300      	movs	r3, #0
 80011fa:	61fb      	str	r3, [r7, #28]
    }
  }
  return rc;
 80011fc:	69fb      	ldr	r3, [r7, #28]
}
 80011fe:	4618      	mov	r0, r3
 8001200:	3720      	adds	r7, #32
 8001202:	46bd      	mov	sp, r7
 8001204:	bd80      	pop	{r7, pc}
 8001206:	bf00      	nop
 8001208:	080143b4 	.word	0x080143b4
 800120c:	080143c4 	.word	0x080143c4
 8001210:	080143d4 	.word	0x080143d4
 8001214:	080143e8 	.word	0x080143e8

08001218 <net_sock_recv>:


int net_sock_recv(net_sockhnd_t sockhnd, uint8_t * const buf, size_t len)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b086      	sub	sp, #24
 800121c:	af00      	add	r7, sp, #0
 800121e:	60f8      	str	r0, [r7, #12]
 8001220:	60b9      	str	r1, [r7, #8]
 8001222:	607a      	str	r2, [r7, #4]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 8001224:	68fb      	ldr	r3, [r7, #12]
 8001226:	617b      	str	r3, [r7, #20]
  return (sock->methods.recv != NULL) ? sock->methods.recv(sockhnd, buf, len) : NET_PARAM;
 8001228:	697b      	ldr	r3, [r7, #20]
 800122a:	68db      	ldr	r3, [r3, #12]
 800122c:	2b00      	cmp	r3, #0
 800122e:	d007      	beq.n	8001240 <net_sock_recv+0x28>
 8001230:	697b      	ldr	r3, [r7, #20]
 8001232:	68db      	ldr	r3, [r3, #12]
 8001234:	687a      	ldr	r2, [r7, #4]
 8001236:	68b9      	ldr	r1, [r7, #8]
 8001238:	68f8      	ldr	r0, [r7, #12]
 800123a:	4798      	blx	r3
 800123c:	4603      	mov	r3, r0
 800123e:	e001      	b.n	8001244 <net_sock_recv+0x2c>
 8001240:	f06f 0301 	mvn.w	r3, #1
}
 8001244:	4618      	mov	r0, r3
 8001246:	3718      	adds	r7, #24
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}

0800124c <net_sock_send>:
  return (sock->methods.recvfrom != NULL) ? sock->methods.recvfrom(sockhnd, buf, len, remoteaddress, remoteport) : NET_PARAM;
}


int net_sock_send(net_sockhnd_t sockhnd, const uint8_t * buf, size_t len)
{
 800124c:	b580      	push	{r7, lr}
 800124e:	b086      	sub	sp, #24
 8001250:	af00      	add	r7, sp, #0
 8001252:	60f8      	str	r0, [r7, #12]
 8001254:	60b9      	str	r1, [r7, #8]
 8001256:	607a      	str	r2, [r7, #4]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 8001258:	68fb      	ldr	r3, [r7, #12]
 800125a:	617b      	str	r3, [r7, #20]
  return (sock->methods.send != NULL) ? sock->methods.send(sockhnd, buf, len) : NET_PARAM;
 800125c:	697b      	ldr	r3, [r7, #20]
 800125e:	695b      	ldr	r3, [r3, #20]
 8001260:	2b00      	cmp	r3, #0
 8001262:	d007      	beq.n	8001274 <net_sock_send+0x28>
 8001264:	697b      	ldr	r3, [r7, #20]
 8001266:	695b      	ldr	r3, [r3, #20]
 8001268:	687a      	ldr	r2, [r7, #4]
 800126a:	68b9      	ldr	r1, [r7, #8]
 800126c:	68f8      	ldr	r0, [r7, #12]
 800126e:	4798      	blx	r3
 8001270:	4603      	mov	r3, r0
 8001272:	e001      	b.n	8001278 <net_sock_send+0x2c>
 8001274:	f06f 0301 	mvn.w	r3, #1
} 
 8001278:	4618      	mov	r0, r3
 800127a:	3718      	adds	r7, #24
 800127c:	46bd      	mov	sp, r7
 800127e:	bd80      	pop	{r7, pc}

08001280 <net_sock_close>:
  return (sock->methods.sendto != NULL) ? sock->methods.sendto(sockhnd, buf, len, remoteaddress, remoteport) : NET_PARAM;
} 
  

int net_sock_close(net_sockhnd_t sockhnd)
{
 8001280:	b580      	push	{r7, lr}
 8001282:	b084      	sub	sp, #16
 8001284:	af00      	add	r7, sp, #0
 8001286:	6078      	str	r0, [r7, #4]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	60fb      	str	r3, [r7, #12]
  return (sock->methods.close != NULL) ? sock->methods.close(sockhnd) : NET_PARAM;
 800128c:	68fb      	ldr	r3, [r7, #12]
 800128e:	69db      	ldr	r3, [r3, #28]
 8001290:	2b00      	cmp	r3, #0
 8001292:	d005      	beq.n	80012a0 <net_sock_close+0x20>
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	69db      	ldr	r3, [r3, #28]
 8001298:	6878      	ldr	r0, [r7, #4]
 800129a:	4798      	blx	r3
 800129c:	4603      	mov	r3, r0
 800129e:	e001      	b.n	80012a4 <net_sock_close+0x24>
 80012a0:	f06f 0301 	mvn.w	r3, #1
}
 80012a4:	4618      	mov	r0, r3
 80012a6:	3710      	adds	r7, #16
 80012a8:	46bd      	mov	sp, r7
 80012aa:	bd80      	pop	{r7, pc}

080012ac <net_sock_destroy>:


int net_sock_destroy(net_sockhnd_t sockhnd)
{
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b084      	sub	sp, #16
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t *) sockhnd;
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	60fb      	str	r3, [r7, #12]
  return (sock->methods.destroy != NULL) ? sock->methods.destroy(sockhnd) : NET_PARAM;
 80012b8:	68fb      	ldr	r3, [r7, #12]
 80012ba:	6a1b      	ldr	r3, [r3, #32]
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d005      	beq.n	80012cc <net_sock_destroy+0x20>
 80012c0:	68fb      	ldr	r3, [r7, #12]
 80012c2:	6a1b      	ldr	r3, [r3, #32]
 80012c4:	6878      	ldr	r0, [r7, #4]
 80012c6:	4798      	blx	r3
 80012c8:	4603      	mov	r3, r0
 80012ca:	e001      	b.n	80012d0 <net_sock_destroy+0x24>
 80012cc:	f06f 0301 	mvn.w	r3, #1
}
 80012d0:	4618      	mov	r0, r3
 80012d2:	3710      	adds	r7, #16
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}

080012d8 <net_timeout_left_ms>:
 * @param   In:   now       Current index.
 * @param   In:   timeout   Target index.
 * @retval  Number of units from now to target.
 */
int32_t net_timeout_left_ms(uint32_t init, uint32_t now, uint32_t timeout)
{
 80012d8:	b480      	push	{r7}
 80012da:	b087      	sub	sp, #28
 80012dc:	af00      	add	r7, sp, #0
 80012de:	60f8      	str	r0, [r7, #12]
 80012e0:	60b9      	str	r1, [r7, #8]
 80012e2:	607a      	str	r2, [r7, #4]
  int32_t ret = 0;
 80012e4:	2300      	movs	r3, #0
 80012e6:	613b      	str	r3, [r7, #16]
  uint32_t wrap_end = 0;
 80012e8:	2300      	movs	r3, #0
 80012ea:	617b      	str	r3, [r7, #20]
  
  if (now < init)
 80012ec:	68ba      	ldr	r2, [r7, #8]
 80012ee:	68fb      	ldr	r3, [r7, #12]
 80012f0:	429a      	cmp	r2, r3
 80012f2:	d202      	bcs.n	80012fa <net_timeout_left_ms+0x22>
  { // Timer wrap-around detected
    // printf("Timer: wrap-around detected from %d to %d\n", init, now);
    wrap_end = UINT32_MAX - init;
 80012f4:	68fb      	ldr	r3, [r7, #12]
 80012f6:	43db      	mvns	r3, r3
 80012f8:	617b      	str	r3, [r7, #20]
  }
  ret = wrap_end - (now - init) + timeout;
 80012fa:	68fa      	ldr	r2, [r7, #12]
 80012fc:	68bb      	ldr	r3, [r7, #8]
 80012fe:	1ad2      	subs	r2, r2, r3
 8001300:	697b      	ldr	r3, [r7, #20]
 8001302:	441a      	add	r2, r3
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	4413      	add	r3, r2
 8001308:	613b      	str	r3, [r7, #16]

  return ret;
 800130a:	693b      	ldr	r3, [r7, #16]
}
 800130c:	4618      	mov	r0, r3
 800130e:	371c      	adds	r7, #28
 8001310:	46bd      	mov	sp, r7
 8001312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001316:	4770      	bx	lr

08001318 <net_sock_create_wifi>:
int net_sock_destroy_tcp_wifi(net_sockhnd_t sockhnd);

/* Functions Definition ------------------------------------------------------*/

int net_sock_create_wifi(net_hnd_t nethnd, net_sockhnd_t * sockhnd, net_proto_t proto)
{
 8001318:	b580      	push	{r7, lr}
 800131a:	b088      	sub	sp, #32
 800131c:	af00      	add	r7, sp, #0
 800131e:	60f8      	str	r0, [r7, #12]
 8001320:	60b9      	str	r1, [r7, #8]
 8001322:	4613      	mov	r3, r2
 8001324:	71fb      	strb	r3, [r7, #7]
  int rc = NET_ERR;
 8001326:	f04f 33ff 	mov.w	r3, #4294967295
 800132a:	61fb      	str	r3, [r7, #28]
  net_ctxt_t *ctxt = (net_ctxt_t *) nethnd;
 800132c:	68fb      	ldr	r3, [r7, #12]
 800132e:	61bb      	str	r3, [r7, #24]
  net_sock_ctxt_t *sock = NULL;
 8001330:	2300      	movs	r3, #0
 8001332:	617b      	str	r3, [r7, #20]
  
  sock = net_malloc(sizeof(net_sock_ctxt_t));
 8001334:	2034      	movs	r0, #52	@ 0x34
 8001336:	f00f faaf 	bl	8010898 <malloc>
 800133a:	4603      	mov	r3, r0
 800133c:	617b      	str	r3, [r7, #20]
  if (sock == NULL)
 800133e:	697b      	ldr	r3, [r7, #20]
 8001340:	2b00      	cmp	r3, #0
 8001342:	d10b      	bne.n	800135c <net_sock_create_wifi+0x44>
  {
    msg_error("net_sock_create allocation failed.\n");
 8001344:	2259      	movs	r2, #89	@ 0x59
 8001346:	492b      	ldr	r1, [pc, #172]	@ (80013f4 <net_sock_create_wifi+0xdc>)
 8001348:	482b      	ldr	r0, [pc, #172]	@ (80013f8 <net_sock_create_wifi+0xe0>)
 800134a:	f010 f931 	bl	80115b0 <iprintf>
 800134e:	482b      	ldr	r0, [pc, #172]	@ (80013fc <net_sock_create_wifi+0xe4>)
 8001350:	f010 f99e 	bl	8011690 <puts>
    rc = NET_ERR;
 8001354:	f04f 33ff 	mov.w	r3, #4294967295
 8001358:	61fb      	str	r3, [r7, #28]
 800135a:	e046      	b.n	80013ea <net_sock_create_wifi+0xd2>
  }
  else
  {
    memset(sock, 0, sizeof(net_sock_ctxt_t));
 800135c:	2234      	movs	r2, #52	@ 0x34
 800135e:	2100      	movs	r1, #0
 8001360:	6978      	ldr	r0, [r7, #20]
 8001362:	f010 fb1f 	bl	80119a4 <memset>
    sock->net = ctxt;
 8001366:	697b      	ldr	r3, [r7, #20]
 8001368:	69ba      	ldr	r2, [r7, #24]
 800136a:	601a      	str	r2, [r3, #0]
    sock->next = ctxt->sock_list;
 800136c:	69bb      	ldr	r3, [r7, #24]
 800136e:	685a      	ldr	r2, [r3, #4]
 8001370:	697b      	ldr	r3, [r7, #20]
 8001372:	605a      	str	r2, [r3, #4]
    sock->methods.open      = (net_sock_open_wifi);
 8001374:	697b      	ldr	r3, [r7, #20]
 8001376:	4a22      	ldr	r2, [pc, #136]	@ (8001400 <net_sock_create_wifi+0xe8>)
 8001378:	609a      	str	r2, [r3, #8]
    switch(proto)
 800137a:	79fb      	ldrb	r3, [r7, #7]
 800137c:	2b01      	cmp	r3, #1
 800137e:	d002      	beq.n	8001386 <net_sock_create_wifi+0x6e>
 8001380:	2b03      	cmp	r3, #3
 8001382:	d007      	beq.n	8001394 <net_sock_create_wifi+0x7c>
 8001384:	e00d      	b.n	80013a2 <net_sock_create_wifi+0x8a>
    {
      case NET_PROTO_TCP:
        sock->methods.recv      = (net_sock_recv_tcp_wifi);
 8001386:	697b      	ldr	r3, [r7, #20]
 8001388:	4a1e      	ldr	r2, [pc, #120]	@ (8001404 <net_sock_create_wifi+0xec>)
 800138a:	60da      	str	r2, [r3, #12]
        sock->methods.send      = (net_sock_send_tcp_wifi);
 800138c:	697b      	ldr	r3, [r7, #20]
 800138e:	4a1e      	ldr	r2, [pc, #120]	@ (8001408 <net_sock_create_wifi+0xf0>)
 8001390:	615a      	str	r2, [r3, #20]
        break;
 8001392:	e00c      	b.n	80013ae <net_sock_create_wifi+0x96>
      case NET_PROTO_UDP:
        sock->methods.recvfrom  = (net_sock_recvfrom_udp_wifi);
 8001394:	697b      	ldr	r3, [r7, #20]
 8001396:	4a1d      	ldr	r2, [pc, #116]	@ (800140c <net_sock_create_wifi+0xf4>)
 8001398:	611a      	str	r2, [r3, #16]
        sock->methods.sendto    = (net_sock_sendto_udp_wifi);
 800139a:	697b      	ldr	r3, [r7, #20]
 800139c:	4a1c      	ldr	r2, [pc, #112]	@ (8001410 <net_sock_create_wifi+0xf8>)
 800139e:	619a      	str	r2, [r3, #24]
        break;
 80013a0:	e005      	b.n	80013ae <net_sock_create_wifi+0x96>
      default:
        free(sock);
 80013a2:	6978      	ldr	r0, [r7, #20]
 80013a4:	f00f fa80 	bl	80108a8 <free>
        return NET_PARAM;
 80013a8:	f06f 0301 	mvn.w	r3, #1
 80013ac:	e01e      	b.n	80013ec <net_sock_create_wifi+0xd4>
    }
    sock->methods.close     = (net_sock_close_tcp_wifi);
 80013ae:	697b      	ldr	r3, [r7, #20]
 80013b0:	4a18      	ldr	r2, [pc, #96]	@ (8001414 <net_sock_create_wifi+0xfc>)
 80013b2:	61da      	str	r2, [r3, #28]
    sock->methods.destroy   = (net_sock_destroy_tcp_wifi);
 80013b4:	697b      	ldr	r3, [r7, #20]
 80013b6:	4a18      	ldr	r2, [pc, #96]	@ (8001418 <net_sock_create_wifi+0x100>)
 80013b8:	621a      	str	r2, [r3, #32]
    sock->proto             = proto;
 80013ba:	697b      	ldr	r3, [r7, #20]
 80013bc:	79fa      	ldrb	r2, [r7, #7]
 80013be:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    sock->blocking          = NET_DEFAULT_BLOCKING;
 80013c2:	697b      	ldr	r3, [r7, #20]
 80013c4:	2201      	movs	r2, #1
 80013c6:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    sock->read_timeout      = NET_DEFAULT_BLOCKING_READ_TIMEOUT;
 80013ca:	697b      	ldr	r3, [r7, #20]
 80013cc:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 80013d0:	84da      	strh	r2, [r3, #38]	@ 0x26
    sock->write_timeout     = NET_DEFAULT_BLOCKING_WRITE_TIMEOUT;
 80013d2:	697b      	ldr	r3, [r7, #20]
 80013d4:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 80013d8:	851a      	strh	r2, [r3, #40]	@ 0x28
    ctxt->sock_list         = sock; /* Insert at the head of the list */
 80013da:	69bb      	ldr	r3, [r7, #24]
 80013dc:	697a      	ldr	r2, [r7, #20]
 80013de:	605a      	str	r2, [r3, #4]
    *sockhnd = (net_sockhnd_t) sock;
 80013e0:	68bb      	ldr	r3, [r7, #8]
 80013e2:	697a      	ldr	r2, [r7, #20]
 80013e4:	601a      	str	r2, [r3, #0]

    rc = NET_OK;
 80013e6:	2300      	movs	r3, #0
 80013e8:	61fb      	str	r3, [r7, #28]
  }
  
  return rc;
 80013ea:	69fb      	ldr	r3, [r7, #28]
}
 80013ec:	4618      	mov	r0, r3
 80013ee:	3720      	adds	r7, #32
 80013f0:	46bd      	mov	sp, r7
 80013f2:	bd80      	pop	{r7, pc}
 80013f4:	08015554 	.word	0x08015554
 80013f8:	080143fc 	.word	0x080143fc
 80013fc:	0801440c 	.word	0x0801440c
 8001400:	0800141d 	.word	0x0800141d
 8001404:	08001579 	.word	0x08001579
 8001408:	080018a1 	.word	0x080018a1
 800140c:	080016ed 	.word	0x080016ed
 8001410:	08001979 	.word	0x08001979
 8001414:	08001a9d 	.word	0x08001a9d
 8001418:	08001ae5 	.word	0x08001ae5

0800141c <net_sock_open_wifi>:


int net_sock_open_wifi(net_sockhnd_t sockhnd, const char * hostname, int remoteport, int localport)
{
 800141c:	b590      	push	{r4, r7, lr}
 800141e:	b08f      	sub	sp, #60	@ 0x3c
 8001420:	af02      	add	r7, sp, #8
 8001422:	60f8      	str	r0, [r7, #12]
 8001424:	60b9      	str	r1, [r7, #8]
 8001426:	607a      	str	r2, [r7, #4]
 8001428:	603b      	str	r3, [r7, #0]
  int rc = NET_ERR;
 800142a:	f04f 33ff 	mov.w	r3, #4294967295
 800142e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 8001430:	68fb      	ldr	r3, [r7, #12]
 8001432:	61fb      	str	r3, [r7, #28]
  uint8_t ip_addr[4] = { 0, 0, 0, 0 };
 8001434:	2300      	movs	r3, #0
 8001436:	61bb      	str	r3, [r7, #24]
  WIFI_Protocol_t proto;
  
  sock->underlying_sock_ctxt = (net_sockhnd_t) -1; /* Initialize to a non-null value which may not be confused with a valid port number. */
 8001438:	69fb      	ldr	r3, [r7, #28]
 800143a:	f04f 32ff 	mov.w	r2, #4294967295
 800143e:	62da      	str	r2, [r3, #44]	@ 0x2c
  
  /* Find a free underlying socket on the network interface. */
  bool underlying_socket_busy[WIFI_MAX_CONNECTIONS];
  memset(underlying_socket_busy, 0, sizeof(underlying_socket_busy));
 8001440:	f107 0314 	add.w	r3, r7, #20
 8001444:	2204      	movs	r2, #4
 8001446:	2100      	movs	r1, #0
 8001448:	4618      	mov	r0, r3
 800144a:	f010 faab 	bl	80119a4 <memset>
  
  net_sock_ctxt_t * cur = sock->net->sock_list;
 800144e:	69fb      	ldr	r3, [r7, #28]
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	685b      	ldr	r3, [r3, #4]
 8001454:	627b      	str	r3, [r7, #36]	@ 0x24
  do 
  {
    if ( ((cur->proto == NET_PROTO_TCP) || (cur->proto == NET_PROTO_UDP) )&& ((int) cur->underlying_sock_ctxt >= 0) )
 8001456:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001458:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800145c:	2b01      	cmp	r3, #1
 800145e:	d004      	beq.n	800146a <net_sock_open_wifi+0x4e>
 8001460:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001462:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001466:	2b03      	cmp	r3, #3
 8001468:	d10a      	bne.n	8001480 <net_sock_open_wifi+0x64>
 800146a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800146c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800146e:	2b00      	cmp	r3, #0
 8001470:	db06      	blt.n	8001480 <net_sock_open_wifi+0x64>
    {
      underlying_socket_busy[(int) cur->underlying_sock_ctxt] = true;
 8001472:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001474:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001476:	3330      	adds	r3, #48	@ 0x30
 8001478:	443b      	add	r3, r7
 800147a:	2201      	movs	r2, #1
 800147c:	f803 2c1c 	strb.w	r2, [r3, #-28]
    }
    cur = cur->next;
 8001480:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001482:	685b      	ldr	r3, [r3, #4]
 8001484:	627b      	str	r3, [r7, #36]	@ 0x24
  } while (cur != NULL);
 8001486:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001488:	2b00      	cmp	r3, #0
 800148a:	d1e4      	bne.n	8001456 <net_sock_open_wifi+0x3a>
  
  for (int i = 0; i < WIFI_MAX_CONNECTIONS; i++)
 800148c:	2300      	movs	r3, #0
 800148e:	623b      	str	r3, [r7, #32]
 8001490:	e010      	b.n	80014b4 <net_sock_open_wifi+0x98>
  {
    if (underlying_socket_busy[i] == false)
 8001492:	f107 0214 	add.w	r2, r7, #20
 8001496:	6a3b      	ldr	r3, [r7, #32]
 8001498:	4413      	add	r3, r2
 800149a:	781b      	ldrb	r3, [r3, #0]
 800149c:	f083 0301 	eor.w	r3, r3, #1
 80014a0:	b2db      	uxtb	r3, r3
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d003      	beq.n	80014ae <net_sock_open_wifi+0x92>
    {
      sock->underlying_sock_ctxt = (net_sockhnd_t) i;
 80014a6:	6a3a      	ldr	r2, [r7, #32]
 80014a8:	69fb      	ldr	r3, [r7, #28]
 80014aa:	62da      	str	r2, [r3, #44]	@ 0x2c
      break;
 80014ac:	e005      	b.n	80014ba <net_sock_open_wifi+0x9e>
  for (int i = 0; i < WIFI_MAX_CONNECTIONS; i++)
 80014ae:	6a3b      	ldr	r3, [r7, #32]
 80014b0:	3301      	adds	r3, #1
 80014b2:	623b      	str	r3, [r7, #32]
 80014b4:	6a3b      	ldr	r3, [r7, #32]
 80014b6:	2b03      	cmp	r3, #3
 80014b8:	ddeb      	ble.n	8001492 <net_sock_open_wifi+0x76>
  }
  
  /* Free socket found */
  if (sock->underlying_sock_ctxt >= 0)
  {
    switch(sock->proto)
 80014ba:	69fb      	ldr	r3, [r7, #28]
 80014bc:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80014c0:	2b01      	cmp	r3, #1
 80014c2:	d002      	beq.n	80014ca <net_sock_open_wifi+0xae>
 80014c4:	2b03      	cmp	r3, #3
 80014c6:	d016      	beq.n	80014f6 <net_sock_open_wifi+0xda>
 80014c8:	e01f      	b.n	800150a <net_sock_open_wifi+0xee>
    {
      case NET_PROTO_TCP:
        if (localport != 0)
 80014ca:	683b      	ldr	r3, [r7, #0]
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	d003      	beq.n	80014d8 <net_sock_open_wifi+0xbc>
        { /* TCP local port setting is not implemented */
          rc = NET_PARAM;
 80014d0:	f06f 0301 	mvn.w	r3, #1
 80014d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
          {
            proto = WIFI_TCP_PROTOCOL;
            rc = NET_OK;
          }
        }
        break;
 80014d6:	e017      	b.n	8001508 <net_sock_open_wifi+0xec>
          if (WIFI_GetHostAddress((char *)hostname, ip_addr) != WIFI_STATUS_OK)
 80014d8:	f107 0318 	add.w	r3, r7, #24
 80014dc:	4619      	mov	r1, r3
 80014de:	68b8      	ldr	r0, [r7, #8]
 80014e0:	f00f f888 	bl	80105f4 <WIFI_GetHostAddress>
 80014e4:	4603      	mov	r3, r0
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d10e      	bne.n	8001508 <net_sock_open_wifi+0xec>
            proto = WIFI_TCP_PROTOCOL;
 80014ea:	2300      	movs	r3, #0
 80014ec:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
            rc = NET_OK;
 80014f0:	2300      	movs	r3, #0
 80014f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;
 80014f4:	e008      	b.n	8001508 <net_sock_open_wifi+0xec>
      case NET_PROTO_UDP:
        /* Record the local port binding. */
        sock->localport = localport;
 80014f6:	69fb      	ldr	r3, [r7, #28]
 80014f8:	683a      	ldr	r2, [r7, #0]
 80014fa:	631a      	str	r2, [r3, #48]	@ 0x30
        proto = WIFI_UDP_PROTOCOL;
 80014fc:	2301      	movs	r3, #1
 80014fe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
        rc = NET_OK;
 8001502:	2300      	movs	r3, #0
 8001504:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;
 8001506:	e000      	b.n	800150a <net_sock_open_wifi+0xee>
        break;
 8001508:	bf00      	nop
      default:
        ;
    }
        
    /* The Wifi "client connection" must be opened even in UDP mode. Otherwise the incoming traffic may be lost. */  
    if (rc == NET_OK)
 800150a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800150c:	2b00      	cmp	r3, #0
 800150e:	d126      	bne.n	800155e <net_sock_open_wifi+0x142>
    {
      if( WIFI_STATUS_OK != WIFI_OpenClientConnection((uint32_t) sock->underlying_sock_ctxt,
 8001510:	69fb      	ldr	r3, [r7, #28]
 8001512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001514:	461c      	mov	r4, r3
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	b29b      	uxth	r3, r3
 800151a:	683a      	ldr	r2, [r7, #0]
 800151c:	b292      	uxth	r2, r2
 800151e:	f107 0018 	add.w	r0, r7, #24
 8001522:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 8001526:	9201      	str	r2, [sp, #4]
 8001528:	9300      	str	r3, [sp, #0]
 800152a:	4603      	mov	r3, r0
 800152c:	4a0e      	ldr	r2, [pc, #56]	@ (8001568 <net_sock_open_wifi+0x14c>)
 800152e:	4620      	mov	r0, r4
 8001530:	f00f f878 	bl	8010624 <WIFI_OpenClientConnection>
 8001534:	4603      	mov	r3, r0
 8001536:	2b00      	cmp	r3, #0
 8001538:	d011      	beq.n	800155e <net_sock_open_wifi+0x142>
            proto, "", ip_addr, remoteport, localport) )
      {
        msg_error("Failed opening the underlying Wifi socket %d.\n", (int) sock->underlying_sock_ctxt);
 800153a:	22c9      	movs	r2, #201	@ 0xc9
 800153c:	490b      	ldr	r1, [pc, #44]	@ (800156c <net_sock_open_wifi+0x150>)
 800153e:	480c      	ldr	r0, [pc, #48]	@ (8001570 <net_sock_open_wifi+0x154>)
 8001540:	f010 f836 	bl	80115b0 <iprintf>
 8001544:	69fb      	ldr	r3, [r7, #28]
 8001546:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001548:	4619      	mov	r1, r3
 800154a:	480a      	ldr	r0, [pc, #40]	@ (8001574 <net_sock_open_wifi+0x158>)
 800154c:	f010 f830 	bl	80115b0 <iprintf>
        sock->underlying_sock_ctxt = (net_sockhnd_t) -1;
 8001550:	69fb      	ldr	r3, [r7, #28]
 8001552:	f04f 32ff 	mov.w	r2, #4294967295
 8001556:	62da      	str	r2, [r3, #44]	@ 0x2c
        rc = NET_ERR;
 8001558:	f04f 33ff 	mov.w	r3, #4294967295
 800155c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  {
    msg_error("Could not find a free socket on the specified network interface.\n");
    rc = NET_PARAM;
  }
  
  return rc;
 800155e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8001560:	4618      	mov	r0, r3
 8001562:	3734      	adds	r7, #52	@ 0x34
 8001564:	46bd      	mov	sp, r7
 8001566:	bd90      	pop	{r4, r7, pc}
 8001568:	08014430 	.word	0x08014430
 800156c:	0801556c 	.word	0x0801556c
 8001570:	080143fc 	.word	0x080143fc
 8001574:	08014434 	.word	0x08014434

08001578 <net_sock_recv_tcp_wifi>:


int net_sock_recv_tcp_wifi(net_sockhnd_t sockhnd, uint8_t * buf, size_t len)
{
 8001578:	b580      	push	{r7, lr}
 800157a:	b08e      	sub	sp, #56	@ 0x38
 800157c:	af02      	add	r7, sp, #8
 800157e:	60f8      	str	r0, [r7, #12]
 8001580:	60b9      	str	r1, [r7, #8]
 8001582:	607a      	str	r2, [r7, #4]
  int rc = 0;
 8001584:	2300      	movs	r3, #0
 8001586:	62fb      	str	r3, [r7, #44]	@ 0x2c
  WIFI_Status_t status = WIFI_STATUS_OK;
 8001588:	2300      	movs	r3, #0
 800158a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 800158e:	68fb      	ldr	r3, [r7, #12]
 8001590:	61fb      	str	r3, [r7, #28]
  uint16_t read = 0;
 8001592:	2300      	movs	r3, #0
 8001594:	82fb      	strh	r3, [r7, #22]
  uint16_t tmp_len = MIN(len, WIFI_PAYLOAD_SIZE);
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 800159c:	bf28      	it	cs
 800159e:	f44f 6396 	movcs.w	r3, #1200	@ 0x4b0
 80015a2:	857b      	strh	r3, [r7, #42]	@ 0x2a
  uint8_t * tmp_buf = buf;
 80015a4:	68bb      	ldr	r3, [r7, #8]
 80015a6:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t start_time = HAL_GetTick();
 80015a8:	f004 fa68 	bl	8005a7c <HAL_GetTick>
 80015ac:	61b8      	str	r0, [r7, #24]
    
  /* Read the received payload by chunks of WIFI_PAYLOAD_SIZE bytes because of
   * a constraint of WIFI_ReceiveData(). */
  do
  {
    if ( (sock->blocking == true) && (net_timeout_left_ms(start_time, HAL_GetTick(), sock->read_timeout) <= 0) )
 80015ae:	69fb      	ldr	r3, [r7, #28]
 80015b0:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d00f      	beq.n	80015d8 <net_sock_recv_tcp_wifi+0x60>
 80015b8:	f004 fa60 	bl	8005a7c <HAL_GetTick>
 80015bc:	4601      	mov	r1, r0
 80015be:	69fb      	ldr	r3, [r7, #28]
 80015c0:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80015c2:	461a      	mov	r2, r3
 80015c4:	69b8      	ldr	r0, [r7, #24]
 80015c6:	f7ff fe87 	bl	80012d8 <net_timeout_left_ms>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	dc03      	bgt.n	80015d8 <net_sock_recv_tcp_wifi+0x60>
    {
      rc = NET_TIMEOUT;
 80015d0:	f06f 0302 	mvn.w	r3, #2
 80015d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
      break;
 80015d6:	e072      	b.n	80016be <net_sock_recv_tcp_wifi+0x146>
    }
    
    status = WIFI_ReceiveData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 80015d8:	69fb      	ldr	r3, [r7, #28]
 80015da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015dc:	b2d8      	uxtb	r0, r3
                             (sock->blocking == true) ? sock->read_timeout : NET_DEFAULT_NOBLOCKING_READ_TIMEOUT);
 80015de:	69fb      	ldr	r3, [r7, #28]
 80015e0:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    status = WIFI_ReceiveData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d003      	beq.n	80015f0 <net_sock_recv_tcp_wifi+0x78>
                             (sock->blocking == true) ? sock->read_timeout : NET_DEFAULT_NOBLOCKING_READ_TIMEOUT);
 80015e8:	69fb      	ldr	r3, [r7, #28]
 80015ea:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
    status = WIFI_ReceiveData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 80015ec:	4619      	mov	r1, r3
 80015ee:	e000      	b.n	80015f2 <net_sock_recv_tcp_wifi+0x7a>
 80015f0:	2101      	movs	r1, #1
 80015f2:	f107 0316 	add.w	r3, r7, #22
 80015f6:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 80015f8:	9100      	str	r1, [sp, #0]
 80015fa:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80015fc:	f00f f8b0 	bl	8010760 <WIFI_ReceiveData>
 8001600:	4603      	mov	r3, r0
 8001602:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    msg_debug("Read %d/%d.\n", read, tmp_len);
    if (status != WIFI_STATUS_OK)
 8001606:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800160a:	2b00      	cmp	r3, #0
 800160c:	d01c      	beq.n	8001648 <net_sock_recv_tcp_wifi+0xd0>
    {
      msg_error("net_sock_recv(): error %d in WIFI_ReceiveData() - socket=%d requestedLen=%d received=%d\n",
 800160e:	22f2      	movs	r2, #242	@ 0xf2
 8001610:	4931      	ldr	r1, [pc, #196]	@ (80016d8 <net_sock_recv_tcp_wifi+0x160>)
 8001612:	4832      	ldr	r0, [pc, #200]	@ (80016dc <net_sock_recv_tcp_wifi+0x164>)
 8001614:	f00f ffcc 	bl	80115b0 <iprintf>
 8001618:	f897 1023 	ldrb.w	r1, [r7, #35]	@ 0x23
 800161c:	69fb      	ldr	r3, [r7, #28]
 800161e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001620:	4618      	mov	r0, r3
 8001622:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001624:	8afa      	ldrh	r2, [r7, #22]
 8001626:	9200      	str	r2, [sp, #0]
 8001628:	4602      	mov	r2, r0
 800162a:	482d      	ldr	r0, [pc, #180]	@ (80016e0 <net_sock_recv_tcp_wifi+0x168>)
 800162c:	f00f ffc0 	bl	80115b0 <iprintf>
             status, (int) sock->underlying_sock_ctxt, tmp_len, read);
      msg_error("The port is likely to have been closed by the server.\n")
 8001630:	22f4      	movs	r2, #244	@ 0xf4
 8001632:	4929      	ldr	r1, [pc, #164]	@ (80016d8 <net_sock_recv_tcp_wifi+0x160>)
 8001634:	4829      	ldr	r0, [pc, #164]	@ (80016dc <net_sock_recv_tcp_wifi+0x164>)
 8001636:	f00f ffbb 	bl	80115b0 <iprintf>
 800163a:	482a      	ldr	r0, [pc, #168]	@ (80016e4 <net_sock_recv_tcp_wifi+0x16c>)
 800163c:	f010 f828 	bl	8011690 <puts>
      rc = NET_EOF;
 8001640:	f06f 0303 	mvn.w	r3, #3
 8001644:	62fb      	str	r3, [r7, #44]	@ 0x2c
      break;  
 8001646:	e03a      	b.n	80016be <net_sock_recv_tcp_wifi+0x146>
    }
    else
    {
      if (read > tmp_len)
 8001648:	8afb      	ldrh	r3, [r7, #22]
 800164a:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 800164c:	429a      	cmp	r2, r3
 800164e:	d20f      	bcs.n	8001670 <net_sock_recv_tcp_wifi+0xf8>
      {
        msg_error("WIFI_ReceiveData() returned a longer payload than requested (%d/%d).\n", read, tmp_len);
 8001650:	22fc      	movs	r2, #252	@ 0xfc
 8001652:	4921      	ldr	r1, [pc, #132]	@ (80016d8 <net_sock_recv_tcp_wifi+0x160>)
 8001654:	4821      	ldr	r0, [pc, #132]	@ (80016dc <net_sock_recv_tcp_wifi+0x164>)
 8001656:	f00f ffab 	bl	80115b0 <iprintf>
 800165a:	8afb      	ldrh	r3, [r7, #22]
 800165c:	4619      	mov	r1, r3
 800165e:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001660:	461a      	mov	r2, r3
 8001662:	4821      	ldr	r0, [pc, #132]	@ (80016e8 <net_sock_recv_tcp_wifi+0x170>)
 8001664:	f00f ffa4 	bl	80115b0 <iprintf>
        rc = NET_ERR;
 8001668:	f04f 33ff 	mov.w	r3, #4294967295
 800166c:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;
 800166e:	e026      	b.n	80016be <net_sock_recv_tcp_wifi+0x146>
      }
      tmp_buf += read;
 8001670:	8afb      	ldrh	r3, [r7, #22]
 8001672:	461a      	mov	r2, r3
 8001674:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001676:	4413      	add	r3, r2
 8001678:	627b      	str	r3, [r7, #36]	@ 0x24
      tmp_len = MAX(0, MIN(len - (tmp_buf - buf), WIFI_PAYLOAD_SIZE));
 800167a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800167c:	68bb      	ldr	r3, [r7, #8]
 800167e:	1ad3      	subs	r3, r2, r3
 8001680:	461a      	mov	r2, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	4293      	cmp	r3, r2
 8001686:	d00c      	beq.n	80016a2 <net_sock_recv_tcp_wifi+0x12a>
 8001688:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800168a:	68bb      	ldr	r3, [r7, #8]
 800168c:	1ad3      	subs	r3, r2, r3
 800168e:	461a      	mov	r2, r3
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	1a9b      	subs	r3, r3, r2
 8001694:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 8001698:	bf28      	it	cs
 800169a:	f44f 6396 	movcs.w	r3, #1200	@ 0x4b0
 800169e:	b29b      	uxth	r3, r3
 80016a0:	e000      	b.n	80016a4 <net_sock_recv_tcp_wifi+0x12c>
 80016a2:	2300      	movs	r3, #0
 80016a4:	857b      	strh	r3, [r7, #42]	@ 0x2a
    }
    
  } while ( (read == 0) && (sock->blocking == true) && (rc == 0) );
 80016a6:	8afb      	ldrh	r3, [r7, #22]
 80016a8:	2b00      	cmp	r3, #0
 80016aa:	d108      	bne.n	80016be <net_sock_recv_tcp_wifi+0x146>
 80016ac:	69fb      	ldr	r3, [r7, #28]
 80016ae:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d003      	beq.n	80016be <net_sock_recv_tcp_wifi+0x146>
 80016b6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	f43f af78 	beq.w	80015ae <net_sock_recv_tcp_wifi+0x36>
    
  return (rc < 0) ? rc : tmp_buf - buf;
 80016be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	db03      	blt.n	80016cc <net_sock_recv_tcp_wifi+0x154>
 80016c4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80016c6:	68bb      	ldr	r3, [r7, #8]
 80016c8:	1ad3      	subs	r3, r2, r3
 80016ca:	e000      	b.n	80016ce <net_sock_recv_tcp_wifi+0x156>
 80016cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 80016ce:	4618      	mov	r0, r3
 80016d0:	3730      	adds	r7, #48	@ 0x30
 80016d2:	46bd      	mov	sp, r7
 80016d4:	bd80      	pop	{r7, pc}
 80016d6:	bf00      	nop
 80016d8:	08015580 	.word	0x08015580
 80016dc:	080143fc 	.word	0x080143fc
 80016e0:	08014464 	.word	0x08014464
 80016e4:	080144c0 	.word	0x080144c0
 80016e8:	080144f8 	.word	0x080144f8

080016ec <net_sock_recvfrom_udp_wifi>:


int net_sock_recvfrom_udp_wifi(net_sockhnd_t sockhnd, uint8_t * const buf, size_t len, net_ipaddr_t * remoteaddress, int * remoteport)
{
 80016ec:	b590      	push	{r4, r7, lr}
 80016ee:	b091      	sub	sp, #68	@ 0x44
 80016f0:	af04      	add	r7, sp, #16
 80016f2:	60f8      	str	r0, [r7, #12]
 80016f4:	60b9      	str	r1, [r7, #8]
 80016f6:	607a      	str	r2, [r7, #4]
 80016f8:	603b      	str	r3, [r7, #0]
  int rc = 0;
 80016fa:	2300      	movs	r3, #0
 80016fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  WIFI_Status_t status = WIFI_STATUS_OK;
 80016fe:	2300      	movs	r3, #0
 8001700:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 8001704:	68fb      	ldr	r3, [r7, #12]
 8001706:	61fb      	str	r3, [r7, #28]
  uint16_t read = 0;
 8001708:	2300      	movs	r3, #0
 800170a:	82fb      	strh	r3, [r7, #22]
  uint16_t tmp_len = MIN(len, WIFI_PAYLOAD_SIZE);
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 8001712:	bf28      	it	cs
 8001714:	f44f 6396 	movcs.w	r3, #1200	@ 0x4b0
 8001718:	857b      	strh	r3, [r7, #42]	@ 0x2a
  uint8_t * tmp_buf = buf;
 800171a:	68bb      	ldr	r3, [r7, #8]
 800171c:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t start_time = HAL_GetTick();
 800171e:	f004 f9ad 	bl	8005a7c <HAL_GetTick>
 8001722:	61b8      	str	r0, [r7, #24]
  /* Note: The remote address and the remote port are unknown until a packet is received. */
  { /* Read the received payload by chunks of WIFI_PAYLOAD_SIZE bytes because of
     * a constraint of WIFI_ReceiveData(). */
    do
    {
      uint16_t port = 0;
 8001724:	2300      	movs	r3, #0
 8001726:	82bb      	strh	r3, [r7, #20]
      uint8_t ip[4] = { 0, 0, 0, 0 };
 8001728:	2300      	movs	r3, #0
 800172a:	613b      	str	r3, [r7, #16]
      if ( (sock->blocking == true) && (net_timeout_left_ms(start_time, HAL_GetTick(), sock->read_timeout) <= 0) )
 800172c:	69fb      	ldr	r3, [r7, #28]
 800172e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8001732:	2b00      	cmp	r3, #0
 8001734:	d00f      	beq.n	8001756 <net_sock_recvfrom_udp_wifi+0x6a>
 8001736:	f004 f9a1 	bl	8005a7c <HAL_GetTick>
 800173a:	4601      	mov	r1, r0
 800173c:	69fb      	ldr	r3, [r7, #28]
 800173e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001740:	461a      	mov	r2, r3
 8001742:	69b8      	ldr	r0, [r7, #24]
 8001744:	f7ff fdc8 	bl	80012d8 <net_timeout_left_ms>
 8001748:	4603      	mov	r3, r0
 800174a:	2b00      	cmp	r3, #0
 800174c:	dc03      	bgt.n	8001756 <net_sock_recvfrom_udp_wifi+0x6a>
      {
        rc = NET_TIMEOUT;
 800174e:	f06f 0302 	mvn.w	r3, #2
 8001752:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;
 8001754:	e08e      	b.n	8001874 <net_sock_recvfrom_udp_wifi+0x188>
      }
      
      status = WIFI_ReceiveDataFrom((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 8001756:	69fb      	ldr	r3, [r7, #28]
 8001758:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800175a:	b2d8      	uxtb	r0, r3
                               (sock->blocking == true) ? sock->read_timeout : NET_DEFAULT_NOBLOCKING_READ_TIMEOUT, ip , &port);
 800175c:	69fb      	ldr	r3, [r7, #28]
 800175e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
      status = WIFI_ReceiveDataFrom((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 8001762:	2b00      	cmp	r3, #0
 8001764:	d003      	beq.n	800176e <net_sock_recvfrom_udp_wifi+0x82>
                               (sock->blocking == true) ? sock->read_timeout : NET_DEFAULT_NOBLOCKING_READ_TIMEOUT, ip , &port);
 8001766:	69fb      	ldr	r3, [r7, #28]
 8001768:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
      status = WIFI_ReceiveDataFrom((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), tmp_buf, tmp_len, &read,
 800176a:	461c      	mov	r4, r3
 800176c:	e000      	b.n	8001770 <net_sock_recvfrom_udp_wifi+0x84>
 800176e:	2401      	movs	r4, #1
 8001770:	f107 0116 	add.w	r1, r7, #22
 8001774:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 8001776:	f107 0314 	add.w	r3, r7, #20
 800177a:	9302      	str	r3, [sp, #8]
 800177c:	f107 0310 	add.w	r3, r7, #16
 8001780:	9301      	str	r3, [sp, #4]
 8001782:	9400      	str	r4, [sp, #0]
 8001784:	460b      	mov	r3, r1
 8001786:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8001788:	f00f f80c 	bl	80107a4 <WIFI_ReceiveDataFrom>
 800178c:	4603      	mov	r3, r0
 800178e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
      msg_debug("Read %d/%d.\n", read, tmp_len);
      if (status != WIFI_STATUS_OK)
 8001792:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8001796:	2b00      	cmp	r3, #0
 8001798:	d01e      	beq.n	80017d8 <net_sock_recvfrom_udp_wifi+0xec>
      {
        msg_error("net_sock_recv(): error %d in WIFI_ReceiveData() - socket=%d requestedLen=%d received=%d\n",
 800179a:	f44f 7293 	mov.w	r2, #294	@ 0x126
 800179e:	493b      	ldr	r1, [pc, #236]	@ (800188c <net_sock_recvfrom_udp_wifi+0x1a0>)
 80017a0:	483b      	ldr	r0, [pc, #236]	@ (8001890 <net_sock_recvfrom_udp_wifi+0x1a4>)
 80017a2:	f00f ff05 	bl	80115b0 <iprintf>
 80017a6:	f897 1023 	ldrb.w	r1, [r7, #35]	@ 0x23
 80017aa:	69fb      	ldr	r3, [r7, #28]
 80017ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80017ae:	4618      	mov	r0, r3
 80017b0:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 80017b2:	8afa      	ldrh	r2, [r7, #22]
 80017b4:	9200      	str	r2, [sp, #0]
 80017b6:	4602      	mov	r2, r0
 80017b8:	4836      	ldr	r0, [pc, #216]	@ (8001894 <net_sock_recvfrom_udp_wifi+0x1a8>)
 80017ba:	f00f fef9 	bl	80115b0 <iprintf>
               status, (int) sock->underlying_sock_ctxt, tmp_len, read);
        msg_error("The port is likely to have been closed by the server.\n")
 80017be:	f44f 7294 	mov.w	r2, #296	@ 0x128
 80017c2:	4932      	ldr	r1, [pc, #200]	@ (800188c <net_sock_recvfrom_udp_wifi+0x1a0>)
 80017c4:	4832      	ldr	r0, [pc, #200]	@ (8001890 <net_sock_recvfrom_udp_wifi+0x1a4>)
 80017c6:	f00f fef3 	bl	80115b0 <iprintf>
 80017ca:	4833      	ldr	r0, [pc, #204]	@ (8001898 <net_sock_recvfrom_udp_wifi+0x1ac>)
 80017cc:	f00f ff60 	bl	8011690 <puts>
        rc = NET_EOF;
 80017d0:	f06f 0303 	mvn.w	r3, #3
 80017d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
        break;  
 80017d6:	e04d      	b.n	8001874 <net_sock_recvfrom_udp_wifi+0x188>
      }
      else
      {
        if (read > tmp_len)
 80017d8:	8afb      	ldrh	r3, [r7, #22]
 80017da:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 80017dc:	429a      	cmp	r2, r3
 80017de:	d210      	bcs.n	8001802 <net_sock_recvfrom_udp_wifi+0x116>
        {
          msg_error("WIFI_ReceiveData() returned a longer payload than requested (%d/%d).\n", read, tmp_len);
 80017e0:	f44f 7298 	mov.w	r2, #304	@ 0x130
 80017e4:	4929      	ldr	r1, [pc, #164]	@ (800188c <net_sock_recvfrom_udp_wifi+0x1a0>)
 80017e6:	482a      	ldr	r0, [pc, #168]	@ (8001890 <net_sock_recvfrom_udp_wifi+0x1a4>)
 80017e8:	f00f fee2 	bl	80115b0 <iprintf>
 80017ec:	8afb      	ldrh	r3, [r7, #22]
 80017ee:	4619      	mov	r1, r3
 80017f0:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 80017f2:	461a      	mov	r2, r3
 80017f4:	4829      	ldr	r0, [pc, #164]	@ (800189c <net_sock_recvfrom_udp_wifi+0x1b0>)
 80017f6:	f00f fedb 	bl	80115b0 <iprintf>
          rc = NET_ERR;
 80017fa:	f04f 33ff 	mov.w	r3, #4294967295
 80017fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
          break;
 8001800:	e038      	b.n	8001874 <net_sock_recvfrom_udp_wifi+0x188>
        }
        tmp_buf += read;
 8001802:	8afb      	ldrh	r3, [r7, #22]
 8001804:	461a      	mov	r2, r3
 8001806:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001808:	4413      	add	r3, r2
 800180a:	627b      	str	r3, [r7, #36]	@ 0x24
        tmp_len = MAX(0, MIN(len - (tmp_buf - buf), WIFI_PAYLOAD_SIZE));
 800180c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800180e:	68bb      	ldr	r3, [r7, #8]
 8001810:	1ad3      	subs	r3, r2, r3
 8001812:	461a      	mov	r2, r3
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	4293      	cmp	r3, r2
 8001818:	d00c      	beq.n	8001834 <net_sock_recvfrom_udp_wifi+0x148>
 800181a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800181c:	68bb      	ldr	r3, [r7, #8]
 800181e:	1ad3      	subs	r3, r2, r3
 8001820:	461a      	mov	r2, r3
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	1a9b      	subs	r3, r3, r2
 8001826:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 800182a:	bf28      	it	cs
 800182c:	f44f 6396 	movcs.w	r3, #1200	@ 0x4b0
 8001830:	b29b      	uxth	r3, r3
 8001832:	e000      	b.n	8001836 <net_sock_recvfrom_udp_wifi+0x14a>
 8001834:	2300      	movs	r3, #0
 8001836:	857b      	strh	r3, [r7, #42]	@ 0x2a
      }
      
      remoteaddress->ipv = NET_IP_V4;
 8001838:	683b      	ldr	r3, [r7, #0]
 800183a:	2200      	movs	r2, #0
 800183c:	701a      	strb	r2, [r3, #0]
      memset(remoteaddress->ip, 0xFF, sizeof(remoteaddress->ip));
 800183e:	683b      	ldr	r3, [r7, #0]
 8001840:	3301      	adds	r3, #1
 8001842:	2210      	movs	r2, #16
 8001844:	21ff      	movs	r1, #255	@ 0xff
 8001846:	4618      	mov	r0, r3
 8001848:	f010 f8ac 	bl	80119a4 <memset>
      memcpy(&remoteaddress->ip[12], ip, 4);
 800184c:	683b      	ldr	r3, [r7, #0]
 800184e:	330d      	adds	r3, #13
 8001850:	693a      	ldr	r2, [r7, #16]
 8001852:	601a      	str	r2, [r3, #0]
      *remoteport = port;
 8001854:	8abb      	ldrh	r3, [r7, #20]
 8001856:	461a      	mov	r2, r3
 8001858:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800185a:	601a      	str	r2, [r3, #0]
    } while ( (read == 0) && (sock->blocking == true) && (rc == 0) );
 800185c:	8afb      	ldrh	r3, [r7, #22]
 800185e:	2b00      	cmp	r3, #0
 8001860:	d108      	bne.n	8001874 <net_sock_recvfrom_udp_wifi+0x188>
 8001862:	69fb      	ldr	r3, [r7, #28]
 8001864:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8001868:	2b00      	cmp	r3, #0
 800186a:	d003      	beq.n	8001874 <net_sock_recvfrom_udp_wifi+0x188>
 800186c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800186e:	2b00      	cmp	r3, #0
 8001870:	f43f af58 	beq.w	8001724 <net_sock_recvfrom_udp_wifi+0x38>
  }
  
  return (rc < 0) ? rc : tmp_buf - buf;
 8001874:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001876:	2b00      	cmp	r3, #0
 8001878:	db03      	blt.n	8001882 <net_sock_recvfrom_udp_wifi+0x196>
 800187a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800187c:	68bb      	ldr	r3, [r7, #8]
 800187e:	1ad3      	subs	r3, r2, r3
 8001880:	e000      	b.n	8001884 <net_sock_recvfrom_udp_wifi+0x198>
 8001882:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8001884:	4618      	mov	r0, r3
 8001886:	3734      	adds	r7, #52	@ 0x34
 8001888:	46bd      	mov	sp, r7
 800188a:	bd90      	pop	{r4, r7, pc}
 800188c:	08015598 	.word	0x08015598
 8001890:	080143fc 	.word	0x080143fc
 8001894:	08014464 	.word	0x08014464
 8001898:	080144c0 	.word	0x080144c0
 800189c:	080144f8 	.word	0x080144f8

080018a0 <net_sock_send_tcp_wifi>:


int net_sock_send_tcp_wifi( net_sockhnd_t sockhnd, const uint8_t * buf, size_t len)
{
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b08c      	sub	sp, #48	@ 0x30
 80018a4:	af02      	add	r7, sp, #8
 80018a6:	60f8      	str	r0, [r7, #12]
 80018a8:	60b9      	str	r1, [r7, #8]
 80018aa:	607a      	str	r2, [r7, #4]
  int rc = 0;
 80018ac:	2300      	movs	r3, #0
 80018ae:	627b      	str	r3, [r7, #36]	@ 0x24
  WIFI_Status_t status = WIFI_STATUS_OK;
 80018b0:	2300      	movs	r3, #0
 80018b2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	61fb      	str	r3, [r7, #28]
  uint16_t sent = 0;
 80018ba:	2300      	movs	r3, #0
 80018bc:	82fb      	strh	r3, [r7, #22]
  uint32_t start_time = HAL_GetTick();
 80018be:	f004 f8dd 	bl	8005a7c <HAL_GetTick>
 80018c2:	61b8      	str	r0, [r7, #24]
  
  do
  {
    if ( (sock->blocking == true) && (net_timeout_left_ms(start_time, HAL_GetTick(), sock->write_timeout) <= 0) )
 80018c4:	69fb      	ldr	r3, [r7, #28]
 80018c6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d00f      	beq.n	80018ee <net_sock_send_tcp_wifi+0x4e>
 80018ce:	f004 f8d5 	bl	8005a7c <HAL_GetTick>
 80018d2:	4601      	mov	r1, r0
 80018d4:	69fb      	ldr	r3, [r7, #28]
 80018d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80018d8:	461a      	mov	r2, r3
 80018da:	69b8      	ldr	r0, [r7, #24]
 80018dc:	f7ff fcfc 	bl	80012d8 <net_timeout_left_ms>
 80018e0:	4603      	mov	r3, r0
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	dc03      	bgt.n	80018ee <net_sock_send_tcp_wifi+0x4e>
    {
      rc = NET_TIMEOUT;
 80018e6:	f06f 0302 	mvn.w	r3, #2
 80018ea:	627b      	str	r3, [r7, #36]	@ 0x24
      break;
 80018ec:	e033      	b.n	8001956 <net_sock_send_tcp_wifi+0xb6>
    }
    
    status = WIFI_SendData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 80018ee:	69fb      	ldr	r3, [r7, #28]
 80018f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80018f2:	b2d8      	uxtb	r0, r3
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	b29a      	uxth	r2, r3
                          (sock->blocking == true) ? sock->write_timeout : NET_DEFAULT_NOBLOCKING_WRITE_TIMEOUT );
 80018f8:	69fb      	ldr	r3, [r7, #28]
 80018fa:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    status = WIFI_SendData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d003      	beq.n	800190a <net_sock_send_tcp_wifi+0x6a>
                          (sock->blocking == true) ? sock->write_timeout : NET_DEFAULT_NOBLOCKING_WRITE_TIMEOUT );
 8001902:	69fb      	ldr	r3, [r7, #28]
 8001904:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
    status = WIFI_SendData((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 8001906:	4619      	mov	r1, r3
 8001908:	e000      	b.n	800190c <net_sock_send_tcp_wifi+0x6c>
 800190a:	2101      	movs	r1, #1
 800190c:	f107 0316 	add.w	r3, r7, #22
 8001910:	9100      	str	r1, [sp, #0]
 8001912:	68b9      	ldr	r1, [r7, #8]
 8001914:	f00e fedc 	bl	80106d0 <WIFI_SendData>
 8001918:	4603      	mov	r3, r0
 800191a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    if (status !=  WIFI_STATUS_OK)
 800191e:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8001922:	2b00      	cmp	r3, #0
 8001924:	d00c      	beq.n	8001940 <net_sock_send_tcp_wifi+0xa0>
    {
      rc = NET_ERR;
 8001926:	f04f 33ff 	mov.w	r3, #4294967295
 800192a:	627b      	str	r3, [r7, #36]	@ 0x24
      msg_error("Send failed.\n");
 800192c:	f44f 72ac 	mov.w	r2, #344	@ 0x158
 8001930:	490e      	ldr	r1, [pc, #56]	@ (800196c <net_sock_send_tcp_wifi+0xcc>)
 8001932:	480f      	ldr	r0, [pc, #60]	@ (8001970 <net_sock_send_tcp_wifi+0xd0>)
 8001934:	f00f fe3c 	bl	80115b0 <iprintf>
 8001938:	480e      	ldr	r0, [pc, #56]	@ (8001974 <net_sock_send_tcp_wifi+0xd4>)
 800193a:	f00f fea9 	bl	8011690 <puts>
      break;
 800193e:	e00a      	b.n	8001956 <net_sock_send_tcp_wifi+0xb6>
    }
    msg_debug("send %d/%d.\n", sent, len);
  } while ( (sent == 0) && (sock->blocking == true) && (rc == 0) );
 8001940:	8afb      	ldrh	r3, [r7, #22]
 8001942:	2b00      	cmp	r3, #0
 8001944:	d107      	bne.n	8001956 <net_sock_send_tcp_wifi+0xb6>
 8001946:	69fb      	ldr	r3, [r7, #28]
 8001948:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800194c:	2b00      	cmp	r3, #0
 800194e:	d002      	beq.n	8001956 <net_sock_send_tcp_wifi+0xb6>
 8001950:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001952:	2b00      	cmp	r3, #0
 8001954:	d0b6      	beq.n	80018c4 <net_sock_send_tcp_wifi+0x24>
  
  return (rc < 0) ? rc : sent;
 8001956:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001958:	2b00      	cmp	r3, #0
 800195a:	db01      	blt.n	8001960 <net_sock_send_tcp_wifi+0xc0>
 800195c:	8afb      	ldrh	r3, [r7, #22]
 800195e:	e000      	b.n	8001962 <net_sock_send_tcp_wifi+0xc2>
 8001960:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
 8001962:	4618      	mov	r0, r3
 8001964:	3728      	adds	r7, #40	@ 0x28
 8001966:	46bd      	mov	sp, r7
 8001968:	bd80      	pop	{r7, pc}
 800196a:	bf00      	nop
 800196c:	080155b4 	.word	0x080155b4
 8001970:	080143fc 	.word	0x080143fc
 8001974:	08014540 	.word	0x08014540

08001978 <net_sock_sendto_udp_wifi>:


int net_sock_sendto_udp_wifi(net_sockhnd_t sockhnd, const uint8_t * buf, size_t len, net_ipaddr_t * remoteaddress, int remoteport)
{
 8001978:	b590      	push	{r4, r7, lr}
 800197a:	b091      	sub	sp, #68	@ 0x44
 800197c:	af04      	add	r7, sp, #16
 800197e:	60f8      	str	r0, [r7, #12]
 8001980:	60b9      	str	r1, [r7, #8]
 8001982:	607a      	str	r2, [r7, #4]
 8001984:	603b      	str	r3, [r7, #0]
  int rc = 0;
 8001986:	2300      	movs	r3, #0
 8001988:	62fb      	str	r3, [r7, #44]	@ 0x2c
  WIFI_Status_t status = WIFI_STATUS_OK;
 800198a:	2300      	movs	r3, #0
 800198c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 8001990:	68fb      	ldr	r3, [r7, #12]
 8001992:	623b      	str	r3, [r7, #32]
  uint16_t sent = 0;
 8001994:	2300      	movs	r3, #0
 8001996:	833b      	strh	r3, [r7, #24]
  uint32_t start_time = HAL_GetTick();
 8001998:	f004 f870 	bl	8005a7c <HAL_GetTick>
 800199c:	61f8      	str	r0, [r7, #28]
  uint8_t ip_addr[4] = { 0, 0, 0, 0 };
 800199e:	2300      	movs	r3, #0
 80019a0:	617b      	str	r3, [r7, #20]
  int16_t port = remoteport;
 80019a2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80019a4:	837b      	strh	r3, [r7, #26]
  
  if (remoteaddress->ipv != NET_IP_V4)
 80019a6:	683b      	ldr	r3, [r7, #0]
 80019a8:	781b      	ldrb	r3, [r3, #0]
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	d002      	beq.n	80019b4 <net_sock_sendto_udp_wifi+0x3c>
  {
    return NET_PARAM;
 80019ae:	f06f 0301 	mvn.w	r3, #1
 80019b2:	e068      	b.n	8001a86 <net_sock_sendto_udp_wifi+0x10e>
  }
  for (int i = 0; i < 4; i++)
 80019b4:	2300      	movs	r3, #0
 80019b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80019b8:	e00d      	b.n	80019d6 <net_sock_sendto_udp_wifi+0x5e>
  {
    ip_addr[i] = remoteaddress->ip[12+i];
 80019ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80019bc:	330c      	adds	r3, #12
 80019be:	683a      	ldr	r2, [r7, #0]
 80019c0:	4413      	add	r3, r2
 80019c2:	7859      	ldrb	r1, [r3, #1]
 80019c4:	f107 0214 	add.w	r2, r7, #20
 80019c8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80019ca:	4413      	add	r3, r2
 80019cc:	460a      	mov	r2, r1
 80019ce:	701a      	strb	r2, [r3, #0]
  for (int i = 0; i < 4; i++)
 80019d0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80019d2:	3301      	adds	r3, #1
 80019d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80019d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80019d8:	2b03      	cmp	r3, #3
 80019da:	ddee      	ble.n	80019ba <net_sock_sendto_udp_wifi+0x42>
  }
  
  do
  {
    if ( (sock->blocking == true) && (net_timeout_left_ms(start_time, HAL_GetTick(), sock->write_timeout) <= 0) )
 80019dc:	6a3b      	ldr	r3, [r7, #32]
 80019de:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d00f      	beq.n	8001a06 <net_sock_sendto_udp_wifi+0x8e>
 80019e6:	f004 f849 	bl	8005a7c <HAL_GetTick>
 80019ea:	4601      	mov	r1, r0
 80019ec:	6a3b      	ldr	r3, [r7, #32]
 80019ee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80019f0:	461a      	mov	r2, r3
 80019f2:	69f8      	ldr	r0, [r7, #28]
 80019f4:	f7ff fc70 	bl	80012d8 <net_timeout_left_ms>
 80019f8:	4603      	mov	r3, r0
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	dc03      	bgt.n	8001a06 <net_sock_sendto_udp_wifi+0x8e>
    {
      rc = NET_TIMEOUT;
 80019fe:	f06f 0302 	mvn.w	r3, #2
 8001a02:	62fb      	str	r3, [r7, #44]	@ 0x2c
      break;
 8001a04:	e039      	b.n	8001a7a <net_sock_sendto_udp_wifi+0x102>
    }
    
    status = WIFI_SendDataTo((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 8001a06:	6a3b      	ldr	r3, [r7, #32]
 8001a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001a0a:	b2d8      	uxtb	r0, r3
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	b29a      	uxth	r2, r3
                          (sock->blocking == true) ? sock->write_timeout : NET_DEFAULT_NOBLOCKING_WRITE_TIMEOUT, ip_addr, port );
 8001a10:	6a3b      	ldr	r3, [r7, #32]
 8001a12:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    status = WIFI_SendDataTo((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d003      	beq.n	8001a22 <net_sock_sendto_udp_wifi+0xaa>
                          (sock->blocking == true) ? sock->write_timeout : NET_DEFAULT_NOBLOCKING_WRITE_TIMEOUT, ip_addr, port );
 8001a1a:	6a3b      	ldr	r3, [r7, #32]
 8001a1c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
    status = WIFI_SendDataTo((uint8_t) ((uint32_t)sock->underlying_sock_ctxt & 0xFF), (uint8_t *)buf, len, &sent,
 8001a1e:	461c      	mov	r4, r3
 8001a20:	e000      	b.n	8001a24 <net_sock_sendto_udp_wifi+0xac>
 8001a22:	2401      	movs	r4, #1
 8001a24:	8b7b      	ldrh	r3, [r7, #26]
 8001a26:	f107 0118 	add.w	r1, r7, #24
 8001a2a:	9302      	str	r3, [sp, #8]
 8001a2c:	f107 0314 	add.w	r3, r7, #20
 8001a30:	9301      	str	r3, [sp, #4]
 8001a32:	9400      	str	r4, [sp, #0]
 8001a34:	460b      	mov	r3, r1
 8001a36:	68b9      	ldr	r1, [r7, #8]
 8001a38:	f00e fe6c 	bl	8010714 <WIFI_SendDataTo>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    if (status !=  WIFI_STATUS_OK)
 8001a42:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d00c      	beq.n	8001a64 <net_sock_sendto_udp_wifi+0xec>
    {
      rc = NET_ERR;
 8001a4a:	f04f 33ff 	mov.w	r3, #4294967295
 8001a4e:	62fb      	str	r3, [r7, #44]	@ 0x2c
      msg_error("Send failed.\n");
 8001a50:	f44f 72c1 	mov.w	r2, #386	@ 0x182
 8001a54:	490e      	ldr	r1, [pc, #56]	@ (8001a90 <net_sock_sendto_udp_wifi+0x118>)
 8001a56:	480f      	ldr	r0, [pc, #60]	@ (8001a94 <net_sock_sendto_udp_wifi+0x11c>)
 8001a58:	f00f fdaa 	bl	80115b0 <iprintf>
 8001a5c:	480e      	ldr	r0, [pc, #56]	@ (8001a98 <net_sock_sendto_udp_wifi+0x120>)
 8001a5e:	f00f fe17 	bl	8011690 <puts>
      break;
 8001a62:	e00a      	b.n	8001a7a <net_sock_sendto_udp_wifi+0x102>
    }
  
  } while ( (sent == 0) && (sock->blocking == true) && (rc == 0) );
 8001a64:	8b3b      	ldrh	r3, [r7, #24]
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d107      	bne.n	8001a7a <net_sock_sendto_udp_wifi+0x102>
 8001a6a:	6a3b      	ldr	r3, [r7, #32]
 8001a6c:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8001a70:	2b00      	cmp	r3, #0
 8001a72:	d002      	beq.n	8001a7a <net_sock_sendto_udp_wifi+0x102>
 8001a74:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001a76:	2b00      	cmp	r3, #0
 8001a78:	d0b0      	beq.n	80019dc <net_sock_sendto_udp_wifi+0x64>
    
  return (rc < 0) ? rc : sent;
 8001a7a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001a7c:	2b00      	cmp	r3, #0
 8001a7e:	db01      	blt.n	8001a84 <net_sock_sendto_udp_wifi+0x10c>
 8001a80:	8b3b      	ldrh	r3, [r7, #24]
 8001a82:	e000      	b.n	8001a86 <net_sock_sendto_udp_wifi+0x10e>
 8001a84:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8001a86:	4618      	mov	r0, r3
 8001a88:	3734      	adds	r7, #52	@ 0x34
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	bd90      	pop	{r4, r7, pc}
 8001a8e:	bf00      	nop
 8001a90:	080155cc 	.word	0x080155cc
 8001a94:	080143fc 	.word	0x080143fc
 8001a98:	08014540 	.word	0x08014540

08001a9c <net_sock_close_tcp_wifi>:


int net_sock_close_tcp_wifi(net_sockhnd_t sockhnd)
{
 8001a9c:	b580      	push	{r7, lr}
 8001a9e:	b086      	sub	sp, #24
 8001aa0:	af00      	add	r7, sp, #0
 8001aa2:	6078      	str	r0, [r7, #4]
  int rc = NET_ERR;
 8001aa4:	f04f 33ff 	mov.w	r3, #4294967295
 8001aa8:	617b      	str	r3, [r7, #20]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	613b      	str	r3, [r7, #16]
  WIFI_Status_t status = WIFI_CloseClientConnection((uint8_t) ((uint32_t)sock->underlying_sock_ctxt && 0xFF));
 8001aae:	693b      	ldr	r3, [r7, #16]
 8001ab0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001ab2:	2b00      	cmp	r3, #0
 8001ab4:	bf14      	ite	ne
 8001ab6:	2301      	movne	r3, #1
 8001ab8:	2300      	moveq	r3, #0
 8001aba:	b2db      	uxtb	r3, r3
 8001abc:	b2db      	uxtb	r3, r3
 8001abe:	4618      	mov	r0, r3
 8001ac0:	f00e fdea 	bl	8010698 <WIFI_CloseClientConnection>
 8001ac4:	4603      	mov	r3, r0
 8001ac6:	73fb      	strb	r3, [r7, #15]
  if (status == WIFI_STATUS_OK)
 8001ac8:	7bfb      	ldrb	r3, [r7, #15]
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d105      	bne.n	8001ada <net_sock_close_tcp_wifi+0x3e>
  {
    sock->underlying_sock_ctxt = (net_sockhnd_t) -1;
 8001ace:	693b      	ldr	r3, [r7, #16]
 8001ad0:	f04f 32ff 	mov.w	r2, #4294967295
 8001ad4:	62da      	str	r2, [r3, #44]	@ 0x2c
    rc = NET_OK;
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	617b      	str	r3, [r7, #20]
  }
  return rc;
 8001ada:	697b      	ldr	r3, [r7, #20]
}
 8001adc:	4618      	mov	r0, r3
 8001ade:	3718      	adds	r7, #24
 8001ae0:	46bd      	mov	sp, r7
 8001ae2:	bd80      	pop	{r7, pc}

08001ae4 <net_sock_destroy_tcp_wifi>:


int net_sock_destroy_tcp_wifi(net_sockhnd_t sockhnd)
{
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b086      	sub	sp, #24
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	6078      	str	r0, [r7, #4]
  int rc = NET_ERR;
 8001aec:	f04f 33ff 	mov.w	r3, #4294967295
 8001af0:	617b      	str	r3, [r7, #20]
  net_sock_ctxt_t *sock = (net_sock_ctxt_t * ) sockhnd;
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	60fb      	str	r3, [r7, #12]
  net_ctxt_t *ctxt = sock->net;
 8001af6:	68fb      	ldr	r3, [r7, #12]
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	60bb      	str	r3, [r7, #8]
    
  /* Find the parent in the linked list.
   * Unlink and free. 
   */
  if (sock == ctxt->sock_list)
 8001afc:	68bb      	ldr	r3, [r7, #8]
 8001afe:	685b      	ldr	r3, [r3, #4]
 8001b00:	68fa      	ldr	r2, [r7, #12]
 8001b02:	429a      	cmp	r2, r3
 8001b04:	d106      	bne.n	8001b14 <net_sock_destroy_tcp_wifi+0x30>
  {
    ctxt->sock_list = sock->next;
 8001b06:	68fb      	ldr	r3, [r7, #12]
 8001b08:	685a      	ldr	r2, [r3, #4]
 8001b0a:	68bb      	ldr	r3, [r7, #8]
 8001b0c:	605a      	str	r2, [r3, #4]
    rc = NET_OK;
 8001b0e:	2300      	movs	r3, #0
 8001b10:	617b      	str	r3, [r7, #20]
 8001b12:	e015      	b.n	8001b40 <net_sock_destroy_tcp_wifi+0x5c>
  }
  else
  {
    net_sock_ctxt_t *cur = ctxt->sock_list;
 8001b14:	68bb      	ldr	r3, [r7, #8]
 8001b16:	685b      	ldr	r3, [r3, #4]
 8001b18:	613b      	str	r3, [r7, #16]
    do
    {
      if (cur->next == sock)
 8001b1a:	693b      	ldr	r3, [r7, #16]
 8001b1c:	685b      	ldr	r3, [r3, #4]
 8001b1e:	68fa      	ldr	r2, [r7, #12]
 8001b20:	429a      	cmp	r2, r3
 8001b22:	d106      	bne.n	8001b32 <net_sock_destroy_tcp_wifi+0x4e>
      {
        cur->next = sock->next;
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	685a      	ldr	r2, [r3, #4]
 8001b28:	693b      	ldr	r3, [r7, #16]
 8001b2a:	605a      	str	r2, [r3, #4]
        rc = NET_OK;
 8001b2c:	2300      	movs	r3, #0
 8001b2e:	617b      	str	r3, [r7, #20]
        break;
 8001b30:	e006      	b.n	8001b40 <net_sock_destroy_tcp_wifi+0x5c>
      }
      cur = cur->next;
 8001b32:	693b      	ldr	r3, [r7, #16]
 8001b34:	685b      	ldr	r3, [r3, #4]
 8001b36:	613b      	str	r3, [r7, #16]
    } while(cur->next != NULL);
 8001b38:	693b      	ldr	r3, [r7, #16]
 8001b3a:	685b      	ldr	r3, [r3, #4]
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d1ec      	bne.n	8001b1a <net_sock_destroy_tcp_wifi+0x36>
  }
  if (rc == NET_OK)
 8001b40:	697b      	ldr	r3, [r7, #20]
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d102      	bne.n	8001b4c <net_sock_destroy_tcp_wifi+0x68>
  {
    net_free(sock);
 8001b46:	68f8      	ldr	r0, [r7, #12]
 8001b48:	f00e feae 	bl	80108a8 <free>
  }
  
  return rc;
 8001b4c:	697b      	ldr	r3, [r7, #20]
}
 8001b4e:	4618      	mov	r0, r3
 8001b50:	3718      	adds	r7, #24
 8001b52:	46bd      	mov	sp, r7
 8001b54:	bd80      	pop	{r7, pc}

08001b56 <TimerCountdownMS>:
#include "main.h"
#include "paho_timer.h"  


void TimerCountdownMS(Timer* timer, unsigned int timeout_ms)
{
 8001b56:	b580      	push	{r7, lr}
 8001b58:	b082      	sub	sp, #8
 8001b5a:	af00      	add	r7, sp, #0
 8001b5c:	6078      	str	r0, [r7, #4]
 8001b5e:	6039      	str	r1, [r7, #0]
  timer->init_tick = HAL_GetTick();
 8001b60:	f003 ff8c 	bl	8005a7c <HAL_GetTick>
 8001b64:	4602      	mov	r2, r0
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	601a      	str	r2, [r3, #0]
  timer->timeout_ms = timeout_ms;
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	683a      	ldr	r2, [r7, #0]
 8001b6e:	605a      	str	r2, [r3, #4]
}
 8001b70:	bf00      	nop
 8001b72:	3708      	adds	r7, #8
 8001b74:	46bd      	mov	sp, r7
 8001b76:	bd80      	pop	{r7, pc}

08001b78 <TimerCountdown>:


void TimerCountdown(Timer* timer, unsigned int timeout)
{
 8001b78:	b580      	push	{r7, lr}
 8001b7a:	b082      	sub	sp, #8
 8001b7c:	af00      	add	r7, sp, #0
 8001b7e:	6078      	str	r0, [r7, #4]
 8001b80:	6039      	str	r1, [r7, #0]
  TimerCountdownMS(timer, timeout * 1000);
 8001b82:	683b      	ldr	r3, [r7, #0]
 8001b84:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001b88:	fb02 f303 	mul.w	r3, r2, r3
 8001b8c:	4619      	mov	r1, r3
 8001b8e:	6878      	ldr	r0, [r7, #4]
 8001b90:	f7ff ffe1 	bl	8001b56 <TimerCountdownMS>
}
 8001b94:	bf00      	nop
 8001b96:	3708      	adds	r7, #8
 8001b98:	46bd      	mov	sp, r7
 8001b9a:	bd80      	pop	{r7, pc}

08001b9c <TimerLeftMS>:


int TimerLeftMS(Timer* timer)
{
 8001b9c:	b580      	push	{r7, lr}
 8001b9e:	b084      	sub	sp, #16
 8001ba0:	af00      	add	r7, sp, #0
 8001ba2:	6078      	str	r0, [r7, #4]
  int ret = 0;
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	60fb      	str	r3, [r7, #12]
  uint32_t cur_tick = HAL_GetTick();  // The HAL tick period is 1 millisecond.
 8001ba8:	f003 ff68 	bl	8005a7c <HAL_GetTick>
 8001bac:	60b8      	str	r0, [r7, #8]
  if (cur_tick < timer->init_tick)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	68ba      	ldr	r2, [r7, #8]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d20a      	bcs.n	8001bce <TimerLeftMS+0x32>
  { // Timer wrap-around detected
    // printf("Timer: wrap-around detected from %d to %d\n", timer->init_tick, cur_tick);
    timer->timeout_ms -= 0xFFFFFFFF - timer->init_tick;
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	685a      	ldr	r2, [r3, #4]
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4413      	add	r3, r2
 8001bc2:	1c5a      	adds	r2, r3, #1
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	605a      	str	r2, [r3, #4]
    timer->init_tick = 0;
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	2200      	movs	r2, #0
 8001bcc:	601a      	str	r2, [r3, #0]
  }
  ret = timer->timeout_ms - (cur_tick - timer->init_tick);
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	685a      	ldr	r2, [r3, #4]
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	6819      	ldr	r1, [r3, #0]
 8001bd6:	68bb      	ldr	r3, [r7, #8]
 8001bd8:	1acb      	subs	r3, r1, r3
 8001bda:	4413      	add	r3, r2
 8001bdc:	60fb      	str	r3, [r7, #12]

  return (ret >= 0) ? ret : 0;
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
}
 8001be4:	4618      	mov	r0, r3
 8001be6:	3710      	adds	r7, #16
 8001be8:	46bd      	mov	sp, r7
 8001bea:	bd80      	pop	{r7, pc}

08001bec <TimerIsExpired>:


char TimerIsExpired(Timer* timer)
{
 8001bec:	b580      	push	{r7, lr}
 8001bee:	b082      	sub	sp, #8
 8001bf0:	af00      	add	r7, sp, #0
 8001bf2:	6078      	str	r0, [r7, #4]
  return (TimerLeftMS(timer) > 0) ? 0 : 1;
 8001bf4:	6878      	ldr	r0, [r7, #4]
 8001bf6:	f7ff ffd1 	bl	8001b9c <TimerLeftMS>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	bfd4      	ite	le
 8001c00:	2301      	movle	r3, #1
 8001c02:	2300      	movgt	r3, #0
 8001c04:	b2db      	uxtb	r3, r3
}
 8001c06:	4618      	mov	r0, r3
 8001c08:	3708      	adds	r7, #8
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	bd80      	pop	{r7, pc}

08001c0e <TimerInit>:


void TimerInit(Timer* timer)
{
 8001c0e:	b480      	push	{r7}
 8001c10:	b083      	sub	sp, #12
 8001c12:	af00      	add	r7, sp, #0
 8001c14:	6078      	str	r0, [r7, #4]
  timer->init_tick = 0;
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	2200      	movs	r2, #0
 8001c1a:	601a      	str	r2, [r3, #0]
  timer->timeout_ms = 0;
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	2200      	movs	r2, #0
 8001c20:	605a      	str	r2, [r3, #4]
}
 8001c22:	bf00      	nop
 8001c24:	370c      	adds	r7, #12
 8001c26:	46bd      	mov	sp, r7
 8001c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c2c:	4770      	bx	lr
	...

08001c30 <setRTCTimeDateFromNetwork>:
 *            TD_ERR_RTC          Could not set the RTC.
 *            TD_ERR_TLS_CERT     The server certificate verification failed. Applicable only when force_apply is false.
 *                                .
 */
int setRTCTimeDateFromNetwork(bool force_apply)
{
 8001c30:	b580      	push	{r7, lr}
 8001c32:	f5ad 6d8e 	sub.w	sp, sp, #1136	@ 0x470
 8001c36:	af06      	add	r7, sp, #24
 8001c38:	4602      	mov	r2, r0
 8001c3a:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001c3e:	f2a3 4351 	subw	r3, r3, #1105	@ 0x451
 8001c42:	701a      	strb	r2, [r3, #0]
 // return 0;
  int rc = TD_OK;
 8001c44:	2300      	movs	r3, #0
 8001c46:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
  int ret = NET_OK;
 8001c4a:	2300      	movs	r3, #0
 8001c4c:	f8c7 3450 	str.w	r3, [r7, #1104]	@ 0x450
  net_sockhnd_t socket = NULL;
 8001c50:	2300      	movs	r3, #0
 8001c52:	f8c7 3438 	str.w	r3, [r7, #1080]	@ 0x438
  int len = strlen(http_request);
 8001c56:	2325      	movs	r3, #37	@ 0x25
 8001c58:	f8c7 3444 	str.w	r3, [r7, #1092]	@ 0x444
  char buffer[NET_BUF_SIZE + 1]; /* +1 to be sure that the buffer is closed by a \0, so that it may be parsed by string commands. */
  memset(buffer, 0, sizeof(buffer));
 8001c5c:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001c60:	f240 32e9 	movw	r2, #1001	@ 0x3e9
 8001c64:	2100      	movs	r1, #0
 8001c66:	4618      	mov	r0, r3
 8001c68:	f00f fe9c 	bl	80119a4 <memset>
 
  ret = net_sock_create(hnet, &socket, TIME_SOURCE_HTTP_PROTO);
 8001c6c:	4bcd      	ldr	r3, [pc, #820]	@ (8001fa4 <setRTCTimeDateFromNetwork+0x374>)
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	f507 6187 	add.w	r1, r7, #1080	@ 0x438
 8001c74:	2201      	movs	r2, #1
 8001c76:	4618      	mov	r0, r3
 8001c78:	f7ff fa0e 	bl	8001098 <net_sock_create>
 8001c7c:	f8c7 0450 	str.w	r0, [r7, #1104]	@ 0x450
  if (ret != NET_OK)
 8001c80:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d008      	beq.n	8001c9a <setRTCTimeDateFromNetwork+0x6a>
  {
    msg_error("Could not create the socket.\n");
 8001c88:	2267      	movs	r2, #103	@ 0x67
 8001c8a:	49c7      	ldr	r1, [pc, #796]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001c8c:	48c7      	ldr	r0, [pc, #796]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001c8e:	f00f fc8f 	bl	80115b0 <iprintf>
 8001c92:	48c7      	ldr	r0, [pc, #796]	@ (8001fb0 <setRTCTimeDateFromNetwork+0x380>)
 8001c94:	f00f fcfc 	bl	8011690 <puts>
 8001c98:	e00c      	b.n	8001cb4 <setRTCTimeDateFromNetwork+0x84>
  }
  else
  {
#define NET_READ_TIMEOUT  "5000"
    ret |= net_sock_setopt(socket, "sock_read_timeout", (uint8_t*)NET_READ_TIMEOUT, sizeof(NET_READ_TIMEOUT));
 8001c9a:	f8d7 0438 	ldr.w	r0, [r7, #1080]	@ 0x438
 8001c9e:	2305      	movs	r3, #5
 8001ca0:	4ac4      	ldr	r2, [pc, #784]	@ (8001fb4 <setRTCTimeDateFromNetwork+0x384>)
 8001ca2:	49c5      	ldr	r1, [pc, #788]	@ (8001fb8 <setRTCTimeDateFromNetwork+0x388>)
 8001ca4:	f7ff fa44 	bl	8001130 <net_sock_setopt>
 8001ca8:	4602      	mov	r2, r0
 8001caa:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8001cae:	4313      	orrs	r3, r2
 8001cb0:	f8c7 3450 	str.w	r3, [r7, #1104]	@ 0x450
      ret |= net_sock_setopt(socket, "tls_server_name", (uint8_t*)TIME_SOURCE_HTTP_HOST, sizeof(TIME_SOURCE_HTTP_HOST));
      ret |= net_sock_setopt(socket, (force_apply == true) ? "tls_server_noverification" : "tls_server_verification", NULL, 0);
    }
  }
  
  if (ret != NET_OK)
 8001cb4:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d008      	beq.n	8001cce <setRTCTimeDateFromNetwork+0x9e>
  {
    msg_error("Could not set the socket options.\n");
 8001cbc:	2277      	movs	r2, #119	@ 0x77
 8001cbe:	49ba      	ldr	r1, [pc, #744]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001cc0:	48ba      	ldr	r0, [pc, #744]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001cc2:	f00f fc75 	bl	80115b0 <iprintf>
 8001cc6:	48bd      	ldr	r0, [pc, #756]	@ (8001fbc <setRTCTimeDateFromNetwork+0x38c>)
 8001cc8:	f00f fce2 	bl	8011690 <puts>
 8001ccc:	e008      	b.n	8001ce0 <setRTCTimeDateFromNetwork+0xb0>
  }
  else
  {
    ret = net_sock_open(socket, TIME_SOURCE_HTTP_HOST, TIME_SOURCE_HTTP_PORT, 0);
 8001cce:	f8d7 0438 	ldr.w	r0, [r7, #1080]	@ 0x438
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	2250      	movs	r2, #80	@ 0x50
 8001cd6:	49ba      	ldr	r1, [pc, #744]	@ (8001fc0 <setRTCTimeDateFromNetwork+0x390>)
 8001cd8:	f7ff fa14 	bl	8001104 <net_sock_open>
 8001cdc:	f8c7 0450 	str.w	r0, [r7, #1104]	@ 0x450
  }
  
  if (ret == NET_AUTH)
 8001ce0:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8001ce4:	f113 0f06 	cmn.w	r3, #6
 8001ce8:	d10b      	bne.n	8001d02 <setRTCTimeDateFromNetwork+0xd2>
  {
    msg_error("An incorrect system time may have resulted in a TLS authentication error.\n");
 8001cea:	2280      	movs	r2, #128	@ 0x80
 8001cec:	49ae      	ldr	r1, [pc, #696]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001cee:	48af      	ldr	r0, [pc, #700]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001cf0:	f00f fc5e 	bl	80115b0 <iprintf>
 8001cf4:	48b3      	ldr	r0, [pc, #716]	@ (8001fc4 <setRTCTimeDateFromNetwork+0x394>)
 8001cf6:	f00f fccb 	bl	8011690 <puts>
    rc = TD_ERR_TLS_CERT;
 8001cfa:	f06f 0303 	mvn.w	r3, #3
 8001cfe:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
  }
  
  if ( (ret != NET_OK) || (rc != TD_OK) )
 8001d02:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	d103      	bne.n	8001d12 <setRTCTimeDateFromNetwork+0xe2>
 8001d0a:	f8d7 3454 	ldr.w	r3, [r7, #1108]	@ 0x454
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d008      	beq.n	8001d24 <setRTCTimeDateFromNetwork+0xf4>
  {
    msg_error("Could not open the socket.\n");
 8001d12:	2286      	movs	r2, #134	@ 0x86
 8001d14:	49a4      	ldr	r1, [pc, #656]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001d16:	48a5      	ldr	r0, [pc, #660]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001d18:	f00f fc4a 	bl	80115b0 <iprintf>
 8001d1c:	48aa      	ldr	r0, [pc, #680]	@ (8001fc8 <setRTCTimeDateFromNetwork+0x398>)
 8001d1e:	f00f fcb7 	bl	8011690 <puts>
 8001d22:	e2ac      	b.n	800227e <setRTCTimeDateFromNetwork+0x64e>
  }
  else
  {
    ret = net_sock_send(socket, (uint8_t *) http_request, len);
 8001d24:	f8d7 3438 	ldr.w	r3, [r7, #1080]	@ 0x438
 8001d28:	f8d7 2444 	ldr.w	r2, [r7, #1092]	@ 0x444
 8001d2c:	49a7      	ldr	r1, [pc, #668]	@ (8001fcc <setRTCTimeDateFromNetwork+0x39c>)
 8001d2e:	4618      	mov	r0, r3
 8001d30:	f7ff fa8c 	bl	800124c <net_sock_send>
 8001d34:	f8c7 0450 	str.w	r0, [r7, #1104]	@ 0x450
    
    if (ret != len)
 8001d38:	f8d7 2450 	ldr.w	r2, [r7, #1104]	@ 0x450
 8001d3c:	f8d7 3444 	ldr.w	r3, [r7, #1092]	@ 0x444
 8001d40:	429a      	cmp	r2, r3
 8001d42:	d00a      	beq.n	8001d5a <setRTCTimeDateFromNetwork+0x12a>
    {
      msg_error("Could not send %d bytes.\n", len);
 8001d44:	228e      	movs	r2, #142	@ 0x8e
 8001d46:	4998      	ldr	r1, [pc, #608]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001d48:	4898      	ldr	r0, [pc, #608]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001d4a:	f00f fc31 	bl	80115b0 <iprintf>
 8001d4e:	f8d7 1444 	ldr.w	r1, [r7, #1092]	@ 0x444
 8001d52:	489f      	ldr	r0, [pc, #636]	@ (8001fd0 <setRTCTimeDateFromNetwork+0x3a0>)
 8001d54:	f00f fc2c 	bl	80115b0 <iprintf>
 8001d58:	e28a      	b.n	8002270 <setRTCTimeDateFromNetwork+0x640>
    }
    else
    {
      char *dateStr = NULL;
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	f8c7 344c 	str.w	r3, [r7, #1100]	@ 0x44c
      int read = 0;
 8001d60:	2300      	movs	r3, #0
 8001d62:	f8c7 3448 	str.w	r3, [r7, #1096]	@ 0x448
      do
      {
        len = net_sock_recv(socket, (uint8_t *) buffer + read, NET_BUF_SIZE - read);
 8001d66:	f8d7 0438 	ldr.w	r0, [r7, #1080]	@ 0x438
 8001d6a:	f8d7 3448 	ldr.w	r3, [r7, #1096]	@ 0x448
 8001d6e:	f107 024c 	add.w	r2, r7, #76	@ 0x4c
 8001d72:	18d1      	adds	r1, r2, r3
 8001d74:	f8d7 3448 	ldr.w	r3, [r7, #1096]	@ 0x448
 8001d78:	f5c3 737a 	rsb	r3, r3, #1000	@ 0x3e8
 8001d7c:	461a      	mov	r2, r3
 8001d7e:	f7ff fa4b 	bl	8001218 <net_sock_recv>
 8001d82:	f8c7 0444 	str.w	r0, [r7, #1092]	@ 0x444
        if (len > 0)
 8001d86:	f8d7 3444 	ldr.w	r3, [r7, #1092]	@ 0x444
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	dd0e      	ble.n	8001dac <setRTCTimeDateFromNetwork+0x17c>
        {
          read += len;
 8001d8e:	f8d7 2448 	ldr.w	r2, [r7, #1096]	@ 0x448
 8001d92:	f8d7 3444 	ldr.w	r3, [r7, #1092]	@ 0x444
 8001d96:	4413      	add	r3, r2
 8001d98:	f8c7 3448 	str.w	r3, [r7, #1096]	@ 0x448
          dateStr = strstr(buffer, "Date: ");
 8001d9c:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001da0:	498c      	ldr	r1, [pc, #560]	@ (8001fd4 <setRTCTimeDateFromNetwork+0x3a4>)
 8001da2:	4618      	mov	r0, r3
 8001da4:	f00f fe88 	bl	8011ab8 <strstr>
 8001da8:	f8c7 044c 	str.w	r0, [r7, #1100]	@ 0x44c
        }
      } while ( (dateStr == NULL) && ((len >= 0) || (len == NET_TIMEOUT)) && (read < NET_BUF_SIZE));
 8001dac:	f8d7 344c 	ldr.w	r3, [r7, #1100]	@ 0x44c
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d10d      	bne.n	8001dd0 <setRTCTimeDateFromNetwork+0x1a0>
 8001db4:	f8d7 3444 	ldr.w	r3, [r7, #1092]	@ 0x444
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	da04      	bge.n	8001dc6 <setRTCTimeDateFromNetwork+0x196>
 8001dbc:	f8d7 3444 	ldr.w	r3, [r7, #1092]	@ 0x444
 8001dc0:	f113 0f03 	cmn.w	r3, #3
 8001dc4:	d104      	bne.n	8001dd0 <setRTCTimeDateFromNetwork+0x1a0>
 8001dc6:	f8d7 3448 	ldr.w	r3, [r7, #1096]	@ 0x448
 8001dca:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001dce:	dbca      	blt.n	8001d66 <setRTCTimeDateFromNetwork+0x136>
      
      if (dateStr == NULL)
 8001dd0:	f8d7 344c 	ldr.w	r3, [r7, #1100]	@ 0x44c
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d10c      	bne.n	8001df2 <setRTCTimeDateFromNetwork+0x1c2>
      {
        msg_error("No 'Date:' line found in the HTTP response header.\n");
 8001dd8:	22a0      	movs	r2, #160	@ 0xa0
 8001dda:	4973      	ldr	r1, [pc, #460]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001ddc:	4873      	ldr	r0, [pc, #460]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001dde:	f00f fbe7 	bl	80115b0 <iprintf>
 8001de2:	487d      	ldr	r0, [pc, #500]	@ (8001fd8 <setRTCTimeDateFromNetwork+0x3a8>)
 8001de4:	f00f fc54 	bl	8011690 <puts>
        rc = TD_ERR_HTTP;
 8001de8:	f06f 0301 	mvn.w	r3, #1
 8001dec:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
 8001df0:	e23e      	b.n	8002270 <setRTCTimeDateFromNetwork+0x640>
      }
      else
      {
        rc = TD_OK;
 8001df2:	2300      	movs	r3, #0
 8001df4:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
        char prefix[8], dow[8], month[4]; 
        int day, year, hour, min, sec;
      
        memset(dow, 0, sizeof(dow));
 8001df8:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001dfc:	2208      	movs	r2, #8
 8001dfe:	2100      	movs	r1, #0
 8001e00:	4618      	mov	r0, r3
 8001e02:	f00f fdcf 	bl	80119a4 <memset>
        memset(month, 0, sizeof(month));
 8001e06:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001e0a:	2204      	movs	r2, #4
 8001e0c:	2100      	movs	r1, #0
 8001e0e:	4618      	mov	r0, r3
 8001e10:	f00f fdc8 	bl	80119a4 <memset>
        day = year = hour = min = sec = 0;
 8001e14:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e18:	f2a3 4334 	subw	r3, r3, #1076	@ 0x434
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	601a      	str	r2, [r3, #0]
 8001e20:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e24:	f2a3 4334 	subw	r3, r3, #1076	@ 0x434
 8001e28:	681a      	ldr	r2, [r3, #0]
 8001e2a:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e2e:	f5a3 6386 	sub.w	r3, r3, #1072	@ 0x430
 8001e32:	601a      	str	r2, [r3, #0]
 8001e34:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e38:	f5a3 6386 	sub.w	r3, r3, #1072	@ 0x430
 8001e3c:	681a      	ldr	r2, [r3, #0]
 8001e3e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e42:	f2a3 432c 	subw	r3, r3, #1068	@ 0x42c
 8001e46:	601a      	str	r2, [r3, #0]
 8001e48:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e4c:	f2a3 432c 	subw	r3, r3, #1068	@ 0x42c
 8001e50:	681a      	ldr	r2, [r3, #0]
 8001e52:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e56:	f5a3 6385 	sub.w	r3, r3, #1064	@ 0x428
 8001e5a:	601a      	str	r2, [r3, #0]
 8001e5c:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e60:	f5a3 6385 	sub.w	r3, r3, #1064	@ 0x428
 8001e64:	681a      	ldr	r2, [r3, #0]
 8001e66:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001e6a:	f2a3 4324 	subw	r3, r3, #1060	@ 0x424
 8001e6e:	601a      	str	r2, [r3, #0]
        
        int count = sscanf(dateStr, "%s %s %d %s %d %02d:%02d:%02d ", prefix, dow, &day, month, &year, &hour, &min, &sec);
 8001e70:	f107 013c 	add.w	r1, r7, #60	@ 0x3c
 8001e74:	f107 0244 	add.w	r2, r7, #68	@ 0x44
 8001e78:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001e7c:	9305      	str	r3, [sp, #20]
 8001e7e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001e82:	9304      	str	r3, [sp, #16]
 8001e84:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8001e88:	9303      	str	r3, [sp, #12]
 8001e8a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001e8e:	9302      	str	r3, [sp, #8]
 8001e90:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001e94:	9301      	str	r3, [sp, #4]
 8001e96:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8001e9a:	9300      	str	r3, [sp, #0]
 8001e9c:	460b      	mov	r3, r1
 8001e9e:	494f      	ldr	r1, [pc, #316]	@ (8001fdc <setRTCTimeDateFromNetwork+0x3ac>)
 8001ea0:	f8d7 044c 	ldr.w	r0, [r7, #1100]	@ 0x44c
 8001ea4:	f00f fc50 	bl	8011748 <siscanf>
 8001ea8:	f8c7 0440 	str.w	r0, [r7, #1088]	@ 0x440
        if (count < 8)
 8001eac:	f8d7 3440 	ldr.w	r3, [r7, #1088]	@ 0x440
 8001eb0:	2b07      	cmp	r3, #7
 8001eb2:	dc11      	bgt.n	8001ed8 <setRTCTimeDateFromNetwork+0x2a8>
        {
          msg_error("At time initialization, only %d out of the 8 time/date data could be parsed from the HTTP response %s\n", count, buffer);
 8001eb4:	22b0      	movs	r2, #176	@ 0xb0
 8001eb6:	493c      	ldr	r1, [pc, #240]	@ (8001fa8 <setRTCTimeDateFromNetwork+0x378>)
 8001eb8:	483c      	ldr	r0, [pc, #240]	@ (8001fac <setRTCTimeDateFromNetwork+0x37c>)
 8001eba:	f00f fb79 	bl	80115b0 <iprintf>
 8001ebe:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8001ec2:	461a      	mov	r2, r3
 8001ec4:	f8d7 1440 	ldr.w	r1, [r7, #1088]	@ 0x440
 8001ec8:	4845      	ldr	r0, [pc, #276]	@ (8001fe0 <setRTCTimeDateFromNetwork+0x3b0>)
 8001eca:	f00f fb71 	bl	80115b0 <iprintf>
          rc = TD_ERR_HTTP;
 8001ece:	f06f 0301 	mvn.w	r3, #1
 8001ed2:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
 8001ed6:	e1cb      	b.n	8002270 <setRTCTimeDateFromNetwork+0x640>
        }
        else
        {
          char * str = strstr(dateStr, "\r\n");
 8001ed8:	4942      	ldr	r1, [pc, #264]	@ (8001fe4 <setRTCTimeDateFromNetwork+0x3b4>)
 8001eda:	f8d7 044c 	ldr.w	r0, [r7, #1100]	@ 0x44c
 8001ede:	f00f fdeb 	bl	8011ab8 <strstr>
 8001ee2:	f8c7 043c 	str.w	r0, [r7, #1084]	@ 0x43c
          str[0] = '\0';
 8001ee6:	f8d7 343c 	ldr.w	r3, [r7, #1084]	@ 0x43c
 8001eea:	2200      	movs	r2, #0
 8001eec:	701a      	strb	r2, [r3, #0]
          msg_info("Configuring the RTC from %s\n", dateStr);
          
          RTC_TimeTypeDef sTime;
          sTime.Hours = hour;
 8001eee:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001ef2:	f2a3 432c 	subw	r3, r3, #1068	@ 0x42c
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	b2da      	uxtb	r2, r3
 8001efa:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001efe:	f5a3 6389 	sub.w	r3, r3, #1096	@ 0x448
 8001f02:	701a      	strb	r2, [r3, #0]
          sTime.Minutes = min;
 8001f04:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f08:	f5a3 6386 	sub.w	r3, r3, #1072	@ 0x430
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	b2da      	uxtb	r2, r3
 8001f10:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f14:	f5a3 6389 	sub.w	r3, r3, #1096	@ 0x448
 8001f18:	705a      	strb	r2, [r3, #1]
          sTime.Seconds = sec;
 8001f1a:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f1e:	f2a3 4334 	subw	r3, r3, #1076	@ 0x434
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	b2da      	uxtb	r2, r3
 8001f26:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f2a:	f5a3 6389 	sub.w	r3, r3, #1096	@ 0x448
 8001f2e:	709a      	strb	r2, [r3, #2]
          sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8001f30:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f34:	f5a3 6389 	sub.w	r3, r3, #1096	@ 0x448
 8001f38:	2200      	movs	r2, #0
 8001f3a:	60da      	str	r2, [r3, #12]
          sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8001f3c:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f40:	f5a3 6389 	sub.w	r3, r3, #1096	@ 0x448
 8001f44:	2200      	movs	r2, #0
 8001f46:	611a      	str	r2, [r3, #16]
          if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 8001f48:	f107 0310 	add.w	r3, r7, #16
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	4619      	mov	r1, r3
 8001f50:	4825      	ldr	r0, [pc, #148]	@ (8001fe8 <setRTCTimeDateFromNetwork+0x3b8>)
 8001f52:	f006 ff7a 	bl	8008e4a <HAL_RTC_SetTime>
 8001f56:	4603      	mov	r3, r0
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d003      	beq.n	8001f64 <setRTCTimeDateFromNetwork+0x334>
          {
            rc = TD_ERR_RTC;
 8001f5c:	f06f 0302 	mvn.w	r3, #2
 8001f60:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
          }

          RTC_DateTypeDef sDate;
          if (strcmp(dow, "Mon,") == 0) { sDate.WeekDay = RTC_WEEKDAY_MONDAY; } else
 8001f64:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001f68:	4920      	ldr	r1, [pc, #128]	@ (8001fec <setRTCTimeDateFromNetwork+0x3bc>)
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f7fe f930 	bl	80001d0 <strcmp>
 8001f70:	4603      	mov	r3, r0
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d106      	bne.n	8001f84 <setRTCTimeDateFromNetwork+0x354>
 8001f76:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f7a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8001f7e:	2201      	movs	r2, #1
 8001f80:	701a      	strb	r2, [r3, #0]
 8001f82:	e08b      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
            if (strcmp(dow, "Tue,") == 0) { sDate.WeekDay = RTC_WEEKDAY_TUESDAY; } else
 8001f84:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001f88:	4919      	ldr	r1, [pc, #100]	@ (8001ff0 <setRTCTimeDateFromNetwork+0x3c0>)
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	f7fe f920 	bl	80001d0 <strcmp>
 8001f90:	4603      	mov	r3, r0
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d12e      	bne.n	8001ff4 <setRTCTimeDateFromNetwork+0x3c4>
 8001f96:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8001f9a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8001f9e:	2202      	movs	r2, #2
 8001fa0:	701a      	strb	r2, [r3, #0]
 8001fa2:	e07b      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
 8001fa4:	20000d18 	.word	0x20000d18
 8001fa8:	08015610 	.word	0x08015610
 8001fac:	08014550 	.word	0x08014550
 8001fb0:	08014560 	.word	0x08014560
 8001fb4:	08014580 	.word	0x08014580
 8001fb8:	08014588 	.word	0x08014588
 8001fbc:	0801459c 	.word	0x0801459c
 8001fc0:	080145c0 	.word	0x080145c0
 8001fc4:	080145cc 	.word	0x080145cc
 8001fc8:	08014618 	.word	0x08014618
 8001fcc:	080155e8 	.word	0x080155e8
 8001fd0:	08014634 	.word	0x08014634
 8001fd4:	08014650 	.word	0x08014650
 8001fd8:	08014658 	.word	0x08014658
 8001fdc:	0801468c 	.word	0x0801468c
 8001fe0:	080146ac 	.word	0x080146ac
 8001fe4:	08014714 	.word	0x08014714
 8001fe8:	200005ec 	.word	0x200005ec
 8001fec:	08014718 	.word	0x08014718
 8001ff0:	08014720 	.word	0x08014720
              if (strcmp(dow, "Wed,") == 0) { sDate.WeekDay = RTC_WEEKDAY_WEDNESDAY; } else  
 8001ff4:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001ff8:	49b2      	ldr	r1, [pc, #712]	@ (80022c4 <setRTCTimeDateFromNetwork+0x694>)
 8001ffa:	4618      	mov	r0, r3
 8001ffc:	f7fe f8e8 	bl	80001d0 <strcmp>
 8002000:	4603      	mov	r3, r0
 8002002:	2b00      	cmp	r3, #0
 8002004:	d106      	bne.n	8002014 <setRTCTimeDateFromNetwork+0x3e4>
 8002006:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800200a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 800200e:	2203      	movs	r2, #3
 8002010:	701a      	strb	r2, [r3, #0]
 8002012:	e043      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
                if (strcmp(dow, "Thu,") == 0) { sDate.WeekDay = RTC_WEEKDAY_THURSDAY; } else  
 8002014:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8002018:	49ab      	ldr	r1, [pc, #684]	@ (80022c8 <setRTCTimeDateFromNetwork+0x698>)
 800201a:	4618      	mov	r0, r3
 800201c:	f7fe f8d8 	bl	80001d0 <strcmp>
 8002020:	4603      	mov	r3, r0
 8002022:	2b00      	cmp	r3, #0
 8002024:	d106      	bne.n	8002034 <setRTCTimeDateFromNetwork+0x404>
 8002026:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800202a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 800202e:	2204      	movs	r2, #4
 8002030:	701a      	strb	r2, [r3, #0]
 8002032:	e033      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
                  if (strcmp(dow, "Fri,") == 0) { sDate.WeekDay = RTC_WEEKDAY_FRIDAY; } else
 8002034:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8002038:	49a4      	ldr	r1, [pc, #656]	@ (80022cc <setRTCTimeDateFromNetwork+0x69c>)
 800203a:	4618      	mov	r0, r3
 800203c:	f7fe f8c8 	bl	80001d0 <strcmp>
 8002040:	4603      	mov	r3, r0
 8002042:	2b00      	cmp	r3, #0
 8002044:	d106      	bne.n	8002054 <setRTCTimeDateFromNetwork+0x424>
 8002046:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800204a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 800204e:	2205      	movs	r2, #5
 8002050:	701a      	strb	r2, [r3, #0]
 8002052:	e023      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
                    if (strcmp(dow, "Sat,") == 0) { sDate.WeekDay = RTC_WEEKDAY_SATURDAY; } else
 8002054:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8002058:	499d      	ldr	r1, [pc, #628]	@ (80022d0 <setRTCTimeDateFromNetwork+0x6a0>)
 800205a:	4618      	mov	r0, r3
 800205c:	f7fe f8b8 	bl	80001d0 <strcmp>
 8002060:	4603      	mov	r3, r0
 8002062:	2b00      	cmp	r3, #0
 8002064:	d106      	bne.n	8002074 <setRTCTimeDateFromNetwork+0x444>
 8002066:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800206a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 800206e:	2206      	movs	r2, #6
 8002070:	701a      	strb	r2, [r3, #0]
 8002072:	e013      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
                      if (strcmp(dow, "Sun,") == 0) { sDate.WeekDay = RTC_WEEKDAY_SUNDAY; } else ret = -1;
 8002074:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8002078:	4996      	ldr	r1, [pc, #600]	@ (80022d4 <setRTCTimeDateFromNetwork+0x6a4>)
 800207a:	4618      	mov	r0, r3
 800207c:	f7fe f8a8 	bl	80001d0 <strcmp>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d106      	bne.n	8002094 <setRTCTimeDateFromNetwork+0x464>
 8002086:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800208a:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 800208e:	2207      	movs	r2, #7
 8002090:	701a      	strb	r2, [r3, #0]
 8002092:	e003      	b.n	800209c <setRTCTimeDateFromNetwork+0x46c>
 8002094:	f04f 33ff 	mov.w	r3, #4294967295
 8002098:	f8c7 3450 	str.w	r3, [r7, #1104]	@ 0x450

          if (strcmp(month, "Jan") == 0) { sDate.Month = RTC_MONTH_JANUARY; } else
 800209c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80020a0:	498d      	ldr	r1, [pc, #564]	@ (80022d8 <setRTCTimeDateFromNetwork+0x6a8>)
 80020a2:	4618      	mov	r0, r3
 80020a4:	f7fe f894 	bl	80001d0 <strcmp>
 80020a8:	4603      	mov	r3, r0
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d106      	bne.n	80020bc <setRTCTimeDateFromNetwork+0x48c>
 80020ae:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80020b2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80020b6:	2201      	movs	r2, #1
 80020b8:	705a      	strb	r2, [r3, #1]
 80020ba:	e0b3      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
            if (strcmp(month, "Feb") == 0) { sDate.Month = RTC_MONTH_FEBRUARY; } else
 80020bc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80020c0:	4986      	ldr	r1, [pc, #536]	@ (80022dc <setRTCTimeDateFromNetwork+0x6ac>)
 80020c2:	4618      	mov	r0, r3
 80020c4:	f7fe f884 	bl	80001d0 <strcmp>
 80020c8:	4603      	mov	r3, r0
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	d106      	bne.n	80020dc <setRTCTimeDateFromNetwork+0x4ac>
 80020ce:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80020d2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80020d6:	2202      	movs	r2, #2
 80020d8:	705a      	strb	r2, [r3, #1]
 80020da:	e0a3      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
              if (strcmp(month, "Mar") == 0) { sDate.Month = RTC_MONTH_MARCH; } else
 80020dc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80020e0:	497f      	ldr	r1, [pc, #508]	@ (80022e0 <setRTCTimeDateFromNetwork+0x6b0>)
 80020e2:	4618      	mov	r0, r3
 80020e4:	f7fe f874 	bl	80001d0 <strcmp>
 80020e8:	4603      	mov	r3, r0
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d106      	bne.n	80020fc <setRTCTimeDateFromNetwork+0x4cc>
 80020ee:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80020f2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80020f6:	2203      	movs	r2, #3
 80020f8:	705a      	strb	r2, [r3, #1]
 80020fa:	e093      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                if (strcmp(month, "Apr") == 0) { sDate.Month = RTC_MONTH_APRIL; } else
 80020fc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002100:	4978      	ldr	r1, [pc, #480]	@ (80022e4 <setRTCTimeDateFromNetwork+0x6b4>)
 8002102:	4618      	mov	r0, r3
 8002104:	f7fe f864 	bl	80001d0 <strcmp>
 8002108:	4603      	mov	r3, r0
 800210a:	2b00      	cmp	r3, #0
 800210c:	d106      	bne.n	800211c <setRTCTimeDateFromNetwork+0x4ec>
 800210e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002112:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002116:	2204      	movs	r2, #4
 8002118:	705a      	strb	r2, [r3, #1]
 800211a:	e083      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                  if (strcmp(month, "May") == 0) { sDate.Month = RTC_MONTH_MAY; } else
 800211c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002120:	4971      	ldr	r1, [pc, #452]	@ (80022e8 <setRTCTimeDateFromNetwork+0x6b8>)
 8002122:	4618      	mov	r0, r3
 8002124:	f7fe f854 	bl	80001d0 <strcmp>
 8002128:	4603      	mov	r3, r0
 800212a:	2b00      	cmp	r3, #0
 800212c:	d106      	bne.n	800213c <setRTCTimeDateFromNetwork+0x50c>
 800212e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002132:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002136:	2205      	movs	r2, #5
 8002138:	705a      	strb	r2, [r3, #1]
 800213a:	e073      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                    if (strcmp(month, "Jun") == 0) { sDate.Month = RTC_MONTH_JUNE; } else
 800213c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002140:	496a      	ldr	r1, [pc, #424]	@ (80022ec <setRTCTimeDateFromNetwork+0x6bc>)
 8002142:	4618      	mov	r0, r3
 8002144:	f7fe f844 	bl	80001d0 <strcmp>
 8002148:	4603      	mov	r3, r0
 800214a:	2b00      	cmp	r3, #0
 800214c:	d106      	bne.n	800215c <setRTCTimeDateFromNetwork+0x52c>
 800214e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002152:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002156:	2206      	movs	r2, #6
 8002158:	705a      	strb	r2, [r3, #1]
 800215a:	e063      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                      if (strcmp(month, "Jul") == 0) { sDate.Month = RTC_MONTH_JULY; } else
 800215c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002160:	4963      	ldr	r1, [pc, #396]	@ (80022f0 <setRTCTimeDateFromNetwork+0x6c0>)
 8002162:	4618      	mov	r0, r3
 8002164:	f7fe f834 	bl	80001d0 <strcmp>
 8002168:	4603      	mov	r3, r0
 800216a:	2b00      	cmp	r3, #0
 800216c:	d106      	bne.n	800217c <setRTCTimeDateFromNetwork+0x54c>
 800216e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002172:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002176:	2207      	movs	r2, #7
 8002178:	705a      	strb	r2, [r3, #1]
 800217a:	e053      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                        if (strcmp(month, "Aug") == 0) { sDate.Month = RTC_MONTH_AUGUST; } else
 800217c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002180:	495c      	ldr	r1, [pc, #368]	@ (80022f4 <setRTCTimeDateFromNetwork+0x6c4>)
 8002182:	4618      	mov	r0, r3
 8002184:	f7fe f824 	bl	80001d0 <strcmp>
 8002188:	4603      	mov	r3, r0
 800218a:	2b00      	cmp	r3, #0
 800218c:	d106      	bne.n	800219c <setRTCTimeDateFromNetwork+0x56c>
 800218e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002192:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002196:	2208      	movs	r2, #8
 8002198:	705a      	strb	r2, [r3, #1]
 800219a:	e043      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                          if (strcmp(month, "Sep") == 0) { sDate.Month = RTC_MONTH_SEPTEMBER; } else
 800219c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80021a0:	4955      	ldr	r1, [pc, #340]	@ (80022f8 <setRTCTimeDateFromNetwork+0x6c8>)
 80021a2:	4618      	mov	r0, r3
 80021a4:	f7fe f814 	bl	80001d0 <strcmp>
 80021a8:	4603      	mov	r3, r0
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d106      	bne.n	80021bc <setRTCTimeDateFromNetwork+0x58c>
 80021ae:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80021b2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80021b6:	2209      	movs	r2, #9
 80021b8:	705a      	strb	r2, [r3, #1]
 80021ba:	e033      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                            if (strcmp(month, "Oct") == 0) { sDate.Month = RTC_MONTH_OCTOBER; } else
 80021bc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80021c0:	494e      	ldr	r1, [pc, #312]	@ (80022fc <setRTCTimeDateFromNetwork+0x6cc>)
 80021c2:	4618      	mov	r0, r3
 80021c4:	f7fe f804 	bl	80001d0 <strcmp>
 80021c8:	4603      	mov	r3, r0
 80021ca:	2b00      	cmp	r3, #0
 80021cc:	d106      	bne.n	80021dc <setRTCTimeDateFromNetwork+0x5ac>
 80021ce:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80021d2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80021d6:	2210      	movs	r2, #16
 80021d8:	705a      	strb	r2, [r3, #1]
 80021da:	e023      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                              if (strcmp(month, "Nov") == 0) { sDate.Month = RTC_MONTH_NOVEMBER; } else
 80021dc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80021e0:	4947      	ldr	r1, [pc, #284]	@ (8002300 <setRTCTimeDateFromNetwork+0x6d0>)
 80021e2:	4618      	mov	r0, r3
 80021e4:	f7fd fff4 	bl	80001d0 <strcmp>
 80021e8:	4603      	mov	r3, r0
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d106      	bne.n	80021fc <setRTCTimeDateFromNetwork+0x5cc>
 80021ee:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 80021f2:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 80021f6:	2211      	movs	r2, #17
 80021f8:	705a      	strb	r2, [r3, #1]
 80021fa:	e013      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
                                if (strcmp(month, "Dec") == 0) { sDate.Month = RTC_MONTH_DECEMBER; } else ret = -1;
 80021fc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002200:	4940      	ldr	r1, [pc, #256]	@ (8002304 <setRTCTimeDateFromNetwork+0x6d4>)
 8002202:	4618      	mov	r0, r3
 8002204:	f7fd ffe4 	bl	80001d0 <strcmp>
 8002208:	4603      	mov	r3, r0
 800220a:	2b00      	cmp	r3, #0
 800220c:	d106      	bne.n	800221c <setRTCTimeDateFromNetwork+0x5ec>
 800220e:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002212:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002216:	2212      	movs	r2, #18
 8002218:	705a      	strb	r2, [r3, #1]
 800221a:	e003      	b.n	8002224 <setRTCTimeDateFromNetwork+0x5f4>
 800221c:	f04f 33ff 	mov.w	r3, #4294967295
 8002220:	f8c7 3450 	str.w	r3, [r7, #1104]	@ 0x450

          sDate.Date = day;
 8002224:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002228:	f2a3 4324 	subw	r3, r3, #1060	@ 0x424
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	b2da      	uxtb	r2, r3
 8002230:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 8002234:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002238:	709a      	strb	r2, [r3, #2]
          sDate.Year = year - 2000;
 800223a:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800223e:	f5a3 6385 	sub.w	r3, r3, #1064	@ 0x428
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	b2db      	uxtb	r3, r3
 8002246:	3330      	adds	r3, #48	@ 0x30
 8002248:	b2da      	uxtb	r2, r3
 800224a:	f507 638b 	add.w	r3, r7, #1112	@ 0x458
 800224e:	f2a3 434c 	subw	r3, r3, #1100	@ 0x44c
 8002252:	70da      	strb	r2, [r3, #3]
          if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BIN) != HAL_OK)
 8002254:	f107 030c 	add.w	r3, r7, #12
 8002258:	2200      	movs	r2, #0
 800225a:	4619      	mov	r1, r3
 800225c:	482a      	ldr	r0, [pc, #168]	@ (8002308 <setRTCTimeDateFromNetwork+0x6d8>)
 800225e:	f006 feed 	bl	800903c <HAL_RTC_SetDate>
 8002262:	4603      	mov	r3, r0
 8002264:	2b00      	cmp	r3, #0
 8002266:	d003      	beq.n	8002270 <setRTCTimeDateFromNetwork+0x640>
          {
            rc = TD_ERR_RTC;
 8002268:	f06f 0302 	mvn.w	r3, #2
 800226c:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
          }
        }
      }
    }
    
    ret = net_sock_close(socket);  
 8002270:	f8d7 3438 	ldr.w	r3, [r7, #1080]	@ 0x438
 8002274:	4618      	mov	r0, r3
 8002276:	f7ff f803 	bl	8001280 <net_sock_close>
 800227a:	f8c7 0450 	str.w	r0, [r7, #1104]	@ 0x450
  }
  
  if (socket != NULL)
 800227e:	f8d7 3438 	ldr.w	r3, [r7, #1080]	@ 0x438
 8002282:	2b00      	cmp	r3, #0
 8002284:	d00a      	beq.n	800229c <setRTCTimeDateFromNetwork+0x66c>
  {
    ret |= net_sock_destroy(socket);
 8002286:	f8d7 3438 	ldr.w	r3, [r7, #1080]	@ 0x438
 800228a:	4618      	mov	r0, r3
 800228c:	f7ff f80e 	bl	80012ac <net_sock_destroy>
 8002290:	4602      	mov	r2, r0
 8002292:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 8002296:	4313      	orrs	r3, r2
 8002298:	f8c7 3450 	str.w	r3, [r7, #1104]	@ 0x450
  }
  /* Translate a socket closure error in network error. */
  if ((rc == TD_OK) && (ret != NET_OK))
 800229c:	f8d7 3454 	ldr.w	r3, [r7, #1108]	@ 0x454
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	d107      	bne.n	80022b4 <setRTCTimeDateFromNetwork+0x684>
 80022a4:	f8d7 3450 	ldr.w	r3, [r7, #1104]	@ 0x450
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	d003      	beq.n	80022b4 <setRTCTimeDateFromNetwork+0x684>
  {
    rc = TD_ERR_CONNECT;
 80022ac:	f04f 33ff 	mov.w	r3, #4294967295
 80022b0:	f8c7 3454 	str.w	r3, [r7, #1108]	@ 0x454
  }
  
  return rc;
 80022b4:	f8d7 3454 	ldr.w	r3, [r7, #1108]	@ 0x454
}
 80022b8:	4618      	mov	r0, r3
 80022ba:	f507 678b 	add.w	r7, r7, #1112	@ 0x458
 80022be:	46bd      	mov	sp, r7
 80022c0:	bd80      	pop	{r7, pc}
 80022c2:	bf00      	nop
 80022c4:	08014728 	.word	0x08014728
 80022c8:	08014730 	.word	0x08014730
 80022cc:	08014738 	.word	0x08014738
 80022d0:	08014740 	.word	0x08014740
 80022d4:	08014748 	.word	0x08014748
 80022d8:	08014750 	.word	0x08014750
 80022dc:	08014754 	.word	0x08014754
 80022e0:	08014758 	.word	0x08014758
 80022e4:	0801475c 	.word	0x0801475c
 80022e8:	08014760 	.word	0x08014760
 80022ec:	08014764 	.word	0x08014764
 80022f0:	08014768 	.word	0x08014768
 80022f4:	0801476c 	.word	0x0801476c
 80022f8:	08014770 	.word	0x08014770
 80022fc:	08014774 	.word	0x08014774
 8002300:	08014778 	.word	0x08014778
 8002304:	0801477c 	.word	0x0801477c
 8002308:	200005ec 	.word	0x200005ec

0800230c <wifi_net_if_init>:
int net_if_reinit(void * if_ctxt);
int wifi_net_if_init(void * if_ctxt);

/* Functions Definition ------------------------------------------------------*/
int wifi_net_if_init(void * if_ctxt)
{
 800230c:	b5b0      	push	{r4, r5, r7, lr}
 800230e:	b092      	sub	sp, #72	@ 0x48
 8002310:	af04      	add	r7, sp, #16
 8002312:	6078      	str	r0, [r7, #4]
	//const char *ssid = "eir98388741-2.4G";
	//const char  *psk = "zyp3jmqd";
	WIFI_Ecn_t security_mode = 3;
 8002314:	2303      	movs	r3, #3
 8002316:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
	char moduleinfo[WIFI_PRODUCT_INFO_SIZE];
	WIFI_Status_t wifiRes;
	uint8_t macAddress[6];
	int wifiConnectCounter = 0;
 800231a:	2300      	movs	r3, #0
 800231c:	637b      	str	r3, [r7, #52]	@ 0x34
	bool skip_reconf = false;
 800231e:	2300      	movs	r3, #0
 8002320:	f887 3032 	strb.w	r3, [r7, #50]	@ 0x32

	printf("\r\n*** WIFI connection ***\r\n\n");
 8002324:	4849      	ldr	r0, [pc, #292]	@ (800244c <wifi_net_if_init+0x140>)
 8002326:	f00f f9b3 	bl	8011690 <puts>
	  updateWiFiCredentials();
	} while (checkWiFiCredentials(&ssid, &psk, (uint8_t *) &security_mode) != HAL_OK);
	}*/

	/*  Wifi Module initialization */
	printf("Initializing the WiFi module\r\n");
 800232a:	4849      	ldr	r0, [pc, #292]	@ (8002450 <wifi_net_if_init+0x144>)
 800232c:	f00f f9b0 	bl	8011690 <puts>

	wifiRes = WIFI_Init();
 8002330:	f00e f8e0 	bl	80104f4 <WIFI_Init>
 8002334:	4603      	mov	r3, r0
 8002336:	f887 3031 	strb.w	r3, [r7, #49]	@ 0x31
	if ( WIFI_STATUS_OK != wifiRes )
 800233a:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800233e:	2b00      	cmp	r3, #0
 8002340:	d005      	beq.n	800234e <wifi_net_if_init+0x42>
	{
	printf("\n\rFailed to initialize WIFI module\r\n");
 8002342:	4844      	ldr	r0, [pc, #272]	@ (8002454 <wifi_net_if_init+0x148>)
 8002344:	f00f f9a4 	bl	8011690 <puts>
	return -1;
 8002348:	f04f 33ff 	mov.w	r3, #4294967295
 800234c:	e079      	b.n	8002442 <wifi_net_if_init+0x136>
	}

	/* Retrieve the WiFi module mac address to confirm that it is detected and communicating. */
	WIFI_GetModuleName(moduleinfo);
 800234e:	f107 0310 	add.w	r3, r7, #16
 8002352:	4618      	mov	r0, r3
 8002354:	f00e fa74 	bl	8010840 <WIFI_GetModuleName>
	printf("Module initialized successfully: %s",moduleinfo);
 8002358:	f107 0310 	add.w	r3, r7, #16
 800235c:	4619      	mov	r1, r3
 800235e:	483e      	ldr	r0, [pc, #248]	@ (8002458 <wifi_net_if_init+0x14c>)
 8002360:	f00f f926 	bl	80115b0 <iprintf>

	WIFI_GetModuleID(moduleinfo);
 8002364:	f107 0310 	add.w	r3, r7, #16
 8002368:	4618      	mov	r0, r3
 800236a:	f00e fa55 	bl	8010818 <WIFI_GetModuleID>
	printf(" %s",moduleinfo);
 800236e:	f107 0310 	add.w	r3, r7, #16
 8002372:	4619      	mov	r1, r3
 8002374:	4839      	ldr	r0, [pc, #228]	@ (800245c <wifi_net_if_init+0x150>)
 8002376:	f00f f91b 	bl	80115b0 <iprintf>

	WIFI_GetModuleFwRevision(moduleinfo);
 800237a:	f107 0310 	add.w	r3, r7, #16
 800237e:	4618      	mov	r0, r3
 8002380:	f00e fa36 	bl	80107f0 <WIFI_GetModuleFwRevision>
	printf(" %s\r\n",moduleinfo);
 8002384:	f107 0310 	add.w	r3, r7, #16
 8002388:	4619      	mov	r1, r3
 800238a:	4835      	ldr	r0, [pc, #212]	@ (8002460 <wifi_net_if_init+0x154>)
 800238c:	f00f f910 	bl	80115b0 <iprintf>

	printf("Retrieving the WiFi module MAC address:");
 8002390:	4834      	ldr	r0, [pc, #208]	@ (8002464 <wifi_net_if_init+0x158>)
 8002392:	f00f f90d 	bl	80115b0 <iprintf>
	wifiRes = WIFI_GetMAC_Address( (uint8_t*)macAddress);
 8002396:	f107 0308 	add.w	r3, r7, #8
 800239a:	4618      	mov	r0, r3
 800239c:	f00e f8f8 	bl	8010590 <WIFI_GetMAC_Address>
 80023a0:	4603      	mov	r3, r0
 80023a2:	f887 3031 	strb.w	r3, [r7, #49]	@ 0x31
	if ( WIFI_STATUS_OK == wifiRes)
 80023a6:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d112      	bne.n	80023d4 <wifi_net_if_init+0xc8>
	{
	printf(" %02x:%02x:%02x:%02x:%02x:%02x\n\r",
		 macAddress[0], macAddress[1], macAddress[2],
 80023ae:	7a3b      	ldrb	r3, [r7, #8]
	printf(" %02x:%02x:%02x:%02x:%02x:%02x\n\r",
 80023b0:	4618      	mov	r0, r3
		 macAddress[0], macAddress[1], macAddress[2],
 80023b2:	7a7b      	ldrb	r3, [r7, #9]
	printf(" %02x:%02x:%02x:%02x:%02x:%02x\n\r",
 80023b4:	461c      	mov	r4, r3
		 macAddress[0], macAddress[1], macAddress[2],
 80023b6:	7abb      	ldrb	r3, [r7, #10]
	printf(" %02x:%02x:%02x:%02x:%02x:%02x\n\r",
 80023b8:	461d      	mov	r5, r3
		 macAddress[3], macAddress[4], macAddress[5]);
 80023ba:	7afb      	ldrb	r3, [r7, #11]
 80023bc:	7b3a      	ldrb	r2, [r7, #12]
 80023be:	7b79      	ldrb	r1, [r7, #13]
	printf(" %02x:%02x:%02x:%02x:%02x:%02x\n\r",
 80023c0:	9102      	str	r1, [sp, #8]
 80023c2:	9201      	str	r2, [sp, #4]
 80023c4:	9300      	str	r3, [sp, #0]
 80023c6:	462b      	mov	r3, r5
 80023c8:	4622      	mov	r2, r4
 80023ca:	4601      	mov	r1, r0
 80023cc:	4826      	ldr	r0, [pc, #152]	@ (8002468 <wifi_net_if_init+0x15c>)
 80023ce:	f00f f8ef 	bl	80115b0 <iprintf>
 80023d2:	e002      	b.n	80023da <wifi_net_if_init+0xce>
	}
	else
	{
	   printf("Failed to get MAC address\r\n");
 80023d4:	4825      	ldr	r0, [pc, #148]	@ (800246c <wifi_net_if_init+0x160>)
 80023d6:	f00f f95b 	bl	8011690 <puts>
	}
	/* Connect to the specified SSID. */

	printf("\n");
 80023da:	200a      	movs	r0, #10
 80023dc:	f00f f8fa 	bl	80115d4 <putchar>
	do
	{
	printf("\r\nConnecting to AP: %s  Attempt %d/%d ...",SSID, ++wifiConnectCounter,WIFI_CONNECT_MAX_ATTEMPT_COUNT);
 80023e0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80023e2:	3301      	adds	r3, #1
 80023e4:	637b      	str	r3, [r7, #52]	@ 0x34
 80023e6:	2303      	movs	r3, #3
 80023e8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80023ea:	4921      	ldr	r1, [pc, #132]	@ (8002470 <wifi_net_if_init+0x164>)
 80023ec:	4821      	ldr	r0, [pc, #132]	@ (8002474 <wifi_net_if_init+0x168>)
 80023ee:	f00f f8df 	bl	80115b0 <iprintf>
	wifiRes = WIFI_Connect(SSID, PASSWORD, security_mode);
 80023f2:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 80023f6:	461a      	mov	r2, r3
 80023f8:	491f      	ldr	r1, [pc, #124]	@ (8002478 <wifi_net_if_init+0x16c>)
 80023fa:	481d      	ldr	r0, [pc, #116]	@ (8002470 <wifi_net_if_init+0x164>)
 80023fc:	f00e f8a6 	bl	801054c <WIFI_Connect>
 8002400:	4603      	mov	r3, r0
 8002402:	f887 3031 	strb.w	r3, [r7, #49]	@ 0x31
	if (wifiRes == WIFI_STATUS_OK) break;
 8002406:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800240a:	2b00      	cmp	r3, #0
 800240c:	d003      	beq.n	8002416 <wifi_net_if_init+0x10a>
	}
	while (wifiConnectCounter < WIFI_CONNECT_MAX_ATTEMPT_COUNT);
 800240e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002410:	2b02      	cmp	r3, #2
 8002412:	dde5      	ble.n	80023e0 <wifi_net_if_init+0xd4>
 8002414:	e000      	b.n	8002418 <wifi_net_if_init+0x10c>
	if (wifiRes == WIFI_STATUS_OK) break;
 8002416:	bf00      	nop

	if (wifiRes == WIFI_STATUS_OK)
 8002418:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800241c:	2b00      	cmp	r3, #0
 800241e:	d104      	bne.n	800242a <wifi_net_if_init+0x11e>
	{
	printf("\r\nConnected to AP %s\r\n",SSID);
 8002420:	4913      	ldr	r1, [pc, #76]	@ (8002470 <wifi_net_if_init+0x164>)
 8002422:	4816      	ldr	r0, [pc, #88]	@ (800247c <wifi_net_if_init+0x170>)
 8002424:	f00f f8c4 	bl	80115b0 <iprintf>
 8002428:	e003      	b.n	8002432 <wifi_net_if_init+0x126>
	}
	else
	{
	printf("\r\nFailed to connect to AP %s\r\n",SSID);
 800242a:	4911      	ldr	r1, [pc, #68]	@ (8002470 <wifi_net_if_init+0x164>)
 800242c:	4814      	ldr	r0, [pc, #80]	@ (8002480 <wifi_net_if_init+0x174>)
 800242e:	f00f f8bf 	bl	80115b0 <iprintf>
	}

	return (wifiRes == WIFI_STATUS_OK)?0:-1;
 8002432:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 8002436:	2b00      	cmp	r3, #0
 8002438:	d101      	bne.n	800243e <wifi_net_if_init+0x132>
 800243a:	2300      	movs	r3, #0
 800243c:	e001      	b.n	8002442 <wifi_net_if_init+0x136>
 800243e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002442:	4618      	mov	r0, r3
 8002444:	3738      	adds	r7, #56	@ 0x38
 8002446:	46bd      	mov	sp, r7
 8002448:	bdb0      	pop	{r4, r5, r7, pc}
 800244a:	bf00      	nop
 800244c:	08014780 	.word	0x08014780
 8002450:	0801479c 	.word	0x0801479c
 8002454:	080147bc 	.word	0x080147bc
 8002458:	080147e0 	.word	0x080147e0
 800245c:	08014804 	.word	0x08014804
 8002460:	08014808 	.word	0x08014808
 8002464:	08014810 	.word	0x08014810
 8002468:	08014838 	.word	0x08014838
 800246c:	0801485c 	.word	0x0801485c
 8002470:	08014878 	.word	0x08014878
 8002474:	08014880 	.word	0x08014880
 8002478:	080148ac 	.word	0x080148ac
 800247c:	080148b8 	.word	0x080148b8
 8002480:	080148d0 	.word	0x080148d0

08002484 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8002484:	b480      	push	{r7}
 8002486:	b085      	sub	sp, #20
 8002488:	af00      	add	r7, sp, #0
 800248a:	60f8      	str	r0, [r7, #12]
 800248c:	60b9      	str	r1, [r7, #8]
 800248e:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 8002490:	68fb      	ldr	r3, [r7, #12]
 8002492:	4a07      	ldr	r2, [pc, #28]	@ (80024b0 <vApplicationGetIdleTaskMemory+0x2c>)
 8002494:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8002496:	68bb      	ldr	r3, [r7, #8]
 8002498:	4a06      	ldr	r2, [pc, #24]	@ (80024b4 <vApplicationGetIdleTaskMemory+0x30>)
 800249a:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	2280      	movs	r2, #128	@ 0x80
 80024a0:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 80024a2:	bf00      	nop
 80024a4:	3714      	adds	r7, #20
 80024a6:	46bd      	mov	sp, r7
 80024a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ac:	4770      	bx	lr
 80024ae:	bf00      	nop
 80024b0:	2000025c 	.word	0x2000025c
 80024b4:	2000030c 	.word	0x2000030c

080024b8 <_write>:
void SPI_WIFI_ISR(void);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int _write(int file, char *ptr, int len) {
 80024b8:	b580      	push	{r7, lr}
 80024ba:	b084      	sub	sp, #16
 80024bc:	af00      	add	r7, sp, #0
 80024be:	60f8      	str	r0, [r7, #12]
 80024c0:	60b9      	str	r1, [r7, #8]
 80024c2:	607a      	str	r2, [r7, #4]
	HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	b29a      	uxth	r2, r3
 80024c8:	f04f 33ff 	mov.w	r3, #4294967295
 80024cc:	68b9      	ldr	r1, [r7, #8]
 80024ce:	4804      	ldr	r0, [pc, #16]	@ (80024e0 <_write+0x28>)
 80024d0:	f008 feca 	bl	800b268 <HAL_UART_Transmit>
	return len;
 80024d4:	687b      	ldr	r3, [r7, #4]
}
 80024d6:	4618      	mov	r0, r3
 80024d8:	3710      	adds	r7, #16
 80024da:	46bd      	mov	sp, r7
 80024dc:	bd80      	pop	{r7, pc}
 80024de:	bf00      	nop
 80024e0:	200006c0 	.word	0x200006c0

080024e4 <configureTimerForRunTimeStats>:

void configureTimerForRunTimeStats(void)
{
 80024e4:	b580      	push	{r7, lr}
 80024e6:	af00      	add	r7, sp, #0
    ulHighFrequencyTimerTicks = 0;
 80024e8:	4b03      	ldr	r3, [pc, #12]	@ (80024f8 <configureTimerForRunTimeStats+0x14>)
 80024ea:	2200      	movs	r2, #0
 80024ec:	601a      	str	r2, [r3, #0]
    HAL_TIM_Base_Start_IT(&htim7);
 80024ee:	4803      	ldr	r0, [pc, #12]	@ (80024fc <configureTimerForRunTimeStats+0x18>)
 80024f0:	f008 fb80 	bl	800abf4 <HAL_TIM_Base_Start_IT>
}
 80024f4:	bf00      	nop
 80024f6:	bd80      	pop	{r7, pc}
 80024f8:	20000cb4 	.word	0x20000cb4
 80024fc:	20000674 	.word	0x20000674

08002500 <getRunTimeCounterValue>:

unsigned long getRunTimeCounterValue(void)
{
 8002500:	b480      	push	{r7}
 8002502:	af00      	add	r7, sp, #0
	return ulHighFrequencyTimerTicks;
 8002504:	4b03      	ldr	r3, [pc, #12]	@ (8002514 <getRunTimeCounterValue+0x14>)
 8002506:	681b      	ldr	r3, [r3, #0]
}
 8002508:	4618      	mov	r0, r3
 800250a:	46bd      	mov	sp, r7
 800250c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002510:	4770      	bx	lr
 8002512:	bf00      	nop
 8002514:	20000cb4 	.word	0x20000cb4

08002518 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002518:	b580      	push	{r7, lr}
 800251a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800251c:	f003 fa82 	bl	8005a24 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002520:	f000 f822 	bl	8002568 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8002524:	f000 f884 	bl	8002630 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002528:	f000 fa8a 	bl	8002a40 <MX_GPIO_Init>
  MX_DFSDM1_Init();
 800252c:	f000 f8ae 	bl	800268c <MX_DFSDM1_Init>
  MX_I2C2_Init();
 8002530:	f000 f8e4 	bl	80026fc <MX_I2C2_Init>
  MX_QUADSPI_Init();
 8002534:	f000 f920 	bl	8002778 <MX_QUADSPI_Init>
  MX_SPI3_Init();
 8002538:	f000 f980 	bl	800283c <MX_SPI3_Init>
  MX_USART1_UART_Init();
 800253c:	f000 f9f2 	bl	8002924 <MX_USART1_UART_Init>
  MX_USART3_UART_Init();
 8002540:	f000 fa20 	bl	8002984 <MX_USART3_UART_Init>
  MX_USB_OTG_FS_PCD_Init();
 8002544:	f000 fa4e 	bl	80029e4 <MX_USB_OTG_FS_PCD_Init>
  MX_TIM7_Init();
 8002548:	f000 f9b6 	bl	80028b8 <MX_TIM7_Init>
  MX_RNG_Init();
 800254c:	f000 f93a 	bl	80027c4 <MX_RNG_Init>
  MX_RTC_Init();
 8002550:	f000 f94c 	bl	80027ec <MX_RTC_Init>
  /* USER CODE BEGIN 2 */
  printf("IoT Project\r\n\n");
 8002554:	4803      	ldr	r0, [pc, #12]	@ (8002564 <main+0x4c>)
 8002556:	f00f f89b 	bl	8011690 <puts>
  userApp();
 800255a:	f001 fb9b 	bl	8003c94 <userApp>
  /* USER CODE END 2 */


  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800255e:	bf00      	nop
 8002560:	e7fd      	b.n	800255e <main+0x46>
 8002562:	bf00      	nop
 8002564:	08014abc 	.word	0x08014abc

08002568 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002568:	b580      	push	{r7, lr}
 800256a:	b096      	sub	sp, #88	@ 0x58
 800256c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800256e:	f107 0314 	add.w	r3, r7, #20
 8002572:	2244      	movs	r2, #68	@ 0x44
 8002574:	2100      	movs	r1, #0
 8002576:	4618      	mov	r0, r3
 8002578:	f00f fa14 	bl	80119a4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800257c:	463b      	mov	r3, r7
 800257e:	2200      	movs	r2, #0
 8002580:	601a      	str	r2, [r3, #0]
 8002582:	605a      	str	r2, [r3, #4]
 8002584:	609a      	str	r2, [r3, #8]
 8002586:	60da      	str	r2, [r3, #12]
 8002588:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 800258a:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800258e:	f004 ff5d 	bl	800744c <HAL_PWREx_ControlVoltageScaling>
 8002592:	4603      	mov	r3, r0
 8002594:	2b00      	cmp	r3, #0
 8002596:	d001      	beq.n	800259c <SystemClock_Config+0x34>
  {
    Error_Handler();
 8002598:	f000 fc8a 	bl	8002eb0 <Error_Handler>
  }

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 800259c:	f004 ff38 	bl	8007410 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 80025a0:	4b22      	ldr	r3, [pc, #136]	@ (800262c <SystemClock_Config+0xc4>)
 80025a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80025a6:	4a21      	ldr	r2, [pc, #132]	@ (800262c <SystemClock_Config+0xc4>)
 80025a8:	f023 0318 	bic.w	r3, r3, #24
 80025ac:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_LSE
 80025b0:	231c      	movs	r3, #28
 80025b2:	617b      	str	r3, [r7, #20]
                              |RCC_OSCILLATORTYPE_MSI;
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 80025b4:	2301      	movs	r3, #1
 80025b6:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80025b8:	2301      	movs	r3, #1
 80025ba:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80025bc:	2301      	movs	r3, #1
 80025be:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80025c0:	2300      	movs	r3, #0
 80025c2:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80025c4:	2360      	movs	r3, #96	@ 0x60
 80025c6:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025c8:	2302      	movs	r3, #2
 80025ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 80025cc:	2301      	movs	r3, #1
 80025ce:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80025d0:	2301      	movs	r3, #1
 80025d2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 40;
 80025d4:	2328      	movs	r3, #40	@ 0x28
 80025d6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80025d8:	2307      	movs	r3, #7
 80025da:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80025dc:	2302      	movs	r3, #2
 80025de:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80025e0:	2302      	movs	r3, #2
 80025e2:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80025e4:	f107 0314 	add.w	r3, r7, #20
 80025e8:	4618      	mov	r0, r3
 80025ea:	f005 f851 	bl	8007690 <HAL_RCC_OscConfig>
 80025ee:	4603      	mov	r3, r0
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d001      	beq.n	80025f8 <SystemClock_Config+0x90>
  {
    Error_Handler();
 80025f4:	f000 fc5c 	bl	8002eb0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80025f8:	230f      	movs	r3, #15
 80025fa:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80025fc:	2303      	movs	r3, #3
 80025fe:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002600:	2300      	movs	r3, #0
 8002602:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002604:	2300      	movs	r3, #0
 8002606:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002608:	2300      	movs	r3, #0
 800260a:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800260c:	463b      	mov	r3, r7
 800260e:	2104      	movs	r1, #4
 8002610:	4618      	mov	r0, r3
 8002612:	f005 fc19 	bl	8007e48 <HAL_RCC_ClockConfig>
 8002616:	4603      	mov	r3, r0
 8002618:	2b00      	cmp	r3, #0
 800261a:	d001      	beq.n	8002620 <SystemClock_Config+0xb8>
  {
    Error_Handler();
 800261c:	f000 fc48 	bl	8002eb0 <Error_Handler>
  }

  /** Enable MSI Auto calibration
  */
  HAL_RCCEx_EnableMSIPLLMode();
 8002620:	f006 f952 	bl	80088c8 <HAL_RCCEx_EnableMSIPLLMode>
}
 8002624:	bf00      	nop
 8002626:	3758      	adds	r7, #88	@ 0x58
 8002628:	46bd      	mov	sp, r7
 800262a:	bd80      	pop	{r7, pc}
 800262c:	40021000 	.word	0x40021000

08002630 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8002630:	b580      	push	{r7, lr}
 8002632:	b0a2      	sub	sp, #136	@ 0x88
 8002634:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002636:	463b      	mov	r3, r7
 8002638:	2288      	movs	r2, #136	@ 0x88
 800263a:	2100      	movs	r1, #0
 800263c:	4618      	mov	r0, r3
 800263e:	f00f f9b1 	bl	80119a4 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RNG;
 8002642:	f44f 2384 	mov.w	r3, #270336	@ 0x42000
 8002646:	603b      	str	r3, [r7, #0]
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 8002648:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
 800264c:	66fb      	str	r3, [r7, #108]	@ 0x6c
  PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLLSAI1;
 800264e:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
 8002652:	677b      	str	r3, [r7, #116]	@ 0x74
  PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 8002654:	2301      	movs	r3, #1
 8002656:	607b      	str	r3, [r7, #4]
  PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 8002658:	2301      	movs	r3, #1
 800265a:	60bb      	str	r3, [r7, #8]
  PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 800265c:	2318      	movs	r3, #24
 800265e:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 8002660:	2307      	movs	r3, #7
 8002662:	613b      	str	r3, [r7, #16]
  PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 8002664:	2302      	movs	r3, #2
 8002666:	617b      	str	r3, [r7, #20]
  PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 8002668:	2302      	movs	r3, #2
 800266a:	61bb      	str	r3, [r7, #24]
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 800266c:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8002670:	61fb      	str	r3, [r7, #28]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002672:	463b      	mov	r3, r7
 8002674:	4618      	mov	r0, r3
 8002676:	f005 fe3d 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 800267a:	4603      	mov	r3, r0
 800267c:	2b00      	cmp	r3, #0
 800267e:	d001      	beq.n	8002684 <PeriphCommonClock_Config+0x54>
  {
    Error_Handler();
 8002680:	f000 fc16 	bl	8002eb0 <Error_Handler>
  }
}
 8002684:	bf00      	nop
 8002686:	3788      	adds	r7, #136	@ 0x88
 8002688:	46bd      	mov	sp, r7
 800268a:	bd80      	pop	{r7, pc}

0800268c <MX_DFSDM1_Init>:
  * @brief DFSDM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DFSDM1_Init(void)
{
 800268c:	b580      	push	{r7, lr}
 800268e:	af00      	add	r7, sp, #0
  /* USER CODE END DFSDM1_Init 0 */

  /* USER CODE BEGIN DFSDM1_Init 1 */

  /* USER CODE END DFSDM1_Init 1 */
  hdfsdm1_channel1.Instance = DFSDM1_Channel1;
 8002690:	4b18      	ldr	r3, [pc, #96]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 8002692:	4a19      	ldr	r2, [pc, #100]	@ (80026f8 <MX_DFSDM1_Init+0x6c>)
 8002694:	601a      	str	r2, [r3, #0]
  hdfsdm1_channel1.Init.OutputClock.Activation = ENABLE;
 8002696:	4b17      	ldr	r3, [pc, #92]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 8002698:	2201      	movs	r2, #1
 800269a:	711a      	strb	r2, [r3, #4]
  hdfsdm1_channel1.Init.OutputClock.Selection = DFSDM_CHANNEL_OUTPUT_CLOCK_SYSTEM;
 800269c:	4b15      	ldr	r3, [pc, #84]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 800269e:	2200      	movs	r2, #0
 80026a0:	609a      	str	r2, [r3, #8]
  hdfsdm1_channel1.Init.OutputClock.Divider = 2;
 80026a2:	4b14      	ldr	r3, [pc, #80]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026a4:	2202      	movs	r2, #2
 80026a6:	60da      	str	r2, [r3, #12]
  hdfsdm1_channel1.Init.Input.Multiplexer = DFSDM_CHANNEL_EXTERNAL_INPUTS;
 80026a8:	4b12      	ldr	r3, [pc, #72]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026aa:	2200      	movs	r2, #0
 80026ac:	611a      	str	r2, [r3, #16]
  hdfsdm1_channel1.Init.Input.DataPacking = DFSDM_CHANNEL_STANDARD_MODE;
 80026ae:	4b11      	ldr	r3, [pc, #68]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026b0:	2200      	movs	r2, #0
 80026b2:	615a      	str	r2, [r3, #20]
  hdfsdm1_channel1.Init.Input.Pins = DFSDM_CHANNEL_FOLLOWING_CHANNEL_PINS;
 80026b4:	4b0f      	ldr	r3, [pc, #60]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026b6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80026ba:	619a      	str	r2, [r3, #24]
  hdfsdm1_channel1.Init.SerialInterface.Type = DFSDM_CHANNEL_SPI_RISING;
 80026bc:	4b0d      	ldr	r3, [pc, #52]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026be:	2200      	movs	r2, #0
 80026c0:	61da      	str	r2, [r3, #28]
  hdfsdm1_channel1.Init.SerialInterface.SpiClock = DFSDM_CHANNEL_SPI_CLOCK_INTERNAL;
 80026c2:	4b0c      	ldr	r3, [pc, #48]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026c4:	2204      	movs	r2, #4
 80026c6:	621a      	str	r2, [r3, #32]
  hdfsdm1_channel1.Init.Awd.FilterOrder = DFSDM_CHANNEL_FASTSINC_ORDER;
 80026c8:	4b0a      	ldr	r3, [pc, #40]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026ca:	2200      	movs	r2, #0
 80026cc:	625a      	str	r2, [r3, #36]	@ 0x24
  hdfsdm1_channel1.Init.Awd.Oversampling = 1;
 80026ce:	4b09      	ldr	r3, [pc, #36]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026d0:	2201      	movs	r2, #1
 80026d2:	629a      	str	r2, [r3, #40]	@ 0x28
  hdfsdm1_channel1.Init.Offset = 0;
 80026d4:	4b07      	ldr	r3, [pc, #28]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026d6:	2200      	movs	r2, #0
 80026d8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hdfsdm1_channel1.Init.RightBitShift = 0x00;
 80026da:	4b06      	ldr	r3, [pc, #24]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026dc:	2200      	movs	r2, #0
 80026de:	631a      	str	r2, [r3, #48]	@ 0x30
  if (HAL_DFSDM_ChannelInit(&hdfsdm1_channel1) != HAL_OK)
 80026e0:	4804      	ldr	r0, [pc, #16]	@ (80026f4 <MX_DFSDM1_Init+0x68>)
 80026e2:	f003 fadd 	bl	8005ca0 <HAL_DFSDM_ChannelInit>
 80026e6:	4603      	mov	r3, r0
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	d001      	beq.n	80026f0 <MX_DFSDM1_Init+0x64>
  {
    Error_Handler();
 80026ec:	f000 fbe0 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN DFSDM1_Init 2 */

  /* USER CODE END DFSDM1_Init 2 */

}
 80026f0:	bf00      	nop
 80026f2:	bd80      	pop	{r7, pc}
 80026f4:	2000050c 	.word	0x2000050c
 80026f8:	40016020 	.word	0x40016020

080026fc <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80026fc:	b580      	push	{r7, lr}
 80026fe:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8002700:	4b1b      	ldr	r3, [pc, #108]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002702:	4a1c      	ldr	r2, [pc, #112]	@ (8002774 <MX_I2C2_Init+0x78>)
 8002704:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x00000E14;
 8002706:	4b1a      	ldr	r3, [pc, #104]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002708:	f640 6214 	movw	r2, #3604	@ 0xe14
 800270c:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 800270e:	4b18      	ldr	r3, [pc, #96]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002710:	2200      	movs	r2, #0
 8002712:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002714:	4b16      	ldr	r3, [pc, #88]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002716:	2201      	movs	r2, #1
 8002718:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800271a:	4b15      	ldr	r3, [pc, #84]	@ (8002770 <MX_I2C2_Init+0x74>)
 800271c:	2200      	movs	r2, #0
 800271e:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8002720:	4b13      	ldr	r3, [pc, #76]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002722:	2200      	movs	r2, #0
 8002724:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002726:	4b12      	ldr	r3, [pc, #72]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002728:	2200      	movs	r2, #0
 800272a:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800272c:	4b10      	ldr	r3, [pc, #64]	@ (8002770 <MX_I2C2_Init+0x74>)
 800272e:	2200      	movs	r2, #0
 8002730:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002732:	4b0f      	ldr	r3, [pc, #60]	@ (8002770 <MX_I2C2_Init+0x74>)
 8002734:	2200      	movs	r2, #0
 8002736:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8002738:	480d      	ldr	r0, [pc, #52]	@ (8002770 <MX_I2C2_Init+0x74>)
 800273a:	f003 fee5 	bl	8006508 <HAL_I2C_Init>
 800273e:	4603      	mov	r3, r0
 8002740:	2b00      	cmp	r3, #0
 8002742:	d001      	beq.n	8002748 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8002744:	f000 fbb4 	bl	8002eb0 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002748:	2100      	movs	r1, #0
 800274a:	4809      	ldr	r0, [pc, #36]	@ (8002770 <MX_I2C2_Init+0x74>)
 800274c:	f004 fc96 	bl	800707c <HAL_I2CEx_ConfigAnalogFilter>
 8002750:	4603      	mov	r3, r0
 8002752:	2b00      	cmp	r3, #0
 8002754:	d001      	beq.n	800275a <MX_I2C2_Init+0x5e>
  {
    Error_Handler();
 8002756:	f000 fbab 	bl	8002eb0 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800275a:	2100      	movs	r1, #0
 800275c:	4804      	ldr	r0, [pc, #16]	@ (8002770 <MX_I2C2_Init+0x74>)
 800275e:	f004 fcd8 	bl	8007112 <HAL_I2CEx_ConfigDigitalFilter>
 8002762:	4603      	mov	r3, r0
 8002764:	2b00      	cmp	r3, #0
 8002766:	d001      	beq.n	800276c <MX_I2C2_Init+0x70>
  {
    Error_Handler();
 8002768:	f000 fba2 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800276c:	bf00      	nop
 800276e:	bd80      	pop	{r7, pc}
 8002770:	20000544 	.word	0x20000544
 8002774:	40005800 	.word	0x40005800

08002778 <MX_QUADSPI_Init>:
  * @brief QUADSPI Initialization Function
  * @param None
  * @retval None
  */
static void MX_QUADSPI_Init(void)
{
 8002778:	b580      	push	{r7, lr}
 800277a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  /* QUADSPI parameter configuration*/
  hqspi.Instance = QUADSPI;
 800277c:	4b0f      	ldr	r3, [pc, #60]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 800277e:	4a10      	ldr	r2, [pc, #64]	@ (80027c0 <MX_QUADSPI_Init+0x48>)
 8002780:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 2;
 8002782:	4b0e      	ldr	r3, [pc, #56]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 8002784:	2202      	movs	r2, #2
 8002786:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 4;
 8002788:	4b0c      	ldr	r3, [pc, #48]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 800278a:	2204      	movs	r2, #4
 800278c:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800278e:	4b0b      	ldr	r3, [pc, #44]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 8002790:	2210      	movs	r2, #16
 8002792:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 23;
 8002794:	4b09      	ldr	r3, [pc, #36]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 8002796:	2217      	movs	r2, #23
 8002798:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 800279a:	4b08      	ldr	r3, [pc, #32]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 800279c:	2200      	movs	r2, #0
 800279e:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80027a0:	4b06      	ldr	r3, [pc, #24]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	619a      	str	r2, [r3, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80027a6:	4805      	ldr	r0, [pc, #20]	@ (80027bc <MX_QUADSPI_Init+0x44>)
 80027a8:	f004 feb6 	bl	8007518 <HAL_QSPI_Init>
 80027ac:	4603      	mov	r3, r0
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d001      	beq.n	80027b6 <MX_QUADSPI_Init+0x3e>
  {
    Error_Handler();
 80027b2:	f000 fb7d 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 80027b6:	bf00      	nop
 80027b8:	bd80      	pop	{r7, pc}
 80027ba:	bf00      	nop
 80027bc:	20000598 	.word	0x20000598
 80027c0:	a0001000 	.word	0xa0001000

080027c4 <MX_RNG_Init>:
  * @brief RNG Initialization Function
  * @param None
  * @retval None
  */
static void MX_RNG_Init(void)
{
 80027c4:	b580      	push	{r7, lr}
 80027c6:	af00      	add	r7, sp, #0
  /* USER CODE END RNG_Init 0 */

  /* USER CODE BEGIN RNG_Init 1 */

  /* USER CODE END RNG_Init 1 */
  hrng.Instance = RNG;
 80027c8:	4b06      	ldr	r3, [pc, #24]	@ (80027e4 <MX_RNG_Init+0x20>)
 80027ca:	4a07      	ldr	r2, [pc, #28]	@ (80027e8 <MX_RNG_Init+0x24>)
 80027cc:	601a      	str	r2, [r3, #0]
  if (HAL_RNG_Init(&hrng) != HAL_OK)
 80027ce:	4805      	ldr	r0, [pc, #20]	@ (80027e4 <MX_RNG_Init+0x20>)
 80027d0:	f006 fa5c 	bl	8008c8c <HAL_RNG_Init>
 80027d4:	4603      	mov	r3, r0
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	d001      	beq.n	80027de <MX_RNG_Init+0x1a>
  {
    Error_Handler();
 80027da:	f000 fb69 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN RNG_Init 2 */

  /* USER CODE END RNG_Init 2 */

}
 80027de:	bf00      	nop
 80027e0:	bd80      	pop	{r7, pc}
 80027e2:	bf00      	nop
 80027e4:	200005dc 	.word	0x200005dc
 80027e8:	50060800 	.word	0x50060800

080027ec <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 80027ec:	b580      	push	{r7, lr}
 80027ee:	af00      	add	r7, sp, #0

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 80027f0:	4b10      	ldr	r3, [pc, #64]	@ (8002834 <MX_RTC_Init+0x48>)
 80027f2:	4a11      	ldr	r2, [pc, #68]	@ (8002838 <MX_RTC_Init+0x4c>)
 80027f4:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 80027f6:	4b0f      	ldr	r3, [pc, #60]	@ (8002834 <MX_RTC_Init+0x48>)
 80027f8:	2200      	movs	r2, #0
 80027fa:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 80027fc:	4b0d      	ldr	r3, [pc, #52]	@ (8002834 <MX_RTC_Init+0x48>)
 80027fe:	227f      	movs	r2, #127	@ 0x7f
 8002800:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8002802:	4b0c      	ldr	r3, [pc, #48]	@ (8002834 <MX_RTC_Init+0x48>)
 8002804:	22ff      	movs	r2, #255	@ 0xff
 8002806:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8002808:	4b0a      	ldr	r3, [pc, #40]	@ (8002834 <MX_RTC_Init+0x48>)
 800280a:	2200      	movs	r2, #0
 800280c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 800280e:	4b09      	ldr	r3, [pc, #36]	@ (8002834 <MX_RTC_Init+0x48>)
 8002810:	2200      	movs	r2, #0
 8002812:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8002814:	4b07      	ldr	r3, [pc, #28]	@ (8002834 <MX_RTC_Init+0x48>)
 8002816:	2200      	movs	r2, #0
 8002818:	619a      	str	r2, [r3, #24]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 800281a:	4b06      	ldr	r3, [pc, #24]	@ (8002834 <MX_RTC_Init+0x48>)
 800281c:	2200      	movs	r2, #0
 800281e:	61da      	str	r2, [r3, #28]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8002820:	4804      	ldr	r0, [pc, #16]	@ (8002834 <MX_RTC_Init+0x48>)
 8002822:	f006 fa8a 	bl	8008d3a <HAL_RTC_Init>
 8002826:	4603      	mov	r3, r0
 8002828:	2b00      	cmp	r3, #0
 800282a:	d001      	beq.n	8002830 <MX_RTC_Init+0x44>
  {
    Error_Handler();
 800282c:	f000 fb40 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8002830:	bf00      	nop
 8002832:	bd80      	pop	{r7, pc}
 8002834:	200005ec 	.word	0x200005ec
 8002838:	40002800 	.word	0x40002800

0800283c <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 800283c:	b580      	push	{r7, lr}
 800283e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8002840:	4b1b      	ldr	r3, [pc, #108]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002842:	4a1c      	ldr	r2, [pc, #112]	@ (80028b4 <MX_SPI3_Init+0x78>)
 8002844:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8002846:	4b1a      	ldr	r3, [pc, #104]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002848:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800284c:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 800284e:	4b18      	ldr	r3, [pc, #96]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002850:	2200      	movs	r2, #0
 8002852:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_4BIT;
 8002854:	4b16      	ldr	r3, [pc, #88]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002856:	f44f 7240 	mov.w	r2, #768	@ 0x300
 800285a:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 800285c:	4b14      	ldr	r3, [pc, #80]	@ (80028b0 <MX_SPI3_Init+0x74>)
 800285e:	2200      	movs	r2, #0
 8002860:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002862:	4b13      	ldr	r3, [pc, #76]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002864:	2200      	movs	r2, #0
 8002866:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8002868:	4b11      	ldr	r3, [pc, #68]	@ (80028b0 <MX_SPI3_Init+0x74>)
 800286a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800286e:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002870:	4b0f      	ldr	r3, [pc, #60]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002872:	2200      	movs	r2, #0
 8002874:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002876:	4b0e      	ldr	r3, [pc, #56]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002878:	2200      	movs	r2, #0
 800287a:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 800287c:	4b0c      	ldr	r3, [pc, #48]	@ (80028b0 <MX_SPI3_Init+0x74>)
 800287e:	2200      	movs	r2, #0
 8002880:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002882:	4b0b      	ldr	r3, [pc, #44]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002884:	2200      	movs	r2, #0
 8002886:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 7;
 8002888:	4b09      	ldr	r3, [pc, #36]	@ (80028b0 <MX_SPI3_Init+0x74>)
 800288a:	2207      	movs	r2, #7
 800288c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800288e:	4b08      	ldr	r3, [pc, #32]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002890:	2200      	movs	r2, #0
 8002892:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8002894:	4b06      	ldr	r3, [pc, #24]	@ (80028b0 <MX_SPI3_Init+0x74>)
 8002896:	2208      	movs	r2, #8
 8002898:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 800289a:	4805      	ldr	r0, [pc, #20]	@ (80028b0 <MX_SPI3_Init+0x74>)
 800289c:	f006 fe2c 	bl	80094f8 <HAL_SPI_Init>
 80028a0:	4603      	mov	r3, r0
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d001      	beq.n	80028aa <MX_SPI3_Init+0x6e>
  {
    Error_Handler();
 80028a6:	f000 fb03 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 80028aa:	bf00      	nop
 80028ac:	bd80      	pop	{r7, pc}
 80028ae:	bf00      	nop
 80028b0:	20000610 	.word	0x20000610
 80028b4:	40003c00 	.word	0x40003c00

080028b8 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b084      	sub	sp, #16
 80028bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028be:	1d3b      	adds	r3, r7, #4
 80028c0:	2200      	movs	r2, #0
 80028c2:	601a      	str	r2, [r3, #0]
 80028c4:	605a      	str	r2, [r3, #4]
 80028c6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80028c8:	4b14      	ldr	r3, [pc, #80]	@ (800291c <MX_TIM7_Init+0x64>)
 80028ca:	4a15      	ldr	r2, [pc, #84]	@ (8002920 <MX_TIM7_Init+0x68>)
 80028cc:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 80028ce:	4b13      	ldr	r3, [pc, #76]	@ (800291c <MX_TIM7_Init+0x64>)
 80028d0:	2200      	movs	r2, #0
 80028d2:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d4:	4b11      	ldr	r3, [pc, #68]	@ (800291c <MX_TIM7_Init+0x64>)
 80028d6:	2200      	movs	r2, #0
 80028d8:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 7999;
 80028da:	4b10      	ldr	r3, [pc, #64]	@ (800291c <MX_TIM7_Init+0x64>)
 80028dc:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 80028e0:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80028e2:	4b0e      	ldr	r3, [pc, #56]	@ (800291c <MX_TIM7_Init+0x64>)
 80028e4:	2200      	movs	r2, #0
 80028e6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80028e8:	480c      	ldr	r0, [pc, #48]	@ (800291c <MX_TIM7_Init+0x64>)
 80028ea:	f008 f92c 	bl	800ab46 <HAL_TIM_Base_Init>
 80028ee:	4603      	mov	r3, r0
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d001      	beq.n	80028f8 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 80028f4:	f000 fadc 	bl	8002eb0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80028f8:	2300      	movs	r3, #0
 80028fa:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80028fc:	2300      	movs	r3, #0
 80028fe:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8002900:	1d3b      	adds	r3, r7, #4
 8002902:	4619      	mov	r1, r3
 8002904:	4805      	ldr	r0, [pc, #20]	@ (800291c <MX_TIM7_Init+0x64>)
 8002906:	f008 fbbb 	bl	800b080 <HAL_TIMEx_MasterConfigSynchronization>
 800290a:	4603      	mov	r3, r0
 800290c:	2b00      	cmp	r3, #0
 800290e:	d001      	beq.n	8002914 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 8002910:	f000 face 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 8002914:	bf00      	nop
 8002916:	3710      	adds	r7, #16
 8002918:	46bd      	mov	sp, r7
 800291a:	bd80      	pop	{r7, pc}
 800291c:	20000674 	.word	0x20000674
 8002920:	40001400 	.word	0x40001400

08002924 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002928:	4b14      	ldr	r3, [pc, #80]	@ (800297c <MX_USART1_UART_Init+0x58>)
 800292a:	4a15      	ldr	r2, [pc, #84]	@ (8002980 <MX_USART1_UART_Init+0x5c>)
 800292c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800292e:	4b13      	ldr	r3, [pc, #76]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002930:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002934:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002936:	4b11      	ldr	r3, [pc, #68]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002938:	2200      	movs	r2, #0
 800293a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800293c:	4b0f      	ldr	r3, [pc, #60]	@ (800297c <MX_USART1_UART_Init+0x58>)
 800293e:	2200      	movs	r2, #0
 8002940:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002942:	4b0e      	ldr	r3, [pc, #56]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002944:	2200      	movs	r2, #0
 8002946:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002948:	4b0c      	ldr	r3, [pc, #48]	@ (800297c <MX_USART1_UART_Init+0x58>)
 800294a:	220c      	movs	r2, #12
 800294c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800294e:	4b0b      	ldr	r3, [pc, #44]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002950:	2200      	movs	r2, #0
 8002952:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002954:	4b09      	ldr	r3, [pc, #36]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002956:	2200      	movs	r2, #0
 8002958:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800295a:	4b08      	ldr	r3, [pc, #32]	@ (800297c <MX_USART1_UART_Init+0x58>)
 800295c:	2200      	movs	r2, #0
 800295e:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002960:	4b06      	ldr	r3, [pc, #24]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002962:	2200      	movs	r2, #0
 8002964:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002966:	4805      	ldr	r0, [pc, #20]	@ (800297c <MX_USART1_UART_Init+0x58>)
 8002968:	f008 fc30 	bl	800b1cc <HAL_UART_Init>
 800296c:	4603      	mov	r3, r0
 800296e:	2b00      	cmp	r3, #0
 8002970:	d001      	beq.n	8002976 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8002972:	f000 fa9d 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002976:	bf00      	nop
 8002978:	bd80      	pop	{r7, pc}
 800297a:	bf00      	nop
 800297c:	200006c0 	.word	0x200006c0
 8002980:	40013800 	.word	0x40013800

08002984 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002984:	b580      	push	{r7, lr}
 8002986:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8002988:	4b14      	ldr	r3, [pc, #80]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 800298a:	4a15      	ldr	r2, [pc, #84]	@ (80029e0 <MX_USART3_UART_Init+0x5c>)
 800298c:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 800298e:	4b13      	ldr	r3, [pc, #76]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 8002990:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002994:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002996:	4b11      	ldr	r3, [pc, #68]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 8002998:	2200      	movs	r2, #0
 800299a:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800299c:	4b0f      	ldr	r3, [pc, #60]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 800299e:	2200      	movs	r2, #0
 80029a0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80029a2:	4b0e      	ldr	r3, [pc, #56]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029a4:	2200      	movs	r2, #0
 80029a6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80029a8:	4b0c      	ldr	r3, [pc, #48]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029aa:	220c      	movs	r2, #12
 80029ac:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80029ae:	4b0b      	ldr	r3, [pc, #44]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029b0:	2200      	movs	r2, #0
 80029b2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80029b4:	4b09      	ldr	r3, [pc, #36]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029b6:	2200      	movs	r2, #0
 80029b8:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80029ba:	4b08      	ldr	r3, [pc, #32]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029bc:	2200      	movs	r2, #0
 80029be:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80029c0:	4b06      	ldr	r3, [pc, #24]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029c2:	2200      	movs	r2, #0
 80029c4:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80029c6:	4805      	ldr	r0, [pc, #20]	@ (80029dc <MX_USART3_UART_Init+0x58>)
 80029c8:	f008 fc00 	bl	800b1cc <HAL_UART_Init>
 80029cc:	4603      	mov	r3, r0
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d001      	beq.n	80029d6 <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 80029d2:	f000 fa6d 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80029d6:	bf00      	nop
 80029d8:	bd80      	pop	{r7, pc}
 80029da:	bf00      	nop
 80029dc:	20000748 	.word	0x20000748
 80029e0:	40004800 	.word	0x40004800

080029e4 <MX_USB_OTG_FS_PCD_Init>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 80029e4:	b580      	push	{r7, lr}
 80029e6:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 80029e8:	4b14      	ldr	r3, [pc, #80]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 80029ea:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 80029ee:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 80029f0:	4b12      	ldr	r3, [pc, #72]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 80029f2:	2206      	movs	r2, #6
 80029f4:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 80029f6:	4b11      	ldr	r3, [pc, #68]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 80029f8:	2202      	movs	r2, #2
 80029fa:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 80029fc:	4b0f      	ldr	r3, [pc, #60]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 80029fe:	2202      	movs	r2, #2
 8002a00:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 8002a02:	4b0e      	ldr	r3, [pc, #56]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a04:	2200      	movs	r2, #0
 8002a06:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8002a08:	4b0c      	ldr	r3, [pc, #48]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a0a:	2200      	movs	r2, #0
 8002a0c:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8002a0e:	4b0b      	ldr	r3, [pc, #44]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a10:	2200      	movs	r2, #0
 8002a12:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.battery_charging_enable = DISABLE;
 8002a14:	4b09      	ldr	r3, [pc, #36]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a16:	2200      	movs	r2, #0
 8002a18:	735a      	strb	r2, [r3, #13]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8002a1a:	4b08      	ldr	r3, [pc, #32]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	73da      	strb	r2, [r3, #15]
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8002a20:	4b06      	ldr	r3, [pc, #24]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a22:	2200      	movs	r2, #0
 8002a24:	739a      	strb	r2, [r3, #14]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8002a26:	4805      	ldr	r0, [pc, #20]	@ (8002a3c <MX_USB_OTG_FS_PCD_Init+0x58>)
 8002a28:	f004 fbbf 	bl	80071aa <HAL_PCD_Init>
 8002a2c:	4603      	mov	r3, r0
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d001      	beq.n	8002a36 <MX_USB_OTG_FS_PCD_Init+0x52>
  {
    Error_Handler();
 8002a32:	f000 fa3d 	bl	8002eb0 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 8002a36:	bf00      	nop
 8002a38:	bd80      	pop	{r7, pc}
 8002a3a:	bf00      	nop
 8002a3c:	200007d0 	.word	0x200007d0

08002a40 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002a40:	b580      	push	{r7, lr}
 8002a42:	b08a      	sub	sp, #40	@ 0x28
 8002a44:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a46:	f107 0314 	add.w	r3, r7, #20
 8002a4a:	2200      	movs	r2, #0
 8002a4c:	601a      	str	r2, [r3, #0]
 8002a4e:	605a      	str	r2, [r3, #4]
 8002a50:	609a      	str	r2, [r3, #8]
 8002a52:	60da      	str	r2, [r3, #12]
 8002a54:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002a56:	4bbd      	ldr	r3, [pc, #756]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a58:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a5a:	4abc      	ldr	r2, [pc, #752]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a5c:	f043 0310 	orr.w	r3, r3, #16
 8002a60:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002a62:	4bba      	ldr	r3, [pc, #744]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a64:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a66:	f003 0310 	and.w	r3, r3, #16
 8002a6a:	613b      	str	r3, [r7, #16]
 8002a6c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002a6e:	4bb7      	ldr	r3, [pc, #732]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a70:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a72:	4ab6      	ldr	r2, [pc, #728]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a74:	f043 0304 	orr.w	r3, r3, #4
 8002a78:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002a7a:	4bb4      	ldr	r3, [pc, #720]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a7c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a7e:	f003 0304 	and.w	r3, r3, #4
 8002a82:	60fb      	str	r3, [r7, #12]
 8002a84:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a86:	4bb1      	ldr	r3, [pc, #708]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a88:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a8a:	4ab0      	ldr	r2, [pc, #704]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a8c:	f043 0301 	orr.w	r3, r3, #1
 8002a90:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002a92:	4bae      	ldr	r3, [pc, #696]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002a94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002a96:	f003 0301 	and.w	r3, r3, #1
 8002a9a:	60bb      	str	r3, [r7, #8]
 8002a9c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a9e:	4bab      	ldr	r3, [pc, #684]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002aa0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002aa2:	4aaa      	ldr	r2, [pc, #680]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002aa4:	f043 0302 	orr.w	r3, r3, #2
 8002aa8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002aaa:	4ba8      	ldr	r3, [pc, #672]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002aac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002aae:	f003 0302 	and.w	r3, r3, #2
 8002ab2:	607b      	str	r3, [r7, #4]
 8002ab4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002ab6:	4ba5      	ldr	r3, [pc, #660]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002ab8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002aba:	4aa4      	ldr	r2, [pc, #656]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002abc:	f043 0308 	orr.w	r3, r3, #8
 8002ac0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002ac2:	4ba2      	ldr	r3, [pc, #648]	@ (8002d4c <MX_GPIO_Init+0x30c>)
 8002ac4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002ac6:	f003 0308 	and.w	r3, r3, #8
 8002aca:	603b      	str	r3, [r7, #0]
 8002acc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin, GPIO_PIN_RESET);
 8002ace:	2200      	movs	r2, #0
 8002ad0:	f44f 718a 	mov.w	r1, #276	@ 0x114
 8002ad4:	489e      	ldr	r0, [pc, #632]	@ (8002d50 <MX_GPIO_Init+0x310>)
 8002ad6:	f003 fce7 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin, GPIO_PIN_RESET);
 8002ada:	2200      	movs	r2, #0
 8002adc:	f248 1104 	movw	r1, #33028	@ 0x8104
 8002ae0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002ae4:	f003 fce0 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 8002ae8:	2200      	movs	r2, #0
 8002aea:	f24f 0114 	movw	r1, #61460	@ 0xf014
 8002aee:	4899      	ldr	r0, [pc, #612]	@ (8002d54 <MX_GPIO_Init+0x314>)
 8002af0:	f003 fcda 	bl	80064a8 <HAL_GPIO_WritePin>
                          |SPSGRF_915_SDN_Pin|ARD_D5_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, USB_OTG_FS_PWR_EN_Pin|PMOD_RESET_Pin|STSAFE_A100_RESET_Pin, GPIO_PIN_RESET);
 8002af4:	2200      	movs	r2, #0
 8002af6:	f241 0181 	movw	r1, #4225	@ 0x1081
 8002afa:	4897      	ldr	r0, [pc, #604]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002afc:	f003 fcd4 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPBTLE_RF_SPI3_CSN_GPIO_Port, SPBTLE_RF_SPI3_CSN_Pin, GPIO_PIN_SET);
 8002b00:	2201      	movs	r2, #1
 8002b02:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002b06:	4894      	ldr	r0, [pc, #592]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002b08:	f003 fcce 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin, GPIO_PIN_RESET);
 8002b0c:	2200      	movs	r2, #0
 8002b0e:	f44f 7110 	mov.w	r1, #576	@ 0x240
 8002b12:	4892      	ldr	r0, [pc, #584]	@ (8002d5c <MX_GPIO_Init+0x31c>)
 8002b14:	f003 fcc8 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPSGRF_915_SPI3_CSN_GPIO_Port, SPSGRF_915_SPI3_CSN_Pin, GPIO_PIN_SET);
 8002b18:	2201      	movs	r2, #1
 8002b1a:	2120      	movs	r1, #32
 8002b1c:	488d      	ldr	r0, [pc, #564]	@ (8002d54 <MX_GPIO_Init+0x314>)
 8002b1e:	f003 fcc3 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ISM43362_SPI3_CSN_GPIO_Port, ISM43362_SPI3_CSN_Pin, GPIO_PIN_SET);
 8002b22:	2201      	movs	r2, #1
 8002b24:	2101      	movs	r1, #1
 8002b26:	488a      	ldr	r0, [pc, #552]	@ (8002d50 <MX_GPIO_Init+0x310>)
 8002b28:	f003 fcbe 	bl	80064a8 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : M24SR64_Y_RF_DISABLE_Pin M24SR64_Y_GPO_Pin ISM43362_RST_Pin ISM43362_SPI3_CSN_Pin */
  GPIO_InitStruct.Pin = M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin|ISM43362_SPI3_CSN_Pin;
 8002b2c:	f240 1315 	movw	r3, #277	@ 0x115
 8002b30:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002b32:	2301      	movs	r3, #1
 8002b34:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b36:	2300      	movs	r3, #0
 8002b38:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002b3e:	f107 0314 	add.w	r3, r7, #20
 8002b42:	4619      	mov	r1, r3
 8002b44:	4882      	ldr	r0, [pc, #520]	@ (8002d50 <MX_GPIO_Init+0x310>)
 8002b46:	f003 f9f9 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OTG_FS_OVRCR_EXTI3_Pin SPSGRF_915_GPIO3_EXTI5_Pin SPBTLE_RF_IRQ_EXTI6_Pin ISM43362_DRDY_EXTI1_Pin */
  GPIO_InitStruct.Pin = USB_OTG_FS_OVRCR_EXTI3_Pin|SPSGRF_915_GPIO3_EXTI5_Pin|SPBTLE_RF_IRQ_EXTI6_Pin|ISM43362_DRDY_EXTI1_Pin;
 8002b4a:	236a      	movs	r3, #106	@ 0x6a
 8002b4c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002b4e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8002b52:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b54:	2300      	movs	r3, #0
 8002b56:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002b58:	f107 0314 	add.w	r3, r7, #20
 8002b5c:	4619      	mov	r1, r3
 8002b5e:	487c      	ldr	r0, [pc, #496]	@ (8002d50 <MX_GPIO_Init+0x310>)
 8002b60:	f003 f9ec 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_EXTI13_Pin */
  GPIO_InitStruct.Pin = BUTTON_EXTI13_Pin;
 8002b64:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002b68:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002b6a:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8002b6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b70:	2300      	movs	r3, #0
 8002b72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(BUTTON_EXTI13_GPIO_Port, &GPIO_InitStruct);
 8002b74:	f107 0314 	add.w	r3, r7, #20
 8002b78:	4619      	mov	r1, r3
 8002b7a:	4878      	ldr	r0, [pc, #480]	@ (8002d5c <MX_GPIO_Init+0x31c>)
 8002b7c:	f003 f9de 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_A5_Pin ARD_A4_Pin ARD_A3_Pin ARD_A2_Pin
                           ARD_A1_Pin ARD_A0_Pin */
  GPIO_InitStruct.Pin = ARD_A5_Pin|ARD_A4_Pin|ARD_A3_Pin|ARD_A2_Pin
 8002b80:	233f      	movs	r3, #63	@ 0x3f
 8002b82:	617b      	str	r3, [r7, #20]
                          |ARD_A1_Pin|ARD_A0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8002b84:	230b      	movs	r3, #11
 8002b86:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b88:	2300      	movs	r3, #0
 8002b8a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b8c:	f107 0314 	add.w	r3, r7, #20
 8002b90:	4619      	mov	r1, r3
 8002b92:	4872      	ldr	r0, [pc, #456]	@ (8002d5c <MX_GPIO_Init+0x31c>)
 8002b94:	f003 f9d2 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D1_Pin ARD_D0_Pin */
  GPIO_InitStruct.Pin = ARD_D1_Pin|ARD_D0_Pin;
 8002b98:	2303      	movs	r3, #3
 8002b9a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b9c:	2302      	movs	r3, #2
 8002b9e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ba4:	2303      	movs	r3, #3
 8002ba6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8002ba8:	2308      	movs	r3, #8
 8002baa:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002bac:	f107 0314 	add.w	r3, r7, #20
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002bb6:	f003 f9c1 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D10_Pin SPBTLE_RF_RST_Pin ARD_D9_Pin */
  GPIO_InitStruct.Pin = ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin;
 8002bba:	f248 1304 	movw	r3, #33028	@ 0x8104
 8002bbe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bc0:	2301      	movs	r3, #1
 8002bc2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bc8:	2300      	movs	r3, #0
 8002bca:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002bcc:	f107 0314 	add.w	r3, r7, #20
 8002bd0:	4619      	mov	r1, r3
 8002bd2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002bd6:	f003 f9b1 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D4_Pin */
  GPIO_InitStruct.Pin = ARD_D4_Pin;
 8002bda:	2308      	movs	r3, #8
 8002bdc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bde:	2302      	movs	r3, #2
 8002be0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002be2:	2300      	movs	r3, #0
 8002be4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002be6:	2300      	movs	r3, #0
 8002be8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002bea:	2301      	movs	r3, #1
 8002bec:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(ARD_D4_GPIO_Port, &GPIO_InitStruct);
 8002bee:	f107 0314 	add.w	r3, r7, #20
 8002bf2:	4619      	mov	r1, r3
 8002bf4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002bf8:	f003 f9a0 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D7_Pin */
  GPIO_InitStruct.Pin = ARD_D7_Pin;
 8002bfc:	2310      	movs	r3, #16
 8002bfe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8002c00:	230b      	movs	r3, #11
 8002c02:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c04:	2300      	movs	r3, #0
 8002c06:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D7_GPIO_Port, &GPIO_InitStruct);
 8002c08:	f107 0314 	add.w	r3, r7, #20
 8002c0c:	4619      	mov	r1, r3
 8002c0e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002c12:	f003 f993 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D13_Pin ARD_D12_Pin ARD_D11_Pin */
  GPIO_InitStruct.Pin = ARD_D13_Pin|ARD_D12_Pin|ARD_D11_Pin;
 8002c16:	23e0      	movs	r3, #224	@ 0xe0
 8002c18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c1a:	2302      	movs	r3, #2
 8002c1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c1e:	2300      	movs	r3, #0
 8002c20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c22:	2303      	movs	r3, #3
 8002c24:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002c26:	2305      	movs	r3, #5
 8002c28:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c2a:	f107 0314 	add.w	r3, r7, #20
 8002c2e:	4619      	mov	r1, r3
 8002c30:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002c34:	f003 f982 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D3_Pin */
  GPIO_InitStruct.Pin = ARD_D3_Pin;
 8002c38:	2301      	movs	r3, #1
 8002c3a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002c3c:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8002c40:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c42:	2300      	movs	r3, #0
 8002c44:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D3_GPIO_Port, &GPIO_InitStruct);
 8002c46:	f107 0314 	add.w	r3, r7, #20
 8002c4a:	4619      	mov	r1, r3
 8002c4c:	4841      	ldr	r0, [pc, #260]	@ (8002d54 <MX_GPIO_Init+0x314>)
 8002c4e:	f003 f975 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D6_Pin */
  GPIO_InitStruct.Pin = ARD_D6_Pin;
 8002c52:	2302      	movs	r3, #2
 8002c54:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8002c56:	230b      	movs	r3, #11
 8002c58:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D6_GPIO_Port, &GPIO_InitStruct);
 8002c5e:	f107 0314 	add.w	r3, r7, #20
 8002c62:	4619      	mov	r1, r3
 8002c64:	483b      	ldr	r0, [pc, #236]	@ (8002d54 <MX_GPIO_Init+0x314>)
 8002c66:	f003 f969 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D8_Pin ISM43362_BOOT0_Pin ISM43362_WAKEUP_Pin LED2_Pin
                           SPSGRF_915_SDN_Pin ARD_D5_Pin SPSGRF_915_SPI3_CSN_Pin */
  GPIO_InitStruct.Pin = ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 8002c6a:	f24f 0334 	movw	r3, #61492	@ 0xf034
 8002c6e:	617b      	str	r3, [r7, #20]
                          |SPSGRF_915_SDN_Pin|ARD_D5_Pin|SPSGRF_915_SPI3_CSN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c70:	2301      	movs	r3, #1
 8002c72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c74:	2300      	movs	r3, #0
 8002c76:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c78:	2300      	movs	r3, #0
 8002c7a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c7c:	f107 0314 	add.w	r3, r7, #20
 8002c80:	4619      	mov	r1, r3
 8002c82:	4834      	ldr	r0, [pc, #208]	@ (8002d54 <MX_GPIO_Init+0x314>)
 8002c84:	f003 f95a 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : LPS22HB_INT_DRDY_EXTI0_Pin LSM6DSL_INT1_EXTI11_Pin ARD_D2_Pin HTS221_DRDY_EXTI15_Pin
                           PMOD_IRQ_EXTI12_Pin */
  GPIO_InitStruct.Pin = LPS22HB_INT_DRDY_EXTI0_Pin|LSM6DSL_INT1_EXTI11_Pin|ARD_D2_Pin|HTS221_DRDY_EXTI15_Pin
 8002c88:	f64c 4304 	movw	r3, #52228	@ 0xcc04
 8002c8c:	617b      	str	r3, [r7, #20]
                          |PMOD_IRQ_EXTI12_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002c8e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8002c92:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c94:	2300      	movs	r3, #0
 8002c96:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002c98:	f107 0314 	add.w	r3, r7, #20
 8002c9c:	4619      	mov	r1, r3
 8002c9e:	482e      	ldr	r0, [pc, #184]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002ca0:	f003 f94c 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OTG_FS_PWR_EN_Pin SPBTLE_RF_SPI3_CSN_Pin PMOD_RESET_Pin STSAFE_A100_RESET_Pin */
  GPIO_InitStruct.Pin = USB_OTG_FS_PWR_EN_Pin|SPBTLE_RF_SPI3_CSN_Pin|PMOD_RESET_Pin|STSAFE_A100_RESET_Pin;
 8002ca4:	f243 0381 	movw	r3, #12417	@ 0x3081
 8002ca8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002caa:	2301      	movs	r3, #1
 8002cac:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cae:	2300      	movs	r3, #0
 8002cb0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cb6:	f107 0314 	add.w	r3, r7, #20
 8002cba:	4619      	mov	r1, r3
 8002cbc:	4826      	ldr	r0, [pc, #152]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002cbe:	f003 f93d 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : VL53L0X_XSHUT_Pin LED3_WIFI__LED4_BLE_Pin */
  GPIO_InitStruct.Pin = VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin;
 8002cc2:	f44f 7310 	mov.w	r3, #576	@ 0x240
 8002cc6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002cc8:	2301      	movs	r3, #1
 8002cca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ccc:	2300      	movs	r3, #0
 8002cce:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002cd4:	f107 0314 	add.w	r3, r7, #20
 8002cd8:	4619      	mov	r1, r3
 8002cda:	4820      	ldr	r0, [pc, #128]	@ (8002d5c <MX_GPIO_Init+0x31c>)
 8002cdc:	f003 f92e 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : VL53L0X_GPIO1_EXTI7_Pin LSM3MDL_DRDY_EXTI8_Pin */
  GPIO_InitStruct.Pin = VL53L0X_GPIO1_EXTI7_Pin|LSM3MDL_DRDY_EXTI8_Pin;
 8002ce0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8002ce4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002ce6:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8002cea:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cec:	2300      	movs	r3, #0
 8002cee:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002cf0:	f107 0314 	add.w	r3, r7, #20
 8002cf4:	4619      	mov	r1, r3
 8002cf6:	4819      	ldr	r0, [pc, #100]	@ (8002d5c <MX_GPIO_Init+0x31c>)
 8002cf8:	f003 f920 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PMOD_SPI2_SCK_Pin */
  GPIO_InitStruct.Pin = PMOD_SPI2_SCK_Pin;
 8002cfc:	2302      	movs	r3, #2
 8002cfe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d00:	2302      	movs	r3, #2
 8002d02:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d04:	2300      	movs	r3, #0
 8002d06:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d08:	2303      	movs	r3, #3
 8002d0a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002d0c:	2305      	movs	r3, #5
 8002d0e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(PMOD_SPI2_SCK_GPIO_Port, &GPIO_InitStruct);
 8002d10:	f107 0314 	add.w	r3, r7, #20
 8002d14:	4619      	mov	r1, r3
 8002d16:	4810      	ldr	r0, [pc, #64]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002d18:	f003 f910 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PMOD_UART2_CTS_Pin PMOD_UART2_RTS_Pin PMOD_UART2_TX_Pin PMOD_UART2_RX_Pin */
  GPIO_InitStruct.Pin = PMOD_UART2_CTS_Pin|PMOD_UART2_RTS_Pin|PMOD_UART2_TX_Pin|PMOD_UART2_RX_Pin;
 8002d1c:	2378      	movs	r3, #120	@ 0x78
 8002d1e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d20:	2302      	movs	r3, #2
 8002d22:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d24:	2300      	movs	r3, #0
 8002d26:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d28:	2303      	movs	r3, #3
 8002d2a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002d2c:	2307      	movs	r3, #7
 8002d2e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002d30:	f107 0314 	add.w	r3, r7, #20
 8002d34:	4619      	mov	r1, r3
 8002d36:	4808      	ldr	r0, [pc, #32]	@ (8002d58 <MX_GPIO_Init+0x318>)
 8002d38:	f003 f900 	bl	8005f3c <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D15_Pin ARD_D14_Pin */
  GPIO_InitStruct.Pin = ARD_D15_Pin|ARD_D14_Pin;
 8002d3c:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002d40:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002d42:	2312      	movs	r3, #18
 8002d44:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d46:	2300      	movs	r3, #0
 8002d48:	e00a      	b.n	8002d60 <MX_GPIO_Init+0x320>
 8002d4a:	bf00      	nop
 8002d4c:	40021000 	.word	0x40021000
 8002d50:	48001000 	.word	0x48001000
 8002d54:	48000400 	.word	0x48000400
 8002d58:	48000c00 	.word	0x48000c00
 8002d5c:	48000800 	.word	0x48000800
 8002d60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d62:	2303      	movs	r3, #3
 8002d64:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002d66:	2304      	movs	r3, #4
 8002d68:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d6a:	f107 0314 	add.w	r3, r7, #20
 8002d6e:	4619      	mov	r1, r3
 8002d70:	480f      	ldr	r0, [pc, #60]	@ (8002db0 <MX_GPIO_Init+0x370>)
 8002d72:	f003 f8e3 	bl	8005f3c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI1_IRQn, 5, 0);
 8002d76:	2200      	movs	r2, #0
 8002d78:	2105      	movs	r1, #5
 8002d7a:	2007      	movs	r0, #7
 8002d7c:	f002 ff66 	bl	8005c4c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8002d80:	2007      	movs	r0, #7
 8002d82:	f002 ff7f 	bl	8005c84 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 8002d86:	2200      	movs	r2, #0
 8002d88:	2105      	movs	r1, #5
 8002d8a:	2017      	movs	r0, #23
 8002d8c:	f002 ff5e 	bl	8005c4c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8002d90:	2017      	movs	r0, #23
 8002d92:	f002 ff77 	bl	8005c84 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8002d96:	2200      	movs	r2, #0
 8002d98:	2105      	movs	r1, #5
 8002d9a:	2028      	movs	r0, #40	@ 0x28
 8002d9c:	f002 ff56 	bl	8005c4c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002da0:	2028      	movs	r0, #40	@ 0x28
 8002da2:	f002 ff6f 	bl	8005c84 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002da6:	bf00      	nop
 8002da8:	3728      	adds	r7, #40	@ 0x28
 8002daa:	46bd      	mov	sp, r7
 8002dac:	bd80      	pop	{r7, pc}
 8002dae:	bf00      	nop
 8002db0:	48000400 	.word	0x48000400

08002db4 <SPI3_IRQHandler>:
}



void SPI3_IRQHandler(void)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	af00      	add	r7, sp, #0
  HAL_SPI_IRQHandler(&hspi);
 8002db8:	4802      	ldr	r0, [pc, #8]	@ (8002dc4 <SPI3_IRQHandler+0x10>)
 8002dba:	f007 f99b 	bl	800a0f4 <HAL_SPI_IRQHandler>
}/** Function to read data from the socket opened into provided buffer
 8002dbe:	bf00      	nop
 8002dc0:	bd80      	pop	{r7, pc}
 8002dc2:	bf00      	nop
 8002dc4:	2000655c 	.word	0x2000655c

08002dc8 <network_rd>:
 *        - Timeout in milliseconds
 * @return - Number of Bytes read on SUCCESS
 *         - -1 on FAILURE
 **/
int network_rd(Network* n, unsigned char* buffer, int len, int timeout_ms)
{
 8002dc8:	b580      	push	{r7, lr}
 8002dca:	b086      	sub	sp, #24
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	60f8      	str	r0, [r7, #12]
 8002dd0:	60b9      	str	r1, [r7, #8]
 8002dd2:	607a      	str	r2, [r7, #4]
 8002dd4:	603b      	str	r3, [r7, #0]
  int bytes;

  bytes = net_sock_recv((net_sockhnd_t) n->my_socket, buffer, len);
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	687a      	ldr	r2, [r7, #4]
 8002ddc:	68b9      	ldr	r1, [r7, #8]
 8002dde:	4618      	mov	r0, r3
 8002de0:	f7fe fa1a 	bl	8001218 <net_sock_recv>
 8002de4:	6178      	str	r0, [r7, #20]
  if(bytes < 0)
 8002de6:	697b      	ldr	r3, [r7, #20]
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	da0c      	bge.n	8002e06 <network_rd+0x3e>
  {
    msg_error("net_sock_recv failed - %d\n", bytes);
 8002dec:	f240 32a1 	movw	r2, #929	@ 0x3a1
 8002df0:	4907      	ldr	r1, [pc, #28]	@ (8002e10 <network_rd+0x48>)
 8002df2:	4808      	ldr	r0, [pc, #32]	@ (8002e14 <network_rd+0x4c>)
 8002df4:	f00e fbdc 	bl	80115b0 <iprintf>
 8002df8:	6979      	ldr	r1, [r7, #20]
 8002dfa:	4807      	ldr	r0, [pc, #28]	@ (8002e18 <network_rd+0x50>)
 8002dfc:	f00e fbd8 	bl	80115b0 <iprintf>
    bytes = -1;
 8002e00:	f04f 33ff 	mov.w	r3, #4294967295
 8002e04:	617b      	str	r3, [r7, #20]
  }

   return bytes;
 8002e06:	697b      	ldr	r3, [r7, #20]
}
 8002e08:	4618      	mov	r0, r3
 8002e0a:	3718      	adds	r7, #24
 8002e0c:	46bd      	mov	sp, r7
 8002e0e:	bd80      	pop	{r7, pc}
 8002e10:	0801562c 	.word	0x0801562c
 8002e14:	08014acc 	.word	0x08014acc
 8002e18:	08014adc 	.word	0x08014adc

08002e1c <network_wr>:
 *        - Timeout in milliseconds
 * @return - Number of Bytes written on SUCCESS
 *         - -1 on FAILURE
 **/
int network_wr(Network* n, unsigned char* buffer, int len, int timeout_ms)
{
 8002e1c:	b580      	push	{r7, lr}
 8002e1e:	b086      	sub	sp, #24
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	60f8      	str	r0, [r7, #12]
 8002e24:	60b9      	str	r1, [r7, #8]
 8002e26:	607a      	str	r2, [r7, #4]
 8002e28:	603b      	str	r3, [r7, #0]
  int rc;

  rc = net_sock_send((net_sockhnd_t) n->my_socket, buffer, len);
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	687a      	ldr	r2, [r7, #4]
 8002e30:	68b9      	ldr	r1, [r7, #8]
 8002e32:	4618      	mov	r0, r3
 8002e34:	f7fe fa0a 	bl	800124c <net_sock_send>
 8002e38:	6178      	str	r0, [r7, #20]
  if(rc < 0)
 8002e3a:	697b      	ldr	r3, [r7, #20]
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	da0c      	bge.n	8002e5a <network_wr+0x3e>
  {
    msg_error("net_sock_send failed - %d\n", rc);
 8002e40:	f240 32b7 	movw	r2, #951	@ 0x3b7
 8002e44:	4907      	ldr	r1, [pc, #28]	@ (8002e64 <network_wr+0x48>)
 8002e46:	4808      	ldr	r0, [pc, #32]	@ (8002e68 <network_wr+0x4c>)
 8002e48:	f00e fbb2 	bl	80115b0 <iprintf>
 8002e4c:	6979      	ldr	r1, [r7, #20]
 8002e4e:	4807      	ldr	r0, [pc, #28]	@ (8002e6c <network_wr+0x50>)
 8002e50:	f00e fbae 	bl	80115b0 <iprintf>
    rc = -1;
 8002e54:	f04f 33ff 	mov.w	r3, #4294967295
 8002e58:	617b      	str	r3, [r7, #20]
  }

  return rc;
 8002e5a:	697b      	ldr	r3, [r7, #20]
}
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3718      	adds	r7, #24
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd80      	pop	{r7, pc}
 8002e64:	08015638 	.word	0x08015638
 8002e68:	08014acc 	.word	0x08014acc
 8002e6c:	08014af8 	.word	0x08014af8

08002e70 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002e70:	b580      	push	{r7, lr}
 8002e72:	b082      	sub	sp, #8
 8002e74:	af00      	add	r7, sp, #0
 8002e76:	6078      	str	r0, [r7, #4]
	 *
	 * Timer 1 is used as RTOS timebase - do not change code
	 * Timer 7 is used for RTOS real time statsistics - do not change code
	 */
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	4a09      	ldr	r2, [pc, #36]	@ (8002ea4 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8002e7e:	4293      	cmp	r3, r2
 8002e80:	d101      	bne.n	8002e86 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8002e82:	f002 fde7 	bl	8005a54 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
	if(htim->Instance == TIM7) {	//used for RTOS stats
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	4a07      	ldr	r2, [pc, #28]	@ (8002ea8 <HAL_TIM_PeriodElapsedCallback+0x38>)
 8002e8c:	4293      	cmp	r3, r2
 8002e8e:	d104      	bne.n	8002e9a <HAL_TIM_PeriodElapsedCallback+0x2a>
		ulHighFrequencyTimerTicks++;
 8002e90:	4b06      	ldr	r3, [pc, #24]	@ (8002eac <HAL_TIM_PeriodElapsedCallback+0x3c>)
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	3301      	adds	r3, #1
 8002e96:	4a05      	ldr	r2, [pc, #20]	@ (8002eac <HAL_TIM_PeriodElapsedCallback+0x3c>)
 8002e98:	6013      	str	r3, [r2, #0]
	}

  /* USER CODE END Callback 1 */
}
 8002e9a:	bf00      	nop
 8002e9c:	3708      	adds	r7, #8
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bd80      	pop	{r7, pc}
 8002ea2:	bf00      	nop
 8002ea4:	40012c00 	.word	0x40012c00
 8002ea8:	40001400 	.word	0x40001400
 8002eac:	20000cb4 	.word	0x20000cb4

08002eb0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002eb0:	b480      	push	{r7}
 8002eb2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002eb4:	b672      	cpsid	i
}
 8002eb6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002eb8:	bf00      	nop
 8002eba:	e7fd      	b.n	8002eb8 <Error_Handler+0x8>

08002ebc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002ebc:	b580      	push	{r7, lr}
 8002ebe:	b082      	sub	sp, #8
 8002ec0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002ec2:	4b11      	ldr	r3, [pc, #68]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002ec4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002ec6:	4a10      	ldr	r2, [pc, #64]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002ec8:	f043 0301 	orr.w	r3, r3, #1
 8002ecc:	6613      	str	r3, [r2, #96]	@ 0x60
 8002ece:	4b0e      	ldr	r3, [pc, #56]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002ed0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002ed2:	f003 0301 	and.w	r3, r3, #1
 8002ed6:	607b      	str	r3, [r7, #4]
 8002ed8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002eda:	4b0b      	ldr	r3, [pc, #44]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002edc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002ede:	4a0a      	ldr	r2, [pc, #40]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002ee0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ee4:	6593      	str	r3, [r2, #88]	@ 0x58
 8002ee6:	4b08      	ldr	r3, [pc, #32]	@ (8002f08 <HAL_MspInit+0x4c>)
 8002ee8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002eea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002eee:	603b      	str	r3, [r7, #0]
 8002ef0:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002ef2:	2200      	movs	r2, #0
 8002ef4:	210f      	movs	r1, #15
 8002ef6:	f06f 0001 	mvn.w	r0, #1
 8002efa:	f002 fea7 	bl	8005c4c <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002efe:	bf00      	nop
 8002f00:	3708      	adds	r7, #8
 8002f02:	46bd      	mov	sp, r7
 8002f04:	bd80      	pop	{r7, pc}
 8002f06:	bf00      	nop
 8002f08:	40021000 	.word	0x40021000

08002f0c <HAL_DFSDM_ChannelMspInit>:
* This function configures the hardware resources used in this example
* @param hdfsdm_channel: DFSDM_Channel handle pointer
* @retval None
*/
void HAL_DFSDM_ChannelMspInit(DFSDM_Channel_HandleTypeDef* hdfsdm_channel)
{
 8002f0c:	b580      	push	{r7, lr}
 8002f0e:	b0ac      	sub	sp, #176	@ 0xb0
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f14:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8002f18:	2200      	movs	r2, #0
 8002f1a:	601a      	str	r2, [r3, #0]
 8002f1c:	605a      	str	r2, [r3, #4]
 8002f1e:	609a      	str	r2, [r3, #8]
 8002f20:	60da      	str	r2, [r3, #12]
 8002f22:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002f24:	f107 0314 	add.w	r3, r7, #20
 8002f28:	2288      	movs	r2, #136	@ 0x88
 8002f2a:	2100      	movs	r1, #0
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	f00e fd39 	bl	80119a4 <memset>
  if(DFSDM1_Init == 0)
 8002f32:	4b25      	ldr	r3, [pc, #148]	@ (8002fc8 <HAL_DFSDM_ChannelMspInit+0xbc>)
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d142      	bne.n	8002fc0 <HAL_DFSDM_ChannelMspInit+0xb4>

  /* USER CODE END DFSDM1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_DFSDM1;
 8002f3a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002f3e:	617b      	str	r3, [r7, #20]
    PeriphClkInit.Dfsdm1ClockSelection = RCC_DFSDM1CLKSOURCE_PCLK;
 8002f40:	2300      	movs	r3, #0
 8002f42:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002f46:	f107 0314 	add.w	r3, r7, #20
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	f005 f9d2 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 8002f50:	4603      	mov	r3, r0
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d001      	beq.n	8002f5a <HAL_DFSDM_ChannelMspInit+0x4e>
    {
      Error_Handler();
 8002f56:	f7ff ffab 	bl	8002eb0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_DFSDM1_CLK_ENABLE();
 8002f5a:	4b1c      	ldr	r3, [pc, #112]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f5c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f5e:	4a1b      	ldr	r2, [pc, #108]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f60:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002f64:	6613      	str	r3, [r2, #96]	@ 0x60
 8002f66:	4b19      	ldr	r3, [pc, #100]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f68:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f6a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002f6e:	613b      	str	r3, [r7, #16]
 8002f70:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8002f72:	4b16      	ldr	r3, [pc, #88]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f74:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f76:	4a15      	ldr	r2, [pc, #84]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f78:	f043 0310 	orr.w	r3, r3, #16
 8002f7c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002f7e:	4b13      	ldr	r3, [pc, #76]	@ (8002fcc <HAL_DFSDM_ChannelMspInit+0xc0>)
 8002f80:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f82:	f003 0310 	and.w	r3, r3, #16
 8002f86:	60fb      	str	r3, [r7, #12]
 8002f88:	68fb      	ldr	r3, [r7, #12]
    /**DFSDM1 GPIO Configuration
    PE7     ------> DFSDM1_DATIN2
    PE9     ------> DFSDM1_CKOUT
    */
    GPIO_InitStruct.Pin = DFSDM1_DATIN2_Pin|DFSDM1_CKOUT_Pin;
 8002f8a:	f44f 7320 	mov.w	r3, #640	@ 0x280
 8002f8e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f92:	2302      	movs	r3, #2
 8002f94:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f98:	2300      	movs	r3, #0
 8002f9a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002f9e:	2300      	movs	r3, #0
 8002fa0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF6_DFSDM1;
 8002fa4:	2306      	movs	r3, #6
 8002fa6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002faa:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8002fae:	4619      	mov	r1, r3
 8002fb0:	4807      	ldr	r0, [pc, #28]	@ (8002fd0 <HAL_DFSDM_ChannelMspInit+0xc4>)
 8002fb2:	f002 ffc3 	bl	8005f3c <HAL_GPIO_Init>

  /* USER CODE BEGIN DFSDM1_MspInit 1 */

  /* USER CODE END DFSDM1_MspInit 1 */
  DFSDM1_Init++;
 8002fb6:	4b04      	ldr	r3, [pc, #16]	@ (8002fc8 <HAL_DFSDM_ChannelMspInit+0xbc>)
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	3301      	adds	r3, #1
 8002fbc:	4a02      	ldr	r2, [pc, #8]	@ (8002fc8 <HAL_DFSDM_ChannelMspInit+0xbc>)
 8002fbe:	6013      	str	r3, [r2, #0]
  }

}
 8002fc0:	bf00      	nop
 8002fc2:	37b0      	adds	r7, #176	@ 0xb0
 8002fc4:	46bd      	mov	sp, r7
 8002fc6:	bd80      	pop	{r7, pc}
 8002fc8:	20000cb8 	.word	0x20000cb8
 8002fcc:	40021000 	.word	0x40021000
 8002fd0:	48001000 	.word	0x48001000

08002fd4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002fd4:	b580      	push	{r7, lr}
 8002fd6:	b0ac      	sub	sp, #176	@ 0xb0
 8002fd8:	af00      	add	r7, sp, #0
 8002fda:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002fdc:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8002fe0:	2200      	movs	r2, #0
 8002fe2:	601a      	str	r2, [r3, #0]
 8002fe4:	605a      	str	r2, [r3, #4]
 8002fe6:	609a      	str	r2, [r3, #8]
 8002fe8:	60da      	str	r2, [r3, #12]
 8002fea:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002fec:	f107 0314 	add.w	r3, r7, #20
 8002ff0:	2288      	movs	r2, #136	@ 0x88
 8002ff2:	2100      	movs	r1, #0
 8002ff4:	4618      	mov	r0, r3
 8002ff6:	f00e fcd5 	bl	80119a4 <memset>
  if(hi2c->Instance==I2C2)
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	4a21      	ldr	r2, [pc, #132]	@ (8003084 <HAL_I2C_MspInit+0xb0>)
 8003000:	4293      	cmp	r3, r2
 8003002:	d13b      	bne.n	800307c <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8003004:	2380      	movs	r3, #128	@ 0x80
 8003006:	617b      	str	r3, [r7, #20]
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8003008:	2300      	movs	r3, #0
 800300a:	66bb      	str	r3, [r7, #104]	@ 0x68
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800300c:	f107 0314 	add.w	r3, r7, #20
 8003010:	4618      	mov	r0, r3
 8003012:	f005 f96f 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 8003016:	4603      	mov	r3, r0
 8003018:	2b00      	cmp	r3, #0
 800301a:	d001      	beq.n	8003020 <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 800301c:	f7ff ff48 	bl	8002eb0 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003020:	4b19      	ldr	r3, [pc, #100]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 8003022:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003024:	4a18      	ldr	r2, [pc, #96]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 8003026:	f043 0302 	orr.w	r3, r3, #2
 800302a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800302c:	4b16      	ldr	r3, [pc, #88]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 800302e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003030:	f003 0302 	and.w	r3, r3, #2
 8003034:	613b      	str	r3, [r7, #16]
 8003036:	693b      	ldr	r3, [r7, #16]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = INTERNAL_I2C2_SCL_Pin|INTERNAL_I2C2_SDA_Pin;
 8003038:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 800303c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003040:	2312      	movs	r3, #18
 8003042:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003046:	2301      	movs	r3, #1
 8003048:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800304c:	2303      	movs	r3, #3
 800304e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8003052:	2304      	movs	r3, #4
 8003054:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003058:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800305c:	4619      	mov	r1, r3
 800305e:	480b      	ldr	r0, [pc, #44]	@ (800308c <HAL_I2C_MspInit+0xb8>)
 8003060:	f002 ff6c 	bl	8005f3c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8003064:	4b08      	ldr	r3, [pc, #32]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 8003066:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003068:	4a07      	ldr	r2, [pc, #28]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 800306a:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800306e:	6593      	str	r3, [r2, #88]	@ 0x58
 8003070:	4b05      	ldr	r3, [pc, #20]	@ (8003088 <HAL_I2C_MspInit+0xb4>)
 8003072:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003074:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003078:	60fb      	str	r3, [r7, #12]
 800307a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 800307c:	bf00      	nop
 800307e:	37b0      	adds	r7, #176	@ 0xb0
 8003080:	46bd      	mov	sp, r7
 8003082:	bd80      	pop	{r7, pc}
 8003084:	40005800 	.word	0x40005800
 8003088:	40021000 	.word	0x40021000
 800308c:	48000400 	.word	0x48000400

08003090 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8003090:	b580      	push	{r7, lr}
 8003092:	b082      	sub	sp, #8
 8003094:	af00      	add	r7, sp, #0
 8003096:	6078      	str	r0, [r7, #4]
  if(hi2c->Instance==I2C2)
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	4a0b      	ldr	r2, [pc, #44]	@ (80030cc <HAL_I2C_MspDeInit+0x3c>)
 800309e:	4293      	cmp	r3, r2
 80030a0:	d10f      	bne.n	80030c2 <HAL_I2C_MspDeInit+0x32>
  {
  /* USER CODE BEGIN I2C2_MspDeInit 0 */

  /* USER CODE END I2C2_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C2_CLK_DISABLE();
 80030a2:	4b0b      	ldr	r3, [pc, #44]	@ (80030d0 <HAL_I2C_MspDeInit+0x40>)
 80030a4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80030a6:	4a0a      	ldr	r2, [pc, #40]	@ (80030d0 <HAL_I2C_MspDeInit+0x40>)
 80030a8:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 80030ac:	6593      	str	r3, [r2, #88]	@ 0x58

    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    HAL_GPIO_DeInit(INTERNAL_I2C2_SCL_GPIO_Port, INTERNAL_I2C2_SCL_Pin);
 80030ae:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80030b2:	4808      	ldr	r0, [pc, #32]	@ (80030d4 <HAL_I2C_MspDeInit+0x44>)
 80030b4:	f003 f8ec 	bl	8006290 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(INTERNAL_I2C2_SDA_GPIO_Port, INTERNAL_I2C2_SDA_Pin);
 80030b8:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80030bc:	4805      	ldr	r0, [pc, #20]	@ (80030d4 <HAL_I2C_MspDeInit+0x44>)
 80030be:	f003 f8e7 	bl	8006290 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C2_MspDeInit 1 */

  /* USER CODE END I2C2_MspDeInit 1 */
  }

}
 80030c2:	bf00      	nop
 80030c4:	3708      	adds	r7, #8
 80030c6:	46bd      	mov	sp, r7
 80030c8:	bd80      	pop	{r7, pc}
 80030ca:	bf00      	nop
 80030cc:	40005800 	.word	0x40005800
 80030d0:	40021000 	.word	0x40021000
 80030d4:	48000400 	.word	0x48000400

080030d8 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80030d8:	b580      	push	{r7, lr}
 80030da:	b08a      	sub	sp, #40	@ 0x28
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80030e0:	f107 0314 	add.w	r3, r7, #20
 80030e4:	2200      	movs	r2, #0
 80030e6:	601a      	str	r2, [r3, #0]
 80030e8:	605a      	str	r2, [r3, #4]
 80030ea:	609a      	str	r2, [r3, #8]
 80030ec:	60da      	str	r2, [r3, #12]
 80030ee:	611a      	str	r2, [r3, #16]
  if(hqspi->Instance==QUADSPI)
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	4a17      	ldr	r2, [pc, #92]	@ (8003154 <HAL_QSPI_MspInit+0x7c>)
 80030f6:	4293      	cmp	r3, r2
 80030f8:	d128      	bne.n	800314c <HAL_QSPI_MspInit+0x74>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 80030fa:	4b17      	ldr	r3, [pc, #92]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 80030fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80030fe:	4a16      	ldr	r2, [pc, #88]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 8003100:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003104:	6513      	str	r3, [r2, #80]	@ 0x50
 8003106:	4b14      	ldr	r3, [pc, #80]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 8003108:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800310a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800310e:	613b      	str	r3, [r7, #16]
 8003110:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003112:	4b11      	ldr	r3, [pc, #68]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 8003114:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003116:	4a10      	ldr	r2, [pc, #64]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 8003118:	f043 0310 	orr.w	r3, r3, #16
 800311c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800311e:	4b0e      	ldr	r3, [pc, #56]	@ (8003158 <HAL_QSPI_MspInit+0x80>)
 8003120:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003122:	f003 0310 	and.w	r3, r3, #16
 8003126:	60fb      	str	r3, [r7, #12]
 8003128:	68fb      	ldr	r3, [r7, #12]
    PE12     ------> QUADSPI_BK1_IO0
    PE13     ------> QUADSPI_BK1_IO1
    PE14     ------> QUADSPI_BK1_IO2
    PE15     ------> QUADSPI_BK1_IO3
    */
    GPIO_InitStruct.Pin = QUADSPI_CLK_Pin|QUADSPI_NCS_Pin|OQUADSPI_BK1_IO0_Pin|QUADSPI_BK1_IO1_Pin
 800312a:	f44f 437c 	mov.w	r3, #64512	@ 0xfc00
 800312e:	617b      	str	r3, [r7, #20]
                          |QUAD_SPI_BK1_IO2_Pin|QUAD_SPI_BK1_IO3_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003130:	2302      	movs	r3, #2
 8003132:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003134:	2300      	movs	r3, #0
 8003136:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003138:	2303      	movs	r3, #3
 800313a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800313c:	230a      	movs	r3, #10
 800313e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8003140:	f107 0314 	add.w	r3, r7, #20
 8003144:	4619      	mov	r1, r3
 8003146:	4805      	ldr	r0, [pc, #20]	@ (800315c <HAL_QSPI_MspInit+0x84>)
 8003148:	f002 fef8 	bl	8005f3c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 800314c:	bf00      	nop
 800314e:	3728      	adds	r7, #40	@ 0x28
 8003150:	46bd      	mov	sp, r7
 8003152:	bd80      	pop	{r7, pc}
 8003154:	a0001000 	.word	0xa0001000
 8003158:	40021000 	.word	0x40021000
 800315c:	48001000 	.word	0x48001000

08003160 <HAL_RNG_MspInit>:
* This function configures the hardware resources used in this example
* @param hrng: RNG handle pointer
* @retval None
*/
void HAL_RNG_MspInit(RNG_HandleTypeDef* hrng)
{
 8003160:	b480      	push	{r7}
 8003162:	b085      	sub	sp, #20
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
  if(hrng->Instance==RNG)
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	4a0a      	ldr	r2, [pc, #40]	@ (8003198 <HAL_RNG_MspInit+0x38>)
 800316e:	4293      	cmp	r3, r2
 8003170:	d10b      	bne.n	800318a <HAL_RNG_MspInit+0x2a>
  {
  /* USER CODE BEGIN RNG_MspInit 0 */

  /* USER CODE END RNG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RNG_CLK_ENABLE();
 8003172:	4b0a      	ldr	r3, [pc, #40]	@ (800319c <HAL_RNG_MspInit+0x3c>)
 8003174:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003176:	4a09      	ldr	r2, [pc, #36]	@ (800319c <HAL_RNG_MspInit+0x3c>)
 8003178:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800317c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800317e:	4b07      	ldr	r3, [pc, #28]	@ (800319c <HAL_RNG_MspInit+0x3c>)
 8003180:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003182:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003186:	60fb      	str	r3, [r7, #12]
 8003188:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN RNG_MspInit 1 */

  /* USER CODE END RNG_MspInit 1 */
  }

}
 800318a:	bf00      	nop
 800318c:	3714      	adds	r7, #20
 800318e:	46bd      	mov	sp, r7
 8003190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003194:	4770      	bx	lr
 8003196:	bf00      	nop
 8003198:	50060800 	.word	0x50060800
 800319c:	40021000 	.word	0x40021000

080031a0 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 80031a0:	b580      	push	{r7, lr}
 80031a2:	b0a4      	sub	sp, #144	@ 0x90
 80031a4:	af00      	add	r7, sp, #0
 80031a6:	6078      	str	r0, [r7, #4]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80031a8:	f107 0308 	add.w	r3, r7, #8
 80031ac:	2288      	movs	r2, #136	@ 0x88
 80031ae:	2100      	movs	r1, #0
 80031b0:	4618      	mov	r0, r3
 80031b2:	f00e fbf7 	bl	80119a4 <memset>
  if(hrtc->Instance==RTC)
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	4a14      	ldr	r2, [pc, #80]	@ (800320c <HAL_RTC_MspInit+0x6c>)
 80031bc:	4293      	cmp	r3, r2
 80031be:	d120      	bne.n	8003202 <HAL_RTC_MspInit+0x62>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 80031c0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80031c4:	60bb      	str	r3, [r7, #8]
    PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80031c6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80031ca:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80031ce:	f107 0308 	add.w	r3, r7, #8
 80031d2:	4618      	mov	r0, r3
 80031d4:	f005 f88e 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 80031d8:	4603      	mov	r3, r0
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d001      	beq.n	80031e2 <HAL_RTC_MspInit+0x42>
    {
      Error_Handler();
 80031de:	f7ff fe67 	bl	8002eb0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 80031e2:	4b0b      	ldr	r3, [pc, #44]	@ (8003210 <HAL_RTC_MspInit+0x70>)
 80031e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80031e8:	4a09      	ldr	r2, [pc, #36]	@ (8003210 <HAL_RTC_MspInit+0x70>)
 80031ea:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80031ee:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
    /* RTC interrupt Init */
    HAL_NVIC_SetPriority(RTC_WKUP_IRQn, 7, 0);
 80031f2:	2200      	movs	r2, #0
 80031f4:	2107      	movs	r1, #7
 80031f6:	2003      	movs	r0, #3
 80031f8:	f002 fd28 	bl	8005c4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 80031fc:	2003      	movs	r0, #3
 80031fe:	f002 fd41 	bl	8005c84 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 8003202:	bf00      	nop
 8003204:	3790      	adds	r7, #144	@ 0x90
 8003206:	46bd      	mov	sp, r7
 8003208:	bd80      	pop	{r7, pc}
 800320a:	bf00      	nop
 800320c:	40002800 	.word	0x40002800
 8003210:	40021000 	.word	0x40021000

08003214 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8003214:	b580      	push	{r7, lr}
 8003216:	b08a      	sub	sp, #40	@ 0x28
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800321c:	f107 0314 	add.w	r3, r7, #20
 8003220:	2200      	movs	r2, #0
 8003222:	601a      	str	r2, [r3, #0]
 8003224:	605a      	str	r2, [r3, #4]
 8003226:	609a      	str	r2, [r3, #8]
 8003228:	60da      	str	r2, [r3, #12]
 800322a:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	4a17      	ldr	r2, [pc, #92]	@ (8003290 <HAL_SPI_MspInit+0x7c>)
 8003232:	4293      	cmp	r3, r2
 8003234:	d128      	bne.n	8003288 <HAL_SPI_MspInit+0x74>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8003236:	4b17      	ldr	r3, [pc, #92]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 8003238:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800323a:	4a16      	ldr	r2, [pc, #88]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 800323c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003240:	6593      	str	r3, [r2, #88]	@ 0x58
 8003242:	4b14      	ldr	r3, [pc, #80]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 8003244:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003246:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800324a:	613b      	str	r3, [r7, #16]
 800324c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800324e:	4b11      	ldr	r3, [pc, #68]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 8003250:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003252:	4a10      	ldr	r2, [pc, #64]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 8003254:	f043 0304 	orr.w	r3, r3, #4
 8003258:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800325a:	4b0e      	ldr	r3, [pc, #56]	@ (8003294 <HAL_SPI_MspInit+0x80>)
 800325c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800325e:	f003 0304 	and.w	r3, r3, #4
 8003262:	60fb      	str	r3, [r7, #12]
 8003264:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration
    PC10     ------> SPI3_SCK
    PC11     ------> SPI3_MISO
    PC12     ------> SPI3_MOSI
    */
    GPIO_InitStruct.Pin = INTERNAL_SPI3_SCK_Pin|INTERNAL_SPI3_MISO_Pin|INTERNAL_SPI3_MOSI_Pin;
 8003266:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 800326a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800326c:	2302      	movs	r3, #2
 800326e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003270:	2300      	movs	r3, #0
 8003272:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003274:	2303      	movs	r3, #3
 8003276:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8003278:	2306      	movs	r3, #6
 800327a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800327c:	f107 0314 	add.w	r3, r7, #20
 8003280:	4619      	mov	r1, r3
 8003282:	4805      	ldr	r0, [pc, #20]	@ (8003298 <HAL_SPI_MspInit+0x84>)
 8003284:	f002 fe5a 	bl	8005f3c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 8003288:	bf00      	nop
 800328a:	3728      	adds	r7, #40	@ 0x28
 800328c:	46bd      	mov	sp, r7
 800328e:	bd80      	pop	{r7, pc}
 8003290:	40003c00 	.word	0x40003c00
 8003294:	40021000 	.word	0x40021000
 8003298:	48000800 	.word	0x48000800

0800329c <HAL_SPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
{
 800329c:	b580      	push	{r7, lr}
 800329e:	b082      	sub	sp, #8
 80032a0:	af00      	add	r7, sp, #0
 80032a2:	6078      	str	r0, [r7, #4]
  if(hspi->Instance==SPI3)
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	4a08      	ldr	r2, [pc, #32]	@ (80032cc <HAL_SPI_MspDeInit+0x30>)
 80032aa:	4293      	cmp	r3, r2
 80032ac:	d10a      	bne.n	80032c4 <HAL_SPI_MspDeInit+0x28>
  {
  /* USER CODE BEGIN SPI3_MspDeInit 0 */

  /* USER CODE END SPI3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_SPI3_CLK_DISABLE();
 80032ae:	4b08      	ldr	r3, [pc, #32]	@ (80032d0 <HAL_SPI_MspDeInit+0x34>)
 80032b0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032b2:	4a07      	ldr	r2, [pc, #28]	@ (80032d0 <HAL_SPI_MspDeInit+0x34>)
 80032b4:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80032b8:	6593      	str	r3, [r2, #88]	@ 0x58
    /**SPI3 GPIO Configuration
    PC10     ------> SPI3_SCK
    PC11     ------> SPI3_MISO
    PC12     ------> SPI3_MOSI
    */
    HAL_GPIO_DeInit(GPIOC, INTERNAL_SPI3_SCK_Pin|INTERNAL_SPI3_MISO_Pin|INTERNAL_SPI3_MOSI_Pin);
 80032ba:	f44f 51e0 	mov.w	r1, #7168	@ 0x1c00
 80032be:	4805      	ldr	r0, [pc, #20]	@ (80032d4 <HAL_SPI_MspDeInit+0x38>)
 80032c0:	f002 ffe6 	bl	8006290 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN SPI3_MspDeInit 1 */

  /* USER CODE END SPI3_MspDeInit 1 */
  }

}
 80032c4:	bf00      	nop
 80032c6:	3708      	adds	r7, #8
 80032c8:	46bd      	mov	sp, r7
 80032ca:	bd80      	pop	{r7, pc}
 80032cc:	40003c00 	.word	0x40003c00
 80032d0:	40021000 	.word	0x40021000
 80032d4:	48000800 	.word	0x48000800

080032d8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80032d8:	b580      	push	{r7, lr}
 80032da:	b084      	sub	sp, #16
 80032dc:	af00      	add	r7, sp, #0
 80032de:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM7)
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	4a0d      	ldr	r2, [pc, #52]	@ (800331c <HAL_TIM_Base_MspInit+0x44>)
 80032e6:	4293      	cmp	r3, r2
 80032e8:	d113      	bne.n	8003312 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 80032ea:	4b0d      	ldr	r3, [pc, #52]	@ (8003320 <HAL_TIM_Base_MspInit+0x48>)
 80032ec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032ee:	4a0c      	ldr	r2, [pc, #48]	@ (8003320 <HAL_TIM_Base_MspInit+0x48>)
 80032f0:	f043 0320 	orr.w	r3, r3, #32
 80032f4:	6593      	str	r3, [r2, #88]	@ 0x58
 80032f6:	4b0a      	ldr	r3, [pc, #40]	@ (8003320 <HAL_TIM_Base_MspInit+0x48>)
 80032f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032fa:	f003 0320 	and.w	r3, r3, #32
 80032fe:	60fb      	str	r3, [r7, #12]
 8003300:	68fb      	ldr	r3, [r7, #12]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8003302:	2200      	movs	r2, #0
 8003304:	2105      	movs	r1, #5
 8003306:	2037      	movs	r0, #55	@ 0x37
 8003308:	f002 fca0 	bl	8005c4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 800330c:	2037      	movs	r0, #55	@ 0x37
 800330e:	f002 fcb9 	bl	8005c84 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8003312:	bf00      	nop
 8003314:	3710      	adds	r7, #16
 8003316:	46bd      	mov	sp, r7
 8003318:	bd80      	pop	{r7, pc}
 800331a:	bf00      	nop
 800331c:	40001400 	.word	0x40001400
 8003320:	40021000 	.word	0x40021000

08003324 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003324:	b580      	push	{r7, lr}
 8003326:	b0ae      	sub	sp, #184	@ 0xb8
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800332c:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003330:	2200      	movs	r2, #0
 8003332:	601a      	str	r2, [r3, #0]
 8003334:	605a      	str	r2, [r3, #4]
 8003336:	609a      	str	r2, [r3, #8]
 8003338:	60da      	str	r2, [r3, #12]
 800333a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800333c:	f107 031c 	add.w	r3, r7, #28
 8003340:	2288      	movs	r2, #136	@ 0x88
 8003342:	2100      	movs	r1, #0
 8003344:	4618      	mov	r0, r3
 8003346:	f00e fb2d 	bl	80119a4 <memset>
  if(huart->Instance==USART1)
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	4a42      	ldr	r2, [pc, #264]	@ (8003458 <HAL_UART_MspInit+0x134>)
 8003350:	4293      	cmp	r3, r2
 8003352:	d13b      	bne.n	80033cc <HAL_UART_MspInit+0xa8>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8003354:	2301      	movs	r3, #1
 8003356:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8003358:	2300      	movs	r3, #0
 800335a:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800335c:	f107 031c 	add.w	r3, r7, #28
 8003360:	4618      	mov	r0, r3
 8003362:	f004 ffc7 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 8003366:	4603      	mov	r3, r0
 8003368:	2b00      	cmp	r3, #0
 800336a:	d001      	beq.n	8003370 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 800336c:	f7ff fda0 	bl	8002eb0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003370:	4b3a      	ldr	r3, [pc, #232]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003372:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003374:	4a39      	ldr	r2, [pc, #228]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003376:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800337a:	6613      	str	r3, [r2, #96]	@ 0x60
 800337c:	4b37      	ldr	r3, [pc, #220]	@ (800345c <HAL_UART_MspInit+0x138>)
 800337e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003380:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003384:	61bb      	str	r3, [r7, #24]
 8003386:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003388:	4b34      	ldr	r3, [pc, #208]	@ (800345c <HAL_UART_MspInit+0x138>)
 800338a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800338c:	4a33      	ldr	r2, [pc, #204]	@ (800345c <HAL_UART_MspInit+0x138>)
 800338e:	f043 0302 	orr.w	r3, r3, #2
 8003392:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003394:	4b31      	ldr	r3, [pc, #196]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003396:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003398:	f003 0302 	and.w	r3, r3, #2
 800339c:	617b      	str	r3, [r7, #20]
 800339e:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = ST_LINK_UART1_TX_Pin|ST_LINK_UART1_RX_Pin;
 80033a0:	23c0      	movs	r3, #192	@ 0xc0
 80033a2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033a6:	2302      	movs	r3, #2
 80033a8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033ac:	2300      	movs	r3, #0
 80033ae:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033b2:	2303      	movs	r3, #3
 80033b4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033b8:	2307      	movs	r3, #7
 80033ba:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80033be:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80033c2:	4619      	mov	r1, r3
 80033c4:	4826      	ldr	r0, [pc, #152]	@ (8003460 <HAL_UART_MspInit+0x13c>)
 80033c6:	f002 fdb9 	bl	8005f3c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 80033ca:	e040      	b.n	800344e <HAL_UART_MspInit+0x12a>
  else if(huart->Instance==USART3)
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	4a24      	ldr	r2, [pc, #144]	@ (8003464 <HAL_UART_MspInit+0x140>)
 80033d2:	4293      	cmp	r3, r2
 80033d4:	d13b      	bne.n	800344e <HAL_UART_MspInit+0x12a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 80033d6:	2304      	movs	r3, #4
 80033d8:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 80033da:	2300      	movs	r3, #0
 80033dc:	65fb      	str	r3, [r7, #92]	@ 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80033de:	f107 031c 	add.w	r3, r7, #28
 80033e2:	4618      	mov	r0, r3
 80033e4:	f004 ff86 	bl	80082f4 <HAL_RCCEx_PeriphCLKConfig>
 80033e8:	4603      	mov	r3, r0
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	d001      	beq.n	80033f2 <HAL_UART_MspInit+0xce>
      Error_Handler();
 80033ee:	f7ff fd5f 	bl	8002eb0 <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 80033f2:	4b1a      	ldr	r3, [pc, #104]	@ (800345c <HAL_UART_MspInit+0x138>)
 80033f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80033f6:	4a19      	ldr	r2, [pc, #100]	@ (800345c <HAL_UART_MspInit+0x138>)
 80033f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80033fc:	6593      	str	r3, [r2, #88]	@ 0x58
 80033fe:	4b17      	ldr	r3, [pc, #92]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003400:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003402:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003406:	613b      	str	r3, [r7, #16]
 8003408:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800340a:	4b14      	ldr	r3, [pc, #80]	@ (800345c <HAL_UART_MspInit+0x138>)
 800340c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800340e:	4a13      	ldr	r2, [pc, #76]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003410:	f043 0308 	orr.w	r3, r3, #8
 8003414:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003416:	4b11      	ldr	r3, [pc, #68]	@ (800345c <HAL_UART_MspInit+0x138>)
 8003418:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800341a:	f003 0308 	and.w	r3, r3, #8
 800341e:	60fb      	str	r3, [r7, #12]
 8003420:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = INTERNAL_UART3_TX_Pin|INTERNAL_UART3_RX_Pin;
 8003422:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8003426:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800342a:	2302      	movs	r3, #2
 800342c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003430:	2300      	movs	r3, #0
 8003432:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003436:	2303      	movs	r3, #3
 8003438:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800343c:	2307      	movs	r3, #7
 800343e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003442:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8003446:	4619      	mov	r1, r3
 8003448:	4807      	ldr	r0, [pc, #28]	@ (8003468 <HAL_UART_MspInit+0x144>)
 800344a:	f002 fd77 	bl	8005f3c <HAL_GPIO_Init>
}
 800344e:	bf00      	nop
 8003450:	37b8      	adds	r7, #184	@ 0xb8
 8003452:	46bd      	mov	sp, r7
 8003454:	bd80      	pop	{r7, pc}
 8003456:	bf00      	nop
 8003458:	40013800 	.word	0x40013800
 800345c:	40021000 	.word	0x40021000
 8003460:	48000400 	.word	0x48000400
 8003464:	40004800 	.word	0x40004800
 8003468:	48000c00 	.word	0x48000c00

0800346c <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 800346c:	b580      	push	{r7, lr}
 800346e:	b08a      	sub	sp, #40	@ 0x28
 8003470:	af00      	add	r7, sp, #0
 8003472:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003474:	f107 0314 	add.w	r3, r7, #20
 8003478:	2200      	movs	r2, #0
 800347a:	601a      	str	r2, [r3, #0]
 800347c:	605a      	str	r2, [r3, #4]
 800347e:	609a      	str	r2, [r3, #8]
 8003480:	60da      	str	r2, [r3, #12]
 8003482:	611a      	str	r2, [r3, #16]
  if(hpcd->Instance==USB_OTG_FS)
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800348c:	d154      	bne.n	8003538 <HAL_PCD_MspInit+0xcc>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800348e:	4b2c      	ldr	r3, [pc, #176]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003490:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003492:	4a2b      	ldr	r2, [pc, #172]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003494:	f043 0301 	orr.w	r3, r3, #1
 8003498:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800349a:	4b29      	ldr	r3, [pc, #164]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 800349c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800349e:	f003 0301 	and.w	r3, r3, #1
 80034a2:	613b      	str	r3, [r7, #16]
 80034a4:	693b      	ldr	r3, [r7, #16]
    PA9     ------> USB_OTG_FS_VBUS
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = USB_OTG_FS_VBUS_Pin;
 80034a6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80034aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80034ac:	2300      	movs	r3, #0
 80034ae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034b0:	2300      	movs	r3, #0
 80034b2:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(USB_OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 80034b4:	f107 0314 	add.w	r3, r7, #20
 80034b8:	4619      	mov	r1, r3
 80034ba:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80034be:	f002 fd3d 	bl	8005f3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = USB_OTG_FS_ID_Pin|USB_OTG_FS_DM_Pin|USB_OTG_FS_DP_Pin;
 80034c2:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 80034c6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034c8:	2302      	movs	r3, #2
 80034ca:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034cc:	2300      	movs	r3, #0
 80034ce:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034d0:	2303      	movs	r3, #3
 80034d2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80034d4:	230a      	movs	r3, #10
 80034d6:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80034d8:	f107 0314 	add.w	r3, r7, #20
 80034dc:	4619      	mov	r1, r3
 80034de:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80034e2:	f002 fd2b 	bl	8005f3c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 80034e6:	4b16      	ldr	r3, [pc, #88]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 80034e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034ea:	4a15      	ldr	r2, [pc, #84]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 80034ec:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80034f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80034f2:	4b13      	ldr	r3, [pc, #76]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 80034f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034f6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80034fa:	60fb      	str	r3, [r7, #12]
 80034fc:	68fb      	ldr	r3, [r7, #12]

    /* Enable VDDUSB */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80034fe:	4b10      	ldr	r3, [pc, #64]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003500:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003502:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003506:	2b00      	cmp	r3, #0
 8003508:	d114      	bne.n	8003534 <HAL_PCD_MspInit+0xc8>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800350a:	4b0d      	ldr	r3, [pc, #52]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 800350c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800350e:	4a0c      	ldr	r2, [pc, #48]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003510:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003514:	6593      	str	r3, [r2, #88]	@ 0x58
 8003516:	4b0a      	ldr	r3, [pc, #40]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003518:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800351a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800351e:	60bb      	str	r3, [r7, #8]
 8003520:	68bb      	ldr	r3, [r7, #8]
      HAL_PWREx_EnableVddUSB();
 8003522:	f003 ffe9 	bl	80074f8 <HAL_PWREx_EnableVddUSB>
      __HAL_RCC_PWR_CLK_DISABLE();
 8003526:	4b06      	ldr	r3, [pc, #24]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 8003528:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800352a:	4a05      	ldr	r2, [pc, #20]	@ (8003540 <HAL_PCD_MspInit+0xd4>)
 800352c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003530:	6593      	str	r3, [r2, #88]	@ 0x58
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 8003532:	e001      	b.n	8003538 <HAL_PCD_MspInit+0xcc>
      HAL_PWREx_EnableVddUSB();
 8003534:	f003 ffe0 	bl	80074f8 <HAL_PWREx_EnableVddUSB>
}
 8003538:	bf00      	nop
 800353a:	3728      	adds	r7, #40	@ 0x28
 800353c:	46bd      	mov	sp, r7
 800353e:	bd80      	pop	{r7, pc}
 8003540:	40021000 	.word	0x40021000

08003544 <HAL_InitTick>:
 8003544:	b580      	push	{r7, lr}
 8003546:	b08c      	sub	sp, #48	@ 0x30
 8003548:	af00      	add	r7, sp, #0
 800354a:	6078      	str	r0, [r7, #4]
 800354c:	2300      	movs	r3, #0
 800354e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003552:	4b2e      	ldr	r3, [pc, #184]	@ (800360c <HAL_InitTick+0xc8>)
 8003554:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003556:	4a2d      	ldr	r2, [pc, #180]	@ (800360c <HAL_InitTick+0xc8>)
 8003558:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800355c:	6613      	str	r3, [r2, #96]	@ 0x60
 800355e:	4b2b      	ldr	r3, [pc, #172]	@ (800360c <HAL_InitTick+0xc8>)
 8003560:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003562:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003566:	60bb      	str	r3, [r7, #8]
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	f107 020c 	add.w	r2, r7, #12
 800356e:	f107 0310 	add.w	r3, r7, #16
 8003572:	4611      	mov	r1, r2
 8003574:	4618      	mov	r0, r3
 8003576:	f004 fe2b 	bl	80081d0 <HAL_RCC_GetClockConfig>
 800357a:	f004 fe13 	bl	80081a4 <HAL_RCC_GetPCLK2Freq>
 800357e:	62b8      	str	r0, [r7, #40]	@ 0x28
 8003580:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003582:	4a23      	ldr	r2, [pc, #140]	@ (8003610 <HAL_InitTick+0xcc>)
 8003584:	fba2 2303 	umull	r2, r3, r2, r3
 8003588:	0c9b      	lsrs	r3, r3, #18
 800358a:	3b01      	subs	r3, #1
 800358c:	627b      	str	r3, [r7, #36]	@ 0x24
 800358e:	4b21      	ldr	r3, [pc, #132]	@ (8003614 <HAL_InitTick+0xd0>)
 8003590:	4a21      	ldr	r2, [pc, #132]	@ (8003618 <HAL_InitTick+0xd4>)
 8003592:	601a      	str	r2, [r3, #0]
 8003594:	4b1f      	ldr	r3, [pc, #124]	@ (8003614 <HAL_InitTick+0xd0>)
 8003596:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800359a:	60da      	str	r2, [r3, #12]
 800359c:	4a1d      	ldr	r2, [pc, #116]	@ (8003614 <HAL_InitTick+0xd0>)
 800359e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035a0:	6053      	str	r3, [r2, #4]
 80035a2:	4b1c      	ldr	r3, [pc, #112]	@ (8003614 <HAL_InitTick+0xd0>)
 80035a4:	2200      	movs	r2, #0
 80035a6:	611a      	str	r2, [r3, #16]
 80035a8:	4b1a      	ldr	r3, [pc, #104]	@ (8003614 <HAL_InitTick+0xd0>)
 80035aa:	2200      	movs	r2, #0
 80035ac:	609a      	str	r2, [r3, #8]
 80035ae:	4b19      	ldr	r3, [pc, #100]	@ (8003614 <HAL_InitTick+0xd0>)
 80035b0:	2200      	movs	r2, #0
 80035b2:	619a      	str	r2, [r3, #24]
 80035b4:	4817      	ldr	r0, [pc, #92]	@ (8003614 <HAL_InitTick+0xd0>)
 80035b6:	f007 fac6 	bl	800ab46 <HAL_TIM_Base_Init>
 80035ba:	4603      	mov	r3, r0
 80035bc:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 80035c0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80035c4:	2b00      	cmp	r3, #0
 80035c6:	d11b      	bne.n	8003600 <HAL_InitTick+0xbc>
 80035c8:	4812      	ldr	r0, [pc, #72]	@ (8003614 <HAL_InitTick+0xd0>)
 80035ca:	f007 fb13 	bl	800abf4 <HAL_TIM_Base_Start_IT>
 80035ce:	4603      	mov	r3, r0
 80035d0:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 80035d4:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d111      	bne.n	8003600 <HAL_InitTick+0xbc>
 80035dc:	2019      	movs	r0, #25
 80035de:	f002 fb51 	bl	8005c84 <HAL_NVIC_EnableIRQ>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	2b0f      	cmp	r3, #15
 80035e6:	d808      	bhi.n	80035fa <HAL_InitTick+0xb6>
 80035e8:	2200      	movs	r2, #0
 80035ea:	6879      	ldr	r1, [r7, #4]
 80035ec:	2019      	movs	r0, #25
 80035ee:	f002 fb2d 	bl	8005c4c <HAL_NVIC_SetPriority>
 80035f2:	4a0a      	ldr	r2, [pc, #40]	@ (800361c <HAL_InitTick+0xd8>)
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	6013      	str	r3, [r2, #0]
 80035f8:	e002      	b.n	8003600 <HAL_InitTick+0xbc>
 80035fa:	2301      	movs	r3, #1
 80035fc:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003600:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003604:	4618      	mov	r0, r3
 8003606:	3730      	adds	r7, #48	@ 0x30
 8003608:	46bd      	mov	sp, r7
 800360a:	bd80      	pop	{r7, pc}
 800360c:	40021000 	.word	0x40021000
 8003610:	431bde83 	.word	0x431bde83
 8003614:	20000cbc 	.word	0x20000cbc
 8003618:	40012c00 	.word	0x40012c00
 800361c:	2000006c 	.word	0x2000006c

08003620 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003620:	b480      	push	{r7}
 8003622:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003624:	bf00      	nop
 8003626:	e7fd      	b.n	8003624 <NMI_Handler+0x4>

08003628 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003628:	b480      	push	{r7}
 800362a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800362c:	bf00      	nop
 800362e:	e7fd      	b.n	800362c <HardFault_Handler+0x4>

08003630 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003630:	b480      	push	{r7}
 8003632:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003634:	bf00      	nop
 8003636:	e7fd      	b.n	8003634 <MemManage_Handler+0x4>

08003638 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003638:	b480      	push	{r7}
 800363a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800363c:	bf00      	nop
 800363e:	e7fd      	b.n	800363c <BusFault_Handler+0x4>

08003640 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003640:	b480      	push	{r7}
 8003642:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003644:	bf00      	nop
 8003646:	e7fd      	b.n	8003644 <UsageFault_Handler+0x4>

08003648 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003648:	b480      	push	{r7}
 800364a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800364c:	bf00      	nop
 800364e:	46bd      	mov	sp, r7
 8003650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003654:	4770      	bx	lr
	...

08003658 <RTC_WKUP_IRQHandler>:

/**
  * @brief This function handles RTC wake-up interrupt through EXTI line 20.
  */
void RTC_WKUP_IRQHandler(void)
{
 8003658:	b580      	push	{r7, lr}
 800365a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RTC_WKUP_IRQn 0 */

  /* USER CODE END RTC_WKUP_IRQn 0 */
  HAL_RTCEx_WakeUpTimerIRQHandler(&hrtc);
 800365c:	4802      	ldr	r0, [pc, #8]	@ (8003668 <RTC_WKUP_IRQHandler+0x10>)
 800365e:	f005 ff25 	bl	80094ac <HAL_RTCEx_WakeUpTimerIRQHandler>
  /* USER CODE BEGIN RTC_WKUP_IRQn 1 */

  /* USER CODE END RTC_WKUP_IRQn 1 */
}
 8003662:	bf00      	nop
 8003664:	bd80      	pop	{r7, pc}
 8003666:	bf00      	nop
 8003668:	200005ec 	.word	0x200005ec

0800366c <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 800366c:	b580      	push	{r7, lr}
 800366e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(ISM43362_DRDY_EXTI1_Pin);
 8003670:	2002      	movs	r0, #2
 8003672:	f002 ff31 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8003676:	bf00      	nop
 8003678:	bd80      	pop	{r7, pc}

0800367a <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 800367a:	b580      	push	{r7, lr}
 800367c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(SPSGRF_915_GPIO3_EXTI5_Pin);
 800367e:	2020      	movs	r0, #32
 8003680:	f002 ff2a 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(SPBTLE_RF_IRQ_EXTI6_Pin);
 8003684:	2040      	movs	r0, #64	@ 0x40
 8003686:	f002 ff27 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(VL53L0X_GPIO1_EXTI7_Pin);
 800368a:	2080      	movs	r0, #128	@ 0x80
 800368c:	f002 ff24 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(LSM3MDL_DRDY_EXTI8_Pin);
 8003690:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8003694:	f002 ff20 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8003698:	bf00      	nop
 800369a:	bd80      	pop	{r7, pc}

0800369c <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 800369c:	b580      	push	{r7, lr}
 800369e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80036a0:	4802      	ldr	r0, [pc, #8]	@ (80036ac <TIM1_UP_TIM16_IRQHandler+0x10>)
 80036a2:	f007 fb17 	bl	800acd4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 80036a6:	bf00      	nop
 80036a8:	bd80      	pop	{r7, pc}
 80036aa:	bf00      	nop
 80036ac:	20000cbc 	.word	0x20000cbc

080036b0 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80036b0:	b580      	push	{r7, lr}
 80036b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(LPS22HB_INT_DRDY_EXTI0_Pin);
 80036b4:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80036b8:	f002 ff0e 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(LSM6DSL_INT1_EXTI11_Pin);
 80036bc:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80036c0:	f002 ff0a 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(BUTTON_EXTI13_Pin);
 80036c4:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80036c8:	f002 ff06 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(ARD_D2_Pin);
 80036cc:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 80036d0:	f002 ff02 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(HTS221_DRDY_EXTI15_Pin);
 80036d4:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80036d8:	f002 fefe 	bl	80064d8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80036dc:	bf00      	nop
 80036de:	bd80      	pop	{r7, pc}

080036e0 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 80036e0:	b580      	push	{r7, lr}
 80036e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80036e4:	4802      	ldr	r0, [pc, #8]	@ (80036f0 <TIM7_IRQHandler+0x10>)
 80036e6:	f007 faf5 	bl	800acd4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 80036ea:	bf00      	nop
 80036ec:	bd80      	pop	{r7, pc}
 80036ee:	bf00      	nop
 80036f0:	20000674 	.word	0x20000674

080036f4 <_getpid>:
 80036f4:	b480      	push	{r7}
 80036f6:	af00      	add	r7, sp, #0
 80036f8:	2301      	movs	r3, #1
 80036fa:	4618      	mov	r0, r3
 80036fc:	46bd      	mov	sp, r7
 80036fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003702:	4770      	bx	lr

08003704 <_kill>:
 8003704:	b580      	push	{r7, lr}
 8003706:	b082      	sub	sp, #8
 8003708:	af00      	add	r7, sp, #0
 800370a:	6078      	str	r0, [r7, #4]
 800370c:	6039      	str	r1, [r7, #0]
 800370e:	f00e fa99 	bl	8011c44 <__errno>
 8003712:	4603      	mov	r3, r0
 8003714:	2216      	movs	r2, #22
 8003716:	601a      	str	r2, [r3, #0]
 8003718:	f04f 33ff 	mov.w	r3, #4294967295
 800371c:	4618      	mov	r0, r3
 800371e:	3708      	adds	r7, #8
 8003720:	46bd      	mov	sp, r7
 8003722:	bd80      	pop	{r7, pc}

08003724 <_exit>:
 8003724:	b580      	push	{r7, lr}
 8003726:	b082      	sub	sp, #8
 8003728:	af00      	add	r7, sp, #0
 800372a:	6078      	str	r0, [r7, #4]
 800372c:	f04f 31ff 	mov.w	r1, #4294967295
 8003730:	6878      	ldr	r0, [r7, #4]
 8003732:	f7ff ffe7 	bl	8003704 <_kill>
 8003736:	bf00      	nop
 8003738:	e7fd      	b.n	8003736 <_exit+0x12>

0800373a <_read>:
 800373a:	b580      	push	{r7, lr}
 800373c:	b086      	sub	sp, #24
 800373e:	af00      	add	r7, sp, #0
 8003740:	60f8      	str	r0, [r7, #12]
 8003742:	60b9      	str	r1, [r7, #8]
 8003744:	607a      	str	r2, [r7, #4]
 8003746:	2300      	movs	r3, #0
 8003748:	617b      	str	r3, [r7, #20]
 800374a:	e00a      	b.n	8003762 <_read+0x28>
 800374c:	f3af 8000 	nop.w
 8003750:	4601      	mov	r1, r0
 8003752:	68bb      	ldr	r3, [r7, #8]
 8003754:	1c5a      	adds	r2, r3, #1
 8003756:	60ba      	str	r2, [r7, #8]
 8003758:	b2ca      	uxtb	r2, r1
 800375a:	701a      	strb	r2, [r3, #0]
 800375c:	697b      	ldr	r3, [r7, #20]
 800375e:	3301      	adds	r3, #1
 8003760:	617b      	str	r3, [r7, #20]
 8003762:	697a      	ldr	r2, [r7, #20]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	429a      	cmp	r2, r3
 8003768:	dbf0      	blt.n	800374c <_read+0x12>
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	4618      	mov	r0, r3
 800376e:	3718      	adds	r7, #24
 8003770:	46bd      	mov	sp, r7
 8003772:	bd80      	pop	{r7, pc}

08003774 <_close>:
 8003774:	b480      	push	{r7}
 8003776:	b083      	sub	sp, #12
 8003778:	af00      	add	r7, sp, #0
 800377a:	6078      	str	r0, [r7, #4]
 800377c:	f04f 33ff 	mov.w	r3, #4294967295
 8003780:	4618      	mov	r0, r3
 8003782:	370c      	adds	r7, #12
 8003784:	46bd      	mov	sp, r7
 8003786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800378a:	4770      	bx	lr

0800378c <_fstat>:
 800378c:	b480      	push	{r7}
 800378e:	b083      	sub	sp, #12
 8003790:	af00      	add	r7, sp, #0
 8003792:	6078      	str	r0, [r7, #4]
 8003794:	6039      	str	r1, [r7, #0]
 8003796:	683b      	ldr	r3, [r7, #0]
 8003798:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800379c:	605a      	str	r2, [r3, #4]
 800379e:	2300      	movs	r3, #0
 80037a0:	4618      	mov	r0, r3
 80037a2:	370c      	adds	r7, #12
 80037a4:	46bd      	mov	sp, r7
 80037a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037aa:	4770      	bx	lr

080037ac <_isatty>:
 80037ac:	b480      	push	{r7}
 80037ae:	b083      	sub	sp, #12
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]
 80037b4:	2301      	movs	r3, #1
 80037b6:	4618      	mov	r0, r3
 80037b8:	370c      	adds	r7, #12
 80037ba:	46bd      	mov	sp, r7
 80037bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c0:	4770      	bx	lr

080037c2 <_lseek>:
 80037c2:	b480      	push	{r7}
 80037c4:	b085      	sub	sp, #20
 80037c6:	af00      	add	r7, sp, #0
 80037c8:	60f8      	str	r0, [r7, #12]
 80037ca:	60b9      	str	r1, [r7, #8]
 80037cc:	607a      	str	r2, [r7, #4]
 80037ce:	2300      	movs	r3, #0
 80037d0:	4618      	mov	r0, r3
 80037d2:	3714      	adds	r7, #20
 80037d4:	46bd      	mov	sp, r7
 80037d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037da:	4770      	bx	lr

080037dc <_sbrk>:
 80037dc:	b580      	push	{r7, lr}
 80037de:	b086      	sub	sp, #24
 80037e0:	af00      	add	r7, sp, #0
 80037e2:	6078      	str	r0, [r7, #4]
 80037e4:	4a14      	ldr	r2, [pc, #80]	@ (8003838 <_sbrk+0x5c>)
 80037e6:	4b15      	ldr	r3, [pc, #84]	@ (800383c <_sbrk+0x60>)
 80037e8:	1ad3      	subs	r3, r2, r3
 80037ea:	617b      	str	r3, [r7, #20]
 80037ec:	697b      	ldr	r3, [r7, #20]
 80037ee:	613b      	str	r3, [r7, #16]
 80037f0:	4b13      	ldr	r3, [pc, #76]	@ (8003840 <_sbrk+0x64>)
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d102      	bne.n	80037fe <_sbrk+0x22>
 80037f8:	4b11      	ldr	r3, [pc, #68]	@ (8003840 <_sbrk+0x64>)
 80037fa:	4a12      	ldr	r2, [pc, #72]	@ (8003844 <_sbrk+0x68>)
 80037fc:	601a      	str	r2, [r3, #0]
 80037fe:	4b10      	ldr	r3, [pc, #64]	@ (8003840 <_sbrk+0x64>)
 8003800:	681a      	ldr	r2, [r3, #0]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	4413      	add	r3, r2
 8003806:	693a      	ldr	r2, [r7, #16]
 8003808:	429a      	cmp	r2, r3
 800380a:	d207      	bcs.n	800381c <_sbrk+0x40>
 800380c:	f00e fa1a 	bl	8011c44 <__errno>
 8003810:	4603      	mov	r3, r0
 8003812:	220c      	movs	r2, #12
 8003814:	601a      	str	r2, [r3, #0]
 8003816:	f04f 33ff 	mov.w	r3, #4294967295
 800381a:	e009      	b.n	8003830 <_sbrk+0x54>
 800381c:	4b08      	ldr	r3, [pc, #32]	@ (8003840 <_sbrk+0x64>)
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	60fb      	str	r3, [r7, #12]
 8003822:	4b07      	ldr	r3, [pc, #28]	@ (8003840 <_sbrk+0x64>)
 8003824:	681a      	ldr	r2, [r3, #0]
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	4413      	add	r3, r2
 800382a:	4a05      	ldr	r2, [pc, #20]	@ (8003840 <_sbrk+0x64>)
 800382c:	6013      	str	r3, [r2, #0]
 800382e:	68fb      	ldr	r3, [r7, #12]
 8003830:	4618      	mov	r0, r3
 8003832:	3718      	adds	r7, #24
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}
 8003838:	20018000 	.word	0x20018000
 800383c:	00000400 	.word	0x00000400
 8003840:	20000d08 	.word	0x20000d08
 8003844:	20006dc0 	.word	0x20006dc0

08003848 <SystemInit>:
 8003848:	b480      	push	{r7}
 800384a:	af00      	add	r7, sp, #0
 800384c:	4b06      	ldr	r3, [pc, #24]	@ (8003868 <SystemInit+0x20>)
 800384e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003852:	4a05      	ldr	r2, [pc, #20]	@ (8003868 <SystemInit+0x20>)
 8003854:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003858:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 800385c:	bf00      	nop
 800385e:	46bd      	mov	sp, r7
 8003860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	e000ed00 	.word	0xe000ed00

0800386c <HAL_GPIO_EXTI_Callback>:
/*--------------------------------------------------------------------
 * EXTI interrupt handler callback function
 * Will give a semaphore when the user button is pressed
 --------------------------------------------------------------------*/
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800386c:	b580      	push	{r7, lr}
 800386e:	b084      	sub	sp, #16
 8003870:	af00      	add	r7, sp, #0
 8003872:	4603      	mov	r3, r0
 8003874:	80fb      	strh	r3, [r7, #6]
	BaseType_t xHigherPriorityTaskWoken;
	switch (GPIO_Pin)
 8003876:	88fb      	ldrh	r3, [r7, #6]
 8003878:	2b02      	cmp	r3, #2
 800387a:	d003      	beq.n	8003884 <HAL_GPIO_EXTI_Callback+0x18>
 800387c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003880:	d003      	beq.n	800388a <HAL_GPIO_EXTI_Callback+0x1e>
		portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
		}

	default:
	{
		break;
 8003882:	e01a      	b.n	80038ba <HAL_GPIO_EXTI_Callback+0x4e>
		SPI_WIFI_ISR();
 8003884:	f00c fe26 	bl	80104d4 <SPI_WIFI_ISR>
		break;
 8003888:	e018      	b.n	80038bc <HAL_GPIO_EXTI_Callback+0x50>
		printf("User button pressed\r\n\n");
 800388a:	480e      	ldr	r0, [pc, #56]	@ (80038c4 <HAL_GPIO_EXTI_Callback+0x58>)
 800388c:	f00d ff00 	bl	8011690 <puts>
		xHigherPriorityTaskWoken = pdFALSE;
 8003890:	2300      	movs	r3, #0
 8003892:	60fb      	str	r3, [r7, #12]
		xSemaphoreGiveFromISR(publishSemaphore, &xHigherPriorityTaskWoken);
 8003894:	4b0c      	ldr	r3, [pc, #48]	@ (80038c8 <HAL_GPIO_EXTI_Callback+0x5c>)
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	f107 020c 	add.w	r2, r7, #12
 800389c:	4611      	mov	r1, r2
 800389e:	4618      	mov	r0, r3
 80038a0:	f00a fbaa 	bl	800dff8 <xQueueGiveFromISR>
		portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d007      	beq.n	80038ba <HAL_GPIO_EXTI_Callback+0x4e>
 80038aa:	4b08      	ldr	r3, [pc, #32]	@ (80038cc <HAL_GPIO_EXTI_Callback+0x60>)
 80038ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80038b0:	601a      	str	r2, [r3, #0]
 80038b2:	f3bf 8f4f 	dsb	sy
 80038b6:	f3bf 8f6f 	isb	sy
		break;
 80038ba:	bf00      	nop
	}
	}
}
 80038bc:	bf00      	nop
 80038be:	3710      	adds	r7, #16
 80038c0:	46bd      	mov	sp, r7
 80038c2:	bd80      	pop	{r7, pc}
 80038c4:	08014b14 	.word	0x08014b14
 80038c8:	20000d0c 	.word	0x20000d0c
 80038cc:	e000ed04 	.word	0xe000ed04

080038d0 <HAL_RTCEx_WakeUpTimerEventCallback>:

/*--------------------------------------------------------------------
 * RTC timer event interrupt handler callback function
 * Runs every second and gives a semaphore if the RTC task is running
 --------------------------------------------------------------------*/
void HAL_RTCEx_WakeUpTimerEventCallback (RTC_HandleTypeDef * hrtc) {
 80038d0:	b580      	push	{r7, lr}
 80038d2:	b084      	sub	sp, #16
 80038d4:	af00      	add	r7, sp, #0
 80038d6:	6078      	str	r0, [r7, #4]
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 80038d8:	2300      	movs	r3, #0
 80038da:	60fb      	str	r3, [r7, #12]
	if(RTC_TaskRunning){
 80038dc:	4b0e      	ldr	r3, [pc, #56]	@ (8003918 <HAL_RTCEx_WakeUpTimerEventCallback+0x48>)
 80038de:	781b      	ldrb	r3, [r3, #0]
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d014      	beq.n	800390e <HAL_RTCEx_WakeUpTimerEventCallback+0x3e>
		xHigherPriorityTaskWoken = pdFALSE;
 80038e4:	2300      	movs	r3, #0
 80038e6:	60fb      	str	r3, [r7, #12]
		xSemaphoreGiveFromISR(oneSecondSemaphore, &xHigherPriorityTaskWoken);
 80038e8:	4b0c      	ldr	r3, [pc, #48]	@ (800391c <HAL_RTCEx_WakeUpTimerEventCallback+0x4c>)
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f107 020c 	add.w	r2, r7, #12
 80038f0:	4611      	mov	r1, r2
 80038f2:	4618      	mov	r0, r3
 80038f4:	f00a fb80 	bl	800dff8 <xQueueGiveFromISR>
		portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d007      	beq.n	800390e <HAL_RTCEx_WakeUpTimerEventCallback+0x3e>
 80038fe:	4b08      	ldr	r3, [pc, #32]	@ (8003920 <HAL_RTCEx_WakeUpTimerEventCallback+0x50>)
 8003900:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8003904:	601a      	str	r2, [r3, #0]
 8003906:	f3bf 8f4f 	dsb	sy
 800390a:	f3bf 8f6f 	isb	sy
	}
}
 800390e:	bf00      	nop
 8003910:	3710      	adds	r7, #16
 8003912:	46bd      	mov	sp, r7
 8003914:	bd80      	pop	{r7, pc}
 8003916:	bf00      	nop
 8003918:	20000d14 	.word	0x20000d14
 800391c:	20000d10 	.word	0x20000d10
 8003920:	e000ed04 	.word	0xe000ed04

08003924 <subscribeMessageHandler>:
/*--------------------------------------------------------------------------
 * Subscribe message callback function
 * Called every time a publish meassage is received from a subscribed topic
 --------------------------------------------------------------------------*/
void subscribeMessageHandler(MessageData* data)
{
 8003924:	b580      	push	{r7, lr}
 8003926:	b082      	sub	sp, #8
 8003928:	af00      	add	r7, sp, #0
 800392a:	6078      	str	r0, [r7, #4]
	static char mqtt_msg[MQTT_MSG_BUFFER_SIZE], mqtt_topic[MQTT_TOPIC_BUFFER_SIZE];
	snprintf(mqtt_msg, data->message->payloadlen+1, "%s", (char *)data->message->payload);
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	68db      	ldr	r3, [r3, #12]
 8003932:	1c59      	adds	r1, r3, #1
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	689b      	ldr	r3, [r3, #8]
 800393a:	4a1b      	ldr	r2, [pc, #108]	@ (80039a8 <subscribeMessageHandler+0x84>)
 800393c:	481b      	ldr	r0, [pc, #108]	@ (80039ac <subscribeMessageHandler+0x88>)
 800393e:	f00d feaf 	bl	80116a0 <sniprintf>
	snprintf(mqtt_topic, data->topicName->lenstring.len+1, "%s", data->topicName->lenstring.data);
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	685b      	ldr	r3, [r3, #4]
 8003946:	685b      	ldr	r3, [r3, #4]
 8003948:	3301      	adds	r3, #1
 800394a:	4619      	mov	r1, r3
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	685b      	ldr	r3, [r3, #4]
 8003950:	689b      	ldr	r3, [r3, #8]
 8003952:	4a15      	ldr	r2, [pc, #84]	@ (80039a8 <subscribeMessageHandler+0x84>)
 8003954:	4816      	ldr	r0, [pc, #88]	@ (80039b0 <subscribeMessageHandler+0x8c>)
 8003956:	f00d fea3 	bl	80116a0 <sniprintf>
	printf("\r\nPublished message from MQTT broker\r\n");
 800395a:	4816      	ldr	r0, [pc, #88]	@ (80039b4 <subscribeMessageHandler+0x90>)
 800395c:	f00d fe98 	bl	8011690 <puts>
	printf("Topic: %s, Payload: %s\r\n\n", mqtt_topic, mqtt_msg);
 8003960:	4a12      	ldr	r2, [pc, #72]	@ (80039ac <subscribeMessageHandler+0x88>)
 8003962:	4913      	ldr	r1, [pc, #76]	@ (80039b0 <subscribeMessageHandler+0x8c>)
 8003964:	4814      	ldr	r0, [pc, #80]	@ (80039b8 <subscribeMessageHandler+0x94>)
 8003966:	f00d fe23 	bl	80115b0 <iprintf>

	//Change the string parsing to match your Ubidots settings
	if(strstr(mqtt_topic, "rtos/switch")) {	//check topic
 800396a:	4914      	ldr	r1, [pc, #80]	@ (80039bc <subscribeMessageHandler+0x98>)
 800396c:	4810      	ldr	r0, [pc, #64]	@ (80039b0 <subscribeMessageHandler+0x8c>)
 800396e:	f00e f8a3 	bl	8011ab8 <strstr>
 8003972:	4603      	mov	r3, r0
 8003974:	2b00      	cmp	r3, #0
 8003976:	d013      	beq.n	80039a0 <subscribeMessageHandler+0x7c>
		if(strstr(mqtt_msg, "\"value\": 1.0")) {	//check data published from topic
 8003978:	4911      	ldr	r1, [pc, #68]	@ (80039c0 <subscribeMessageHandler+0x9c>)
 800397a:	480c      	ldr	r0, [pc, #48]	@ (80039ac <subscribeMessageHandler+0x88>)
 800397c:	f00e f89c 	bl	8011ab8 <strstr>
 8003980:	4603      	mov	r3, r0
 8003982:	2b00      	cmp	r3, #0
 8003984:	d006      	beq.n	8003994 <subscribeMessageHandler+0x70>
			HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
 8003986:	2201      	movs	r2, #1
 8003988:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800398c:	480d      	ldr	r0, [pc, #52]	@ (80039c4 <subscribeMessageHandler+0xa0>)
 800398e:	f002 fd8b 	bl	80064a8 <HAL_GPIO_WritePin>
		}
		else {
			HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
		}
	}
}
 8003992:	e005      	b.n	80039a0 <subscribeMessageHandler+0x7c>
			HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 8003994:	2200      	movs	r2, #0
 8003996:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800399a:	480a      	ldr	r0, [pc, #40]	@ (80039c4 <subscribeMessageHandler+0xa0>)
 800399c:	f002 fd84 	bl	80064a8 <HAL_GPIO_WritePin>
}
 80039a0:	bf00      	nop
 80039a2:	3708      	adds	r7, #8
 80039a4:	46bd      	mov	sp, r7
 80039a6:	bd80      	pop	{r7, pc}
 80039a8:	08014b2c 	.word	0x08014b2c
 80039ac:	20000d94 	.word	0x20000d94
 80039b0:	20000fec 	.word	0x20000fec
 80039b4:	08014b30 	.word	0x08014b30
 80039b8:	08014b58 	.word	0x08014b58
 80039bc:	08014b74 	.word	0x08014b74
 80039c0:	08014b80 	.word	0x08014b80
 80039c4:	48000400 	.word	0x48000400

080039c8 <temperatureTask>:

static void temperatureTask(void * pvParameters) {
 80039c8:	b590      	push	{r4, r7, lr}
 80039ca:	b091      	sub	sp, #68	@ 0x44
 80039cc:	af00      	add	r7, sp, #0
 80039ce:	6078      	str	r0, [r7, #4]
	MQTTMessage mqmsg;
	char temperature[25];
	printf("Starting Publish Task\r\n");
 80039d0:	482c      	ldr	r0, [pc, #176]	@ (8003a84 <temperatureTask+0xbc>)
 80039d2:	f00d fe5d 	bl	8011690 <puts>
	BSP_TSENSOR_Init();		//Initialise temperature sensor
 80039d6:	f000 fd05 	bl	80043e4 <BSP_TSENSOR_Init>
	while(1) {
		if(xSemaphoreTake(publishSemaphore, 0) == pdTRUE) {
 80039da:	4b2b      	ldr	r3, [pc, #172]	@ (8003a88 <temperatureTask+0xc0>)
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	2100      	movs	r1, #0
 80039e0:	4618      	mov	r0, r3
 80039e2:	f00a fb99 	bl	800e118 <xQueueSemaphoreTake>
 80039e6:	4603      	mov	r3, r0
 80039e8:	2b01      	cmp	r3, #1
 80039ea:	d147      	bne.n	8003a7c <temperatureTask+0xb4>
			float tempF = BSP_TSENSOR_ReadTemp();
 80039ec:	f000 fd16 	bl	800441c <BSP_TSENSOR_ReadTemp>
 80039f0:	ed87 0a0f 	vstr	s0, [r7, #60]	@ 0x3c
			uint16_t tempI = tempF*10;
 80039f4:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 80039f8:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 80039fc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a00:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a04:	ee17 3a90 	vmov	r3, s15
 8003a08:	877b      	strh	r3, [r7, #58]	@ 0x3a
			sprintf(temperature, "{\"temperature\":%d.%d}", tempI/10, tempI%10);
 8003a0a:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8003a0c:	4a1f      	ldr	r2, [pc, #124]	@ (8003a8c <temperatureTask+0xc4>)
 8003a0e:	fba2 2303 	umull	r2, r3, r2, r3
 8003a12:	08db      	lsrs	r3, r3, #3
 8003a14:	b29b      	uxth	r3, r3
 8003a16:	461c      	mov	r4, r3
 8003a18:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 8003a1a:	4b1c      	ldr	r3, [pc, #112]	@ (8003a8c <temperatureTask+0xc4>)
 8003a1c:	fba3 1302 	umull	r1, r3, r3, r2
 8003a20:	08d9      	lsrs	r1, r3, #3
 8003a22:	460b      	mov	r3, r1
 8003a24:	009b      	lsls	r3, r3, #2
 8003a26:	440b      	add	r3, r1
 8003a28:	005b      	lsls	r3, r3, #1
 8003a2a:	1ad3      	subs	r3, r2, r3
 8003a2c:	b29b      	uxth	r3, r3
 8003a2e:	f107 000c 	add.w	r0, r7, #12
 8003a32:	4622      	mov	r2, r4
 8003a34:	4916      	ldr	r1, [pc, #88]	@ (8003a90 <temperatureTask+0xc8>)
 8003a36:	f00d fe67 	bl	8011708 <siprintf>
			printf("Publishing Temperature: %sC\r\n", temperature);
 8003a3a:	f107 030c 	add.w	r3, r7, #12
 8003a3e:	4619      	mov	r1, r3
 8003a40:	4814      	ldr	r0, [pc, #80]	@ (8003a94 <temperatureTask+0xcc>)
 8003a42:	f00d fdb5 	bl	80115b0 <iprintf>
			memset(&mqmsg, 0, sizeof(MQTTMessage));
 8003a46:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8003a4a:	2210      	movs	r2, #16
 8003a4c:	2100      	movs	r1, #0
 8003a4e:	4618      	mov	r0, r3
 8003a50:	f00d ffa8 	bl	80119a4 <memset>
			mqmsg.qos = QOS0;
 8003a54:	2300      	movs	r3, #0
 8003a56:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
			mqmsg.payload = (char *) temperature;
 8003a5a:	f107 030c 	add.w	r3, r7, #12
 8003a5e:	633b      	str	r3, [r7, #48]	@ 0x30
			mqmsg.payloadlen = strlen(temperature);
 8003a60:	f107 030c 	add.w	r3, r7, #12
 8003a64:	4618      	mov	r0, r3
 8003a66:	f7fc fc13 	bl	8000290 <strlen>
 8003a6a:	4603      	mov	r3, r0
 8003a6c:	637b      	str	r3, [r7, #52]	@ 0x34

			//change the device api label to match your Ubidots configuration
			MQTTPublish(&client, "/v1.6/devices/rtos", &mqmsg);
 8003a6e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8003a72:	461a      	mov	r2, r3
 8003a74:	4908      	ldr	r1, [pc, #32]	@ (8003a98 <temperatureTask+0xd0>)
 8003a76:	4809      	ldr	r0, [pc, #36]	@ (8003a9c <temperatureTask+0xd4>)
 8003a78:	f009 f9db 	bl	800ce32 <MQTTPublish>
		}
		vTaskDelay(pdMS_TO_TICKS(100));
 8003a7c:	2014      	movs	r0, #20
 8003a7e:	f00a ff57 	bl	800e930 <vTaskDelay>
		if(xSemaphoreTake(publishSemaphore, 0) == pdTRUE) {
 8003a82:	e7aa      	b.n	80039da <temperatureTask+0x12>
 8003a84:	08014b90 	.word	0x08014b90
 8003a88:	20000d0c 	.word	0x20000d0c
 8003a8c:	cccccccd 	.word	0xcccccccd
 8003a90:	08014ba8 	.word	0x08014ba8
 8003a94:	08014bc0 	.word	0x08014bc0
 8003a98:	08014be0 	.word	0x08014be0
 8003a9c:	20000d2c 	.word	0x20000d2c

08003aa0 <RTC_Task>:
}

/*-----------------------------------------------------------
 * Task to print the date and time when a semaphore is taken
-------------------------------------------------------------*/
static void RTC_Task(void * pvParameters) {
 8003aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003aa2:	b097      	sub	sp, #92	@ 0x5c
 8003aa4:	af04      	add	r7, sp, #16
 8003aa6:	6078      	str	r0, [r7, #4]
	RTC_TimeTypeDef sTime;
	RTC_DateTypeDef sDate;
	char timeBuffer[40];

	RTC_TaskRunning = 1;	//flag set to allow RTC event interrupt handler callback to send semaphores
 8003aa8:	4b23      	ldr	r3, [pc, #140]	@ (8003b38 <RTC_Task+0x98>)
 8003aaa:	2201      	movs	r2, #1
 8003aac:	701a      	strb	r2, [r3, #0]

	while(1) {
		MQTTYield(&client, 200);	//Yield needed to allow check for received published messages from subscribed topics
 8003aae:	21c8      	movs	r1, #200	@ 0xc8
 8003ab0:	4822      	ldr	r0, [pc, #136]	@ (8003b3c <RTC_Task+0x9c>)
 8003ab2:	f008 ffbd 	bl	800ca30 <MQTTYield>

		if(xSemaphoreTake(oneSecondSemaphore, 0) == pdTRUE) {
 8003ab6:	4b22      	ldr	r3, [pc, #136]	@ (8003b40 <RTC_Task+0xa0>)
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	2100      	movs	r1, #0
 8003abc:	4618      	mov	r0, r3
 8003abe:	f00a fb2b 	bl	800e118 <xQueueSemaphoreTake>
 8003ac2:	4603      	mov	r3, r0
 8003ac4:	2b01      	cmp	r3, #1
 8003ac6:	d132      	bne.n	8003b2e <RTC_Task+0x8e>
			timeDisplay = 0;
 8003ac8:	4b1e      	ldr	r3, [pc, #120]	@ (8003b44 <RTC_Task+0xa4>)
 8003aca:	2200      	movs	r2, #0
 8003acc:	701a      	strb	r2, [r3, #0]
			HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 8003ace:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	4619      	mov	r1, r3
 8003ad6:	481c      	ldr	r0, [pc, #112]	@ (8003b48 <RTC_Task+0xa8>)
 8003ad8:	f005 fa54 	bl	8008f84 <HAL_RTC_GetTime>
			HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 8003adc:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8003ae0:	2200      	movs	r2, #0
 8003ae2:	4619      	mov	r1, r3
 8003ae4:	4818      	ldr	r0, [pc, #96]	@ (8003b48 <RTC_Task+0xa8>)
 8003ae6:	f005 fb30 	bl	800914a <HAL_RTC_GetDate>
			sprintf(timeBuffer, "%02d/%02d/%02d %02d:%02d:%02d\r\n", sDate.Date, sDate.Month, sDate.Year, sTime.Hours+1, sTime.Minutes, sTime.Seconds);
 8003aea:	f897 3032 	ldrb.w	r3, [r7, #50]	@ 0x32
 8003aee:	461d      	mov	r5, r3
 8003af0:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 8003af4:	461e      	mov	r6, r3
 8003af6:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003afa:	461a      	mov	r2, r3
 8003afc:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8003b00:	3301      	adds	r3, #1
 8003b02:	f897 1035 	ldrb.w	r1, [r7, #53]	@ 0x35
 8003b06:	f897 0036 	ldrb.w	r0, [r7, #54]	@ 0x36
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	f107 0008 	add.w	r0, r7, #8
 8003b10:	9403      	str	r4, [sp, #12]
 8003b12:	9102      	str	r1, [sp, #8]
 8003b14:	9301      	str	r3, [sp, #4]
 8003b16:	9200      	str	r2, [sp, #0]
 8003b18:	4633      	mov	r3, r6
 8003b1a:	462a      	mov	r2, r5
 8003b1c:	490b      	ldr	r1, [pc, #44]	@ (8003b4c <RTC_Task+0xac>)
 8003b1e:	f00d fdf3 	bl	8011708 <siprintf>
			printf("%s", timeBuffer);
 8003b22:	f107 0308 	add.w	r3, r7, #8
 8003b26:	4619      	mov	r1, r3
 8003b28:	4809      	ldr	r0, [pc, #36]	@ (8003b50 <RTC_Task+0xb0>)
 8003b2a:	f00d fd41 	bl	80115b0 <iprintf>
		}
		vTaskDelay(pdMS_TO_TICKS(100));
 8003b2e:	2014      	movs	r0, #20
 8003b30:	f00a fefe 	bl	800e930 <vTaskDelay>
		MQTTYield(&client, 200);	//Yield needed to allow check for received published messages from subscribed topics
 8003b34:	e7bb      	b.n	8003aae <RTC_Task+0xe>
 8003b36:	bf00      	nop
 8003b38:	20000d14 	.word	0x20000d14
 8003b3c:	20000d2c 	.word	0x20000d2c
 8003b40:	20000d10 	.word	0x20000d10
 8003b44:	20000d15 	.word	0x20000d15
 8003b48:	200005ec 	.word	0x200005ec
 8003b4c:	08014bf4 	.word	0x08014bf4
 8003b50:	08014b2c 	.word	0x08014b2c

08003b54 <initTask>:
 * 3. Creates semaphores
 * 4. Creates temperature and RTC tasks
 * 5. Subscribes to LED_Control variable
 * 6. Task delates itself
 ----------------------------------------*/
static void initTask(void * pvParameters) {
 8003b54:	b580      	push	{r7, lr}
 8003b56:	b086      	sub	sp, #24
 8003b58:	af02      	add	r7, sp, #8
 8003b5a:	6078      	str	r0, [r7, #4]
	uint32_t ret;
	printf("Starting Init Task\r\n");
 8003b5c:	4839      	ldr	r0, [pc, #228]	@ (8003c44 <initTask+0xf0>)
 8003b5e:	f00d fd97 	bl	8011690 <puts>

	while(1) {
		HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 8003b62:	2200      	movs	r2, #0
 8003b64:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8003b68:	4837      	ldr	r0, [pc, #220]	@ (8003c48 <initTask+0xf4>)
 8003b6a:	f002 fc9d 	bl	80064a8 <HAL_GPIO_WritePin>
		brokerConnect(&client);	//connect to WiFi access point and then to MQTT broker
 8003b6e:	4837      	ldr	r0, [pc, #220]	@ (8003c4c <initTask+0xf8>)
 8003b70:	f000 f8ac 	bl	8003ccc <brokerConnect>
		publishSemaphore = xSemaphoreCreateBinary();
 8003b74:	2203      	movs	r2, #3
 8003b76:	2100      	movs	r1, #0
 8003b78:	2001      	movs	r0, #1
 8003b7a:	f00a f9df 	bl	800df3c <xQueueGenericCreate>
 8003b7e:	4603      	mov	r3, r0
 8003b80:	4a33      	ldr	r2, [pc, #204]	@ (8003c50 <initTask+0xfc>)
 8003b82:	6013      	str	r3, [r2, #0]
		vQueueAddToRegistry(publishSemaphore, "Publish Semaphore");
 8003b84:	4b32      	ldr	r3, [pc, #200]	@ (8003c50 <initTask+0xfc>)
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	4932      	ldr	r1, [pc, #200]	@ (8003c54 <initTask+0x100>)
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	f00a fc54 	bl	800e438 <vQueueAddToRegistry>
		oneSecondSemaphore = xSemaphoreCreateBinary();
 8003b90:	2203      	movs	r2, #3
 8003b92:	2100      	movs	r1, #0
 8003b94:	2001      	movs	r0, #1
 8003b96:	f00a f9d1 	bl	800df3c <xQueueGenericCreate>
 8003b9a:	4603      	mov	r3, r0
 8003b9c:	4a2e      	ldr	r2, [pc, #184]	@ (8003c58 <initTask+0x104>)
 8003b9e:	6013      	str	r3, [r2, #0]
		vQueueAddToRegistry(oneSecondSemaphore, "RTC Semaphore");
 8003ba0:	4b2d      	ldr	r3, [pc, #180]	@ (8003c58 <initTask+0x104>)
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	492d      	ldr	r1, [pc, #180]	@ (8003c5c <initTask+0x108>)
 8003ba6:	4618      	mov	r0, r3
 8003ba8:	f00a fc46 	bl	800e438 <vQueueAddToRegistry>
		if(xTaskCreate(temperatureTask, "Temperature Task", 500, NULL, configMAX_PRIORITIES - 3, NULL) == pdTRUE) {
 8003bac:	2300      	movs	r3, #0
 8003bae:	9301      	str	r3, [sp, #4]
 8003bb0:	2304      	movs	r3, #4
 8003bb2:	9300      	str	r3, [sp, #0]
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8003bba:	4929      	ldr	r1, [pc, #164]	@ (8003c60 <initTask+0x10c>)
 8003bbc:	4829      	ldr	r0, [pc, #164]	@ (8003c64 <initTask+0x110>)
 8003bbe:	f00a fcc5 	bl	800e54c <xTaskCreate>
 8003bc2:	4603      	mov	r3, r0
 8003bc4:	2b01      	cmp	r3, #1
 8003bc6:	d103      	bne.n	8003bd0 <initTask+0x7c>
			printf("Temperature task created\n\r");
 8003bc8:	4827      	ldr	r0, [pc, #156]	@ (8003c68 <initTask+0x114>)
 8003bca:	f00d fcf1 	bl	80115b0 <iprintf>
 8003bce:	e002      	b.n	8003bd6 <initTask+0x82>
		}
		else {
			printf("Could not create temperature task\n\r");
 8003bd0:	4826      	ldr	r0, [pc, #152]	@ (8003c6c <initTask+0x118>)
 8003bd2:	f00d fced 	bl	80115b0 <iprintf>
		}
		if(xTaskCreate(RTC_Task, "RTC Task", 500, NULL, configMAX_PRIORITIES - 2, NULL) == pdTRUE) {
 8003bd6:	2300      	movs	r3, #0
 8003bd8:	9301      	str	r3, [sp, #4]
 8003bda:	2305      	movs	r3, #5
 8003bdc:	9300      	str	r3, [sp, #0]
 8003bde:	2300      	movs	r3, #0
 8003be0:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8003be4:	4922      	ldr	r1, [pc, #136]	@ (8003c70 <initTask+0x11c>)
 8003be6:	4823      	ldr	r0, [pc, #140]	@ (8003c74 <initTask+0x120>)
 8003be8:	f00a fcb0 	bl	800e54c <xTaskCreate>
 8003bec:	4603      	mov	r3, r0
 8003bee:	2b01      	cmp	r3, #1
 8003bf0:	d103      	bne.n	8003bfa <initTask+0xa6>
			printf("RTC task created\n\r");
 8003bf2:	4821      	ldr	r0, [pc, #132]	@ (8003c78 <initTask+0x124>)
 8003bf4:	f00d fcdc 	bl	80115b0 <iprintf>
 8003bf8:	e002      	b.n	8003c00 <initTask+0xac>
		}
		else {
			printf("Could not create RTC task\n\r");
 8003bfa:	4820      	ldr	r0, [pc, #128]	@ (8003c7c <initTask+0x128>)
 8003bfc:	f00d fcd8 	bl	80115b0 <iprintf>
		}

		//Subscribe to topics here
		//change the device name and variable name in the function call to match your Ubidots configuration
		ret = MQTTSubscribe(&client, "/v1.6/devices/rtos/switch", QOS0, (subscribeMessageHandler));
 8003c00:	4b1f      	ldr	r3, [pc, #124]	@ (8003c80 <initTask+0x12c>)
 8003c02:	2200      	movs	r2, #0
 8003c04:	491f      	ldr	r1, [pc, #124]	@ (8003c84 <initTask+0x130>)
 8003c06:	4811      	ldr	r0, [pc, #68]	@ (8003c4c <initTask+0xf8>)
 8003c08:	f009 f8fd 	bl	800ce06 <MQTTSubscribe>
 8003c0c:	4603      	mov	r3, r0
 8003c0e:	60fb      	str	r3, [r7, #12]
		if (ret != MQSUCCESS) {
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d004      	beq.n	8003c20 <initTask+0xcc>
			printf("\n\rSubscribe failed: %ld\n\r", ret);
 8003c16:	68f9      	ldr	r1, [r7, #12]
 8003c18:	481b      	ldr	r0, [pc, #108]	@ (8003c88 <initTask+0x134>)
 8003c1a:	f00d fcc9 	bl	80115b0 <iprintf>
 8003c1e:	e009      	b.n	8003c34 <initTask+0xe0>
		}
		else {
			printf("\n\rSubscribed to topic \n\r");
 8003c20:	481a      	ldr	r0, [pc, #104]	@ (8003c8c <initTask+0x138>)
 8003c22:	f00d fcc5 	bl	80115b0 <iprintf>
			ret = MQTTYield(&client, 500);
 8003c26:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8003c2a:	4808      	ldr	r0, [pc, #32]	@ (8003c4c <initTask+0xf8>)
 8003c2c:	f008 ff00 	bl	800ca30 <MQTTYield>
 8003c30:	4603      	mov	r3, r0
 8003c32:	60fb      	str	r3, [r7, #12]
		}

		printf("Deleting Init Task\r\n\n");
 8003c34:	4816      	ldr	r0, [pc, #88]	@ (8003c90 <initTask+0x13c>)
 8003c36:	f00d fd2b 	bl	8011690 <puts>
		vTaskDelete(NULL);
 8003c3a:	2000      	movs	r0, #0
 8003c3c:	f00a fde8 	bl	800e810 <vTaskDelete>
		HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 8003c40:	e78f      	b.n	8003b62 <initTask+0xe>
 8003c42:	bf00      	nop
 8003c44:	08014c14 	.word	0x08014c14
 8003c48:	48000400 	.word	0x48000400
 8003c4c:	20000d2c 	.word	0x20000d2c
 8003c50:	20000d0c 	.word	0x20000d0c
 8003c54:	08014c28 	.word	0x08014c28
 8003c58:	20000d10 	.word	0x20000d10
 8003c5c:	08014c3c 	.word	0x08014c3c
 8003c60:	08014c4c 	.word	0x08014c4c
 8003c64:	080039c9 	.word	0x080039c9
 8003c68:	08014c60 	.word	0x08014c60
 8003c6c:	08014c7c 	.word	0x08014c7c
 8003c70:	08014ca0 	.word	0x08014ca0
 8003c74:	08003aa1 	.word	0x08003aa1
 8003c78:	08014cac 	.word	0x08014cac
 8003c7c:	08014cc0 	.word	0x08014cc0
 8003c80:	08003925 	.word	0x08003925
 8003c84:	08014cdc 	.word	0x08014cdc
 8003c88:	08014cf8 	.word	0x08014cf8
 8003c8c:	08014d14 	.word	0x08014d14
 8003c90:	08014d30 	.word	0x08014d30

08003c94 <userApp>:

/*-----------------------------------------------
 * User application function
 * Creates Init task and starts ROS scheduler
-------------------------------------------------*/
void userApp() {
 8003c94:	b580      	push	{r7, lr}
 8003c96:	b082      	sub	sp, #8
 8003c98:	af02      	add	r7, sp, #8
	printf("Starting user application\r\n\n");
 8003c9a:	4809      	ldr	r0, [pc, #36]	@ (8003cc0 <userApp+0x2c>)
 8003c9c:	f00d fcf8 	bl	8011690 <puts>
	xTaskCreate(initTask, "Init Task", 800, NULL, configMAX_PRIORITIES - 1, NULL);
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	9301      	str	r3, [sp, #4]
 8003ca4:	2306      	movs	r3, #6
 8003ca6:	9300      	str	r3, [sp, #0]
 8003ca8:	2300      	movs	r3, #0
 8003caa:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8003cae:	4905      	ldr	r1, [pc, #20]	@ (8003cc4 <userApp+0x30>)
 8003cb0:	4805      	ldr	r0, [pc, #20]	@ (8003cc8 <userApp+0x34>)
 8003cb2:	f00a fc4b 	bl	800e54c <xTaskCreate>
	vTaskStartScheduler();
 8003cb6:	f00a fe71 	bl	800e99c <vTaskStartScheduler>

	while(1) {
 8003cba:	bf00      	nop
 8003cbc:	e7fd      	b.n	8003cba <userApp+0x26>
 8003cbe:	bf00      	nop
 8003cc0:	08014d48 	.word	0x08014d48
 8003cc4:	08014d64 	.word	0x08014d64
 8003cc8:	08003b55 	.word	0x08003b55

08003ccc <brokerConnect>:
 * 1. Connects to WiFi access point (AP)
 * 2. Gets date and time from network
 * 3. Connects to ubidots web server
 * 4. Connects to Ubidots MQTT broker
---------------------------------------------------*/
void brokerConnect(MQTTClient * client) {
 8003ccc:	b5b0      	push	{r4, r5, r7, lr}
 8003cce:	b094      	sub	sp, #80	@ 0x50
 8003cd0:	af04      	add	r7, sp, #16
 8003cd2:	6078      	str	r0, [r7, #4]
	net_macaddr_t macAddr;


	//Initialise MQTT broker structure
	//Fill in this section with MQTT broker credentials from header file
	MQTT_Config.HostName = CloudBroker_HostName;
 8003cd4:	4b7b      	ldr	r3, [pc, #492]	@ (8003ec4 <brokerConnect+0x1f8>)
 8003cd6:	627b      	str	r3, [r7, #36]	@ 0x24
	MQTT_Config.HostPort = CloudBroker_Port;
 8003cd8:	4b7b      	ldr	r3, [pc, #492]	@ (8003ec8 <brokerConnect+0x1fc>)
 8003cda:	62bb      	str	r3, [r7, #40]	@ 0x28
	MQTT_Config.ConnSecurity = "0";	//plain TCP connection with no security
 8003cdc:	4b7b      	ldr	r3, [pc, #492]	@ (8003ecc <brokerConnect+0x200>)
 8003cde:	62fb      	str	r3, [r7, #44]	@ 0x2c
	MQTT_Config.MQUserName = CloudBroker_Username;
 8003ce0:	4b7b      	ldr	r3, [pc, #492]	@ (8003ed0 <brokerConnect+0x204>)
 8003ce2:	637b      	str	r3, [r7, #52]	@ 0x34
	MQTT_Config.MQUserPwd = CloudBroker_Password;
 8003ce4:	4b7b      	ldr	r3, [pc, #492]	@ (8003ed4 <brokerConnect+0x208>)
 8003ce6:	63bb      	str	r3, [r7, #56]	@ 0x38
	MQTT_Config.MQClientId = CloudBroker_ClientID;
 8003ce8:	4b7b      	ldr	r3, [pc, #492]	@ (8003ed8 <brokerConnect+0x20c>)
 8003cea:	633b      	str	r3, [r7, #48]	@ 0x30

	//Initialise WiFi network
	if (net_init(&hnet, NET_IF, (wifi_net_if_init)) != NET_OK) {
 8003cec:	4a7b      	ldr	r2, [pc, #492]	@ (8003edc <brokerConnect+0x210>)
 8003cee:	2101      	movs	r1, #1
 8003cf0:	487b      	ldr	r0, [pc, #492]	@ (8003ee0 <brokerConnect+0x214>)
 8003cf2:	f7fd f8e1 	bl	8000eb8 <net_init>
 8003cf6:	4603      	mov	r3, r0
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d003      	beq.n	8003d04 <brokerConnect+0x38>
		printf("\n\rError");
 8003cfc:	4879      	ldr	r0, [pc, #484]	@ (8003ee4 <brokerConnect+0x218>)
 8003cfe:	f00d fc57 	bl	80115b0 <iprintf>
 8003d02:	e002      	b.n	8003d0a <brokerConnect+0x3e>
	}
	else {
		printf("\n\rOK");
 8003d04:	4878      	ldr	r0, [pc, #480]	@ (8003ee8 <brokerConnect+0x21c>)
 8003d06:	f00d fc53 	bl	80115b0 <iprintf>
	}
	HAL_Delay(500);
 8003d0a:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8003d0e:	f001 fec1 	bl	8005a94 <HAL_Delay>

	printf("\n\rRetrieving the IP address.");
 8003d12:	4876      	ldr	r0, [pc, #472]	@ (8003eec <brokerConnect+0x220>)
 8003d14:	f00d fc4c 	bl	80115b0 <iprintf>

	if (net_get_ip_address(hnet, &ipAddr) != NET_OK) {
 8003d18:	4b71      	ldr	r3, [pc, #452]	@ (8003ee0 <brokerConnect+0x214>)
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	f107 0210 	add.w	r2, r7, #16
 8003d20:	4611      	mov	r1, r2
 8003d22:	4618      	mov	r0, r3
 8003d24:	f7fd f92c 	bl	8000f80 <net_get_ip_address>
 8003d28:	4603      	mov	r3, r0
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d003      	beq.n	8003d36 <brokerConnect+0x6a>
		printf("\n\rError 2");
 8003d2e:	4870      	ldr	r0, [pc, #448]	@ (8003ef0 <brokerConnect+0x224>)
 8003d30:	f00d fc3e 	bl	80115b0 <iprintf>
 8003d34:	e013      	b.n	8003d5e <brokerConnect+0x92>
	}
	else
	{
		switch(ipAddr.ipv) {
 8003d36:	7c3b      	ldrb	r3, [r7, #16]
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d10d      	bne.n	8003d58 <brokerConnect+0x8c>
			case NET_IP_V4:
				printf("\n\rIP address: %d.%d.%d.%d\n\r", ipAddr.ip[12], ipAddr.ip[13], ipAddr.ip[14], ipAddr.ip[15]);
 8003d3c:	7f7b      	ldrb	r3, [r7, #29]
 8003d3e:	4619      	mov	r1, r3
 8003d40:	7fbb      	ldrb	r3, [r7, #30]
 8003d42:	461a      	mov	r2, r3
 8003d44:	7ffb      	ldrb	r3, [r7, #31]
 8003d46:	4618      	mov	r0, r3
 8003d48:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003d4c:	9300      	str	r3, [sp, #0]
 8003d4e:	4603      	mov	r3, r0
 8003d50:	4868      	ldr	r0, [pc, #416]	@ (8003ef4 <brokerConnect+0x228>)
 8003d52:	f00d fc2d 	bl	80115b0 <iprintf>
				break;
 8003d56:	e002      	b.n	8003d5e <brokerConnect+0x92>
			case NET_IP_V6:
			default:
				printf("\n\rError 3");
 8003d58:	4867      	ldr	r0, [pc, #412]	@ (8003ef8 <brokerConnect+0x22c>)
 8003d5a:	f00d fc29 	bl	80115b0 <iprintf>
		}
	}

	if (net_get_mac_address(hnet, &macAddr) == NET_OK) {
 8003d5e:	4b60      	ldr	r3, [pc, #384]	@ (8003ee0 <brokerConnect+0x214>)
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	f107 0208 	add.w	r2, r7, #8
 8003d66:	4611      	mov	r1, r2
 8003d68:	4618      	mov	r0, r3
 8003d6a:	f7fd f955 	bl	8001018 <net_get_mac_address>
 8003d6e:	4603      	mov	r3, r0
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d111      	bne.n	8003d98 <brokerConnect+0xcc>
		printf("\n\rMac Address: %02x:%02x:%02x:%02x:%02x:%02x\r\n",
	               macAddr.mac[0], macAddr.mac[1], macAddr.mac[2], macAddr.mac[3], macAddr.mac[4], macAddr.mac[5]);
 8003d74:	7a3b      	ldrb	r3, [r7, #8]
		printf("\n\rMac Address: %02x:%02x:%02x:%02x:%02x:%02x\r\n",
 8003d76:	4618      	mov	r0, r3
	               macAddr.mac[0], macAddr.mac[1], macAddr.mac[2], macAddr.mac[3], macAddr.mac[4], macAddr.mac[5]);
 8003d78:	7a7b      	ldrb	r3, [r7, #9]
		printf("\n\rMac Address: %02x:%02x:%02x:%02x:%02x:%02x\r\n",
 8003d7a:	461c      	mov	r4, r3
	               macAddr.mac[0], macAddr.mac[1], macAddr.mac[2], macAddr.mac[3], macAddr.mac[4], macAddr.mac[5]);
 8003d7c:	7abb      	ldrb	r3, [r7, #10]
		printf("\n\rMac Address: %02x:%02x:%02x:%02x:%02x:%02x\r\n",
 8003d7e:	461d      	mov	r5, r3
	               macAddr.mac[0], macAddr.mac[1], macAddr.mac[2], macAddr.mac[3], macAddr.mac[4], macAddr.mac[5]);
 8003d80:	7afb      	ldrb	r3, [r7, #11]
 8003d82:	7b3a      	ldrb	r2, [r7, #12]
 8003d84:	7b79      	ldrb	r1, [r7, #13]
		printf("\n\rMac Address: %02x:%02x:%02x:%02x:%02x:%02x\r\n",
 8003d86:	9102      	str	r1, [sp, #8]
 8003d88:	9201      	str	r2, [sp, #4]
 8003d8a:	9300      	str	r3, [sp, #0]
 8003d8c:	462b      	mov	r3, r5
 8003d8e:	4622      	mov	r2, r4
 8003d90:	4601      	mov	r1, r0
 8003d92:	485a      	ldr	r0, [pc, #360]	@ (8003efc <brokerConnect+0x230>)
 8003d94:	f00d fc0c 	bl	80115b0 <iprintf>
	}

	/*
	* Fetch the epoch time from st.com and use it to set the RTC time
	*/
	if (setRTCTimeDateFromNetwork(true) != TD_OK) {
 8003d98:	2001      	movs	r0, #1
 8003d9a:	f7fd ff49 	bl	8001c30 <setRTCTimeDateFromNetwork>
 8003d9e:	4603      	mov	r3, r0
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	d003      	beq.n	8003dac <brokerConnect+0xe0>
		printf("Fail setting time\r\n");
 8003da4:	4856      	ldr	r0, [pc, #344]	@ (8003f00 <brokerConnect+0x234>)
 8003da6:	f00d fc73 	bl	8011690 <puts>
 8003daa:	e008      	b.n	8003dbe <brokerConnect+0xf2>
	}
	else {
		printf("Time set, Starting RTC\r\n");
 8003dac:	4855      	ldr	r0, [pc, #340]	@ (8003f04 <brokerConnect+0x238>)
 8003dae:	f00d fc6f 	bl	8011690 <puts>
		//RTC started with a 1-second wake-up interrupt
		HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 2047, RTC_WAKEUPCLOCK_RTCCLK_DIV16);
 8003db2:	2200      	movs	r2, #0
 8003db4:	f240 71ff 	movw	r1, #2047	@ 0x7ff
 8003db8:	4853      	ldr	r0, [pc, #332]	@ (8003f08 <brokerConnect+0x23c>)
 8003dba:	f005 fae3 	bl	8009384 <HAL_RTCEx_SetWakeUpTimer_IT>
	}

	printf("Connecting to MQTT Broker Server\r\n\n");
 8003dbe:	4853      	ldr	r0, [pc, #332]	@ (8003f0c <brokerConnect+0x240>)
 8003dc0:	f00d fc66 	bl	8011690 <puts>
	//Create network socket
	ret = net_sock_create(hnet, &socket, NET_PROTO_TCP);
 8003dc4:	4b46      	ldr	r3, [pc, #280]	@ (8003ee0 <brokerConnect+0x214>)
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	2201      	movs	r2, #1
 8003dca:	4951      	ldr	r1, [pc, #324]	@ (8003f10 <brokerConnect+0x244>)
 8003dcc:	4618      	mov	r0, r3
 8003dce:	f7fd f963 	bl	8001098 <net_sock_create>
 8003dd2:	63f8      	str	r0, [r7, #60]	@ 0x3c
	if (ret != NET_OK)
 8003dd4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	d007      	beq.n	8003dea <brokerConnect+0x11e>
	{
		printf("\n\rCould not create the socket.\r\n");
 8003dda:	484e      	ldr	r0, [pc, #312]	@ (8003f14 <brokerConnect+0x248>)
 8003ddc:	f00d fc58 	bl	8011690 <puts>
		printf("Check MQTT broker configuration settings.\r\n");
 8003de0:	484d      	ldr	r0, [pc, #308]	@ (8003f18 <brokerConnect+0x24c>)
 8003de2:	f00d fc55 	bl	8011690 <puts>
		while(1);
 8003de6:	bf00      	nop
 8003de8:	e7fd      	b.n	8003de6 <brokerConnect+0x11a>
	}
	else
	{
		ret |= net_sock_setopt(socket, "sock_noblocking", NULL, 0);
 8003dea:	4b49      	ldr	r3, [pc, #292]	@ (8003f10 <brokerConnect+0x244>)
 8003dec:	6818      	ldr	r0, [r3, #0]
 8003dee:	2300      	movs	r3, #0
 8003df0:	2200      	movs	r2, #0
 8003df2:	494a      	ldr	r1, [pc, #296]	@ (8003f1c <brokerConnect+0x250>)
 8003df4:	f7fd f99c 	bl	8001130 <net_sock_setopt>
 8003df8:	4602      	mov	r2, r0
 8003dfa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003dfc:	4313      	orrs	r3, r2
 8003dfe:	63fb      	str	r3, [r7, #60]	@ 0x3c
	}

	ret = net_sock_open(socket, MQTT_Config.HostName, 1883, 0);
 8003e00:	4b43      	ldr	r3, [pc, #268]	@ (8003f10 <brokerConnect+0x244>)
 8003e02:	6818      	ldr	r0, [r3, #0]
 8003e04:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8003e06:	2300      	movs	r3, #0
 8003e08:	f240 725b 	movw	r2, #1883	@ 0x75b
 8003e0c:	f7fd f97a 	bl	8001104 <net_sock_open>
 8003e10:	63f8      	str	r0, [r7, #60]	@ 0x3c
	if (ret != NET_OK)
 8003e12:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	d004      	beq.n	8003e22 <brokerConnect+0x156>
	{
		printf("\n\rCould not open the socket.");
 8003e18:	4841      	ldr	r0, [pc, #260]	@ (8003f20 <brokerConnect+0x254>)
 8003e1a:	f00d fbc9 	bl	80115b0 <iprintf>
		while(1);
 8003e1e:	bf00      	nop
 8003e20:	e7fd      	b.n	8003e1e <brokerConnect+0x152>
	}
	else {
		printf("\r\nConnected to MQTT Broker Server\r\n");
 8003e22:	4840      	ldr	r0, [pc, #256]	@ (8003f24 <brokerConnect+0x258>)
 8003e24:	f00d fc34 	bl	8011690 <puts>
		HAL_Delay(1000);
 8003e28:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003e2c:	f001 fe32 	bl	8005a94 <HAL_Delay>
	}

	network.my_socket = socket;
 8003e30:	4b37      	ldr	r3, [pc, #220]	@ (8003f10 <brokerConnect+0x244>)
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	4a3c      	ldr	r2, [pc, #240]	@ (8003f28 <brokerConnect+0x25c>)
 8003e36:	6013      	str	r3, [r2, #0]
	network.mqttread = (network_rd);
 8003e38:	4b3b      	ldr	r3, [pc, #236]	@ (8003f28 <brokerConnect+0x25c>)
 8003e3a:	4a3c      	ldr	r2, [pc, #240]	@ (8003f2c <brokerConnect+0x260>)
 8003e3c:	605a      	str	r2, [r3, #4]
	network.mqttwrite = (network_wr);
 8003e3e:	4b3a      	ldr	r3, [pc, #232]	@ (8003f28 <brokerConnect+0x25c>)
 8003e40:	4a3b      	ldr	r2, [pc, #236]	@ (8003f30 <brokerConnect+0x264>)
 8003e42:	609a      	str	r2, [r3, #8]

	MQTTClientInit(client, &network, MQTT_CMD_TIMEOUT, mqtt_send_buffer, MQTT_SEND_BUFFER_SIZE,
 8003e44:	f44f 7316 	mov.w	r3, #600	@ 0x258
 8003e48:	9302      	str	r3, [sp, #8]
 8003e4a:	4b3a      	ldr	r3, [pc, #232]	@ (8003f34 <brokerConnect+0x268>)
 8003e4c:	9301      	str	r3, [sp, #4]
 8003e4e:	f44f 7316 	mov.w	r3, #600	@ 0x258
 8003e52:	9300      	str	r3, [sp, #0]
 8003e54:	4b38      	ldr	r3, [pc, #224]	@ (8003f38 <brokerConnect+0x26c>)
 8003e56:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003e5a:	4933      	ldr	r1, [pc, #204]	@ (8003f28 <brokerConnect+0x25c>)
 8003e5c:	6878      	ldr	r0, [r7, #4]
 8003e5e:	f008 fa86 	bl	800c36e <MQTTClientInit>
			mqtt_read_buffer, MQTT_READ_BUFFER_SIZE);

	/* MQTT connect */
	options.clientID.cstring = MQTT_Config.MQClientId;
 8003e62:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003e64:	4a35      	ldr	r2, [pc, #212]	@ (8003f3c <brokerConnect+0x270>)
 8003e66:	60d3      	str	r3, [r2, #12]
	options.username.cstring = MQTT_Config.MQUserName;
 8003e68:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003e6a:	4a34      	ldr	r2, [pc, #208]	@ (8003f3c <brokerConnect+0x270>)
 8003e6c:	6413      	str	r3, [r2, #64]	@ 0x40
	options.password.cstring = MQTT_Config.MQUserPwd;
 8003e6e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003e70:	4a32      	ldr	r2, [pc, #200]	@ (8003f3c <brokerConnect+0x270>)
 8003e72:	64d3      	str	r3, [r2, #76]	@ 0x4c

	HAL_Delay(1000);
 8003e74:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003e78:	f001 fe0c 	bl	8005a94 <HAL_Delay>

	printf("Connecting client to MQTT Broker\r\n\n");
 8003e7c:	4830      	ldr	r0, [pc, #192]	@ (8003f40 <brokerConnect+0x274>)
 8003e7e:	f00d fc07 	bl	8011690 <puts>
	ret = MQTTConnect(client, &options);
 8003e82:	492e      	ldr	r1, [pc, #184]	@ (8003f3c <brokerConnect+0x270>)
 8003e84:	6878      	ldr	r0, [r7, #4]
 8003e86:	f008 feb5 	bl	800cbf4 <MQTTConnect>
 8003e8a:	63f8      	str	r0, [r7, #60]	@ 0x3c
	if (ret != 0)
 8003e8c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d008      	beq.n	8003ea4 <brokerConnect+0x1d8>
	{
		printf("\n\rMQTTConnect() failed: %ld\n", ret);
 8003e92:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003e94:	482b      	ldr	r0, [pc, #172]	@ (8003f44 <brokerConnect+0x278>)
 8003e96:	f00d fb8b 	bl	80115b0 <iprintf>
		printf("Check MQTT client credential settings.\r\n");
 8003e9a:	482b      	ldr	r0, [pc, #172]	@ (8003f48 <brokerConnect+0x27c>)
 8003e9c:	f00d fbf8 	bl	8011690 <puts>
		while(1);
 8003ea0:	bf00      	nop
 8003ea2:	e7fd      	b.n	8003ea0 <brokerConnect+0x1d4>
	}
	else
	{
		printf("\n\rClient Connected to MQTT Broker\r\n");
 8003ea4:	4829      	ldr	r0, [pc, #164]	@ (8003f4c <brokerConnect+0x280>)
 8003ea6:	f00d fbf3 	bl	8011690 <puts>
		HAL_Delay(1000);
 8003eaa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003eae:	f001 fdf1 	bl	8005a94 <HAL_Delay>
	}
	HAL_Delay(1000);
 8003eb2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003eb6:	f001 fded 	bl	8005a94 <HAL_Delay>

}
 8003eba:	bf00      	nop
 8003ebc:	3740      	adds	r7, #64	@ 0x40
 8003ebe:	46bd      	mov	sp, r7
 8003ec0:	bdb0      	pop	{r4, r5, r7, pc}
 8003ec2:	bf00      	nop
 8003ec4:	08014d70 	.word	0x08014d70
 8003ec8:	08014d8c 	.word	0x08014d8c
 8003ecc:	08014d94 	.word	0x08014d94
 8003ed0:	08014d98 	.word	0x08014d98
 8003ed4:	08014dbc 	.word	0x08014dbc
 8003ed8:	08014dc0 	.word	0x08014dc0
 8003edc:	0800230d 	.word	0x0800230d
 8003ee0:	20000d18 	.word	0x20000d18
 8003ee4:	08014ddc 	.word	0x08014ddc
 8003ee8:	08014de4 	.word	0x08014de4
 8003eec:	08014dec 	.word	0x08014dec
 8003ef0:	08014e0c 	.word	0x08014e0c
 8003ef4:	08014e18 	.word	0x08014e18
 8003ef8:	08014e34 	.word	0x08014e34
 8003efc:	08014e40 	.word	0x08014e40
 8003f00:	08014e70 	.word	0x08014e70
 8003f04:	08014e84 	.word	0x08014e84
 8003f08:	200005ec 	.word	0x200005ec
 8003f0c:	08014e9c 	.word	0x08014e9c
 8003f10:	20000d28 	.word	0x20000d28
 8003f14:	08014ec0 	.word	0x08014ec0
 8003f18:	08014ee0 	.word	0x08014ee0
 8003f1c:	08014f0c 	.word	0x08014f0c
 8003f20:	08014f1c 	.word	0x08014f1c
 8003f24:	08014f3c 	.word	0x08014f3c
 8003f28:	20000d1c 	.word	0x20000d1c
 8003f2c:	08002dc9 	.word	0x08002dc9
 8003f30:	08002e1d 	.word	0x08002e1d
 8003f34:	200012a8 	.word	0x200012a8
 8003f38:	20001050 	.word	0x20001050
 8003f3c:	20000004 	.word	0x20000004
 8003f40:	08014f60 	.word	0x08014f60
 8003f44:	08014f84 	.word	0x08014f84
 8003f48:	08014fa4 	.word	0x08014fa4
 8003f4c:	08014fcc 	.word	0x08014fcc

08003f50 <Reset_Handler>:
 8003f50:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8003f88 <LoopForever+0x2>
 8003f54:	f7ff fc78 	bl	8003848 <SystemInit>
 8003f58:	480c      	ldr	r0, [pc, #48]	@ (8003f8c <LoopForever+0x6>)
 8003f5a:	490d      	ldr	r1, [pc, #52]	@ (8003f90 <LoopForever+0xa>)
 8003f5c:	4a0d      	ldr	r2, [pc, #52]	@ (8003f94 <LoopForever+0xe>)
 8003f5e:	2300      	movs	r3, #0
 8003f60:	e002      	b.n	8003f68 <LoopCopyDataInit>

08003f62 <CopyDataInit>:
 8003f62:	58d4      	ldr	r4, [r2, r3]
 8003f64:	50c4      	str	r4, [r0, r3]
 8003f66:	3304      	adds	r3, #4

08003f68 <LoopCopyDataInit>:
 8003f68:	18c4      	adds	r4, r0, r3
 8003f6a:	428c      	cmp	r4, r1
 8003f6c:	d3f9      	bcc.n	8003f62 <CopyDataInit>
 8003f6e:	4a0a      	ldr	r2, [pc, #40]	@ (8003f98 <LoopForever+0x12>)
 8003f70:	4c0a      	ldr	r4, [pc, #40]	@ (8003f9c <LoopForever+0x16>)
 8003f72:	2300      	movs	r3, #0
 8003f74:	e001      	b.n	8003f7a <LoopFillZerobss>

08003f76 <FillZerobss>:
 8003f76:	6013      	str	r3, [r2, #0]
 8003f78:	3204      	adds	r2, #4

08003f7a <LoopFillZerobss>:
 8003f7a:	42a2      	cmp	r2, r4
 8003f7c:	d3fb      	bcc.n	8003f76 <FillZerobss>
 8003f7e:	f00d fe67 	bl	8011c50 <__libc_init_array>
 8003f82:	f7fe fac9 	bl	8002518 <main>

08003f86 <LoopForever>:
 8003f86:	e7fe      	b.n	8003f86 <LoopForever>
 8003f88:	20018000 	.word	0x20018000
 8003f8c:	20000000 	.word	0x20000000
 8003f90:	20000240 	.word	0x20000240
 8003f94:	08015a84 	.word	0x08015a84
 8003f98:	20000240 	.word	0x20000240
 8003f9c:	20006dc0 	.word	0x20006dc0

08003fa0 <ADC1_2_IRQHandler>:
 8003fa0:	e7fe      	b.n	8003fa0 <ADC1_2_IRQHandler>

08003fa2 <stm32_lock_init>:
 8003fa2:	b580      	push	{r7, lr}
 8003fa4:	b084      	sub	sp, #16
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	6078      	str	r0, [r7, #4]
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d105      	bne.n	8003fbc <stm32_lock_init+0x1a>
 8003fb0:	b672      	cpsid	i
 8003fb2:	bf00      	nop
 8003fb4:	f7fe ff7c 	bl	8002eb0 <Error_Handler>
 8003fb8:	bf00      	nop
 8003fba:	e7fd      	b.n	8003fb8 <stm32_lock_init+0x16>
 8003fbc:	2300      	movs	r3, #0
 8003fbe:	60fb      	str	r3, [r7, #12]
 8003fc0:	e007      	b.n	8003fd2 <stm32_lock_init+0x30>
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	68fa      	ldr	r2, [r7, #12]
 8003fc6:	2100      	movs	r1, #0
 8003fc8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	3301      	adds	r3, #1
 8003fd0:	60fb      	str	r3, [r7, #12]
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	2b01      	cmp	r3, #1
 8003fd6:	d9f4      	bls.n	8003fc2 <stm32_lock_init+0x20>
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	2200      	movs	r2, #0
 8003fdc:	721a      	strb	r2, [r3, #8]
 8003fde:	bf00      	nop
 8003fe0:	3710      	adds	r7, #16
 8003fe2:	46bd      	mov	sp, r7
 8003fe4:	bd80      	pop	{r7, pc}

08003fe6 <stm32_lock_acquire>:
 8003fe6:	b580      	push	{r7, lr}
 8003fe8:	b084      	sub	sp, #16
 8003fea:	af00      	add	r7, sp, #0
 8003fec:	6078      	str	r0, [r7, #4]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d105      	bne.n	8004000 <stm32_lock_acquire+0x1a>
 8003ff4:	b672      	cpsid	i
 8003ff6:	bf00      	nop
 8003ff8:	f7fe ff5a 	bl	8002eb0 <Error_Handler>
 8003ffc:	bf00      	nop
 8003ffe:	e7fd      	b.n	8003ffc <stm32_lock_acquire+0x16>
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	7a1b      	ldrb	r3, [r3, #8]
 8004004:	2b01      	cmp	r3, #1
 8004006:	d905      	bls.n	8004014 <stm32_lock_acquire+0x2e>
 8004008:	b672      	cpsid	i
 800400a:	bf00      	nop
 800400c:	f7fe ff50 	bl	8002eb0 <Error_Handler>
 8004010:	bf00      	nop
 8004012:	e7fd      	b.n	8004010 <stm32_lock_acquire+0x2a>
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	7a1b      	ldrb	r3, [r3, #8]
 8004018:	1c5a      	adds	r2, r3, #1
 800401a:	b2d1      	uxtb	r1, r2
 800401c:	687a      	ldr	r2, [r7, #4]
 800401e:	7211      	strb	r1, [r2, #8]
 8004020:	4619      	mov	r1, r3
 8004022:	f3ef 8211 	mrs	r2, BASEPRI
 8004026:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800402a:	f383 8811 	msr	BASEPRI, r3
 800402e:	f3bf 8f6f 	isb	sy
 8004032:	f3bf 8f4f 	dsb	sy
 8004036:	60fa      	str	r2, [r7, #12]
 8004038:	60bb      	str	r3, [r7, #8]
 800403a:	68fa      	ldr	r2, [r7, #12]
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8004042:	bf00      	nop
 8004044:	3710      	adds	r7, #16
 8004046:	46bd      	mov	sp, r7
 8004048:	bd80      	pop	{r7, pc}

0800404a <stm32_lock_release>:
 800404a:	b580      	push	{r7, lr}
 800404c:	b084      	sub	sp, #16
 800404e:	af00      	add	r7, sp, #0
 8004050:	6078      	str	r0, [r7, #4]
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	2b00      	cmp	r3, #0
 8004056:	d105      	bne.n	8004064 <stm32_lock_release+0x1a>
 8004058:	b672      	cpsid	i
 800405a:	bf00      	nop
 800405c:	f7fe ff28 	bl	8002eb0 <Error_Handler>
 8004060:	bf00      	nop
 8004062:	e7fd      	b.n	8004060 <stm32_lock_release+0x16>
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	7a1b      	ldrb	r3, [r3, #8]
 8004068:	3b01      	subs	r3, #1
 800406a:	b2da      	uxtb	r2, r3
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	721a      	strb	r2, [r3, #8]
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	7a1b      	ldrb	r3, [r3, #8]
 8004074:	2b01      	cmp	r3, #1
 8004076:	d905      	bls.n	8004084 <stm32_lock_release+0x3a>
 8004078:	b672      	cpsid	i
 800407a:	bf00      	nop
 800407c:	f7fe ff18 	bl	8002eb0 <Error_Handler>
 8004080:	bf00      	nop
 8004082:	e7fd      	b.n	8004080 <stm32_lock_release+0x36>
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	7a1b      	ldrb	r3, [r3, #8]
 8004088:	461a      	mov	r2, r3
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004090:	60fb      	str	r3, [r7, #12]
 8004092:	68fb      	ldr	r3, [r7, #12]
 8004094:	f383 8811 	msr	BASEPRI, r3
 8004098:	bf00      	nop
 800409a:	bf00      	nop
 800409c:	3710      	adds	r7, #16
 800409e:	46bd      	mov	sp, r7
 80040a0:	bd80      	pop	{r7, pc}

080040a2 <__retarget_lock_init_recursive>:
 80040a2:	b580      	push	{r7, lr}
 80040a4:	b082      	sub	sp, #8
 80040a6:	af00      	add	r7, sp, #0
 80040a8:	6078      	str	r0, [r7, #4]
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d105      	bne.n	80040bc <__retarget_lock_init_recursive+0x1a>
 80040b0:	f00d fdc8 	bl	8011c44 <__errno>
 80040b4:	4603      	mov	r3, r0
 80040b6:	2216      	movs	r2, #22
 80040b8:	601a      	str	r2, [r3, #0]
 80040ba:	e016      	b.n	80040ea <__retarget_lock_init_recursive+0x48>
 80040bc:	200c      	movs	r0, #12
 80040be:	f00c fbeb 	bl	8010898 <malloc>
 80040c2:	4603      	mov	r3, r0
 80040c4:	461a      	mov	r2, r3
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	601a      	str	r2, [r3, #0]
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d005      	beq.n	80040de <__retarget_lock_init_recursive+0x3c>
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	4618      	mov	r0, r3
 80040d8:	f7ff ff63 	bl	8003fa2 <stm32_lock_init>
 80040dc:	e005      	b.n	80040ea <__retarget_lock_init_recursive+0x48>
 80040de:	b672      	cpsid	i
 80040e0:	bf00      	nop
 80040e2:	f7fe fee5 	bl	8002eb0 <Error_Handler>
 80040e6:	bf00      	nop
 80040e8:	e7fd      	b.n	80040e6 <__retarget_lock_init_recursive+0x44>
 80040ea:	3708      	adds	r7, #8
 80040ec:	46bd      	mov	sp, r7
 80040ee:	bd80      	pop	{r7, pc}

080040f0 <__retarget_lock_acquire_recursive>:
 80040f0:	b580      	push	{r7, lr}
 80040f2:	b082      	sub	sp, #8
 80040f4:	af00      	add	r7, sp, #0
 80040f6:	6078      	str	r0, [r7, #4]
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d105      	bne.n	800410a <__retarget_lock_acquire_recursive+0x1a>
 80040fe:	b672      	cpsid	i
 8004100:	bf00      	nop
 8004102:	f7fe fed5 	bl	8002eb0 <Error_Handler>
 8004106:	bf00      	nop
 8004108:	e7fd      	b.n	8004106 <__retarget_lock_acquire_recursive+0x16>
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	4618      	mov	r0, r3
 800410e:	f7ff ff6a 	bl	8003fe6 <stm32_lock_acquire>
 8004112:	bf00      	nop
 8004114:	3708      	adds	r7, #8
 8004116:	46bd      	mov	sp, r7
 8004118:	bd80      	pop	{r7, pc}

0800411a <__retarget_lock_release_recursive>:
 800411a:	b580      	push	{r7, lr}
 800411c:	b082      	sub	sp, #8
 800411e:	af00      	add	r7, sp, #0
 8004120:	6078      	str	r0, [r7, #4]
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	2b00      	cmp	r3, #0
 8004126:	d105      	bne.n	8004134 <__retarget_lock_release_recursive+0x1a>
 8004128:	b672      	cpsid	i
 800412a:	bf00      	nop
 800412c:	f7fe fec0 	bl	8002eb0 <Error_Handler>
 8004130:	bf00      	nop
 8004132:	e7fd      	b.n	8004130 <__retarget_lock_release_recursive+0x16>
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	4618      	mov	r0, r3
 8004138:	f7ff ff87 	bl	800404a <stm32_lock_release>
 800413c:	bf00      	nop
 800413e:	3708      	adds	r7, #8
 8004140:	46bd      	mov	sp, r7
 8004142:	bd80      	pop	{r7, pc}

08004144 <I2Cx_MspInit>:
 8004144:	b580      	push	{r7, lr}
 8004146:	b08a      	sub	sp, #40	@ 0x28
 8004148:	af00      	add	r7, sp, #0
 800414a:	6078      	str	r0, [r7, #4]
 800414c:	4b27      	ldr	r3, [pc, #156]	@ (80041ec <I2Cx_MspInit+0xa8>)
 800414e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004150:	4a26      	ldr	r2, [pc, #152]	@ (80041ec <I2Cx_MspInit+0xa8>)
 8004152:	f043 0302 	orr.w	r3, r3, #2
 8004156:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8004158:	4b24      	ldr	r3, [pc, #144]	@ (80041ec <I2Cx_MspInit+0xa8>)
 800415a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800415c:	f003 0302 	and.w	r3, r3, #2
 8004160:	613b      	str	r3, [r7, #16]
 8004162:	693b      	ldr	r3, [r7, #16]
 8004164:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004168:	617b      	str	r3, [r7, #20]
 800416a:	2312      	movs	r3, #18
 800416c:	61bb      	str	r3, [r7, #24]
 800416e:	2301      	movs	r3, #1
 8004170:	61fb      	str	r3, [r7, #28]
 8004172:	2303      	movs	r3, #3
 8004174:	623b      	str	r3, [r7, #32]
 8004176:	2304      	movs	r3, #4
 8004178:	627b      	str	r3, [r7, #36]	@ 0x24
 800417a:	f107 0314 	add.w	r3, r7, #20
 800417e:	4619      	mov	r1, r3
 8004180:	481b      	ldr	r0, [pc, #108]	@ (80041f0 <I2Cx_MspInit+0xac>)
 8004182:	f001 fedb 	bl	8005f3c <HAL_GPIO_Init>
 8004186:	f107 0314 	add.w	r3, r7, #20
 800418a:	4619      	mov	r1, r3
 800418c:	4818      	ldr	r0, [pc, #96]	@ (80041f0 <I2Cx_MspInit+0xac>)
 800418e:	f001 fed5 	bl	8005f3c <HAL_GPIO_Init>
 8004192:	4b16      	ldr	r3, [pc, #88]	@ (80041ec <I2Cx_MspInit+0xa8>)
 8004194:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004196:	4a15      	ldr	r2, [pc, #84]	@ (80041ec <I2Cx_MspInit+0xa8>)
 8004198:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800419c:	6593      	str	r3, [r2, #88]	@ 0x58
 800419e:	4b13      	ldr	r3, [pc, #76]	@ (80041ec <I2Cx_MspInit+0xa8>)
 80041a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80041a2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80041a6:	60fb      	str	r3, [r7, #12]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	4b10      	ldr	r3, [pc, #64]	@ (80041ec <I2Cx_MspInit+0xa8>)
 80041ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80041ae:	4a0f      	ldr	r2, [pc, #60]	@ (80041ec <I2Cx_MspInit+0xa8>)
 80041b0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80041b4:	6393      	str	r3, [r2, #56]	@ 0x38
 80041b6:	4b0d      	ldr	r3, [pc, #52]	@ (80041ec <I2Cx_MspInit+0xa8>)
 80041b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80041ba:	4a0c      	ldr	r2, [pc, #48]	@ (80041ec <I2Cx_MspInit+0xa8>)
 80041bc:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 80041c0:	6393      	str	r3, [r2, #56]	@ 0x38
 80041c2:	2200      	movs	r2, #0
 80041c4:	210f      	movs	r1, #15
 80041c6:	2021      	movs	r0, #33	@ 0x21
 80041c8:	f001 fd40 	bl	8005c4c <HAL_NVIC_SetPriority>
 80041cc:	2021      	movs	r0, #33	@ 0x21
 80041ce:	f001 fd59 	bl	8005c84 <HAL_NVIC_EnableIRQ>
 80041d2:	2200      	movs	r2, #0
 80041d4:	210f      	movs	r1, #15
 80041d6:	2022      	movs	r0, #34	@ 0x22
 80041d8:	f001 fd38 	bl	8005c4c <HAL_NVIC_SetPriority>
 80041dc:	2022      	movs	r0, #34	@ 0x22
 80041de:	f001 fd51 	bl	8005c84 <HAL_NVIC_EnableIRQ>
 80041e2:	bf00      	nop
 80041e4:	3728      	adds	r7, #40	@ 0x28
 80041e6:	46bd      	mov	sp, r7
 80041e8:	bd80      	pop	{r7, pc}
 80041ea:	bf00      	nop
 80041ec:	40021000 	.word	0x40021000
 80041f0:	48000400 	.word	0x48000400

080041f4 <I2Cx_Init>:
 80041f4:	b580      	push	{r7, lr}
 80041f6:	b082      	sub	sp, #8
 80041f8:	af00      	add	r7, sp, #0
 80041fa:	6078      	str	r0, [r7, #4]
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	4a12      	ldr	r2, [pc, #72]	@ (8004248 <I2Cx_Init+0x54>)
 8004200:	601a      	str	r2, [r3, #0]
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	4a11      	ldr	r2, [pc, #68]	@ (800424c <I2Cx_Init+0x58>)
 8004206:	605a      	str	r2, [r3, #4]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	2200      	movs	r2, #0
 800420c:	609a      	str	r2, [r3, #8]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	2201      	movs	r2, #1
 8004212:	60da      	str	r2, [r3, #12]
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	2200      	movs	r2, #0
 8004218:	611a      	str	r2, [r3, #16]
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	2200      	movs	r2, #0
 800421e:	615a      	str	r2, [r3, #20]
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	2200      	movs	r2, #0
 8004224:	61da      	str	r2, [r3, #28]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	2200      	movs	r2, #0
 800422a:	621a      	str	r2, [r3, #32]
 800422c:	6878      	ldr	r0, [r7, #4]
 800422e:	f7ff ff89 	bl	8004144 <I2Cx_MspInit>
 8004232:	6878      	ldr	r0, [r7, #4]
 8004234:	f002 f968 	bl	8006508 <HAL_I2C_Init>
 8004238:	2100      	movs	r1, #0
 800423a:	6878      	ldr	r0, [r7, #4]
 800423c:	f002 ff1e 	bl	800707c <HAL_I2CEx_ConfigAnalogFilter>
 8004240:	bf00      	nop
 8004242:	3708      	adds	r7, #8
 8004244:	46bd      	mov	sp, r7
 8004246:	bd80      	pop	{r7, pc}
 8004248:	40005800 	.word	0x40005800
 800424c:	00702681 	.word	0x00702681

08004250 <I2Cx_ReadMultiple>:
 8004250:	b580      	push	{r7, lr}
 8004252:	b08a      	sub	sp, #40	@ 0x28
 8004254:	af04      	add	r7, sp, #16
 8004256:	60f8      	str	r0, [r7, #12]
 8004258:	4608      	mov	r0, r1
 800425a:	4611      	mov	r1, r2
 800425c:	461a      	mov	r2, r3
 800425e:	4603      	mov	r3, r0
 8004260:	72fb      	strb	r3, [r7, #11]
 8004262:	460b      	mov	r3, r1
 8004264:	813b      	strh	r3, [r7, #8]
 8004266:	4613      	mov	r3, r2
 8004268:	80fb      	strh	r3, [r7, #6]
 800426a:	2300      	movs	r3, #0
 800426c:	75fb      	strb	r3, [r7, #23]
 800426e:	7afb      	ldrb	r3, [r7, #11]
 8004270:	b299      	uxth	r1, r3
 8004272:	88f8      	ldrh	r0, [r7, #6]
 8004274:	893a      	ldrh	r2, [r7, #8]
 8004276:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800427a:	9302      	str	r3, [sp, #8]
 800427c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800427e:	9301      	str	r3, [sp, #4]
 8004280:	6a3b      	ldr	r3, [r7, #32]
 8004282:	9300      	str	r3, [sp, #0]
 8004284:	4603      	mov	r3, r0
 8004286:	68f8      	ldr	r0, [r7, #12]
 8004288:	f002 fb1c 	bl	80068c4 <HAL_I2C_Mem_Read>
 800428c:	4603      	mov	r3, r0
 800428e:	75fb      	strb	r3, [r7, #23]
 8004290:	7dfb      	ldrb	r3, [r7, #23]
 8004292:	2b00      	cmp	r3, #0
 8004294:	d004      	beq.n	80042a0 <I2Cx_ReadMultiple+0x50>
 8004296:	7afb      	ldrb	r3, [r7, #11]
 8004298:	4619      	mov	r1, r3
 800429a:	68f8      	ldr	r0, [r7, #12]
 800429c:	f000 f832 	bl	8004304 <I2Cx_Error>
 80042a0:	7dfb      	ldrb	r3, [r7, #23]
 80042a2:	4618      	mov	r0, r3
 80042a4:	3718      	adds	r7, #24
 80042a6:	46bd      	mov	sp, r7
 80042a8:	bd80      	pop	{r7, pc}

080042aa <I2Cx_WriteMultiple>:
 80042aa:	b580      	push	{r7, lr}
 80042ac:	b08a      	sub	sp, #40	@ 0x28
 80042ae:	af04      	add	r7, sp, #16
 80042b0:	60f8      	str	r0, [r7, #12]
 80042b2:	4608      	mov	r0, r1
 80042b4:	4611      	mov	r1, r2
 80042b6:	461a      	mov	r2, r3
 80042b8:	4603      	mov	r3, r0
 80042ba:	72fb      	strb	r3, [r7, #11]
 80042bc:	460b      	mov	r3, r1
 80042be:	813b      	strh	r3, [r7, #8]
 80042c0:	4613      	mov	r3, r2
 80042c2:	80fb      	strh	r3, [r7, #6]
 80042c4:	2300      	movs	r3, #0
 80042c6:	75fb      	strb	r3, [r7, #23]
 80042c8:	7afb      	ldrb	r3, [r7, #11]
 80042ca:	b299      	uxth	r1, r3
 80042cc:	88f8      	ldrh	r0, [r7, #6]
 80042ce:	893a      	ldrh	r2, [r7, #8]
 80042d0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80042d4:	9302      	str	r3, [sp, #8]
 80042d6:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80042d8:	9301      	str	r3, [sp, #4]
 80042da:	6a3b      	ldr	r3, [r7, #32]
 80042dc:	9300      	str	r3, [sp, #0]
 80042de:	4603      	mov	r3, r0
 80042e0:	68f8      	ldr	r0, [r7, #12]
 80042e2:	f002 f9db 	bl	800669c <HAL_I2C_Mem_Write>
 80042e6:	4603      	mov	r3, r0
 80042e8:	75fb      	strb	r3, [r7, #23]
 80042ea:	7dfb      	ldrb	r3, [r7, #23]
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d004      	beq.n	80042fa <I2Cx_WriteMultiple+0x50>
 80042f0:	7afb      	ldrb	r3, [r7, #11]
 80042f2:	4619      	mov	r1, r3
 80042f4:	68f8      	ldr	r0, [r7, #12]
 80042f6:	f000 f805 	bl	8004304 <I2Cx_Error>
 80042fa:	7dfb      	ldrb	r3, [r7, #23]
 80042fc:	4618      	mov	r0, r3
 80042fe:	3718      	adds	r7, #24
 8004300:	46bd      	mov	sp, r7
 8004302:	bd80      	pop	{r7, pc}

08004304 <I2Cx_Error>:
 8004304:	b580      	push	{r7, lr}
 8004306:	b082      	sub	sp, #8
 8004308:	af00      	add	r7, sp, #0
 800430a:	6078      	str	r0, [r7, #4]
 800430c:	460b      	mov	r3, r1
 800430e:	70fb      	strb	r3, [r7, #3]
 8004310:	6878      	ldr	r0, [r7, #4]
 8004312:	f002 f994 	bl	800663e <HAL_I2C_DeInit>
 8004316:	6878      	ldr	r0, [r7, #4]
 8004318:	f7ff ff6c 	bl	80041f4 <I2Cx_Init>
 800431c:	bf00      	nop
 800431e:	3708      	adds	r7, #8
 8004320:	46bd      	mov	sp, r7
 8004322:	bd80      	pop	{r7, pc}

08004324 <SENSOR_IO_Init>:
 8004324:	b580      	push	{r7, lr}
 8004326:	af00      	add	r7, sp, #0
 8004328:	4802      	ldr	r0, [pc, #8]	@ (8004334 <SENSOR_IO_Init+0x10>)
 800432a:	f7ff ff63 	bl	80041f4 <I2Cx_Init>
 800432e:	bf00      	nop
 8004330:	bd80      	pop	{r7, pc}
 8004332:	bf00      	nop
 8004334:	20001518 	.word	0x20001518

08004338 <SENSOR_IO_Write>:
 8004338:	b580      	push	{r7, lr}
 800433a:	b084      	sub	sp, #16
 800433c:	af02      	add	r7, sp, #8
 800433e:	4603      	mov	r3, r0
 8004340:	71fb      	strb	r3, [r7, #7]
 8004342:	460b      	mov	r3, r1
 8004344:	71bb      	strb	r3, [r7, #6]
 8004346:	4613      	mov	r3, r2
 8004348:	717b      	strb	r3, [r7, #5]
 800434a:	79bb      	ldrb	r3, [r7, #6]
 800434c:	b29a      	uxth	r2, r3
 800434e:	79f9      	ldrb	r1, [r7, #7]
 8004350:	2301      	movs	r3, #1
 8004352:	9301      	str	r3, [sp, #4]
 8004354:	1d7b      	adds	r3, r7, #5
 8004356:	9300      	str	r3, [sp, #0]
 8004358:	2301      	movs	r3, #1
 800435a:	4803      	ldr	r0, [pc, #12]	@ (8004368 <SENSOR_IO_Write+0x30>)
 800435c:	f7ff ffa5 	bl	80042aa <I2Cx_WriteMultiple>
 8004360:	bf00      	nop
 8004362:	3708      	adds	r7, #8
 8004364:	46bd      	mov	sp, r7
 8004366:	bd80      	pop	{r7, pc}
 8004368:	20001518 	.word	0x20001518

0800436c <SENSOR_IO_Read>:
 800436c:	b580      	push	{r7, lr}
 800436e:	b086      	sub	sp, #24
 8004370:	af02      	add	r7, sp, #8
 8004372:	4603      	mov	r3, r0
 8004374:	460a      	mov	r2, r1
 8004376:	71fb      	strb	r3, [r7, #7]
 8004378:	4613      	mov	r3, r2
 800437a:	71bb      	strb	r3, [r7, #6]
 800437c:	2300      	movs	r3, #0
 800437e:	73fb      	strb	r3, [r7, #15]
 8004380:	79bb      	ldrb	r3, [r7, #6]
 8004382:	b29a      	uxth	r2, r3
 8004384:	79f9      	ldrb	r1, [r7, #7]
 8004386:	2301      	movs	r3, #1
 8004388:	9301      	str	r3, [sp, #4]
 800438a:	f107 030f 	add.w	r3, r7, #15
 800438e:	9300      	str	r3, [sp, #0]
 8004390:	2301      	movs	r3, #1
 8004392:	4804      	ldr	r0, [pc, #16]	@ (80043a4 <SENSOR_IO_Read+0x38>)
 8004394:	f7ff ff5c 	bl	8004250 <I2Cx_ReadMultiple>
 8004398:	7bfb      	ldrb	r3, [r7, #15]
 800439a:	4618      	mov	r0, r3
 800439c:	3710      	adds	r7, #16
 800439e:	46bd      	mov	sp, r7
 80043a0:	bd80      	pop	{r7, pc}
 80043a2:	bf00      	nop
 80043a4:	20001518 	.word	0x20001518

080043a8 <SENSOR_IO_ReadMultiple>:
 80043a8:	b580      	push	{r7, lr}
 80043aa:	b084      	sub	sp, #16
 80043ac:	af02      	add	r7, sp, #8
 80043ae:	603a      	str	r2, [r7, #0]
 80043b0:	461a      	mov	r2, r3
 80043b2:	4603      	mov	r3, r0
 80043b4:	71fb      	strb	r3, [r7, #7]
 80043b6:	460b      	mov	r3, r1
 80043b8:	71bb      	strb	r3, [r7, #6]
 80043ba:	4613      	mov	r3, r2
 80043bc:	80bb      	strh	r3, [r7, #4]
 80043be:	79bb      	ldrb	r3, [r7, #6]
 80043c0:	b29a      	uxth	r2, r3
 80043c2:	79f9      	ldrb	r1, [r7, #7]
 80043c4:	88bb      	ldrh	r3, [r7, #4]
 80043c6:	9301      	str	r3, [sp, #4]
 80043c8:	683b      	ldr	r3, [r7, #0]
 80043ca:	9300      	str	r3, [sp, #0]
 80043cc:	2301      	movs	r3, #1
 80043ce:	4804      	ldr	r0, [pc, #16]	@ (80043e0 <SENSOR_IO_ReadMultiple+0x38>)
 80043d0:	f7ff ff3e 	bl	8004250 <I2Cx_ReadMultiple>
 80043d4:	4603      	mov	r3, r0
 80043d6:	4618      	mov	r0, r3
 80043d8:	3708      	adds	r7, #8
 80043da:	46bd      	mov	sp, r7
 80043dc:	bd80      	pop	{r7, pc}
 80043de:	bf00      	nop
 80043e0:	20001518 	.word	0x20001518

080043e4 <BSP_TSENSOR_Init>:
 80043e4:	b580      	push	{r7, lr}
 80043e6:	b082      	sub	sp, #8
 80043e8:	af00      	add	r7, sp, #0
 80043ea:	2301      	movs	r3, #1
 80043ec:	71fb      	strb	r3, [r7, #7]
 80043ee:	4b09      	ldr	r3, [pc, #36]	@ (8004414 <BSP_TSENSOR_Init+0x30>)
 80043f0:	4a09      	ldr	r2, [pc, #36]	@ (8004418 <BSP_TSENSOR_Init+0x34>)
 80043f2:	601a      	str	r2, [r3, #0]
 80043f4:	f7ff ff96 	bl	8004324 <SENSOR_IO_Init>
 80043f8:	4b06      	ldr	r3, [pc, #24]	@ (8004414 <BSP_TSENSOR_Init+0x30>)
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	2100      	movs	r1, #0
 8004400:	20be      	movs	r0, #190	@ 0xbe
 8004402:	4798      	blx	r3
 8004404:	2300      	movs	r3, #0
 8004406:	71fb      	strb	r3, [r7, #7]
 8004408:	79fb      	ldrb	r3, [r7, #7]
 800440a:	4618      	mov	r0, r3
 800440c:	3708      	adds	r7, #8
 800440e:	46bd      	mov	sp, r7
 8004410:	bd80      	pop	{r7, pc}
 8004412:	bf00      	nop
 8004414:	2000156c 	.word	0x2000156c
 8004418:	2000005c 	.word	0x2000005c

0800441c <BSP_TSENSOR_ReadTemp>:
 800441c:	b580      	push	{r7, lr}
 800441e:	af00      	add	r7, sp, #0
 8004420:	4b04      	ldr	r3, [pc, #16]	@ (8004434 <BSP_TSENSOR_ReadTemp+0x18>)
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	68db      	ldr	r3, [r3, #12]
 8004426:	20be      	movs	r0, #190	@ 0xbe
 8004428:	4798      	blx	r3
 800442a:	eef0 7a40 	vmov.f32	s15, s0
 800442e:	eeb0 0a67 	vmov.f32	s0, s15
 8004432:	bd80      	pop	{r7, pc}
 8004434:	2000156c 	.word	0x2000156c

08004438 <HTS221_T_Init>:
 8004438:	b580      	push	{r7, lr}
 800443a:	b084      	sub	sp, #16
 800443c:	af00      	add	r7, sp, #0
 800443e:	4603      	mov	r3, r0
 8004440:	6039      	str	r1, [r7, #0]
 8004442:	80fb      	strh	r3, [r7, #6]
 8004444:	88fb      	ldrh	r3, [r7, #6]
 8004446:	b2db      	uxtb	r3, r3
 8004448:	2120      	movs	r1, #32
 800444a:	4618      	mov	r0, r3
 800444c:	f7ff ff8e 	bl	800436c <SENSOR_IO_Read>
 8004450:	4603      	mov	r3, r0
 8004452:	73fb      	strb	r3, [r7, #15]
 8004454:	7bfb      	ldrb	r3, [r7, #15]
 8004456:	f023 0304 	bic.w	r3, r3, #4
 800445a:	73fb      	strb	r3, [r7, #15]
 800445c:	7bfb      	ldrb	r3, [r7, #15]
 800445e:	f043 0304 	orr.w	r3, r3, #4
 8004462:	73fb      	strb	r3, [r7, #15]
 8004464:	7bfb      	ldrb	r3, [r7, #15]
 8004466:	f023 0303 	bic.w	r3, r3, #3
 800446a:	73fb      	strb	r3, [r7, #15]
 800446c:	7bfb      	ldrb	r3, [r7, #15]
 800446e:	f043 0301 	orr.w	r3, r3, #1
 8004472:	73fb      	strb	r3, [r7, #15]
 8004474:	7bfb      	ldrb	r3, [r7, #15]
 8004476:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800447a:	73fb      	strb	r3, [r7, #15]
 800447c:	88fb      	ldrh	r3, [r7, #6]
 800447e:	b2db      	uxtb	r3, r3
 8004480:	7bfa      	ldrb	r2, [r7, #15]
 8004482:	2120      	movs	r1, #32
 8004484:	4618      	mov	r0, r3
 8004486:	f7ff ff57 	bl	8004338 <SENSOR_IO_Write>
 800448a:	bf00      	nop
 800448c:	3710      	adds	r7, #16
 800448e:	46bd      	mov	sp, r7
 8004490:	bd80      	pop	{r7, pc}

08004492 <HTS221_T_ReadTemp>:
 8004492:	b580      	push	{r7, lr}
 8004494:	b088      	sub	sp, #32
 8004496:	af00      	add	r7, sp, #0
 8004498:	4603      	mov	r3, r0
 800449a:	80fb      	strh	r3, [r7, #6]
 800449c:	88fb      	ldrh	r3, [r7, #6]
 800449e:	b2d8      	uxtb	r0, r3
 80044a0:	f107 0208 	add.w	r2, r7, #8
 80044a4:	2302      	movs	r3, #2
 80044a6:	21b2      	movs	r1, #178	@ 0xb2
 80044a8:	f7ff ff7e 	bl	80043a8 <SENSOR_IO_ReadMultiple>
 80044ac:	88fb      	ldrh	r3, [r7, #6]
 80044ae:	b2db      	uxtb	r3, r3
 80044b0:	2135      	movs	r1, #53	@ 0x35
 80044b2:	4618      	mov	r0, r3
 80044b4:	f7ff ff5a 	bl	800436c <SENSOR_IO_Read>
 80044b8:	4603      	mov	r3, r0
 80044ba:	77fb      	strb	r3, [r7, #31]
 80044bc:	7ffb      	ldrb	r3, [r7, #31]
 80044be:	021b      	lsls	r3, r3, #8
 80044c0:	b21b      	sxth	r3, r3
 80044c2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80044c6:	b21a      	sxth	r2, r3
 80044c8:	7a3b      	ldrb	r3, [r7, #8]
 80044ca:	b21b      	sxth	r3, r3
 80044cc:	4313      	orrs	r3, r2
 80044ce:	83bb      	strh	r3, [r7, #28]
 80044d0:	7ffb      	ldrb	r3, [r7, #31]
 80044d2:	019b      	lsls	r3, r3, #6
 80044d4:	b21b      	sxth	r3, r3
 80044d6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80044da:	b21a      	sxth	r2, r3
 80044dc:	7a7b      	ldrb	r3, [r7, #9]
 80044de:	b21b      	sxth	r3, r3
 80044e0:	4313      	orrs	r3, r2
 80044e2:	837b      	strh	r3, [r7, #26]
 80044e4:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
 80044e8:	10db      	asrs	r3, r3, #3
 80044ea:	833b      	strh	r3, [r7, #24]
 80044ec:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 80044f0:	10db      	asrs	r3, r3, #3
 80044f2:	82fb      	strh	r3, [r7, #22]
 80044f4:	88fb      	ldrh	r3, [r7, #6]
 80044f6:	b2d8      	uxtb	r0, r3
 80044f8:	f107 0208 	add.w	r2, r7, #8
 80044fc:	2304      	movs	r3, #4
 80044fe:	21bc      	movs	r1, #188	@ 0xbc
 8004500:	f7ff ff52 	bl	80043a8 <SENSOR_IO_ReadMultiple>
 8004504:	7a7b      	ldrb	r3, [r7, #9]
 8004506:	021b      	lsls	r3, r3, #8
 8004508:	b21a      	sxth	r2, r3
 800450a:	7a3b      	ldrb	r3, [r7, #8]
 800450c:	b21b      	sxth	r3, r3
 800450e:	4313      	orrs	r3, r2
 8004510:	82bb      	strh	r3, [r7, #20]
 8004512:	7afb      	ldrb	r3, [r7, #11]
 8004514:	021b      	lsls	r3, r3, #8
 8004516:	b21a      	sxth	r2, r3
 8004518:	7abb      	ldrb	r3, [r7, #10]
 800451a:	b21b      	sxth	r3, r3
 800451c:	4313      	orrs	r3, r2
 800451e:	827b      	strh	r3, [r7, #18]
 8004520:	88fb      	ldrh	r3, [r7, #6]
 8004522:	b2d8      	uxtb	r0, r3
 8004524:	f107 0208 	add.w	r2, r7, #8
 8004528:	2302      	movs	r3, #2
 800452a:	21aa      	movs	r1, #170	@ 0xaa
 800452c:	f7ff ff3c 	bl	80043a8 <SENSOR_IO_ReadMultiple>
 8004530:	7a7b      	ldrb	r3, [r7, #9]
 8004532:	021b      	lsls	r3, r3, #8
 8004534:	b21a      	sxth	r2, r3
 8004536:	7a3b      	ldrb	r3, [r7, #8]
 8004538:	b21b      	sxth	r3, r3
 800453a:	4313      	orrs	r3, r2
 800453c:	823b      	strh	r3, [r7, #16]
 800453e:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8004542:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004546:	1ad3      	subs	r3, r2, r3
 8004548:	ee07 3a90 	vmov	s15, r3
 800454c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004550:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004554:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8004558:	1ad3      	subs	r3, r2, r3
 800455a:	ee07 3a90 	vmov	s15, r3
 800455e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004562:	ee67 6a27 	vmul.f32	s13, s14, s15
 8004566:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800456a:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 800456e:	1ad3      	subs	r3, r2, r3
 8004570:	ee07 3a90 	vmov	s15, r3
 8004574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004578:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800457c:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8004580:	ee07 3a90 	vmov	s15, r3
 8004584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004588:	ee77 7a27 	vadd.f32	s15, s14, s15
 800458c:	edc7 7a03 	vstr	s15, [r7, #12]
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	ee07 3a90 	vmov	s15, r3
 8004596:	eeb0 0a67 	vmov.f32	s0, s15
 800459a:	3720      	adds	r7, #32
 800459c:	46bd      	mov	sp, r7
 800459e:	bd80      	pop	{r7, pc}

080045a0 <Hex2Num>:
 80045a0:	b480      	push	{r7}
 80045a2:	b083      	sub	sp, #12
 80045a4:	af00      	add	r7, sp, #0
 80045a6:	4603      	mov	r3, r0
 80045a8:	71fb      	strb	r3, [r7, #7]
 80045aa:	79fb      	ldrb	r3, [r7, #7]
 80045ac:	2b2f      	cmp	r3, #47	@ 0x2f
 80045ae:	d906      	bls.n	80045be <Hex2Num+0x1e>
 80045b0:	79fb      	ldrb	r3, [r7, #7]
 80045b2:	2b39      	cmp	r3, #57	@ 0x39
 80045b4:	d803      	bhi.n	80045be <Hex2Num+0x1e>
 80045b6:	79fb      	ldrb	r3, [r7, #7]
 80045b8:	3b30      	subs	r3, #48	@ 0x30
 80045ba:	b2db      	uxtb	r3, r3
 80045bc:	e014      	b.n	80045e8 <Hex2Num+0x48>
 80045be:	79fb      	ldrb	r3, [r7, #7]
 80045c0:	2b60      	cmp	r3, #96	@ 0x60
 80045c2:	d906      	bls.n	80045d2 <Hex2Num+0x32>
 80045c4:	79fb      	ldrb	r3, [r7, #7]
 80045c6:	2b66      	cmp	r3, #102	@ 0x66
 80045c8:	d803      	bhi.n	80045d2 <Hex2Num+0x32>
 80045ca:	79fb      	ldrb	r3, [r7, #7]
 80045cc:	3b57      	subs	r3, #87	@ 0x57
 80045ce:	b2db      	uxtb	r3, r3
 80045d0:	e00a      	b.n	80045e8 <Hex2Num+0x48>
 80045d2:	79fb      	ldrb	r3, [r7, #7]
 80045d4:	2b40      	cmp	r3, #64	@ 0x40
 80045d6:	d906      	bls.n	80045e6 <Hex2Num+0x46>
 80045d8:	79fb      	ldrb	r3, [r7, #7]
 80045da:	2b46      	cmp	r3, #70	@ 0x46
 80045dc:	d803      	bhi.n	80045e6 <Hex2Num+0x46>
 80045de:	79fb      	ldrb	r3, [r7, #7]
 80045e0:	3b37      	subs	r3, #55	@ 0x37
 80045e2:	b2db      	uxtb	r3, r3
 80045e4:	e000      	b.n	80045e8 <Hex2Num+0x48>
 80045e6:	2300      	movs	r3, #0
 80045e8:	4618      	mov	r0, r3
 80045ea:	370c      	adds	r7, #12
 80045ec:	46bd      	mov	sp, r7
 80045ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045f2:	4770      	bx	lr

080045f4 <ParseHexNumber>:
 80045f4:	b580      	push	{r7, lr}
 80045f6:	b084      	sub	sp, #16
 80045f8:	af00      	add	r7, sp, #0
 80045fa:	6078      	str	r0, [r7, #4]
 80045fc:	6039      	str	r1, [r7, #0]
 80045fe:	2300      	movs	r3, #0
 8004600:	60fb      	str	r3, [r7, #12]
 8004602:	2300      	movs	r3, #0
 8004604:	72fb      	strb	r3, [r7, #11]
 8004606:	e012      	b.n	800462e <ParseHexNumber+0x3a>
 8004608:	68fb      	ldr	r3, [r7, #12]
 800460a:	011b      	lsls	r3, r3, #4
 800460c:	60fb      	str	r3, [r7, #12]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	781b      	ldrb	r3, [r3, #0]
 8004612:	4618      	mov	r0, r3
 8004614:	f7ff ffc4 	bl	80045a0 <Hex2Num>
 8004618:	4603      	mov	r3, r0
 800461a:	461a      	mov	r2, r3
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	4413      	add	r3, r2
 8004620:	60fb      	str	r3, [r7, #12]
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	3301      	adds	r3, #1
 8004626:	607b      	str	r3, [r7, #4]
 8004628:	7afb      	ldrb	r3, [r7, #11]
 800462a:	3301      	adds	r3, #1
 800462c:	72fb      	strb	r3, [r7, #11]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	781b      	ldrb	r3, [r3, #0]
 8004632:	2b2f      	cmp	r3, #47	@ 0x2f
 8004634:	d903      	bls.n	800463e <ParseHexNumber+0x4a>
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	781b      	ldrb	r3, [r3, #0]
 800463a:	2b39      	cmp	r3, #57	@ 0x39
 800463c:	d9e4      	bls.n	8004608 <ParseHexNumber+0x14>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	781b      	ldrb	r3, [r3, #0]
 8004642:	2b60      	cmp	r3, #96	@ 0x60
 8004644:	d903      	bls.n	800464e <ParseHexNumber+0x5a>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	781b      	ldrb	r3, [r3, #0]
 800464a:	2b66      	cmp	r3, #102	@ 0x66
 800464c:	d9dc      	bls.n	8004608 <ParseHexNumber+0x14>
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	781b      	ldrb	r3, [r3, #0]
 8004652:	2b40      	cmp	r3, #64	@ 0x40
 8004654:	d903      	bls.n	800465e <ParseHexNumber+0x6a>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	781b      	ldrb	r3, [r3, #0]
 800465a:	2b46      	cmp	r3, #70	@ 0x46
 800465c:	d9d4      	bls.n	8004608 <ParseHexNumber+0x14>
 800465e:	683b      	ldr	r3, [r7, #0]
 8004660:	2b00      	cmp	r3, #0
 8004662:	d002      	beq.n	800466a <ParseHexNumber+0x76>
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	7afa      	ldrb	r2, [r7, #11]
 8004668:	701a      	strb	r2, [r3, #0]
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	4618      	mov	r0, r3
 800466e:	3710      	adds	r7, #16
 8004670:	46bd      	mov	sp, r7
 8004672:	bd80      	pop	{r7, pc}

08004674 <ParseNumber>:
 8004674:	b480      	push	{r7}
 8004676:	b085      	sub	sp, #20
 8004678:	af00      	add	r7, sp, #0
 800467a:	6078      	str	r0, [r7, #4]
 800467c:	6039      	str	r1, [r7, #0]
 800467e:	2300      	movs	r3, #0
 8004680:	73fb      	strb	r3, [r7, #15]
 8004682:	2300      	movs	r3, #0
 8004684:	73bb      	strb	r3, [r7, #14]
 8004686:	2300      	movs	r3, #0
 8004688:	60bb      	str	r3, [r7, #8]
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	781b      	ldrb	r3, [r3, #0]
 800468e:	2b2d      	cmp	r3, #45	@ 0x2d
 8004690:	d119      	bne.n	80046c6 <ParseNumber+0x52>
 8004692:	2301      	movs	r3, #1
 8004694:	73fb      	strb	r3, [r7, #15]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	3301      	adds	r3, #1
 800469a:	607b      	str	r3, [r7, #4]
 800469c:	7bbb      	ldrb	r3, [r7, #14]
 800469e:	3301      	adds	r3, #1
 80046a0:	73bb      	strb	r3, [r7, #14]
 80046a2:	e010      	b.n	80046c6 <ParseNumber+0x52>
 80046a4:	68ba      	ldr	r2, [r7, #8]
 80046a6:	4613      	mov	r3, r2
 80046a8:	009b      	lsls	r3, r3, #2
 80046aa:	4413      	add	r3, r2
 80046ac:	005b      	lsls	r3, r3, #1
 80046ae:	461a      	mov	r2, r3
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	781b      	ldrb	r3, [r3, #0]
 80046b4:	3b30      	subs	r3, #48	@ 0x30
 80046b6:	4413      	add	r3, r2
 80046b8:	60bb      	str	r3, [r7, #8]
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	3301      	adds	r3, #1
 80046be:	607b      	str	r3, [r7, #4]
 80046c0:	7bbb      	ldrb	r3, [r7, #14]
 80046c2:	3301      	adds	r3, #1
 80046c4:	73bb      	strb	r3, [r7, #14]
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	781b      	ldrb	r3, [r3, #0]
 80046ca:	2b2f      	cmp	r3, #47	@ 0x2f
 80046cc:	d903      	bls.n	80046d6 <ParseNumber+0x62>
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	781b      	ldrb	r3, [r3, #0]
 80046d2:	2b39      	cmp	r3, #57	@ 0x39
 80046d4:	d9e6      	bls.n	80046a4 <ParseNumber+0x30>
 80046d6:	683b      	ldr	r3, [r7, #0]
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d002      	beq.n	80046e2 <ParseNumber+0x6e>
 80046dc:	683b      	ldr	r3, [r7, #0]
 80046de:	7bba      	ldrb	r2, [r7, #14]
 80046e0:	701a      	strb	r2, [r3, #0]
 80046e2:	7bfb      	ldrb	r3, [r7, #15]
 80046e4:	2b00      	cmp	r3, #0
 80046e6:	d002      	beq.n	80046ee <ParseNumber+0x7a>
 80046e8:	68bb      	ldr	r3, [r7, #8]
 80046ea:	425b      	negs	r3, r3
 80046ec:	e000      	b.n	80046f0 <ParseNumber+0x7c>
 80046ee:	68bb      	ldr	r3, [r7, #8]
 80046f0:	4618      	mov	r0, r3
 80046f2:	3714      	adds	r7, #20
 80046f4:	46bd      	mov	sp, r7
 80046f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046fa:	4770      	bx	lr

080046fc <ParseMAC>:
 80046fc:	b580      	push	{r7, lr}
 80046fe:	b084      	sub	sp, #16
 8004700:	af00      	add	r7, sp, #0
 8004702:	6078      	str	r0, [r7, #4]
 8004704:	6039      	str	r1, [r7, #0]
 8004706:	2300      	movs	r3, #0
 8004708:	73fb      	strb	r3, [r7, #15]
 800470a:	e019      	b.n	8004740 <ParseMAC+0x44>
 800470c:	2301      	movs	r3, #1
 800470e:	73bb      	strb	r3, [r7, #14]
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	781b      	ldrb	r3, [r3, #0]
 8004714:	2b3a      	cmp	r3, #58	@ 0x3a
 8004716:	d00e      	beq.n	8004736 <ParseMAC+0x3a>
 8004718:	f107 030e 	add.w	r3, r7, #14
 800471c:	4619      	mov	r1, r3
 800471e:	6878      	ldr	r0, [r7, #4]
 8004720:	f7ff ff68 	bl	80045f4 <ParseHexNumber>
 8004724:	4601      	mov	r1, r0
 8004726:	7bfb      	ldrb	r3, [r7, #15]
 8004728:	1c5a      	adds	r2, r3, #1
 800472a:	73fa      	strb	r2, [r7, #15]
 800472c:	461a      	mov	r2, r3
 800472e:	683b      	ldr	r3, [r7, #0]
 8004730:	4413      	add	r3, r2
 8004732:	b2ca      	uxtb	r2, r1
 8004734:	701a      	strb	r2, [r3, #0]
 8004736:	7bbb      	ldrb	r3, [r7, #14]
 8004738:	461a      	mov	r2, r3
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	4413      	add	r3, r2
 800473e:	607b      	str	r3, [r7, #4]
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	781b      	ldrb	r3, [r3, #0]
 8004744:	2b00      	cmp	r3, #0
 8004746:	d1e1      	bne.n	800470c <ParseMAC+0x10>
 8004748:	bf00      	nop
 800474a:	bf00      	nop
 800474c:	3710      	adds	r7, #16
 800474e:	46bd      	mov	sp, r7
 8004750:	bd80      	pop	{r7, pc}

08004752 <ParseIP>:
 8004752:	b580      	push	{r7, lr}
 8004754:	b084      	sub	sp, #16
 8004756:	af00      	add	r7, sp, #0
 8004758:	6078      	str	r0, [r7, #4]
 800475a:	6039      	str	r1, [r7, #0]
 800475c:	2300      	movs	r3, #0
 800475e:	73fb      	strb	r3, [r7, #15]
 8004760:	e019      	b.n	8004796 <ParseIP+0x44>
 8004762:	2301      	movs	r3, #1
 8004764:	73bb      	strb	r3, [r7, #14]
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	781b      	ldrb	r3, [r3, #0]
 800476a:	2b2e      	cmp	r3, #46	@ 0x2e
 800476c:	d00e      	beq.n	800478c <ParseIP+0x3a>
 800476e:	f107 030e 	add.w	r3, r7, #14
 8004772:	4619      	mov	r1, r3
 8004774:	6878      	ldr	r0, [r7, #4]
 8004776:	f7ff ff7d 	bl	8004674 <ParseNumber>
 800477a:	4601      	mov	r1, r0
 800477c:	7bfb      	ldrb	r3, [r7, #15]
 800477e:	1c5a      	adds	r2, r3, #1
 8004780:	73fa      	strb	r2, [r7, #15]
 8004782:	461a      	mov	r2, r3
 8004784:	683b      	ldr	r3, [r7, #0]
 8004786:	4413      	add	r3, r2
 8004788:	b2ca      	uxtb	r2, r1
 800478a:	701a      	strb	r2, [r3, #0]
 800478c:	7bbb      	ldrb	r3, [r7, #14]
 800478e:	461a      	mov	r2, r3
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	4413      	add	r3, r2
 8004794:	607b      	str	r3, [r7, #4]
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	781b      	ldrb	r3, [r3, #0]
 800479a:	2b00      	cmp	r3, #0
 800479c:	d1e1      	bne.n	8004762 <ParseIP+0x10>
 800479e:	bf00      	nop
 80047a0:	bf00      	nop
 80047a2:	3710      	adds	r7, #16
 80047a4:	46bd      	mov	sp, r7
 80047a6:	bd80      	pop	{r7, pc}

080047a8 <AT_ParseInfo>:
 80047a8:	b580      	push	{r7, lr}
 80047aa:	b084      	sub	sp, #16
 80047ac:	af00      	add	r7, sp, #0
 80047ae:	6078      	str	r0, [r7, #4]
 80047b0:	6039      	str	r1, [r7, #0]
 80047b2:	2300      	movs	r3, #0
 80047b4:	72fb      	strb	r3, [r7, #11]
 80047b6:	683b      	ldr	r3, [r7, #0]
 80047b8:	3302      	adds	r3, #2
 80047ba:	4934      	ldr	r1, [pc, #208]	@ (800488c <AT_ParseInfo+0xe4>)
 80047bc:	4618      	mov	r0, r3
 80047be:	f00d f91f 	bl	8011a00 <strtok>
 80047c2:	60f8      	str	r0, [r7, #12]
 80047c4:	e05a      	b.n	800487c <AT_ParseInfo+0xd4>
 80047c6:	7afb      	ldrb	r3, [r7, #11]
 80047c8:	1c5a      	adds	r2, r3, #1
 80047ca:	72fa      	strb	r2, [r7, #11]
 80047cc:	2b06      	cmp	r3, #6
 80047ce:	d84f      	bhi.n	8004870 <AT_ParseInfo+0xc8>
 80047d0:	a201      	add	r2, pc, #4	@ (adr r2, 80047d8 <AT_ParseInfo+0x30>)
 80047d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047d6:	bf00      	nop
 80047d8:	080047f5 	.word	0x080047f5
 80047dc:	08004803 	.word	0x08004803
 80047e0:	08004813 	.word	0x08004813
 80047e4:	08004823 	.word	0x08004823
 80047e8:	08004833 	.word	0x08004833
 80047ec:	08004843 	.word	0x08004843
 80047f0:	08004857 	.word	0x08004857
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	2220      	movs	r2, #32
 80047f8:	68f9      	ldr	r1, [r7, #12]
 80047fa:	4618      	mov	r0, r3
 80047fc:	f00d f8ec 	bl	80119d8 <strncpy>
 8004800:	e037      	b.n	8004872 <AT_ParseInfo+0xca>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	3320      	adds	r3, #32
 8004806:	2218      	movs	r2, #24
 8004808:	68f9      	ldr	r1, [r7, #12]
 800480a:	4618      	mov	r0, r3
 800480c:	f00d f8e4 	bl	80119d8 <strncpy>
 8004810:	e02f      	b.n	8004872 <AT_ParseInfo+0xca>
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	3338      	adds	r3, #56	@ 0x38
 8004816:	2210      	movs	r2, #16
 8004818:	68f9      	ldr	r1, [r7, #12]
 800481a:	4618      	mov	r0, r3
 800481c:	f00d f8dc 	bl	80119d8 <strncpy>
 8004820:	e027      	b.n	8004872 <AT_ParseInfo+0xca>
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	3348      	adds	r3, #72	@ 0x48
 8004826:	2210      	movs	r2, #16
 8004828:	68f9      	ldr	r1, [r7, #12]
 800482a:	4618      	mov	r0, r3
 800482c:	f00d f8d4 	bl	80119d8 <strncpy>
 8004830:	e01f      	b.n	8004872 <AT_ParseInfo+0xca>
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	3358      	adds	r3, #88	@ 0x58
 8004836:	2210      	movs	r2, #16
 8004838:	68f9      	ldr	r1, [r7, #12]
 800483a:	4618      	mov	r0, r3
 800483c:	f00d f8cc 	bl	80119d8 <strncpy>
 8004840:	e017      	b.n	8004872 <AT_ParseInfo+0xca>
 8004842:	2100      	movs	r1, #0
 8004844:	68f8      	ldr	r0, [r7, #12]
 8004846:	f7ff ff15 	bl	8004674 <ParseNumber>
 800484a:	4603      	mov	r3, r0
 800484c:	461a      	mov	r2, r3
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8004854:	e00d      	b.n	8004872 <AT_ParseInfo+0xca>
 8004856:	490e      	ldr	r1, [pc, #56]	@ (8004890 <AT_ParseInfo+0xe8>)
 8004858:	68f8      	ldr	r0, [r7, #12]
 800485a:	f00d f8d1 	bl	8011a00 <strtok>
 800485e:	60f8      	str	r0, [r7, #12]
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	3368      	adds	r3, #104	@ 0x68
 8004864:	2220      	movs	r2, #32
 8004866:	68f9      	ldr	r1, [r7, #12]
 8004868:	4618      	mov	r0, r3
 800486a:	f00d f8b5 	bl	80119d8 <strncpy>
 800486e:	e000      	b.n	8004872 <AT_ParseInfo+0xca>
 8004870:	bf00      	nop
 8004872:	4906      	ldr	r1, [pc, #24]	@ (800488c <AT_ParseInfo+0xe4>)
 8004874:	2000      	movs	r0, #0
 8004876:	f00d f8c3 	bl	8011a00 <strtok>
 800487a:	60f8      	str	r0, [r7, #12]
 800487c:	68fb      	ldr	r3, [r7, #12]
 800487e:	2b00      	cmp	r3, #0
 8004880:	d1a1      	bne.n	80047c6 <AT_ParseInfo+0x1e>
 8004882:	bf00      	nop
 8004884:	bf00      	nop
 8004886:	3710      	adds	r7, #16
 8004888:	46bd      	mov	sp, r7
 800488a:	bd80      	pop	{r7, pc}
 800488c:	08015020 	.word	0x08015020
 8004890:	08015024 	.word	0x08015024

08004894 <AT_ParseConnSettings>:
 8004894:	b580      	push	{r7, lr}
 8004896:	b084      	sub	sp, #16
 8004898:	af00      	add	r7, sp, #0
 800489a:	6078      	str	r0, [r7, #4]
 800489c:	6039      	str	r1, [r7, #0]
 800489e:	2300      	movs	r3, #0
 80048a0:	73fb      	strb	r3, [r7, #15]
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	3302      	adds	r3, #2
 80048a6:	4952      	ldr	r1, [pc, #328]	@ (80049f0 <AT_ParseConnSettings+0x15c>)
 80048a8:	4618      	mov	r0, r3
 80048aa:	f00d f8a9 	bl	8011a00 <strtok>
 80048ae:	60b8      	str	r0, [r7, #8]
 80048b0:	e095      	b.n	80049de <AT_ParseConnSettings+0x14a>
 80048b2:	7bfb      	ldrb	r3, [r7, #15]
 80048b4:	1c5a      	adds	r2, r3, #1
 80048b6:	73fa      	strb	r2, [r7, #15]
 80048b8:	2b0b      	cmp	r3, #11
 80048ba:	d87f      	bhi.n	80049bc <AT_ParseConnSettings+0x128>
 80048bc:	a201      	add	r2, pc, #4	@ (adr r2, 80048c4 <AT_ParseConnSettings+0x30>)
 80048be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048c2:	bf00      	nop
 80048c4:	080048f5 	.word	0x080048f5
 80048c8:	08004903 	.word	0x08004903
 80048cc:	08004913 	.word	0x08004913
 80048d0:	08004927 	.word	0x08004927
 80048d4:	0800493b 	.word	0x0800493b
 80048d8:	0800494f 	.word	0x0800494f
 80048dc:	0800495d 	.word	0x0800495d
 80048e0:	0800496b 	.word	0x0800496b
 80048e4:	08004979 	.word	0x08004979
 80048e8:	08004987 	.word	0x08004987
 80048ec:	08004995 	.word	0x08004995
 80048f0:	080049a9 	.word	0x080049a9
 80048f4:	683b      	ldr	r3, [r7, #0]
 80048f6:	2221      	movs	r2, #33	@ 0x21
 80048f8:	68b9      	ldr	r1, [r7, #8]
 80048fa:	4618      	mov	r0, r3
 80048fc:	f00d f86c 	bl	80119d8 <strncpy>
 8004900:	e05d      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004902:	683b      	ldr	r3, [r7, #0]
 8004904:	3321      	adds	r3, #33	@ 0x21
 8004906:	2221      	movs	r2, #33	@ 0x21
 8004908:	68b9      	ldr	r1, [r7, #8]
 800490a:	4618      	mov	r0, r3
 800490c:	f00d f864 	bl	80119d8 <strncpy>
 8004910:	e055      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004912:	2100      	movs	r1, #0
 8004914:	68b8      	ldr	r0, [r7, #8]
 8004916:	f7ff fead 	bl	8004674 <ParseNumber>
 800491a:	4603      	mov	r3, r0
 800491c:	b2da      	uxtb	r2, r3
 800491e:	683b      	ldr	r3, [r7, #0]
 8004920:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004924:	e04b      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004926:	2100      	movs	r1, #0
 8004928:	68b8      	ldr	r0, [r7, #8]
 800492a:	f7ff fea3 	bl	8004674 <ParseNumber>
 800492e:	4603      	mov	r3, r0
 8004930:	b2da      	uxtb	r2, r3
 8004932:	683b      	ldr	r3, [r7, #0]
 8004934:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004938:	e041      	b.n	80049be <AT_ParseConnSettings+0x12a>
 800493a:	2100      	movs	r1, #0
 800493c:	68b8      	ldr	r0, [r7, #8]
 800493e:	f7ff fe99 	bl	8004674 <ParseNumber>
 8004942:	4603      	mov	r3, r0
 8004944:	b2da      	uxtb	r2, r3
 8004946:	683b      	ldr	r3, [r7, #0]
 8004948:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800494c:	e037      	b.n	80049be <AT_ParseConnSettings+0x12a>
 800494e:	683b      	ldr	r3, [r7, #0]
 8004950:	3348      	adds	r3, #72	@ 0x48
 8004952:	4619      	mov	r1, r3
 8004954:	68b8      	ldr	r0, [r7, #8]
 8004956:	f7ff fefc 	bl	8004752 <ParseIP>
 800495a:	e030      	b.n	80049be <AT_ParseConnSettings+0x12a>
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	334c      	adds	r3, #76	@ 0x4c
 8004960:	4619      	mov	r1, r3
 8004962:	68b8      	ldr	r0, [r7, #8]
 8004964:	f7ff fef5 	bl	8004752 <ParseIP>
 8004968:	e029      	b.n	80049be <AT_ParseConnSettings+0x12a>
 800496a:	683b      	ldr	r3, [r7, #0]
 800496c:	3350      	adds	r3, #80	@ 0x50
 800496e:	4619      	mov	r1, r3
 8004970:	68b8      	ldr	r0, [r7, #8]
 8004972:	f7ff feee 	bl	8004752 <ParseIP>
 8004976:	e022      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004978:	683b      	ldr	r3, [r7, #0]
 800497a:	3354      	adds	r3, #84	@ 0x54
 800497c:	4619      	mov	r1, r3
 800497e:	68b8      	ldr	r0, [r7, #8]
 8004980:	f7ff fee7 	bl	8004752 <ParseIP>
 8004984:	e01b      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004986:	683b      	ldr	r3, [r7, #0]
 8004988:	3358      	adds	r3, #88	@ 0x58
 800498a:	4619      	mov	r1, r3
 800498c:	68b8      	ldr	r0, [r7, #8]
 800498e:	f7ff fee0 	bl	8004752 <ParseIP>
 8004992:	e014      	b.n	80049be <AT_ParseConnSettings+0x12a>
 8004994:	2100      	movs	r1, #0
 8004996:	68b8      	ldr	r0, [r7, #8]
 8004998:	f7ff fe6c 	bl	8004674 <ParseNumber>
 800499c:	4603      	mov	r3, r0
 800499e:	b2da      	uxtb	r2, r3
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80049a6:	e00a      	b.n	80049be <AT_ParseConnSettings+0x12a>
 80049a8:	2100      	movs	r1, #0
 80049aa:	68b8      	ldr	r0, [r7, #8]
 80049ac:	f7ff fe62 	bl	8004674 <ParseNumber>
 80049b0:	4603      	mov	r3, r0
 80049b2:	b2da      	uxtb	r2, r3
 80049b4:	683b      	ldr	r3, [r7, #0]
 80049b6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80049ba:	e000      	b.n	80049be <AT_ParseConnSettings+0x12a>
 80049bc:	bf00      	nop
 80049be:	490c      	ldr	r1, [pc, #48]	@ (80049f0 <AT_ParseConnSettings+0x15c>)
 80049c0:	2000      	movs	r0, #0
 80049c2:	f00d f81d 	bl	8011a00 <strtok>
 80049c6:	60b8      	str	r0, [r7, #8]
 80049c8:	68bb      	ldr	r3, [r7, #8]
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d007      	beq.n	80049de <AT_ParseConnSettings+0x14a>
 80049ce:	68bb      	ldr	r3, [r7, #8]
 80049d0:	3b01      	subs	r3, #1
 80049d2:	781b      	ldrb	r3, [r3, #0]
 80049d4:	2b2c      	cmp	r3, #44	@ 0x2c
 80049d6:	d102      	bne.n	80049de <AT_ParseConnSettings+0x14a>
 80049d8:	7bfb      	ldrb	r3, [r7, #15]
 80049da:	3301      	adds	r3, #1
 80049dc:	73fb      	strb	r3, [r7, #15]
 80049de:	68bb      	ldr	r3, [r7, #8]
 80049e0:	2b00      	cmp	r3, #0
 80049e2:	f47f af66 	bne.w	80048b2 <AT_ParseConnSettings+0x1e>
 80049e6:	bf00      	nop
 80049e8:	bf00      	nop
 80049ea:	3710      	adds	r7, #16
 80049ec:	46bd      	mov	sp, r7
 80049ee:	bd80      	pop	{r7, pc}
 80049f0:	08015020 	.word	0x08015020

080049f4 <AT_ParseTransportSettings>:
 80049f4:	b580      	push	{r7, lr}
 80049f6:	b084      	sub	sp, #16
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	6039      	str	r1, [r7, #0]
 80049fe:	2300      	movs	r3, #0
 8004a00:	73fb      	strb	r3, [r7, #15]
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	3302      	adds	r3, #2
 8004a06:	4949      	ldr	r1, [pc, #292]	@ (8004b2c <AT_ParseTransportSettings+0x138>)
 8004a08:	4618      	mov	r0, r3
 8004a0a:	f00c fff9 	bl	8011a00 <strtok>
 8004a0e:	60b8      	str	r0, [r7, #8]
 8004a10:	e083      	b.n	8004b1a <AT_ParseTransportSettings+0x126>
 8004a12:	7bfb      	ldrb	r3, [r7, #15]
 8004a14:	1c5a      	adds	r2, r3, #1
 8004a16:	73fa      	strb	r2, [r7, #15]
 8004a18:	2b09      	cmp	r3, #9
 8004a1a:	d86d      	bhi.n	8004af8 <AT_ParseTransportSettings+0x104>
 8004a1c:	a201      	add	r2, pc, #4	@ (adr r2, 8004a24 <AT_ParseTransportSettings+0x30>)
 8004a1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a22:	bf00      	nop
 8004a24:	08004a4d 	.word	0x08004a4d
 8004a28:	08004a5f 	.word	0x08004a5f
 8004a2c:	08004a6d 	.word	0x08004a6d
 8004a30:	08004a7f 	.word	0x08004a7f
 8004a34:	08004a8d 	.word	0x08004a8d
 8004a38:	08004a9f 	.word	0x08004a9f
 8004a3c:	08004ab1 	.word	0x08004ab1
 8004a40:	08004ac3 	.word	0x08004ac3
 8004a44:	08004ad5 	.word	0x08004ad5
 8004a48:	08004ae7 	.word	0x08004ae7
 8004a4c:	2100      	movs	r1, #0
 8004a4e:	68b8      	ldr	r0, [r7, #8]
 8004a50:	f7ff fe10 	bl	8004674 <ParseNumber>
 8004a54:	4603      	mov	r3, r0
 8004a56:	b2da      	uxtb	r2, r3
 8004a58:	683b      	ldr	r3, [r7, #0]
 8004a5a:	701a      	strb	r2, [r3, #0]
 8004a5c:	e04d      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004a5e:	683b      	ldr	r3, [r7, #0]
 8004a60:	3301      	adds	r3, #1
 8004a62:	4619      	mov	r1, r3
 8004a64:	68b8      	ldr	r0, [r7, #8]
 8004a66:	f7ff fe74 	bl	8004752 <ParseIP>
 8004a6a:	e046      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004a6c:	2100      	movs	r1, #0
 8004a6e:	68b8      	ldr	r0, [r7, #8]
 8004a70:	f7ff fe00 	bl	8004674 <ParseNumber>
 8004a74:	4603      	mov	r3, r0
 8004a76:	b29a      	uxth	r2, r3
 8004a78:	683b      	ldr	r3, [r7, #0]
 8004a7a:	80da      	strh	r2, [r3, #6]
 8004a7c:	e03d      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004a7e:	683b      	ldr	r3, [r7, #0]
 8004a80:	3308      	adds	r3, #8
 8004a82:	4619      	mov	r1, r3
 8004a84:	68b8      	ldr	r0, [r7, #8]
 8004a86:	f7ff fe64 	bl	8004752 <ParseIP>
 8004a8a:	e036      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004a8c:	2100      	movs	r1, #0
 8004a8e:	68b8      	ldr	r0, [r7, #8]
 8004a90:	f7ff fdf0 	bl	8004674 <ParseNumber>
 8004a94:	4603      	mov	r3, r0
 8004a96:	b29a      	uxth	r2, r3
 8004a98:	683b      	ldr	r3, [r7, #0]
 8004a9a:	819a      	strh	r2, [r3, #12]
 8004a9c:	e02d      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004a9e:	2100      	movs	r1, #0
 8004aa0:	68b8      	ldr	r0, [r7, #8]
 8004aa2:	f7ff fde7 	bl	8004674 <ParseNumber>
 8004aa6:	4603      	mov	r3, r0
 8004aa8:	b2da      	uxtb	r2, r3
 8004aaa:	683b      	ldr	r3, [r7, #0]
 8004aac:	739a      	strb	r2, [r3, #14]
 8004aae:	e024      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004ab0:	2100      	movs	r1, #0
 8004ab2:	68b8      	ldr	r0, [r7, #8]
 8004ab4:	f7ff fdde 	bl	8004674 <ParseNumber>
 8004ab8:	4603      	mov	r3, r0
 8004aba:	b2da      	uxtb	r2, r3
 8004abc:	683b      	ldr	r3, [r7, #0]
 8004abe:	73da      	strb	r2, [r3, #15]
 8004ac0:	e01b      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004ac2:	2100      	movs	r1, #0
 8004ac4:	68b8      	ldr	r0, [r7, #8]
 8004ac6:	f7ff fdd5 	bl	8004674 <ParseNumber>
 8004aca:	4603      	mov	r3, r0
 8004acc:	b2da      	uxtb	r2, r3
 8004ace:	683b      	ldr	r3, [r7, #0]
 8004ad0:	741a      	strb	r2, [r3, #16]
 8004ad2:	e012      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004ad4:	2100      	movs	r1, #0
 8004ad6:	68b8      	ldr	r0, [r7, #8]
 8004ad8:	f7ff fdcc 	bl	8004674 <ParseNumber>
 8004adc:	4603      	mov	r3, r0
 8004ade:	b2da      	uxtb	r2, r3
 8004ae0:	683b      	ldr	r3, [r7, #0]
 8004ae2:	745a      	strb	r2, [r3, #17]
 8004ae4:	e009      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004ae6:	2100      	movs	r1, #0
 8004ae8:	68b8      	ldr	r0, [r7, #8]
 8004aea:	f7ff fdc3 	bl	8004674 <ParseNumber>
 8004aee:	4603      	mov	r3, r0
 8004af0:	b2da      	uxtb	r2, r3
 8004af2:	683b      	ldr	r3, [r7, #0]
 8004af4:	749a      	strb	r2, [r3, #18]
 8004af6:	e000      	b.n	8004afa <AT_ParseTransportSettings+0x106>
 8004af8:	bf00      	nop
 8004afa:	490c      	ldr	r1, [pc, #48]	@ (8004b2c <AT_ParseTransportSettings+0x138>)
 8004afc:	2000      	movs	r0, #0
 8004afe:	f00c ff7f 	bl	8011a00 <strtok>
 8004b02:	60b8      	str	r0, [r7, #8]
 8004b04:	68bb      	ldr	r3, [r7, #8]
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d007      	beq.n	8004b1a <AT_ParseTransportSettings+0x126>
 8004b0a:	68bb      	ldr	r3, [r7, #8]
 8004b0c:	3b01      	subs	r3, #1
 8004b0e:	781b      	ldrb	r3, [r3, #0]
 8004b10:	2b2c      	cmp	r3, #44	@ 0x2c
 8004b12:	d102      	bne.n	8004b1a <AT_ParseTransportSettings+0x126>
 8004b14:	7bfb      	ldrb	r3, [r7, #15]
 8004b16:	3301      	adds	r3, #1
 8004b18:	73fb      	strb	r3, [r7, #15]
 8004b1a:	68bb      	ldr	r3, [r7, #8]
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	f47f af78 	bne.w	8004a12 <AT_ParseTransportSettings+0x1e>
 8004b22:	bf00      	nop
 8004b24:	bf00      	nop
 8004b26:	3710      	adds	r7, #16
 8004b28:	46bd      	mov	sp, r7
 8004b2a:	bd80      	pop	{r7, pc}
 8004b2c:	08015020 	.word	0x08015020

08004b30 <AT_ParseIsConnected>:
 8004b30:	b480      	push	{r7}
 8004b32:	b083      	sub	sp, #12
 8004b34:	af00      	add	r7, sp, #0
 8004b36:	6078      	str	r0, [r7, #4]
 8004b38:	6039      	str	r1, [r7, #0]
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	3302      	adds	r3, #2
 8004b3e:	781b      	ldrb	r3, [r3, #0]
 8004b40:	2b31      	cmp	r3, #49	@ 0x31
 8004b42:	bf0c      	ite	eq
 8004b44:	2301      	moveq	r3, #1
 8004b46:	2300      	movne	r3, #0
 8004b48:	b2db      	uxtb	r3, r3
 8004b4a:	461a      	mov	r2, r3
 8004b4c:	683b      	ldr	r3, [r7, #0]
 8004b4e:	701a      	strb	r2, [r3, #0]
 8004b50:	bf00      	nop
 8004b52:	370c      	adds	r7, #12
 8004b54:	46bd      	mov	sp, r7
 8004b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b5a:	4770      	bx	lr

08004b5c <AT_ExecuteCommand>:
 8004b5c:	b590      	push	{r4, r7, lr}
 8004b5e:	b087      	sub	sp, #28
 8004b60:	af00      	add	r7, sp, #0
 8004b62:	60f8      	str	r0, [r7, #12]
 8004b64:	60b9      	str	r1, [r7, #8]
 8004b66:	607a      	str	r2, [r7, #4]
 8004b68:	2300      	movs	r3, #0
 8004b6a:	617b      	str	r3, [r7, #20]
 8004b6c:	2300      	movs	r3, #0
 8004b6e:	827b      	strh	r3, [r7, #18]
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	f8d3 4120 	ldr.w	r4, [r3, #288]	@ 0x120
 8004b76:	68b8      	ldr	r0, [r7, #8]
 8004b78:	f7fb fb8a 	bl	8000290 <strlen>
 8004b7c:	4603      	mov	r3, r0
 8004b7e:	b299      	uxth	r1, r3
 8004b80:	68fb      	ldr	r3, [r7, #12]
 8004b82:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 8004b86:	461a      	mov	r2, r3
 8004b88:	68b8      	ldr	r0, [r7, #8]
 8004b8a:	47a0      	blx	r4
 8004b8c:	4603      	mov	r3, r0
 8004b8e:	617b      	str	r3, [r7, #20]
 8004b90:	697b      	ldr	r3, [r7, #20]
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	dd33      	ble.n	8004bfe <AT_ExecuteCommand+0xa2>
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	f8d3 3124 	ldr.w	r3, [r3, #292]	@ 0x124
 8004b9c:	68fa      	ldr	r2, [r7, #12]
 8004b9e:	f8d2 26a0 	ldr.w	r2, [r2, #1696]	@ 0x6a0
 8004ba2:	f44f 61af 	mov.w	r1, #1400	@ 0x578
 8004ba6:	6878      	ldr	r0, [r7, #4]
 8004ba8:	4798      	blx	r3
 8004baa:	4603      	mov	r3, r0
 8004bac:	827b      	strh	r3, [r7, #18]
 8004bae:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	dd1c      	ble.n	8004bf0 <AT_ExecuteCommand+0x94>
 8004bb6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004bba:	f5b3 6faf 	cmp.w	r3, #1400	@ 0x578
 8004bbe:	da17      	bge.n	8004bf0 <AT_ExecuteCommand+0x94>
 8004bc0:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004bc4:	687a      	ldr	r2, [r7, #4]
 8004bc6:	4413      	add	r3, r2
 8004bc8:	2200      	movs	r2, #0
 8004bca:	701a      	strb	r2, [r3, #0]
 8004bcc:	490e      	ldr	r1, [pc, #56]	@ (8004c08 <AT_ExecuteCommand+0xac>)
 8004bce:	6878      	ldr	r0, [r7, #4]
 8004bd0:	f00c ff72 	bl	8011ab8 <strstr>
 8004bd4:	4603      	mov	r3, r0
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	d001      	beq.n	8004bde <AT_ExecuteCommand+0x82>
 8004bda:	2300      	movs	r3, #0
 8004bdc:	e010      	b.n	8004c00 <AT_ExecuteCommand+0xa4>
 8004bde:	490b      	ldr	r1, [pc, #44]	@ (8004c0c <AT_ExecuteCommand+0xb0>)
 8004be0:	6878      	ldr	r0, [r7, #4]
 8004be2:	f00c ff69 	bl	8011ab8 <strstr>
 8004be6:	4603      	mov	r3, r0
 8004be8:	2b00      	cmp	r3, #0
 8004bea:	d001      	beq.n	8004bf0 <AT_ExecuteCommand+0x94>
 8004bec:	2305      	movs	r3, #5
 8004bee:	e007      	b.n	8004c00 <AT_ExecuteCommand+0xa4>
 8004bf0:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004bf4:	f113 0f04 	cmn.w	r3, #4
 8004bf8:	d101      	bne.n	8004bfe <AT_ExecuteCommand+0xa2>
 8004bfa:	2306      	movs	r3, #6
 8004bfc:	e000      	b.n	8004c00 <AT_ExecuteCommand+0xa4>
 8004bfe:	2304      	movs	r3, #4
 8004c00:	4618      	mov	r0, r3
 8004c02:	371c      	adds	r7, #28
 8004c04:	46bd      	mov	sp, r7
 8004c06:	bd90      	pop	{r4, r7, pc}
 8004c08:	08015028 	.word	0x08015028
 8004c0c:	08015034 	.word	0x08015034

08004c10 <AT_RequestSendData>:
 8004c10:	b580      	push	{r7, lr}
 8004c12:	b086      	sub	sp, #24
 8004c14:	af00      	add	r7, sp, #0
 8004c16:	60f8      	str	r0, [r7, #12]
 8004c18:	60b9      	str	r1, [r7, #8]
 8004c1a:	607a      	str	r2, [r7, #4]
 8004c1c:	807b      	strh	r3, [r7, #2]
 8004c1e:	2300      	movs	r3, #0
 8004c20:	82fb      	strh	r3, [r7, #22]
 8004c22:	2300      	movs	r3, #0
 8004c24:	82bb      	strh	r3, [r7, #20]
 8004c26:	2300      	movs	r3, #0
 8004c28:	827b      	strh	r3, [r7, #18]
 8004c2a:	68b8      	ldr	r0, [r7, #8]
 8004c2c:	f7fb fb30 	bl	8000290 <strlen>
 8004c30:	4603      	mov	r3, r0
 8004c32:	827b      	strh	r3, [r7, #18]
 8004c34:	8a7b      	ldrh	r3, [r7, #18]
 8004c36:	f003 0301 	and.w	r3, r3, #1
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	d001      	beq.n	8004c42 <AT_RequestSendData+0x32>
 8004c3e:	2302      	movs	r3, #2
 8004c40:	e053      	b.n	8004cea <AT_RequestSendData+0xda>
 8004c42:	68fb      	ldr	r3, [r7, #12]
 8004c44:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 8004c48:	68fa      	ldr	r2, [r7, #12]
 8004c4a:	f8d2 26a0 	ldr.w	r2, [r2, #1696]	@ 0x6a0
 8004c4e:	8a79      	ldrh	r1, [r7, #18]
 8004c50:	68b8      	ldr	r0, [r7, #8]
 8004c52:	4798      	blx	r3
 8004c54:	4603      	mov	r3, r0
 8004c56:	823b      	strh	r3, [r7, #16]
 8004c58:	8a3a      	ldrh	r2, [r7, #16]
 8004c5a:	8a7b      	ldrh	r3, [r7, #18]
 8004c5c:	429a      	cmp	r2, r3
 8004c5e:	d143      	bne.n	8004ce8 <AT_RequestSendData+0xd8>
 8004c60:	68fb      	ldr	r3, [r7, #12]
 8004c62:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 8004c66:	68fa      	ldr	r2, [r7, #12]
 8004c68:	f8d2 26a0 	ldr.w	r2, [r2, #1696]	@ 0x6a0
 8004c6c:	8879      	ldrh	r1, [r7, #2]
 8004c6e:	6878      	ldr	r0, [r7, #4]
 8004c70:	4798      	blx	r3
 8004c72:	4603      	mov	r3, r0
 8004c74:	82fb      	strh	r3, [r7, #22]
 8004c76:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004c7a:	887b      	ldrh	r3, [r7, #2]
 8004c7c:	429a      	cmp	r2, r3
 8004c7e:	d131      	bne.n	8004ce4 <AT_RequestSendData+0xd4>
 8004c80:	68fb      	ldr	r3, [r7, #12]
 8004c82:	f8d3 3124 	ldr.w	r3, [r3, #292]	@ 0x124
 8004c86:	68fa      	ldr	r2, [r7, #12]
 8004c88:	f8d2 26a0 	ldr.w	r2, [r2, #1696]	@ 0x6a0
 8004c8c:	2100      	movs	r1, #0
 8004c8e:	6a38      	ldr	r0, [r7, #32]
 8004c90:	4798      	blx	r3
 8004c92:	4603      	mov	r3, r0
 8004c94:	82bb      	strh	r3, [r7, #20]
 8004c96:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	dd19      	ble.n	8004cd2 <AT_RequestSendData+0xc2>
 8004c9e:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004ca2:	6a3a      	ldr	r2, [r7, #32]
 8004ca4:	4413      	add	r3, r2
 8004ca6:	2200      	movs	r2, #0
 8004ca8:	701a      	strb	r2, [r3, #0]
 8004caa:	4912      	ldr	r1, [pc, #72]	@ (8004cf4 <AT_RequestSendData+0xe4>)
 8004cac:	6a38      	ldr	r0, [r7, #32]
 8004cae:	f00c ff03 	bl	8011ab8 <strstr>
 8004cb2:	4603      	mov	r3, r0
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	d001      	beq.n	8004cbc <AT_RequestSendData+0xac>
 8004cb8:	2300      	movs	r3, #0
 8004cba:	e016      	b.n	8004cea <AT_RequestSendData+0xda>
 8004cbc:	490e      	ldr	r1, [pc, #56]	@ (8004cf8 <AT_RequestSendData+0xe8>)
 8004cbe:	6a38      	ldr	r0, [r7, #32]
 8004cc0:	f00c fefa 	bl	8011ab8 <strstr>
 8004cc4:	4603      	mov	r3, r0
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	d001      	beq.n	8004cce <AT_RequestSendData+0xbe>
 8004cca:	2305      	movs	r3, #5
 8004ccc:	e00d      	b.n	8004cea <AT_RequestSendData+0xda>
 8004cce:	2302      	movs	r3, #2
 8004cd0:	e00b      	b.n	8004cea <AT_RequestSendData+0xda>
 8004cd2:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004cd6:	f113 0f04 	cmn.w	r3, #4
 8004cda:	d101      	bne.n	8004ce0 <AT_RequestSendData+0xd0>
 8004cdc:	2306      	movs	r3, #6
 8004cde:	e004      	b.n	8004cea <AT_RequestSendData+0xda>
 8004ce0:	2302      	movs	r3, #2
 8004ce2:	e002      	b.n	8004cea <AT_RequestSendData+0xda>
 8004ce4:	2302      	movs	r3, #2
 8004ce6:	e000      	b.n	8004cea <AT_RequestSendData+0xda>
 8004ce8:	2304      	movs	r3, #4
 8004cea:	4618      	mov	r0, r3
 8004cec:	3718      	adds	r7, #24
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd80      	pop	{r7, pc}
 8004cf2:	bf00      	nop
 8004cf4:	08015028 	.word	0x08015028
 8004cf8:	08015034 	.word	0x08015034

08004cfc <AT_RequestReceiveData>:
 8004cfc:	b590      	push	{r4, r7, lr}
 8004cfe:	b087      	sub	sp, #28
 8004d00:	af00      	add	r7, sp, #0
 8004d02:	60f8      	str	r0, [r7, #12]
 8004d04:	60b9      	str	r1, [r7, #8]
 8004d06:	607a      	str	r2, [r7, #4]
 8004d08:	807b      	strh	r3, [r7, #2]
 8004d0a:	68fb      	ldr	r3, [r7, #12]
 8004d0c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004d10:	613b      	str	r3, [r7, #16]
 8004d12:	68fb      	ldr	r3, [r7, #12]
 8004d14:	f8d3 4120 	ldr.w	r4, [r3, #288]	@ 0x120
 8004d18:	68b8      	ldr	r0, [r7, #8]
 8004d1a:	f7fb fab9 	bl	8000290 <strlen>
 8004d1e:	4603      	mov	r3, r0
 8004d20:	b299      	uxth	r1, r3
 8004d22:	68fb      	ldr	r3, [r7, #12]
 8004d24:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	@ 0x6a0
 8004d28:	461a      	mov	r2, r3
 8004d2a:	68b8      	ldr	r0, [r7, #8]
 8004d2c:	47a0      	blx	r4
 8004d2e:	4603      	mov	r3, r0
 8004d30:	2b00      	cmp	r3, #0
 8004d32:	dd6f      	ble.n	8004e14 <AT_RequestReceiveData+0x118>
 8004d34:	68fb      	ldr	r3, [r7, #12]
 8004d36:	f8d3 3124 	ldr.w	r3, [r3, #292]	@ 0x124
 8004d3a:	68fa      	ldr	r2, [r7, #12]
 8004d3c:	f8d2 26a0 	ldr.w	r2, [r2, #1696]	@ 0x6a0
 8004d40:	2100      	movs	r1, #0
 8004d42:	6938      	ldr	r0, [r7, #16]
 8004d44:	4798      	blx	r3
 8004d46:	4603      	mov	r3, r0
 8004d48:	617b      	str	r3, [r7, #20]
 8004d4a:	693b      	ldr	r3, [r7, #16]
 8004d4c:	781b      	ldrb	r3, [r3, #0]
 8004d4e:	2b0d      	cmp	r3, #13
 8004d50:	d104      	bne.n	8004d5c <AT_RequestReceiveData+0x60>
 8004d52:	693b      	ldr	r3, [r7, #16]
 8004d54:	3301      	adds	r3, #1
 8004d56:	781b      	ldrb	r3, [r3, #0]
 8004d58:	2b0a      	cmp	r3, #10
 8004d5a:	d001      	beq.n	8004d60 <AT_RequestReceiveData+0x64>
 8004d5c:	2304      	movs	r3, #4
 8004d5e:	e05a      	b.n	8004e16 <AT_RequestReceiveData+0x11a>
 8004d60:	697b      	ldr	r3, [r7, #20]
 8004d62:	3b02      	subs	r3, #2
 8004d64:	617b      	str	r3, [r7, #20]
 8004d66:	693b      	ldr	r3, [r7, #16]
 8004d68:	3302      	adds	r3, #2
 8004d6a:	613b      	str	r3, [r7, #16]
 8004d6c:	697b      	ldr	r3, [r7, #20]
 8004d6e:	2b07      	cmp	r3, #7
 8004d70:	d94a      	bls.n	8004e08 <AT_RequestReceiveData+0x10c>
 8004d72:	e002      	b.n	8004d7a <AT_RequestReceiveData+0x7e>
 8004d74:	697b      	ldr	r3, [r7, #20]
 8004d76:	3b01      	subs	r3, #1
 8004d78:	617b      	str	r3, [r7, #20]
 8004d7a:	697b      	ldr	r3, [r7, #20]
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	d006      	beq.n	8004d8e <AT_RequestReceiveData+0x92>
 8004d80:	697b      	ldr	r3, [r7, #20]
 8004d82:	3b01      	subs	r3, #1
 8004d84:	693a      	ldr	r2, [r7, #16]
 8004d86:	4413      	add	r3, r2
 8004d88:	781b      	ldrb	r3, [r3, #0]
 8004d8a:	2b15      	cmp	r3, #21
 8004d8c:	d0f2      	beq.n	8004d74 <AT_RequestReceiveData+0x78>
 8004d8e:	697b      	ldr	r3, [r7, #20]
 8004d90:	693a      	ldr	r2, [r7, #16]
 8004d92:	4413      	add	r3, r2
 8004d94:	2200      	movs	r2, #0
 8004d96:	701a      	strb	r2, [r3, #0]
 8004d98:	697b      	ldr	r3, [r7, #20]
 8004d9a:	3b08      	subs	r3, #8
 8004d9c:	693a      	ldr	r2, [r7, #16]
 8004d9e:	4413      	add	r3, r2
 8004da0:	491f      	ldr	r1, [pc, #124]	@ (8004e20 <AT_RequestReceiveData+0x124>)
 8004da2:	4618      	mov	r0, r3
 8004da4:	f00c fe88 	bl	8011ab8 <strstr>
 8004da8:	4603      	mov	r3, r0
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d016      	beq.n	8004ddc <AT_RequestReceiveData+0xe0>
 8004dae:	697b      	ldr	r3, [r7, #20]
 8004db0:	b29b      	uxth	r3, r3
 8004db2:	3b08      	subs	r3, #8
 8004db4:	b29a      	uxth	r2, r3
 8004db6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004db8:	801a      	strh	r2, [r3, #0]
 8004dba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dbc:	881b      	ldrh	r3, [r3, #0]
 8004dbe:	887a      	ldrh	r2, [r7, #2]
 8004dc0:	429a      	cmp	r2, r3
 8004dc2:	d202      	bcs.n	8004dca <AT_RequestReceiveData+0xce>
 8004dc4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dc6:	887a      	ldrh	r2, [r7, #2]
 8004dc8:	801a      	strh	r2, [r3, #0]
 8004dca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dcc:	881b      	ldrh	r3, [r3, #0]
 8004dce:	461a      	mov	r2, r3
 8004dd0:	6939      	ldr	r1, [r7, #16]
 8004dd2:	6878      	ldr	r0, [r7, #4]
 8004dd4:	f00c ff60 	bl	8011c98 <memcpy>
 8004dd8:	2300      	movs	r3, #0
 8004dda:	e01c      	b.n	8004e16 <AT_RequestReceiveData+0x11a>
 8004ddc:	697b      	ldr	r3, [r7, #20]
 8004dde:	3b04      	subs	r3, #4
 8004de0:	693a      	ldr	r2, [r7, #16]
 8004de2:	4413      	add	r3, r2
 8004de4:	2204      	movs	r2, #4
 8004de6:	490f      	ldr	r1, [pc, #60]	@ (8004e24 <AT_RequestReceiveData+0x128>)
 8004de8:	4618      	mov	r0, r3
 8004dea:	f00c fdb1 	bl	8011950 <memcmp>
 8004dee:	4603      	mov	r3, r0
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d104      	bne.n	8004dfe <AT_RequestReceiveData+0x102>
 8004df4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004df6:	2200      	movs	r2, #0
 8004df8:	801a      	strh	r2, [r3, #0]
 8004dfa:	2305      	movs	r3, #5
 8004dfc:	e00b      	b.n	8004e16 <AT_RequestReceiveData+0x11a>
 8004dfe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e00:	2200      	movs	r2, #0
 8004e02:	801a      	strh	r2, [r3, #0]
 8004e04:	2305      	movs	r3, #5
 8004e06:	e006      	b.n	8004e16 <AT_RequestReceiveData+0x11a>
 8004e08:	697b      	ldr	r3, [r7, #20]
 8004e0a:	f113 0f04 	cmn.w	r3, #4
 8004e0e:	d101      	bne.n	8004e14 <AT_RequestReceiveData+0x118>
 8004e10:	2306      	movs	r3, #6
 8004e12:	e000      	b.n	8004e16 <AT_RequestReceiveData+0x11a>
 8004e14:	2304      	movs	r3, #4
 8004e16:	4618      	mov	r0, r3
 8004e18:	371c      	adds	r7, #28
 8004e1a:	46bd      	mov	sp, r7
 8004e1c:	bd90      	pop	{r4, r7, pc}
 8004e1e:	bf00      	nop
 8004e20:	08015028 	.word	0x08015028
 8004e24:	0801503c 	.word	0x0801503c

08004e28 <ES_WIFI_Init>:
 8004e28:	b580      	push	{r7, lr}
 8004e2a:	b084      	sub	sp, #16
 8004e2c:	af00      	add	r7, sp, #0
 8004e2e:	6078      	str	r0, [r7, #4]
 8004e30:	2302      	movs	r3, #2
 8004e32:	73fb      	strb	r3, [r7, #15]
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	f247 5230 	movw	r2, #30000	@ 0x7530
 8004e3a:	f8c3 26a0 	str.w	r2, [r3, #1696]	@ 0x6a0
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8004e44:	2000      	movs	r0, #0
 8004e46:	4798      	blx	r3
 8004e48:	4603      	mov	r3, r0
 8004e4a:	2b00      	cmp	r3, #0
 8004e4c:	d113      	bne.n	8004e76 <ES_WIFI_Init+0x4e>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004e54:	461a      	mov	r2, r3
 8004e56:	490a      	ldr	r1, [pc, #40]	@ (8004e80 <ES_WIFI_Init+0x58>)
 8004e58:	6878      	ldr	r0, [r7, #4]
 8004e5a:	f7ff fe7f 	bl	8004b5c <AT_ExecuteCommand>
 8004e5e:	4603      	mov	r3, r0
 8004e60:	73fb      	strb	r3, [r7, #15]
 8004e62:	7bfb      	ldrb	r3, [r7, #15]
 8004e64:	2b00      	cmp	r3, #0
 8004e66:	d106      	bne.n	8004e76 <ES_WIFI_Init+0x4e>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004e6e:	4619      	mov	r1, r3
 8004e70:	6878      	ldr	r0, [r7, #4]
 8004e72:	f7ff fc99 	bl	80047a8 <AT_ParseInfo>
 8004e76:	7bfb      	ldrb	r3, [r7, #15]
 8004e78:	4618      	mov	r0, r3
 8004e7a:	3710      	adds	r7, #16
 8004e7c:	46bd      	mov	sp, r7
 8004e7e:	bd80      	pop	{r7, pc}
 8004e80:	08015044 	.word	0x08015044

08004e84 <ES_WIFI_RegisterBusIO>:
 8004e84:	b480      	push	{r7}
 8004e86:	b085      	sub	sp, #20
 8004e88:	af00      	add	r7, sp, #0
 8004e8a:	60f8      	str	r0, [r7, #12]
 8004e8c:	60b9      	str	r1, [r7, #8]
 8004e8e:	607a      	str	r2, [r7, #4]
 8004e90:	603b      	str	r3, [r7, #0]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d00b      	beq.n	8004eb0 <ES_WIFI_RegisterBusIO+0x2c>
 8004e98:	68bb      	ldr	r3, [r7, #8]
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d008      	beq.n	8004eb0 <ES_WIFI_RegisterBusIO+0x2c>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d005      	beq.n	8004eb0 <ES_WIFI_RegisterBusIO+0x2c>
 8004ea4:	69bb      	ldr	r3, [r7, #24]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d002      	beq.n	8004eb0 <ES_WIFI_RegisterBusIO+0x2c>
 8004eaa:	69fb      	ldr	r3, [r7, #28]
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d101      	bne.n	8004eb4 <ES_WIFI_RegisterBusIO+0x30>
 8004eb0:	2302      	movs	r3, #2
 8004eb2:	e014      	b.n	8004ede <ES_WIFI_RegisterBusIO+0x5a>
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	68ba      	ldr	r2, [r7, #8]
 8004eb8:	f8c3 2114 	str.w	r2, [r3, #276]	@ 0x114
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	687a      	ldr	r2, [r7, #4]
 8004ec0:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	69ba      	ldr	r2, [r7, #24]
 8004ec8:	f8c3 2120 	str.w	r2, [r3, #288]	@ 0x120
 8004ecc:	68fb      	ldr	r3, [r7, #12]
 8004ece:	69fa      	ldr	r2, [r7, #28]
 8004ed0:	f8c3 2124 	str.w	r2, [r3, #292]	@ 0x124
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	683a      	ldr	r2, [r7, #0]
 8004ed8:	f8c3 211c 	str.w	r2, [r3, #284]	@ 0x11c
 8004edc:	2300      	movs	r3, #0
 8004ede:	4618      	mov	r0, r3
 8004ee0:	3714      	adds	r7, #20
 8004ee2:	46bd      	mov	sp, r7
 8004ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ee8:	4770      	bx	lr
	...

08004eec <ES_WIFI_Connect>:
 8004eec:	b580      	push	{r7, lr}
 8004eee:	b086      	sub	sp, #24
 8004ef0:	af00      	add	r7, sp, #0
 8004ef2:	60f8      	str	r0, [r7, #12]
 8004ef4:	60b9      	str	r1, [r7, #8]
 8004ef6:	607a      	str	r2, [r7, #4]
 8004ef8:	70fb      	strb	r3, [r7, #3]
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f00:	68ba      	ldr	r2, [r7, #8]
 8004f02:	4932      	ldr	r1, [pc, #200]	@ (8004fcc <ES_WIFI_Connect+0xe0>)
 8004f04:	4618      	mov	r0, r3
 8004f06:	f00c fbff 	bl	8011708 <siprintf>
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f16:	461a      	mov	r2, r3
 8004f18:	68f8      	ldr	r0, [r7, #12]
 8004f1a:	f7ff fe1f 	bl	8004b5c <AT_ExecuteCommand>
 8004f1e:	4603      	mov	r3, r0
 8004f20:	75fb      	strb	r3, [r7, #23]
 8004f22:	7dfb      	ldrb	r3, [r7, #23]
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d14b      	bne.n	8004fc0 <ES_WIFI_Connect+0xd4>
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f2e:	687a      	ldr	r2, [r7, #4]
 8004f30:	4927      	ldr	r1, [pc, #156]	@ (8004fd0 <ES_WIFI_Connect+0xe4>)
 8004f32:	4618      	mov	r0, r3
 8004f34:	f00c fbe8 	bl	8011708 <siprintf>
 8004f38:	68fb      	ldr	r3, [r7, #12]
 8004f3a:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f44:	461a      	mov	r2, r3
 8004f46:	68f8      	ldr	r0, [r7, #12]
 8004f48:	f7ff fe08 	bl	8004b5c <AT_ExecuteCommand>
 8004f4c:	4603      	mov	r3, r0
 8004f4e:	75fb      	strb	r3, [r7, #23]
 8004f50:	7dfb      	ldrb	r3, [r7, #23]
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d134      	bne.n	8004fc0 <ES_WIFI_Connect+0xd4>
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	78fa      	ldrb	r2, [r7, #3]
 8004f5a:	f883 208c 	strb.w	r2, [r3, #140]	@ 0x8c
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f64:	78fa      	ldrb	r2, [r7, #3]
 8004f66:	491b      	ldr	r1, [pc, #108]	@ (8004fd4 <ES_WIFI_Connect+0xe8>)
 8004f68:	4618      	mov	r0, r3
 8004f6a:	f00c fbcd 	bl	8011708 <siprintf>
 8004f6e:	68fb      	ldr	r3, [r7, #12]
 8004f70:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f7a:	461a      	mov	r2, r3
 8004f7c:	68f8      	ldr	r0, [r7, #12]
 8004f7e:	f7ff fded 	bl	8004b5c <AT_ExecuteCommand>
 8004f82:	4603      	mov	r3, r0
 8004f84:	75fb      	strb	r3, [r7, #23]
 8004f86:	7dfb      	ldrb	r3, [r7, #23]
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d119      	bne.n	8004fc0 <ES_WIFI_Connect+0xd4>
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004f92:	4911      	ldr	r1, [pc, #68]	@ (8004fd8 <ES_WIFI_Connect+0xec>)
 8004f94:	4618      	mov	r0, r3
 8004f96:	f00c fbb7 	bl	8011708 <siprintf>
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004fa6:	461a      	mov	r2, r3
 8004fa8:	68f8      	ldr	r0, [r7, #12]
 8004faa:	f7ff fdd7 	bl	8004b5c <AT_ExecuteCommand>
 8004fae:	4603      	mov	r3, r0
 8004fb0:	75fb      	strb	r3, [r7, #23]
 8004fb2:	7dfb      	ldrb	r3, [r7, #23]
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d103      	bne.n	8004fc0 <ES_WIFI_Connect+0xd4>
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	2201      	movs	r2, #1
 8004fbc:	f883 20d2 	strb.w	r2, [r3, #210]	@ 0xd2
 8004fc0:	7dfb      	ldrb	r3, [r7, #23]
 8004fc2:	4618      	mov	r0, r3
 8004fc4:	3718      	adds	r7, #24
 8004fc6:	46bd      	mov	sp, r7
 8004fc8:	bd80      	pop	{r7, pc}
 8004fca:	bf00      	nop
 8004fcc:	08015050 	.word	0x08015050
 8004fd0:	08015058 	.word	0x08015058
 8004fd4:	08015060 	.word	0x08015060
 8004fd8:	08015068 	.word	0x08015068

08004fdc <ES_WIFI_IsConnected>:
 8004fdc:	b580      	push	{r7, lr}
 8004fde:	b084      	sub	sp, #16
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	6078      	str	r0, [r7, #4]
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004fea:	4911      	ldr	r1, [pc, #68]	@ (8005030 <ES_WIFI_IsConnected+0x54>)
 8004fec:	4618      	mov	r0, r3
 8004fee:	f00c fb8b 	bl	8011708 <siprintf>
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8004ffe:	461a      	mov	r2, r3
 8005000:	6878      	ldr	r0, [r7, #4]
 8005002:	f7ff fdab 	bl	8004b5c <AT_ExecuteCommand>
 8005006:	4603      	mov	r3, r0
 8005008:	73fb      	strb	r3, [r7, #15]
 800500a:	7bfb      	ldrb	r3, [r7, #15]
 800500c:	2b00      	cmp	r3, #0
 800500e:	d108      	bne.n	8005022 <ES_WIFI_IsConnected+0x46>
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	f503 7294 	add.w	r2, r3, #296	@ 0x128
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	33d2      	adds	r3, #210	@ 0xd2
 800501a:	4619      	mov	r1, r3
 800501c:	4610      	mov	r0, r2
 800501e:	f7ff fd87 	bl	8004b30 <AT_ParseIsConnected>
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	f893 30d2 	ldrb.w	r3, [r3, #210]	@ 0xd2
 8005028:	4618      	mov	r0, r3
 800502a:	3710      	adds	r7, #16
 800502c:	46bd      	mov	sp, r7
 800502e:	bd80      	pop	{r7, pc}
 8005030:	0801506c 	.word	0x0801506c

08005034 <ES_WIFI_GetNetworkSettings>:
 8005034:	b580      	push	{r7, lr}
 8005036:	b084      	sub	sp, #16
 8005038:	af00      	add	r7, sp, #0
 800503a:	6078      	str	r0, [r7, #4]
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005042:	4910      	ldr	r1, [pc, #64]	@ (8005084 <ES_WIFI_GetNetworkSettings+0x50>)
 8005044:	4618      	mov	r0, r3
 8005046:	f00c fb5f 	bl	8011708 <siprintf>
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005056:	461a      	mov	r2, r3
 8005058:	6878      	ldr	r0, [r7, #4]
 800505a:	f7ff fd7f 	bl	8004b5c <AT_ExecuteCommand>
 800505e:	4603      	mov	r3, r0
 8005060:	73fb      	strb	r3, [r7, #15]
 8005062:	7bfb      	ldrb	r3, [r7, #15]
 8005064:	2b00      	cmp	r3, #0
 8005066:	d108      	bne.n	800507a <ES_WIFI_GetNetworkSettings+0x46>
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	f503 7294 	add.w	r2, r3, #296	@ 0x128
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	338d      	adds	r3, #141	@ 0x8d
 8005072:	4619      	mov	r1, r3
 8005074:	4610      	mov	r0, r2
 8005076:	f7ff fc0d 	bl	8004894 <AT_ParseConnSettings>
 800507a:	7bfb      	ldrb	r3, [r7, #15]
 800507c:	4618      	mov	r0, r3
 800507e:	3710      	adds	r7, #16
 8005080:	46bd      	mov	sp, r7
 8005082:	bd80      	pop	{r7, pc}
 8005084:	08015074 	.word	0x08015074

08005088 <ES_WIFI_GetMACAddress>:
 8005088:	b580      	push	{r7, lr}
 800508a:	b084      	sub	sp, #16
 800508c:	af00      	add	r7, sp, #0
 800508e:	6078      	str	r0, [r7, #4]
 8005090:	6039      	str	r1, [r7, #0]
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005098:	4912      	ldr	r1, [pc, #72]	@ (80050e4 <ES_WIFI_GetMACAddress+0x5c>)
 800509a:	4618      	mov	r0, r3
 800509c:	f00c fb34 	bl	8011708 <siprintf>
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80050ac:	461a      	mov	r2, r3
 80050ae:	6878      	ldr	r0, [r7, #4]
 80050b0:	f7ff fd54 	bl	8004b5c <AT_ExecuteCommand>
 80050b4:	4603      	mov	r3, r0
 80050b6:	73fb      	strb	r3, [r7, #15]
 80050b8:	7bfb      	ldrb	r3, [r7, #15]
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d10c      	bne.n	80050d8 <ES_WIFI_GetMACAddress+0x50>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80050c4:	3302      	adds	r3, #2
 80050c6:	4908      	ldr	r1, [pc, #32]	@ (80050e8 <ES_WIFI_GetMACAddress+0x60>)
 80050c8:	4618      	mov	r0, r3
 80050ca:	f00c fc99 	bl	8011a00 <strtok>
 80050ce:	60b8      	str	r0, [r7, #8]
 80050d0:	6839      	ldr	r1, [r7, #0]
 80050d2:	68b8      	ldr	r0, [r7, #8]
 80050d4:	f7ff fb12 	bl	80046fc <ParseMAC>
 80050d8:	7bfb      	ldrb	r3, [r7, #15]
 80050da:	4618      	mov	r0, r3
 80050dc:	3710      	adds	r7, #16
 80050de:	46bd      	mov	sp, r7
 80050e0:	bd80      	pop	{r7, pc}
 80050e2:	bf00      	nop
 80050e4:	080150d4 	.word	0x080150d4
 80050e8:	080150d8 	.word	0x080150d8

080050ec <ES_WIFI_DNS_LookUp>:
 80050ec:	b580      	push	{r7, lr}
 80050ee:	b086      	sub	sp, #24
 80050f0:	af00      	add	r7, sp, #0
 80050f2:	60f8      	str	r0, [r7, #12]
 80050f4:	60b9      	str	r1, [r7, #8]
 80050f6:	607a      	str	r2, [r7, #4]
 80050f8:	68fb      	ldr	r3, [r7, #12]
 80050fa:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80050fe:	68ba      	ldr	r2, [r7, #8]
 8005100:	4912      	ldr	r1, [pc, #72]	@ (800514c <ES_WIFI_DNS_LookUp+0x60>)
 8005102:	4618      	mov	r0, r3
 8005104:	f00c fb00 	bl	8011708 <siprintf>
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005114:	461a      	mov	r2, r3
 8005116:	68f8      	ldr	r0, [r7, #12]
 8005118:	f7ff fd20 	bl	8004b5c <AT_ExecuteCommand>
 800511c:	4603      	mov	r3, r0
 800511e:	75fb      	strb	r3, [r7, #23]
 8005120:	7dfb      	ldrb	r3, [r7, #23]
 8005122:	2b00      	cmp	r3, #0
 8005124:	d10c      	bne.n	8005140 <ES_WIFI_DNS_LookUp+0x54>
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800512c:	3302      	adds	r3, #2
 800512e:	4908      	ldr	r1, [pc, #32]	@ (8005150 <ES_WIFI_DNS_LookUp+0x64>)
 8005130:	4618      	mov	r0, r3
 8005132:	f00c fc65 	bl	8011a00 <strtok>
 8005136:	6138      	str	r0, [r7, #16]
 8005138:	6879      	ldr	r1, [r7, #4]
 800513a:	6938      	ldr	r0, [r7, #16]
 800513c:	f7ff fb09 	bl	8004752 <ParseIP>
 8005140:	7dfb      	ldrb	r3, [r7, #23]
 8005142:	4618      	mov	r0, r3
 8005144:	3718      	adds	r7, #24
 8005146:	46bd      	mov	sp, r7
 8005148:	bd80      	pop	{r7, pc}
 800514a:	bf00      	nop
 800514c:	08015134 	.word	0x08015134
 8005150:	08015024 	.word	0x08015024

08005154 <ES_WIFI_StartClientConnection>:
 8005154:	b590      	push	{r4, r7, lr}
 8005156:	b087      	sub	sp, #28
 8005158:	af02      	add	r7, sp, #8
 800515a:	6078      	str	r0, [r7, #4]
 800515c:	6039      	str	r1, [r7, #0]
 800515e:	2300      	movs	r3, #0
 8005160:	73fb      	strb	r3, [r7, #15]
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 8005168:	683b      	ldr	r3, [r7, #0]
 800516a:	785b      	ldrb	r3, [r3, #1]
 800516c:	461a      	mov	r2, r3
 800516e:	4951      	ldr	r1, [pc, #324]	@ (80052b4 <ES_WIFI_StartClientConnection+0x160>)
 8005170:	f00c faca 	bl	8011708 <siprintf>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005180:	461a      	mov	r2, r3
 8005182:	6878      	ldr	r0, [r7, #4]
 8005184:	f7ff fcea 	bl	8004b5c <AT_ExecuteCommand>
 8005188:	4603      	mov	r3, r0
 800518a:	73fb      	strb	r3, [r7, #15]
 800518c:	7bfb      	ldrb	r3, [r7, #15]
 800518e:	2b00      	cmp	r3, #0
 8005190:	d114      	bne.n	80051bc <ES_WIFI_StartClientConnection+0x68>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 8005198:	683b      	ldr	r3, [r7, #0]
 800519a:	781b      	ldrb	r3, [r3, #0]
 800519c:	461a      	mov	r2, r3
 800519e:	4946      	ldr	r1, [pc, #280]	@ (80052b8 <ES_WIFI_StartClientConnection+0x164>)
 80051a0:	f00c fab2 	bl	8011708 <siprintf>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80051b0:	461a      	mov	r2, r3
 80051b2:	6878      	ldr	r0, [r7, #4]
 80051b4:	f7ff fcd2 	bl	8004b5c <AT_ExecuteCommand>
 80051b8:	4603      	mov	r3, r0
 80051ba:	73fb      	strb	r3, [r7, #15]
 80051bc:	7bfb      	ldrb	r3, [r7, #15]
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d118      	bne.n	80051f4 <ES_WIFI_StartClientConnection+0xa0>
 80051c2:	683b      	ldr	r3, [r7, #0]
 80051c4:	889b      	ldrh	r3, [r3, #4]
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d014      	beq.n	80051f4 <ES_WIFI_StartClientConnection+0xa0>
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 80051d0:	683b      	ldr	r3, [r7, #0]
 80051d2:	889b      	ldrh	r3, [r3, #4]
 80051d4:	461a      	mov	r2, r3
 80051d6:	4939      	ldr	r1, [pc, #228]	@ (80052bc <ES_WIFI_StartClientConnection+0x168>)
 80051d8:	f00c fa96 	bl	8011708 <siprintf>
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80051e8:	461a      	mov	r2, r3
 80051ea:	6878      	ldr	r0, [r7, #4]
 80051ec:	f7ff fcb6 	bl	8004b5c <AT_ExecuteCommand>
 80051f0:	4603      	mov	r3, r0
 80051f2:	73fb      	strb	r3, [r7, #15]
 80051f4:	7bfb      	ldrb	r3, [r7, #15]
 80051f6:	2b00      	cmp	r3, #0
 80051f8:	d118      	bne.n	800522c <ES_WIFI_StartClientConnection+0xd8>
 80051fa:	683b      	ldr	r3, [r7, #0]
 80051fc:	885b      	ldrh	r3, [r3, #2]
 80051fe:	2b00      	cmp	r3, #0
 8005200:	d014      	beq.n	800522c <ES_WIFI_StartClientConnection+0xd8>
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 8005208:	683b      	ldr	r3, [r7, #0]
 800520a:	885b      	ldrh	r3, [r3, #2]
 800520c:	461a      	mov	r2, r3
 800520e:	492c      	ldr	r1, [pc, #176]	@ (80052c0 <ES_WIFI_StartClientConnection+0x16c>)
 8005210:	f00c fa7a 	bl	8011708 <siprintf>
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005220:	461a      	mov	r2, r3
 8005222:	6878      	ldr	r0, [r7, #4]
 8005224:	f7ff fc9a 	bl	8004b5c <AT_ExecuteCommand>
 8005228:	4603      	mov	r3, r0
 800522a:	73fb      	strb	r3, [r7, #15]
 800522c:	7bfb      	ldrb	r3, [r7, #15]
 800522e:	2b00      	cmp	r3, #0
 8005230:	d124      	bne.n	800527c <ES_WIFI_StartClientConnection+0x128>
 8005232:	683b      	ldr	r3, [r7, #0]
 8005234:	781b      	ldrb	r3, [r3, #0]
 8005236:	2b00      	cmp	r3, #0
 8005238:	d120      	bne.n	800527c <ES_WIFI_StartClientConnection+0x128>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 8005240:	683b      	ldr	r3, [r7, #0]
 8005242:	799b      	ldrb	r3, [r3, #6]
 8005244:	4619      	mov	r1, r3
 8005246:	683b      	ldr	r3, [r7, #0]
 8005248:	79db      	ldrb	r3, [r3, #7]
 800524a:	461c      	mov	r4, r3
 800524c:	683b      	ldr	r3, [r7, #0]
 800524e:	7a1b      	ldrb	r3, [r3, #8]
 8005250:	461a      	mov	r2, r3
 8005252:	683b      	ldr	r3, [r7, #0]
 8005254:	7a5b      	ldrb	r3, [r3, #9]
 8005256:	9301      	str	r3, [sp, #4]
 8005258:	9200      	str	r2, [sp, #0]
 800525a:	4623      	mov	r3, r4
 800525c:	460a      	mov	r2, r1
 800525e:	4919      	ldr	r1, [pc, #100]	@ (80052c4 <ES_WIFI_StartClientConnection+0x170>)
 8005260:	f00c fa52 	bl	8011708 <siprintf>
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005270:	461a      	mov	r2, r3
 8005272:	6878      	ldr	r0, [r7, #4]
 8005274:	f7ff fc72 	bl	8004b5c <AT_ExecuteCommand>
 8005278:	4603      	mov	r3, r0
 800527a:	73fb      	strb	r3, [r7, #15]
 800527c:	7bfb      	ldrb	r3, [r7, #15]
 800527e:	2b00      	cmp	r3, #0
 8005280:	d112      	bne.n	80052a8 <ES_WIFI_StartClientConnection+0x154>
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005288:	490f      	ldr	r1, [pc, #60]	@ (80052c8 <ES_WIFI_StartClientConnection+0x174>)
 800528a:	4618      	mov	r0, r3
 800528c:	f00c fa3c 	bl	8011708 <siprintf>
 8005290:	687b      	ldr	r3, [r7, #4]
 8005292:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800529c:	461a      	mov	r2, r3
 800529e:	6878      	ldr	r0, [r7, #4]
 80052a0:	f7ff fc5c 	bl	8004b5c <AT_ExecuteCommand>
 80052a4:	4603      	mov	r3, r0
 80052a6:	73fb      	strb	r3, [r7, #15]
 80052a8:	7bfb      	ldrb	r3, [r7, #15]
 80052aa:	4618      	mov	r0, r3
 80052ac:	3714      	adds	r7, #20
 80052ae:	46bd      	mov	sp, r7
 80052b0:	bd90      	pop	{r4, r7, pc}
 80052b2:	bf00      	nop
 80052b4:	0801513c 	.word	0x0801513c
 80052b8:	08015144 	.word	0x08015144
 80052bc:	0801514c 	.word	0x0801514c
 80052c0:	08015154 	.word	0x08015154
 80052c4:	0801515c 	.word	0x0801515c
 80052c8:	0801516c 	.word	0x0801516c

080052cc <ES_WIFI_StopClientConnection>:
 80052cc:	b580      	push	{r7, lr}
 80052ce:	b084      	sub	sp, #16
 80052d0:	af00      	add	r7, sp, #0
 80052d2:	6078      	str	r0, [r7, #4]
 80052d4:	6039      	str	r1, [r7, #0]
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 80052dc:	683b      	ldr	r3, [r7, #0]
 80052de:	785b      	ldrb	r3, [r3, #1]
 80052e0:	461a      	mov	r2, r3
 80052e2:	4915      	ldr	r1, [pc, #84]	@ (8005338 <ES_WIFI_StopClientConnection+0x6c>)
 80052e4:	f00c fa10 	bl	8011708 <siprintf>
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80052f4:	461a      	mov	r2, r3
 80052f6:	6878      	ldr	r0, [r7, #4]
 80052f8:	f7ff fc30 	bl	8004b5c <AT_ExecuteCommand>
 80052fc:	4603      	mov	r3, r0
 80052fe:	73fb      	strb	r3, [r7, #15]
 8005300:	7bfb      	ldrb	r3, [r7, #15]
 8005302:	2b00      	cmp	r3, #0
 8005304:	d112      	bne.n	800532c <ES_WIFI_StopClientConnection+0x60>
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800530c:	490b      	ldr	r1, [pc, #44]	@ (800533c <ES_WIFI_StopClientConnection+0x70>)
 800530e:	4618      	mov	r0, r3
 8005310:	f00c f9fa 	bl	8011708 <siprintf>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005320:	461a      	mov	r2, r3
 8005322:	6878      	ldr	r0, [r7, #4]
 8005324:	f7ff fc1a 	bl	8004b5c <AT_ExecuteCommand>
 8005328:	4603      	mov	r3, r0
 800532a:	73fb      	strb	r3, [r7, #15]
 800532c:	7bfb      	ldrb	r3, [r7, #15]
 800532e:	4618      	mov	r0, r3
 8005330:	3710      	adds	r7, #16
 8005332:	46bd      	mov	sp, r7
 8005334:	bd80      	pop	{r7, pc}
 8005336:	bf00      	nop
 8005338:	0801513c 	.word	0x0801513c
 800533c:	08015174 	.word	0x08015174

08005340 <ES_WIFI_SendData>:
 8005340:	b580      	push	{r7, lr}
 8005342:	b088      	sub	sp, #32
 8005344:	af02      	add	r7, sp, #8
 8005346:	60f8      	str	r0, [r7, #12]
 8005348:	607a      	str	r2, [r7, #4]
 800534a:	461a      	mov	r2, r3
 800534c:	460b      	mov	r3, r1
 800534e:	72fb      	strb	r3, [r7, #11]
 8005350:	4613      	mov	r3, r2
 8005352:	813b      	strh	r3, [r7, #8]
 8005354:	2302      	movs	r3, #2
 8005356:	75fb      	strb	r3, [r7, #23]
 8005358:	893b      	ldrh	r3, [r7, #8]
 800535a:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 800535e:	d302      	bcc.n	8005366 <ES_WIFI_SendData+0x26>
 8005360:	f44f 6396 	mov.w	r3, #1200	@ 0x4b0
 8005364:	813b      	strh	r3, [r7, #8]
 8005366:	6a3b      	ldr	r3, [r7, #32]
 8005368:	893a      	ldrh	r2, [r7, #8]
 800536a:	801a      	strh	r2, [r3, #0]
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005372:	7afa      	ldrb	r2, [r7, #11]
 8005374:	4942      	ldr	r1, [pc, #264]	@ (8005480 <ES_WIFI_SendData+0x140>)
 8005376:	4618      	mov	r0, r3
 8005378:	f00c f9c6 	bl	8011708 <siprintf>
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005388:	461a      	mov	r2, r3
 800538a:	68f8      	ldr	r0, [r7, #12]
 800538c:	f7ff fbe6 	bl	8004b5c <AT_ExecuteCommand>
 8005390:	4603      	mov	r3, r0
 8005392:	75fb      	strb	r3, [r7, #23]
 8005394:	7dfb      	ldrb	r3, [r7, #23]
 8005396:	2b00      	cmp	r3, #0
 8005398:	d15e      	bne.n	8005458 <ES_WIFI_SendData+0x118>
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80053a0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80053a2:	4938      	ldr	r1, [pc, #224]	@ (8005484 <ES_WIFI_SendData+0x144>)
 80053a4:	4618      	mov	r0, r3
 80053a6:	f00c f9af 	bl	8011708 <siprintf>
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80053b6:	461a      	mov	r2, r3
 80053b8:	68f8      	ldr	r0, [r7, #12]
 80053ba:	f7ff fbcf 	bl	8004b5c <AT_ExecuteCommand>
 80053be:	4603      	mov	r3, r0
 80053c0:	75fb      	strb	r3, [r7, #23]
 80053c2:	7dfb      	ldrb	r3, [r7, #23]
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d13d      	bne.n	8005444 <ES_WIFI_SendData+0x104>
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80053ce:	893a      	ldrh	r2, [r7, #8]
 80053d0:	492d      	ldr	r1, [pc, #180]	@ (8005488 <ES_WIFI_SendData+0x148>)
 80053d2:	4618      	mov	r0, r3
 80053d4:	f00c f998 	bl	8011708 <siprintf>
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80053de:	68fb      	ldr	r3, [r7, #12]
 80053e0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80053e4:	893a      	ldrh	r2, [r7, #8]
 80053e6:	9300      	str	r3, [sp, #0]
 80053e8:	4613      	mov	r3, r2
 80053ea:	687a      	ldr	r2, [r7, #4]
 80053ec:	68f8      	ldr	r0, [r7, #12]
 80053ee:	f7ff fc0f 	bl	8004c10 <AT_RequestSendData>
 80053f2:	4603      	mov	r3, r0
 80053f4:	75fb      	strb	r3, [r7, #23]
 80053f6:	7dfb      	ldrb	r3, [r7, #23]
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d119      	bne.n	8005430 <ES_WIFI_SendData+0xf0>
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005402:	4922      	ldr	r1, [pc, #136]	@ (800548c <ES_WIFI_SendData+0x14c>)
 8005404:	4618      	mov	r0, r3
 8005406:	f00c fb57 	bl	8011ab8 <strstr>
 800540a:	4603      	mov	r3, r0
 800540c:	2b00      	cmp	r3, #0
 800540e:	d02c      	beq.n	800546a <ES_WIFI_SendData+0x12a>
 8005410:	f240 7279 	movw	r2, #1913	@ 0x779
 8005414:	491e      	ldr	r1, [pc, #120]	@ (8005490 <ES_WIFI_SendData+0x150>)
 8005416:	481f      	ldr	r0, [pc, #124]	@ (8005494 <ES_WIFI_SendData+0x154>)
 8005418:	f00c f8ca 	bl	80115b0 <iprintf>
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005422:	4619      	mov	r1, r3
 8005424:	481c      	ldr	r0, [pc, #112]	@ (8005498 <ES_WIFI_SendData+0x158>)
 8005426:	f00c f8c3 	bl	80115b0 <iprintf>
 800542a:	2302      	movs	r3, #2
 800542c:	75fb      	strb	r3, [r7, #23]
 800542e:	e01c      	b.n	800546a <ES_WIFI_SendData+0x12a>
 8005430:	f240 727f 	movw	r2, #1919	@ 0x77f
 8005434:	4916      	ldr	r1, [pc, #88]	@ (8005490 <ES_WIFI_SendData+0x150>)
 8005436:	4817      	ldr	r0, [pc, #92]	@ (8005494 <ES_WIFI_SendData+0x154>)
 8005438:	f00c f8ba 	bl	80115b0 <iprintf>
 800543c:	4817      	ldr	r0, [pc, #92]	@ (800549c <ES_WIFI_SendData+0x15c>)
 800543e:	f00c f927 	bl	8011690 <puts>
 8005442:	e012      	b.n	800546a <ES_WIFI_SendData+0x12a>
 8005444:	f240 7284 	movw	r2, #1924	@ 0x784
 8005448:	4911      	ldr	r1, [pc, #68]	@ (8005490 <ES_WIFI_SendData+0x150>)
 800544a:	4812      	ldr	r0, [pc, #72]	@ (8005494 <ES_WIFI_SendData+0x154>)
 800544c:	f00c f8b0 	bl	80115b0 <iprintf>
 8005450:	4813      	ldr	r0, [pc, #76]	@ (80054a0 <ES_WIFI_SendData+0x160>)
 8005452:	f00c f91d 	bl	8011690 <puts>
 8005456:	e008      	b.n	800546a <ES_WIFI_SendData+0x12a>
 8005458:	f240 7289 	movw	r2, #1929	@ 0x789
 800545c:	490c      	ldr	r1, [pc, #48]	@ (8005490 <ES_WIFI_SendData+0x150>)
 800545e:	480d      	ldr	r0, [pc, #52]	@ (8005494 <ES_WIFI_SendData+0x154>)
 8005460:	f00c f8a6 	bl	80115b0 <iprintf>
 8005464:	480f      	ldr	r0, [pc, #60]	@ (80054a4 <ES_WIFI_SendData+0x164>)
 8005466:	f00c f913 	bl	8011690 <puts>
 800546a:	7dfb      	ldrb	r3, [r7, #23]
 800546c:	2b02      	cmp	r3, #2
 800546e:	d102      	bne.n	8005476 <ES_WIFI_SendData+0x136>
 8005470:	6a3b      	ldr	r3, [r7, #32]
 8005472:	2200      	movs	r2, #0
 8005474:	801a      	strh	r2, [r3, #0]
 8005476:	7dfb      	ldrb	r3, [r7, #23]
 8005478:	4618      	mov	r0, r3
 800547a:	3718      	adds	r7, #24
 800547c:	46bd      	mov	sp, r7
 800547e:	bd80      	pop	{r7, pc}
 8005480:	0801513c 	.word	0x0801513c
 8005484:	080152fc 	.word	0x080152fc
 8005488:	08015304 	.word	0x08015304
 800548c:	08015310 	.word	0x08015310
 8005490:	080151c4 	.word	0x080151c4
 8005494:	080151f0 	.word	0x080151f0
 8005498:	08015318 	.word	0x08015318
 800549c:	08015334 	.word	0x08015334
 80054a0:	08015350 	.word	0x08015350
 80054a4:	08015364 	.word	0x08015364

080054a8 <ES_WIFI_SendDataTo>:
 80054a8:	b590      	push	{r4, r7, lr}
 80054aa:	b089      	sub	sp, #36	@ 0x24
 80054ac:	af02      	add	r7, sp, #8
 80054ae:	60f8      	str	r0, [r7, #12]
 80054b0:	607a      	str	r2, [r7, #4]
 80054b2:	461a      	mov	r2, r3
 80054b4:	460b      	mov	r3, r1
 80054b6:	72fb      	strb	r3, [r7, #11]
 80054b8:	4613      	mov	r3, r2
 80054ba:	813b      	strh	r3, [r7, #8]
 80054bc:	2302      	movs	r3, #2
 80054be:	75fb      	strb	r3, [r7, #23]
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80054c6:	7afa      	ldrb	r2, [r7, #11]
 80054c8:	496a      	ldr	r1, [pc, #424]	@ (8005674 <ES_WIFI_SendDataTo+0x1cc>)
 80054ca:	4618      	mov	r0, r3
 80054cc:	f00c f91c 	bl	8011708 <siprintf>
 80054d0:	68fb      	ldr	r3, [r7, #12]
 80054d2:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80054dc:	461a      	mov	r2, r3
 80054de:	68f8      	ldr	r0, [r7, #12]
 80054e0:	f7ff fb3c 	bl	8004b5c <AT_ExecuteCommand>
 80054e4:	4603      	mov	r3, r0
 80054e6:	75fb      	strb	r3, [r7, #23]
 80054e8:	7dfb      	ldrb	r3, [r7, #23]
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d114      	bne.n	8005518 <ES_WIFI_SendDataTo+0x70>
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80054f4:	f64d 52fe 	movw	r2, #56830	@ 0xddfe
 80054f8:	495f      	ldr	r1, [pc, #380]	@ (8005678 <ES_WIFI_SendDataTo+0x1d0>)
 80054fa:	4618      	mov	r0, r3
 80054fc:	f00c f904 	bl	8011708 <siprintf>
 8005500:	68fb      	ldr	r3, [r7, #12]
 8005502:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800550c:	461a      	mov	r2, r3
 800550e:	68f8      	ldr	r0, [r7, #12]
 8005510:	f7ff fb24 	bl	8004b5c <AT_ExecuteCommand>
 8005514:	4603      	mov	r3, r0
 8005516:	75fb      	strb	r3, [r7, #23]
 8005518:	7dfb      	ldrb	r3, [r7, #23]
 800551a:	2b00      	cmp	r3, #0
 800551c:	d113      	bne.n	8005546 <ES_WIFI_SendDataTo+0x9e>
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005524:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8005526:	4955      	ldr	r1, [pc, #340]	@ (800567c <ES_WIFI_SendDataTo+0x1d4>)
 8005528:	4618      	mov	r0, r3
 800552a:	f00c f8ed 	bl	8011708 <siprintf>
 800552e:	68fb      	ldr	r3, [r7, #12]
 8005530:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800553a:	461a      	mov	r2, r3
 800553c:	68f8      	ldr	r0, [r7, #12]
 800553e:	f7ff fb0d 	bl	8004b5c <AT_ExecuteCommand>
 8005542:	4603      	mov	r3, r0
 8005544:	75fb      	strb	r3, [r7, #23]
 8005546:	7dfb      	ldrb	r3, [r7, #23]
 8005548:	2b00      	cmp	r3, #0
 800554a:	d123      	bne.n	8005594 <ES_WIFI_SendDataTo+0xec>
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	f503 7094 	add.w	r0, r3, #296	@ 0x128
 8005552:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005554:	781b      	ldrb	r3, [r3, #0]
 8005556:	4619      	mov	r1, r3
 8005558:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800555a:	3301      	adds	r3, #1
 800555c:	781b      	ldrb	r3, [r3, #0]
 800555e:	461c      	mov	r4, r3
 8005560:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005562:	3302      	adds	r3, #2
 8005564:	781b      	ldrb	r3, [r3, #0]
 8005566:	461a      	mov	r2, r3
 8005568:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800556a:	3303      	adds	r3, #3
 800556c:	781b      	ldrb	r3, [r3, #0]
 800556e:	9301      	str	r3, [sp, #4]
 8005570:	9200      	str	r2, [sp, #0]
 8005572:	4623      	mov	r3, r4
 8005574:	460a      	mov	r2, r1
 8005576:	4942      	ldr	r1, [pc, #264]	@ (8005680 <ES_WIFI_SendDataTo+0x1d8>)
 8005578:	f00c f8c6 	bl	8011708 <siprintf>
 800557c:	68fb      	ldr	r3, [r7, #12]
 800557e:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005588:	461a      	mov	r2, r3
 800558a:	68f8      	ldr	r0, [r7, #12]
 800558c:	f7ff fae6 	bl	8004b5c <AT_ExecuteCommand>
 8005590:	4603      	mov	r3, r0
 8005592:	75fb      	strb	r3, [r7, #23]
 8005594:	7dfb      	ldrb	r3, [r7, #23]
 8005596:	2b00      	cmp	r3, #0
 8005598:	d106      	bne.n	80055a8 <ES_WIFI_SendDataTo+0x100>
 800559a:	893b      	ldrh	r3, [r7, #8]
 800559c:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 80055a0:	d302      	bcc.n	80055a8 <ES_WIFI_SendDataTo+0x100>
 80055a2:	f44f 6396 	mov.w	r3, #1200	@ 0x4b0
 80055a6:	813b      	strh	r3, [r7, #8]
 80055a8:	7dfb      	ldrb	r3, [r7, #23]
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d113      	bne.n	80055d6 <ES_WIFI_SendDataTo+0x12e>
 80055ae:	68fb      	ldr	r3, [r7, #12]
 80055b0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80055b4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80055b6:	4933      	ldr	r1, [pc, #204]	@ (8005684 <ES_WIFI_SendDataTo+0x1dc>)
 80055b8:	4618      	mov	r0, r3
 80055ba:	f00c f8a5 	bl	8011708 <siprintf>
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80055c4:	68fb      	ldr	r3, [r7, #12]
 80055c6:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80055ca:	461a      	mov	r2, r3
 80055cc:	68f8      	ldr	r0, [r7, #12]
 80055ce:	f7ff fac5 	bl	8004b5c <AT_ExecuteCommand>
 80055d2:	4603      	mov	r3, r0
 80055d4:	75fb      	strb	r3, [r7, #23]
 80055d6:	7dfb      	ldrb	r3, [r7, #23]
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d116      	bne.n	800560a <ES_WIFI_SendDataTo+0x162>
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80055e2:	893a      	ldrh	r2, [r7, #8]
 80055e4:	4928      	ldr	r1, [pc, #160]	@ (8005688 <ES_WIFI_SendDataTo+0x1e0>)
 80055e6:	4618      	mov	r0, r3
 80055e8:	f00c f88e 	bl	8011708 <siprintf>
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80055f2:	68fb      	ldr	r3, [r7, #12]
 80055f4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80055f8:	893a      	ldrh	r2, [r7, #8]
 80055fa:	9300      	str	r3, [sp, #0]
 80055fc:	4613      	mov	r3, r2
 80055fe:	687a      	ldr	r2, [r7, #4]
 8005600:	68f8      	ldr	r0, [r7, #12]
 8005602:	f7ff fb05 	bl	8004c10 <AT_RequestSendData>
 8005606:	4603      	mov	r3, r0
 8005608:	75fb      	strb	r3, [r7, #23]
 800560a:	7dfb      	ldrb	r3, [r7, #23]
 800560c:	2b00      	cmp	r3, #0
 800560e:	d115      	bne.n	800563c <ES_WIFI_SendDataTo+0x194>
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005616:	491d      	ldr	r1, [pc, #116]	@ (800568c <ES_WIFI_SendDataTo+0x1e4>)
 8005618:	4618      	mov	r0, r3
 800561a:	f00c fa4d 	bl	8011ab8 <strstr>
 800561e:	6138      	str	r0, [r7, #16]
 8005620:	693b      	ldr	r3, [r7, #16]
 8005622:	2b00      	cmp	r3, #0
 8005624:	d00a      	beq.n	800563c <ES_WIFI_SendDataTo+0x194>
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	f503 63d4 	add.w	r3, r3, #1696	@ 0x6a0
 800562c:	693a      	ldr	r2, [r7, #16]
 800562e:	429a      	cmp	r2, r3
 8005630:	d202      	bcs.n	8005638 <ES_WIFI_SendDataTo+0x190>
 8005632:	2302      	movs	r3, #2
 8005634:	75fb      	strb	r3, [r7, #23]
 8005636:	e001      	b.n	800563c <ES_WIFI_SendDataTo+0x194>
 8005638:	2304      	movs	r3, #4
 800563a:	75fb      	strb	r3, [r7, #23]
 800563c:	7dfb      	ldrb	r3, [r7, #23]
 800563e:	2b00      	cmp	r3, #0
 8005640:	d103      	bne.n	800564a <ES_WIFI_SendDataTo+0x1a2>
 8005642:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005644:	893a      	ldrh	r2, [r7, #8]
 8005646:	801a      	strh	r2, [r3, #0]
 8005648:	e00f      	b.n	800566a <ES_WIFI_SendDataTo+0x1c2>
 800564a:	f240 72d9 	movw	r2, #2009	@ 0x7d9
 800564e:	4910      	ldr	r1, [pc, #64]	@ (8005690 <ES_WIFI_SendDataTo+0x1e8>)
 8005650:	4810      	ldr	r0, [pc, #64]	@ (8005694 <ES_WIFI_SendDataTo+0x1ec>)
 8005652:	f00b ffad 	bl	80115b0 <iprintf>
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800565c:	4619      	mov	r1, r3
 800565e:	480e      	ldr	r0, [pc, #56]	@ (8005698 <ES_WIFI_SendDataTo+0x1f0>)
 8005660:	f00b ffa6 	bl	80115b0 <iprintf>
 8005664:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005666:	2200      	movs	r2, #0
 8005668:	801a      	strh	r2, [r3, #0]
 800566a:	7dfb      	ldrb	r3, [r7, #23]
 800566c:	4618      	mov	r0, r3
 800566e:	371c      	adds	r7, #28
 8005670:	46bd      	mov	sp, r7
 8005672:	bd90      	pop	{r4, r7, pc}
 8005674:	0801513c 	.word	0x0801513c
 8005678:	0801514c 	.word	0x0801514c
 800567c:	08015154 	.word	0x08015154
 8005680:	0801515c 	.word	0x0801515c
 8005684:	080152fc 	.word	0x080152fc
 8005688:	08015304 	.word	0x08015304
 800568c:	08015310 	.word	0x08015310
 8005690:	080151c4 	.word	0x080151c4
 8005694:	080151f0 	.word	0x080151f0
 8005698:	08015378 	.word	0x08015378

0800569c <ES_WIFI_ReceiveData>:
 800569c:	b580      	push	{r7, lr}
 800569e:	b088      	sub	sp, #32
 80056a0:	af02      	add	r7, sp, #8
 80056a2:	60f8      	str	r0, [r7, #12]
 80056a4:	607a      	str	r2, [r7, #4]
 80056a6:	461a      	mov	r2, r3
 80056a8:	460b      	mov	r3, r1
 80056aa:	72fb      	strb	r3, [r7, #11]
 80056ac:	4613      	mov	r3, r2
 80056ae:	813b      	strh	r3, [r7, #8]
 80056b0:	2302      	movs	r3, #2
 80056b2:	75fb      	strb	r3, [r7, #23]
 80056b4:	893b      	ldrh	r3, [r7, #8]
 80056b6:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 80056ba:	f200 808b 	bhi.w	80057d4 <ES_WIFI_ReceiveData+0x138>
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80056c4:	7afa      	ldrb	r2, [r7, #11]
 80056c6:	4946      	ldr	r1, [pc, #280]	@ (80057e0 <ES_WIFI_ReceiveData+0x144>)
 80056c8:	4618      	mov	r0, r3
 80056ca:	f00c f81d 	bl	8011708 <siprintf>
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80056da:	461a      	mov	r2, r3
 80056dc:	68f8      	ldr	r0, [r7, #12]
 80056de:	f7ff fa3d 	bl	8004b5c <AT_ExecuteCommand>
 80056e2:	4603      	mov	r3, r0
 80056e4:	75fb      	strb	r3, [r7, #23]
 80056e6:	7dfb      	ldrb	r3, [r7, #23]
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d165      	bne.n	80057b8 <ES_WIFI_ReceiveData+0x11c>
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80056f2:	893a      	ldrh	r2, [r7, #8]
 80056f4:	493b      	ldr	r1, [pc, #236]	@ (80057e4 <ES_WIFI_ReceiveData+0x148>)
 80056f6:	4618      	mov	r0, r3
 80056f8:	f00c f806 	bl	8011708 <siprintf>
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005702:	68fb      	ldr	r3, [r7, #12]
 8005704:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005708:	461a      	mov	r2, r3
 800570a:	68f8      	ldr	r0, [r7, #12]
 800570c:	f7ff fa26 	bl	8004b5c <AT_ExecuteCommand>
 8005710:	4603      	mov	r3, r0
 8005712:	75fb      	strb	r3, [r7, #23]
 8005714:	7dfb      	ldrb	r3, [r7, #23]
 8005716:	2b00      	cmp	r3, #0
 8005718:	d141      	bne.n	800579e <ES_WIFI_ReceiveData+0x102>
 800571a:	68fb      	ldr	r3, [r7, #12]
 800571c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005720:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005722:	4931      	ldr	r1, [pc, #196]	@ (80057e8 <ES_WIFI_ReceiveData+0x14c>)
 8005724:	4618      	mov	r0, r3
 8005726:	f00b ffef 	bl	8011708 <siprintf>
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005736:	461a      	mov	r2, r3
 8005738:	68f8      	ldr	r0, [r7, #12]
 800573a:	f7ff fa0f 	bl	8004b5c <AT_ExecuteCommand>
 800573e:	4603      	mov	r3, r0
 8005740:	75fb      	strb	r3, [r7, #23]
 8005742:	7dfb      	ldrb	r3, [r7, #23]
 8005744:	2b00      	cmp	r3, #0
 8005746:	d120      	bne.n	800578a <ES_WIFI_ReceiveData+0xee>
 8005748:	68fb      	ldr	r3, [r7, #12]
 800574a:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800574e:	4927      	ldr	r1, [pc, #156]	@ (80057ec <ES_WIFI_ReceiveData+0x150>)
 8005750:	4618      	mov	r0, r3
 8005752:	f00b ffd9 	bl	8011708 <siprintf>
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800575c:	893a      	ldrh	r2, [r7, #8]
 800575e:	6a3b      	ldr	r3, [r7, #32]
 8005760:	9300      	str	r3, [sp, #0]
 8005762:	4613      	mov	r3, r2
 8005764:	687a      	ldr	r2, [r7, #4]
 8005766:	68f8      	ldr	r0, [r7, #12]
 8005768:	f7ff fac8 	bl	8004cfc <AT_RequestReceiveData>
 800576c:	4603      	mov	r3, r0
 800576e:	75fb      	strb	r3, [r7, #23]
 8005770:	7dfb      	ldrb	r3, [r7, #23]
 8005772:	2b00      	cmp	r3, #0
 8005774:	d02e      	beq.n	80057d4 <ES_WIFI_ReceiveData+0x138>
 8005776:	f640 0202 	movw	r2, #2050	@ 0x802
 800577a:	491d      	ldr	r1, [pc, #116]	@ (80057f0 <ES_WIFI_ReceiveData+0x154>)
 800577c:	481d      	ldr	r0, [pc, #116]	@ (80057f4 <ES_WIFI_ReceiveData+0x158>)
 800577e:	f00b ff17 	bl	80115b0 <iprintf>
 8005782:	481d      	ldr	r0, [pc, #116]	@ (80057f8 <ES_WIFI_ReceiveData+0x15c>)
 8005784:	f00b ff84 	bl	8011690 <puts>
 8005788:	e024      	b.n	80057d4 <ES_WIFI_ReceiveData+0x138>
 800578a:	f640 0207 	movw	r2, #2055	@ 0x807
 800578e:	4918      	ldr	r1, [pc, #96]	@ (80057f0 <ES_WIFI_ReceiveData+0x154>)
 8005790:	4818      	ldr	r0, [pc, #96]	@ (80057f4 <ES_WIFI_ReceiveData+0x158>)
 8005792:	f00b ff0d 	bl	80115b0 <iprintf>
 8005796:	4819      	ldr	r0, [pc, #100]	@ (80057fc <ES_WIFI_ReceiveData+0x160>)
 8005798:	f00b ff7a 	bl	8011690 <puts>
 800579c:	e01a      	b.n	80057d4 <ES_WIFI_ReceiveData+0x138>
 800579e:	f640 020c 	movw	r2, #2060	@ 0x80c
 80057a2:	4913      	ldr	r1, [pc, #76]	@ (80057f0 <ES_WIFI_ReceiveData+0x154>)
 80057a4:	4813      	ldr	r0, [pc, #76]	@ (80057f4 <ES_WIFI_ReceiveData+0x158>)
 80057a6:	f00b ff03 	bl	80115b0 <iprintf>
 80057aa:	4815      	ldr	r0, [pc, #84]	@ (8005800 <ES_WIFI_ReceiveData+0x164>)
 80057ac:	f00b ff70 	bl	8011690 <puts>
 80057b0:	6a3b      	ldr	r3, [r7, #32]
 80057b2:	2200      	movs	r2, #0
 80057b4:	801a      	strh	r2, [r3, #0]
 80057b6:	e00d      	b.n	80057d4 <ES_WIFI_ReceiveData+0x138>
 80057b8:	f640 0212 	movw	r2, #2066	@ 0x812
 80057bc:	490c      	ldr	r1, [pc, #48]	@ (80057f0 <ES_WIFI_ReceiveData+0x154>)
 80057be:	480d      	ldr	r0, [pc, #52]	@ (80057f4 <ES_WIFI_ReceiveData+0x158>)
 80057c0:	f00b fef6 	bl	80115b0 <iprintf>
 80057c4:	480f      	ldr	r0, [pc, #60]	@ (8005804 <ES_WIFI_ReceiveData+0x168>)
 80057c6:	f00b ff63 	bl	8011690 <puts>
 80057ca:	4b0f      	ldr	r3, [pc, #60]	@ (8005808 <ES_WIFI_ReceiveData+0x16c>)
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	3301      	adds	r3, #1
 80057d0:	4a0d      	ldr	r2, [pc, #52]	@ (8005808 <ES_WIFI_ReceiveData+0x16c>)
 80057d2:	6013      	str	r3, [r2, #0]
 80057d4:	7dfb      	ldrb	r3, [r7, #23]
 80057d6:	4618      	mov	r0, r3
 80057d8:	3718      	adds	r7, #24
 80057da:	46bd      	mov	sp, r7
 80057dc:	bd80      	pop	{r7, pc}
 80057de:	bf00      	nop
 80057e0:	0801513c 	.word	0x0801513c
 80057e4:	08015388 	.word	0x08015388
 80057e8:	08015390 	.word	0x08015390
 80057ec:	08015398 	.word	0x08015398
 80057f0:	080151c4 	.word	0x080151c4
 80057f4:	080151f0 	.word	0x080151f0
 80057f8:	0801539c 	.word	0x0801539c
 80057fc:	080153bc 	.word	0x080153bc
 8005800:	080153d4 	.word	0x080153d4
 8005804:	080153f4 	.word	0x080153f4
 8005808:	20001570 	.word	0x20001570

0800580c <ES_WIFI_ReceiveDataFrom>:
 800580c:	b580      	push	{r7, lr}
 800580e:	b08c      	sub	sp, #48	@ 0x30
 8005810:	af02      	add	r7, sp, #8
 8005812:	60f8      	str	r0, [r7, #12]
 8005814:	607a      	str	r2, [r7, #4]
 8005816:	461a      	mov	r2, r3
 8005818:	460b      	mov	r3, r1
 800581a:	72fb      	strb	r3, [r7, #11]
 800581c:	4613      	mov	r3, r2
 800581e:	813b      	strh	r3, [r7, #8]
 8005820:	2302      	movs	r3, #2
 8005822:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8005826:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005828:	2200      	movs	r2, #0
 800582a:	801a      	strh	r2, [r3, #0]
 800582c:	893b      	ldrh	r3, [r7, #8]
 800582e:	f5b3 6f96 	cmp.w	r3, #1200	@ 0x4b0
 8005832:	d814      	bhi.n	800585e <ES_WIFI_ReceiveDataFrom+0x52>
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800583a:	7afa      	ldrb	r2, [r7, #11]
 800583c:	496d      	ldr	r1, [pc, #436]	@ (80059f4 <ES_WIFI_ReceiveDataFrom+0x1e8>)
 800583e:	4618      	mov	r0, r3
 8005840:	f00b ff62 	bl	8011708 <siprintf>
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005850:	461a      	mov	r2, r3
 8005852:	68f8      	ldr	r0, [r7, #12]
 8005854:	f7ff f982 	bl	8004b5c <AT_ExecuteCommand>
 8005858:	4603      	mov	r3, r0
 800585a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800585e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8005862:	2b00      	cmp	r3, #0
 8005864:	d115      	bne.n	8005892 <ES_WIFI_ReceiveDataFrom+0x86>
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800586c:	893a      	ldrh	r2, [r7, #8]
 800586e:	4962      	ldr	r1, [pc, #392]	@ (80059f8 <ES_WIFI_ReceiveDataFrom+0x1ec>)
 8005870:	4618      	mov	r0, r3
 8005872:	f00b ff49 	bl	8011708 <siprintf>
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 8005882:	461a      	mov	r2, r3
 8005884:	68f8      	ldr	r0, [r7, #12]
 8005886:	f7ff f969 	bl	8004b5c <AT_ExecuteCommand>
 800588a:	4603      	mov	r3, r0
 800588c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8005890:	e008      	b.n	80058a4 <ES_WIFI_ReceiveDataFrom+0x98>
 8005892:	f640 022e 	movw	r2, #2094	@ 0x82e
 8005896:	4959      	ldr	r1, [pc, #356]	@ (80059fc <ES_WIFI_ReceiveDataFrom+0x1f0>)
 8005898:	4859      	ldr	r0, [pc, #356]	@ (8005a00 <ES_WIFI_ReceiveDataFrom+0x1f4>)
 800589a:	f00b fe89 	bl	80115b0 <iprintf>
 800589e:	4859      	ldr	r0, [pc, #356]	@ (8005a04 <ES_WIFI_ReceiveDataFrom+0x1f8>)
 80058a0:	f00b fef6 	bl	8011690 <puts>
 80058a4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d115      	bne.n	80058d8 <ES_WIFI_ReceiveDataFrom+0xcc>
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80058b2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80058b4:	4954      	ldr	r1, [pc, #336]	@ (8005a08 <ES_WIFI_ReceiveDataFrom+0x1fc>)
 80058b6:	4618      	mov	r0, r3
 80058b8:	f00b ff26 	bl	8011708 <siprintf>
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80058c8:	461a      	mov	r2, r3
 80058ca:	68f8      	ldr	r0, [r7, #12]
 80058cc:	f7ff f946 	bl	8004b5c <AT_ExecuteCommand>
 80058d0:	4603      	mov	r3, r0
 80058d2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80058d6:	e008      	b.n	80058ea <ES_WIFI_ReceiveDataFrom+0xde>
 80058d8:	f640 0238 	movw	r2, #2104	@ 0x838
 80058dc:	4947      	ldr	r1, [pc, #284]	@ (80059fc <ES_WIFI_ReceiveDataFrom+0x1f0>)
 80058de:	4848      	ldr	r0, [pc, #288]	@ (8005a00 <ES_WIFI_ReceiveDataFrom+0x1f4>)
 80058e0:	f00b fe66 	bl	80115b0 <iprintf>
 80058e4:	4849      	ldr	r0, [pc, #292]	@ (8005a0c <ES_WIFI_ReceiveDataFrom+0x200>)
 80058e6:	f00b fed3 	bl	8011690 <puts>
 80058ea:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80058ee:	2b00      	cmp	r3, #0
 80058f0:	d115      	bne.n	800591e <ES_WIFI_ReceiveDataFrom+0x112>
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80058f8:	4945      	ldr	r1, [pc, #276]	@ (8005a10 <ES_WIFI_ReceiveDataFrom+0x204>)
 80058fa:	4618      	mov	r0, r3
 80058fc:	f00b ff04 	bl	8011708 <siprintf>
 8005900:	68fb      	ldr	r3, [r7, #12]
 8005902:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005906:	893a      	ldrh	r2, [r7, #8]
 8005908:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800590a:	9300      	str	r3, [sp, #0]
 800590c:	4613      	mov	r3, r2
 800590e:	687a      	ldr	r2, [r7, #4]
 8005910:	68f8      	ldr	r0, [r7, #12]
 8005912:	f7ff f9f3 	bl	8004cfc <AT_RequestReceiveData>
 8005916:	4603      	mov	r3, r0
 8005918:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800591c:	e008      	b.n	8005930 <ES_WIFI_ReceiveDataFrom+0x124>
 800591e:	f640 0242 	movw	r2, #2114	@ 0x842
 8005922:	4936      	ldr	r1, [pc, #216]	@ (80059fc <ES_WIFI_ReceiveDataFrom+0x1f0>)
 8005924:	4836      	ldr	r0, [pc, #216]	@ (8005a00 <ES_WIFI_ReceiveDataFrom+0x1f4>)
 8005926:	f00b fe43 	bl	80115b0 <iprintf>
 800592a:	483a      	ldr	r0, [pc, #232]	@ (8005a14 <ES_WIFI_ReceiveDataFrom+0x208>)
 800592c:	f00b feb0 	bl	8011690 <puts>
 8005930:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8005934:	2b00      	cmp	r3, #0
 8005936:	d143      	bne.n	80059c0 <ES_WIFI_ReceiveDataFrom+0x1b4>
 8005938:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800593a:	881b      	ldrh	r3, [r3, #0]
 800593c:	893a      	ldrh	r2, [r7, #8]
 800593e:	429a      	cmp	r2, r3
 8005940:	d20c      	bcs.n	800595c <ES_WIFI_ReceiveDataFrom+0x150>
 8005942:	f640 0249 	movw	r2, #2121	@ 0x849
 8005946:	492d      	ldr	r1, [pc, #180]	@ (80059fc <ES_WIFI_ReceiveDataFrom+0x1f0>)
 8005948:	482d      	ldr	r0, [pc, #180]	@ (8005a00 <ES_WIFI_ReceiveDataFrom+0x1f4>)
 800594a:	f00b fe31 	bl	80115b0 <iprintf>
 800594e:	4832      	ldr	r0, [pc, #200]	@ (8005a18 <ES_WIFI_ReceiveDataFrom+0x20c>)
 8005950:	f00b fe2e 	bl	80115b0 <iprintf>
 8005954:	2302      	movs	r3, #2
 8005956:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800595a:	e031      	b.n	80059c0 <ES_WIFI_ReceiveDataFrom+0x1b4>
 800595c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800595e:	881b      	ldrh	r3, [r3, #0]
 8005960:	2b00      	cmp	r3, #0
 8005962:	d02d      	beq.n	80059c0 <ES_WIFI_ReceiveDataFrom+0x1b4>
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800596a:	492c      	ldr	r1, [pc, #176]	@ (8005a1c <ES_WIFI_ReceiveDataFrom+0x210>)
 800596c:	4618      	mov	r0, r3
 800596e:	f00b fecb 	bl	8011708 <siprintf>
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	f503 7194 	add.w	r1, r3, #296	@ 0x128
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 800597e:	461a      	mov	r2, r3
 8005980:	68f8      	ldr	r0, [r7, #12]
 8005982:	f7ff f8eb 	bl	8004b5c <AT_ExecuteCommand>
 8005986:	4603      	mov	r3, r0
 8005988:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800598c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8005990:	2b00      	cmp	r3, #0
 8005992:	d115      	bne.n	80059c0 <ES_WIFI_ReceiveDataFrom+0x1b4>
 8005994:	f107 0310 	add.w	r3, r7, #16
 8005998:	2214      	movs	r2, #20
 800599a:	2100      	movs	r1, #0
 800599c:	4618      	mov	r0, r3
 800599e:	f00c f801 	bl	80119a4 <memset>
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80059a8:	f107 0210 	add.w	r2, r7, #16
 80059ac:	4611      	mov	r1, r2
 80059ae:	4618      	mov	r0, r3
 80059b0:	f7ff f820 	bl	80049f4 <AT_ParseTransportSettings>
 80059b4:	69ba      	ldr	r2, [r7, #24]
 80059b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80059b8:	601a      	str	r2, [r3, #0]
 80059ba:	8bba      	ldrh	r2, [r7, #28]
 80059bc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80059be:	801a      	strh	r2, [r3, #0]
 80059c0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	d00f      	beq.n	80059e8 <ES_WIFI_ReceiveDataFrom+0x1dc>
 80059c8:	f640 0262 	movw	r2, #2146	@ 0x862
 80059cc:	490b      	ldr	r1, [pc, #44]	@ (80059fc <ES_WIFI_ReceiveDataFrom+0x1f0>)
 80059ce:	480c      	ldr	r0, [pc, #48]	@ (8005a00 <ES_WIFI_ReceiveDataFrom+0x1f4>)
 80059d0:	f00b fdee 	bl	80115b0 <iprintf>
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80059da:	4619      	mov	r1, r3
 80059dc:	4810      	ldr	r0, [pc, #64]	@ (8005a20 <ES_WIFI_ReceiveDataFrom+0x214>)
 80059de:	f00b fde7 	bl	80115b0 <iprintf>
 80059e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80059e4:	2200      	movs	r2, #0
 80059e6:	801a      	strh	r2, [r3, #0]
 80059e8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80059ec:	4618      	mov	r0, r3
 80059ee:	3728      	adds	r7, #40	@ 0x28
 80059f0:	46bd      	mov	sp, r7
 80059f2:	bd80      	pop	{r7, pc}
 80059f4:	0801513c 	.word	0x0801513c
 80059f8:	08015388 	.word	0x08015388
 80059fc:	080151c4 	.word	0x080151c4
 8005a00:	080151f0 	.word	0x080151f0
 8005a04:	08015414 	.word	0x08015414
 8005a08:	08015390 	.word	0x08015390
 8005a0c:	08015420 	.word	0x08015420
 8005a10:	08015398 	.word	0x08015398
 8005a14:	0801542c 	.word	0x0801542c
 8005a18:	08015438 	.word	0x08015438
 8005a1c:	08015228 	.word	0x08015228
 8005a20:	0801545c 	.word	0x0801545c

08005a24 <HAL_Init>:
 8005a24:	b580      	push	{r7, lr}
 8005a26:	b082      	sub	sp, #8
 8005a28:	af00      	add	r7, sp, #0
 8005a2a:	2300      	movs	r3, #0
 8005a2c:	71fb      	strb	r3, [r7, #7]
 8005a2e:	2003      	movs	r0, #3
 8005a30:	f000 f901 	bl	8005c36 <HAL_NVIC_SetPriorityGrouping>
 8005a34:	200f      	movs	r0, #15
 8005a36:	f7fd fd85 	bl	8003544 <HAL_InitTick>
 8005a3a:	4603      	mov	r3, r0
 8005a3c:	2b00      	cmp	r3, #0
 8005a3e:	d002      	beq.n	8005a46 <HAL_Init+0x22>
 8005a40:	2301      	movs	r3, #1
 8005a42:	71fb      	strb	r3, [r7, #7]
 8005a44:	e001      	b.n	8005a4a <HAL_Init+0x26>
 8005a46:	f7fd fa39 	bl	8002ebc <HAL_MspInit>
 8005a4a:	79fb      	ldrb	r3, [r7, #7]
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	3708      	adds	r7, #8
 8005a50:	46bd      	mov	sp, r7
 8005a52:	bd80      	pop	{r7, pc}

08005a54 <HAL_IncTick>:
 8005a54:	b480      	push	{r7}
 8005a56:	af00      	add	r7, sp, #0
 8005a58:	4b06      	ldr	r3, [pc, #24]	@ (8005a74 <HAL_IncTick+0x20>)
 8005a5a:	781b      	ldrb	r3, [r3, #0]
 8005a5c:	461a      	mov	r2, r3
 8005a5e:	4b06      	ldr	r3, [pc, #24]	@ (8005a78 <HAL_IncTick+0x24>)
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4413      	add	r3, r2
 8005a64:	4a04      	ldr	r2, [pc, #16]	@ (8005a78 <HAL_IncTick+0x24>)
 8005a66:	6013      	str	r3, [r2, #0]
 8005a68:	bf00      	nop
 8005a6a:	46bd      	mov	sp, r7
 8005a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a70:	4770      	bx	lr
 8005a72:	bf00      	nop
 8005a74:	20000070 	.word	0x20000070
 8005a78:	20001574 	.word	0x20001574

08005a7c <HAL_GetTick>:
 8005a7c:	b480      	push	{r7}
 8005a7e:	af00      	add	r7, sp, #0
 8005a80:	4b03      	ldr	r3, [pc, #12]	@ (8005a90 <HAL_GetTick+0x14>)
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	4618      	mov	r0, r3
 8005a86:	46bd      	mov	sp, r7
 8005a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a8c:	4770      	bx	lr
 8005a8e:	bf00      	nop
 8005a90:	20001574 	.word	0x20001574

08005a94 <HAL_Delay>:
 8005a94:	b580      	push	{r7, lr}
 8005a96:	b084      	sub	sp, #16
 8005a98:	af00      	add	r7, sp, #0
 8005a9a:	6078      	str	r0, [r7, #4]
 8005a9c:	f7ff ffee 	bl	8005a7c <HAL_GetTick>
 8005aa0:	60b8      	str	r0, [r7, #8]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	60fb      	str	r3, [r7, #12]
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005aac:	d005      	beq.n	8005aba <HAL_Delay+0x26>
 8005aae:	4b0a      	ldr	r3, [pc, #40]	@ (8005ad8 <HAL_Delay+0x44>)
 8005ab0:	781b      	ldrb	r3, [r3, #0]
 8005ab2:	461a      	mov	r2, r3
 8005ab4:	68fb      	ldr	r3, [r7, #12]
 8005ab6:	4413      	add	r3, r2
 8005ab8:	60fb      	str	r3, [r7, #12]
 8005aba:	bf00      	nop
 8005abc:	f7ff ffde 	bl	8005a7c <HAL_GetTick>
 8005ac0:	4602      	mov	r2, r0
 8005ac2:	68bb      	ldr	r3, [r7, #8]
 8005ac4:	1ad3      	subs	r3, r2, r3
 8005ac6:	68fa      	ldr	r2, [r7, #12]
 8005ac8:	429a      	cmp	r2, r3
 8005aca:	d8f7      	bhi.n	8005abc <HAL_Delay+0x28>
 8005acc:	bf00      	nop
 8005ace:	bf00      	nop
 8005ad0:	3710      	adds	r7, #16
 8005ad2:	46bd      	mov	sp, r7
 8005ad4:	bd80      	pop	{r7, pc}
 8005ad6:	bf00      	nop
 8005ad8:	20000070 	.word	0x20000070

08005adc <__NVIC_SetPriorityGrouping>:
 8005adc:	b480      	push	{r7}
 8005ade:	b085      	sub	sp, #20
 8005ae0:	af00      	add	r7, sp, #0
 8005ae2:	6078      	str	r0, [r7, #4]
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	f003 0307 	and.w	r3, r3, #7
 8005aea:	60fb      	str	r3, [r7, #12]
 8005aec:	4b0c      	ldr	r3, [pc, #48]	@ (8005b20 <__NVIC_SetPriorityGrouping+0x44>)
 8005aee:	68db      	ldr	r3, [r3, #12]
 8005af0:	60bb      	str	r3, [r7, #8]
 8005af2:	68ba      	ldr	r2, [r7, #8]
 8005af4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8005af8:	4013      	ands	r3, r2
 8005afa:	60bb      	str	r3, [r7, #8]
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	021a      	lsls	r2, r3, #8
 8005b00:	68bb      	ldr	r3, [r7, #8]
 8005b02:	4313      	orrs	r3, r2
 8005b04:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005b08:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005b0c:	60bb      	str	r3, [r7, #8]
 8005b0e:	4a04      	ldr	r2, [pc, #16]	@ (8005b20 <__NVIC_SetPriorityGrouping+0x44>)
 8005b10:	68bb      	ldr	r3, [r7, #8]
 8005b12:	60d3      	str	r3, [r2, #12]
 8005b14:	bf00      	nop
 8005b16:	3714      	adds	r7, #20
 8005b18:	46bd      	mov	sp, r7
 8005b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b1e:	4770      	bx	lr
 8005b20:	e000ed00 	.word	0xe000ed00

08005b24 <__NVIC_GetPriorityGrouping>:
 8005b24:	b480      	push	{r7}
 8005b26:	af00      	add	r7, sp, #0
 8005b28:	4b04      	ldr	r3, [pc, #16]	@ (8005b3c <__NVIC_GetPriorityGrouping+0x18>)
 8005b2a:	68db      	ldr	r3, [r3, #12]
 8005b2c:	0a1b      	lsrs	r3, r3, #8
 8005b2e:	f003 0307 	and.w	r3, r3, #7
 8005b32:	4618      	mov	r0, r3
 8005b34:	46bd      	mov	sp, r7
 8005b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b3a:	4770      	bx	lr
 8005b3c:	e000ed00 	.word	0xe000ed00

08005b40 <__NVIC_EnableIRQ>:
 8005b40:	b480      	push	{r7}
 8005b42:	b083      	sub	sp, #12
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	4603      	mov	r3, r0
 8005b48:	71fb      	strb	r3, [r7, #7]
 8005b4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	db0b      	blt.n	8005b6a <__NVIC_EnableIRQ+0x2a>
 8005b52:	79fb      	ldrb	r3, [r7, #7]
 8005b54:	f003 021f 	and.w	r2, r3, #31
 8005b58:	4907      	ldr	r1, [pc, #28]	@ (8005b78 <__NVIC_EnableIRQ+0x38>)
 8005b5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005b5e:	095b      	lsrs	r3, r3, #5
 8005b60:	2001      	movs	r0, #1
 8005b62:	fa00 f202 	lsl.w	r2, r0, r2
 8005b66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005b6a:	bf00      	nop
 8005b6c:	370c      	adds	r7, #12
 8005b6e:	46bd      	mov	sp, r7
 8005b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b74:	4770      	bx	lr
 8005b76:	bf00      	nop
 8005b78:	e000e100 	.word	0xe000e100

08005b7c <__NVIC_SetPriority>:
 8005b7c:	b480      	push	{r7}
 8005b7e:	b083      	sub	sp, #12
 8005b80:	af00      	add	r7, sp, #0
 8005b82:	4603      	mov	r3, r0
 8005b84:	6039      	str	r1, [r7, #0]
 8005b86:	71fb      	strb	r3, [r7, #7]
 8005b88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005b8c:	2b00      	cmp	r3, #0
 8005b8e:	db0a      	blt.n	8005ba6 <__NVIC_SetPriority+0x2a>
 8005b90:	683b      	ldr	r3, [r7, #0]
 8005b92:	b2da      	uxtb	r2, r3
 8005b94:	490c      	ldr	r1, [pc, #48]	@ (8005bc8 <__NVIC_SetPriority+0x4c>)
 8005b96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005b9a:	0112      	lsls	r2, r2, #4
 8005b9c:	b2d2      	uxtb	r2, r2
 8005b9e:	440b      	add	r3, r1
 8005ba0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8005ba4:	e00a      	b.n	8005bbc <__NVIC_SetPriority+0x40>
 8005ba6:	683b      	ldr	r3, [r7, #0]
 8005ba8:	b2da      	uxtb	r2, r3
 8005baa:	4908      	ldr	r1, [pc, #32]	@ (8005bcc <__NVIC_SetPriority+0x50>)
 8005bac:	79fb      	ldrb	r3, [r7, #7]
 8005bae:	f003 030f 	and.w	r3, r3, #15
 8005bb2:	3b04      	subs	r3, #4
 8005bb4:	0112      	lsls	r2, r2, #4
 8005bb6:	b2d2      	uxtb	r2, r2
 8005bb8:	440b      	add	r3, r1
 8005bba:	761a      	strb	r2, [r3, #24]
 8005bbc:	bf00      	nop
 8005bbe:	370c      	adds	r7, #12
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bc6:	4770      	bx	lr
 8005bc8:	e000e100 	.word	0xe000e100
 8005bcc:	e000ed00 	.word	0xe000ed00

08005bd0 <NVIC_EncodePriority>:
 8005bd0:	b480      	push	{r7}
 8005bd2:	b089      	sub	sp, #36	@ 0x24
 8005bd4:	af00      	add	r7, sp, #0
 8005bd6:	60f8      	str	r0, [r7, #12]
 8005bd8:	60b9      	str	r1, [r7, #8]
 8005bda:	607a      	str	r2, [r7, #4]
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	f003 0307 	and.w	r3, r3, #7
 8005be2:	61fb      	str	r3, [r7, #28]
 8005be4:	69fb      	ldr	r3, [r7, #28]
 8005be6:	f1c3 0307 	rsb	r3, r3, #7
 8005bea:	2b04      	cmp	r3, #4
 8005bec:	bf28      	it	cs
 8005bee:	2304      	movcs	r3, #4
 8005bf0:	61bb      	str	r3, [r7, #24]
 8005bf2:	69fb      	ldr	r3, [r7, #28]
 8005bf4:	3304      	adds	r3, #4
 8005bf6:	2b06      	cmp	r3, #6
 8005bf8:	d902      	bls.n	8005c00 <NVIC_EncodePriority+0x30>
 8005bfa:	69fb      	ldr	r3, [r7, #28]
 8005bfc:	3b03      	subs	r3, #3
 8005bfe:	e000      	b.n	8005c02 <NVIC_EncodePriority+0x32>
 8005c00:	2300      	movs	r3, #0
 8005c02:	617b      	str	r3, [r7, #20]
 8005c04:	f04f 32ff 	mov.w	r2, #4294967295
 8005c08:	69bb      	ldr	r3, [r7, #24]
 8005c0a:	fa02 f303 	lsl.w	r3, r2, r3
 8005c0e:	43da      	mvns	r2, r3
 8005c10:	68bb      	ldr	r3, [r7, #8]
 8005c12:	401a      	ands	r2, r3
 8005c14:	697b      	ldr	r3, [r7, #20]
 8005c16:	409a      	lsls	r2, r3
 8005c18:	f04f 31ff 	mov.w	r1, #4294967295
 8005c1c:	697b      	ldr	r3, [r7, #20]
 8005c1e:	fa01 f303 	lsl.w	r3, r1, r3
 8005c22:	43d9      	mvns	r1, r3
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	400b      	ands	r3, r1
 8005c28:	4313      	orrs	r3, r2
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	3724      	adds	r7, #36	@ 0x24
 8005c2e:	46bd      	mov	sp, r7
 8005c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c34:	4770      	bx	lr

08005c36 <HAL_NVIC_SetPriorityGrouping>:
 8005c36:	b580      	push	{r7, lr}
 8005c38:	b082      	sub	sp, #8
 8005c3a:	af00      	add	r7, sp, #0
 8005c3c:	6078      	str	r0, [r7, #4]
 8005c3e:	6878      	ldr	r0, [r7, #4]
 8005c40:	f7ff ff4c 	bl	8005adc <__NVIC_SetPriorityGrouping>
 8005c44:	bf00      	nop
 8005c46:	3708      	adds	r7, #8
 8005c48:	46bd      	mov	sp, r7
 8005c4a:	bd80      	pop	{r7, pc}

08005c4c <HAL_NVIC_SetPriority>:
 8005c4c:	b580      	push	{r7, lr}
 8005c4e:	b086      	sub	sp, #24
 8005c50:	af00      	add	r7, sp, #0
 8005c52:	4603      	mov	r3, r0
 8005c54:	60b9      	str	r1, [r7, #8]
 8005c56:	607a      	str	r2, [r7, #4]
 8005c58:	73fb      	strb	r3, [r7, #15]
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	617b      	str	r3, [r7, #20]
 8005c5e:	f7ff ff61 	bl	8005b24 <__NVIC_GetPriorityGrouping>
 8005c62:	6178      	str	r0, [r7, #20]
 8005c64:	687a      	ldr	r2, [r7, #4]
 8005c66:	68b9      	ldr	r1, [r7, #8]
 8005c68:	6978      	ldr	r0, [r7, #20]
 8005c6a:	f7ff ffb1 	bl	8005bd0 <NVIC_EncodePriority>
 8005c6e:	4602      	mov	r2, r0
 8005c70:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005c74:	4611      	mov	r1, r2
 8005c76:	4618      	mov	r0, r3
 8005c78:	f7ff ff80 	bl	8005b7c <__NVIC_SetPriority>
 8005c7c:	bf00      	nop
 8005c7e:	3718      	adds	r7, #24
 8005c80:	46bd      	mov	sp, r7
 8005c82:	bd80      	pop	{r7, pc}

08005c84 <HAL_NVIC_EnableIRQ>:
 8005c84:	b580      	push	{r7, lr}
 8005c86:	b082      	sub	sp, #8
 8005c88:	af00      	add	r7, sp, #0
 8005c8a:	4603      	mov	r3, r0
 8005c8c:	71fb      	strb	r3, [r7, #7]
 8005c8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005c92:	4618      	mov	r0, r3
 8005c94:	f7ff ff54 	bl	8005b40 <__NVIC_EnableIRQ>
 8005c98:	bf00      	nop
 8005c9a:	3708      	adds	r7, #8
 8005c9c:	46bd      	mov	sp, r7
 8005c9e:	bd80      	pop	{r7, pc}

08005ca0 <HAL_DFSDM_ChannelInit>:
 8005ca0:	b580      	push	{r7, lr}
 8005ca2:	b082      	sub	sp, #8
 8005ca4:	af00      	add	r7, sp, #0
 8005ca6:	6078      	str	r0, [r7, #4]
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	2b00      	cmp	r3, #0
 8005cac:	d101      	bne.n	8005cb2 <HAL_DFSDM_ChannelInit+0x12>
 8005cae:	2301      	movs	r3, #1
 8005cb0:	e0ac      	b.n	8005e0c <HAL_DFSDM_ChannelInit+0x16c>
 8005cb2:	687b      	ldr	r3, [r7, #4]
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	4618      	mov	r0, r3
 8005cb8:	f000 f8b2 	bl	8005e20 <DFSDM_GetChannelFromInstance>
 8005cbc:	4603      	mov	r3, r0
 8005cbe:	4a55      	ldr	r2, [pc, #340]	@ (8005e14 <HAL_DFSDM_ChannelInit+0x174>)
 8005cc0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005cc4:	2b00      	cmp	r3, #0
 8005cc6:	d001      	beq.n	8005ccc <HAL_DFSDM_ChannelInit+0x2c>
 8005cc8:	2301      	movs	r3, #1
 8005cca:	e09f      	b.n	8005e0c <HAL_DFSDM_ChannelInit+0x16c>
 8005ccc:	6878      	ldr	r0, [r7, #4]
 8005cce:	f7fd f91d 	bl	8002f0c <HAL_DFSDM_ChannelMspInit>
 8005cd2:	4b51      	ldr	r3, [pc, #324]	@ (8005e18 <HAL_DFSDM_ChannelInit+0x178>)
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	3301      	adds	r3, #1
 8005cd8:	4a4f      	ldr	r2, [pc, #316]	@ (8005e18 <HAL_DFSDM_ChannelInit+0x178>)
 8005cda:	6013      	str	r3, [r2, #0]
 8005cdc:	4b4e      	ldr	r3, [pc, #312]	@ (8005e18 <HAL_DFSDM_ChannelInit+0x178>)
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	2b01      	cmp	r3, #1
 8005ce2:	d125      	bne.n	8005d30 <HAL_DFSDM_ChannelInit+0x90>
 8005ce4:	4b4d      	ldr	r3, [pc, #308]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	4a4c      	ldr	r2, [pc, #304]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005cea:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005cee:	6013      	str	r3, [r2, #0]
 8005cf0:	4b4a      	ldr	r3, [pc, #296]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005cf2:	681a      	ldr	r2, [r3, #0]
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	4948      	ldr	r1, [pc, #288]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005cfa:	4313      	orrs	r3, r2
 8005cfc:	600b      	str	r3, [r1, #0]
 8005cfe:	4b47      	ldr	r3, [pc, #284]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	4a46      	ldr	r2, [pc, #280]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d04:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
 8005d08:	6013      	str	r3, [r2, #0]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	791b      	ldrb	r3, [r3, #4]
 8005d0e:	2b01      	cmp	r3, #1
 8005d10:	d108      	bne.n	8005d24 <HAL_DFSDM_ChannelInit+0x84>
 8005d12:	4b42      	ldr	r3, [pc, #264]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d14:	681a      	ldr	r2, [r3, #0]
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	68db      	ldr	r3, [r3, #12]
 8005d1a:	3b01      	subs	r3, #1
 8005d1c:	041b      	lsls	r3, r3, #16
 8005d1e:	493f      	ldr	r1, [pc, #252]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d20:	4313      	orrs	r3, r2
 8005d22:	600b      	str	r3, [r1, #0]
 8005d24:	4b3d      	ldr	r3, [pc, #244]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	4a3c      	ldr	r2, [pc, #240]	@ (8005e1c <HAL_DFSDM_ChannelInit+0x17c>)
 8005d2a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005d2e:	6013      	str	r3, [r2, #0]
 8005d30:	687b      	ldr	r3, [r7, #4]
 8005d32:	681b      	ldr	r3, [r3, #0]
 8005d34:	681a      	ldr	r2, [r3, #0]
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	f422 4271 	bic.w	r2, r2, #61696	@ 0xf100
 8005d3e:	601a      	str	r2, [r3, #0]
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	6819      	ldr	r1, [r3, #0]
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	691a      	ldr	r2, [r3, #16]
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	695b      	ldr	r3, [r3, #20]
 8005d4e:	431a      	orrs	r2, r3
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	699b      	ldr	r3, [r3, #24]
 8005d54:	431a      	orrs	r2, r3
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	430a      	orrs	r2, r1
 8005d5c:	601a      	str	r2, [r3, #0]
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	681a      	ldr	r2, [r3, #0]
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	f022 020f 	bic.w	r2, r2, #15
 8005d6c:	601a      	str	r2, [r3, #0]
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	6819      	ldr	r1, [r3, #0]
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	69da      	ldr	r2, [r3, #28]
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	6a1b      	ldr	r3, [r3, #32]
 8005d7c:	431a      	orrs	r2, r3
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	430a      	orrs	r2, r1
 8005d84:	601a      	str	r2, [r3, #0]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	689a      	ldr	r2, [r3, #8]
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f422 025f 	bic.w	r2, r2, #14614528	@ 0xdf0000
 8005d94:	609a      	str	r2, [r3, #8]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	6899      	ldr	r1, [r3, #8]
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005da4:	3b01      	subs	r3, #1
 8005da6:	041b      	lsls	r3, r3, #16
 8005da8:	431a      	orrs	r2, r3
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	430a      	orrs	r2, r1
 8005db0:	609a      	str	r2, [r3, #8]
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	685a      	ldr	r2, [r3, #4]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	f002 0207 	and.w	r2, r2, #7
 8005dc0:	605a      	str	r2, [r3, #4]
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	6859      	ldr	r1, [r3, #4]
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005dcc:	021a      	lsls	r2, r3, #8
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005dd2:	00db      	lsls	r3, r3, #3
 8005dd4:	431a      	orrs	r2, r3
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	430a      	orrs	r2, r1
 8005ddc:	605a      	str	r2, [r3, #4]
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	681a      	ldr	r2, [r3, #0]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8005dec:	601a      	str	r2, [r3, #0]
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	2201      	movs	r2, #1
 8005df2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	4618      	mov	r0, r3
 8005dfc:	f000 f810 	bl	8005e20 <DFSDM_GetChannelFromInstance>
 8005e00:	4602      	mov	r2, r0
 8005e02:	4904      	ldr	r1, [pc, #16]	@ (8005e14 <HAL_DFSDM_ChannelInit+0x174>)
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8005e0a:	2300      	movs	r3, #0
 8005e0c:	4618      	mov	r0, r3
 8005e0e:	3708      	adds	r7, #8
 8005e10:	46bd      	mov	sp, r7
 8005e12:	bd80      	pop	{r7, pc}
 8005e14:	2000157c 	.word	0x2000157c
 8005e18:	20001578 	.word	0x20001578
 8005e1c:	40016000 	.word	0x40016000

08005e20 <DFSDM_GetChannelFromInstance>:
 8005e20:	b480      	push	{r7}
 8005e22:	b085      	sub	sp, #20
 8005e24:	af00      	add	r7, sp, #0
 8005e26:	6078      	str	r0, [r7, #4]
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	4a1c      	ldr	r2, [pc, #112]	@ (8005e9c <DFSDM_GetChannelFromInstance+0x7c>)
 8005e2c:	4293      	cmp	r3, r2
 8005e2e:	d102      	bne.n	8005e36 <DFSDM_GetChannelFromInstance+0x16>
 8005e30:	2300      	movs	r3, #0
 8005e32:	60fb      	str	r3, [r7, #12]
 8005e34:	e02b      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	4a19      	ldr	r2, [pc, #100]	@ (8005ea0 <DFSDM_GetChannelFromInstance+0x80>)
 8005e3a:	4293      	cmp	r3, r2
 8005e3c:	d102      	bne.n	8005e44 <DFSDM_GetChannelFromInstance+0x24>
 8005e3e:	2301      	movs	r3, #1
 8005e40:	60fb      	str	r3, [r7, #12]
 8005e42:	e024      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	4a17      	ldr	r2, [pc, #92]	@ (8005ea4 <DFSDM_GetChannelFromInstance+0x84>)
 8005e48:	4293      	cmp	r3, r2
 8005e4a:	d102      	bne.n	8005e52 <DFSDM_GetChannelFromInstance+0x32>
 8005e4c:	2302      	movs	r3, #2
 8005e4e:	60fb      	str	r3, [r7, #12]
 8005e50:	e01d      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	4a14      	ldr	r2, [pc, #80]	@ (8005ea8 <DFSDM_GetChannelFromInstance+0x88>)
 8005e56:	4293      	cmp	r3, r2
 8005e58:	d102      	bne.n	8005e60 <DFSDM_GetChannelFromInstance+0x40>
 8005e5a:	2304      	movs	r3, #4
 8005e5c:	60fb      	str	r3, [r7, #12]
 8005e5e:	e016      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	4a12      	ldr	r2, [pc, #72]	@ (8005eac <DFSDM_GetChannelFromInstance+0x8c>)
 8005e64:	4293      	cmp	r3, r2
 8005e66:	d102      	bne.n	8005e6e <DFSDM_GetChannelFromInstance+0x4e>
 8005e68:	2305      	movs	r3, #5
 8005e6a:	60fb      	str	r3, [r7, #12]
 8005e6c:	e00f      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	4a0f      	ldr	r2, [pc, #60]	@ (8005eb0 <DFSDM_GetChannelFromInstance+0x90>)
 8005e72:	4293      	cmp	r3, r2
 8005e74:	d102      	bne.n	8005e7c <DFSDM_GetChannelFromInstance+0x5c>
 8005e76:	2306      	movs	r3, #6
 8005e78:	60fb      	str	r3, [r7, #12]
 8005e7a:	e008      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	4a0d      	ldr	r2, [pc, #52]	@ (8005eb4 <DFSDM_GetChannelFromInstance+0x94>)
 8005e80:	4293      	cmp	r3, r2
 8005e82:	d102      	bne.n	8005e8a <DFSDM_GetChannelFromInstance+0x6a>
 8005e84:	2307      	movs	r3, #7
 8005e86:	60fb      	str	r3, [r7, #12]
 8005e88:	e001      	b.n	8005e8e <DFSDM_GetChannelFromInstance+0x6e>
 8005e8a:	2303      	movs	r3, #3
 8005e8c:	60fb      	str	r3, [r7, #12]
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	4618      	mov	r0, r3
 8005e92:	3714      	adds	r7, #20
 8005e94:	46bd      	mov	sp, r7
 8005e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e9a:	4770      	bx	lr
 8005e9c:	40016000 	.word	0x40016000
 8005ea0:	40016020 	.word	0x40016020
 8005ea4:	40016040 	.word	0x40016040
 8005ea8:	40016080 	.word	0x40016080
 8005eac:	400160a0 	.word	0x400160a0
 8005eb0:	400160c0 	.word	0x400160c0
 8005eb4:	400160e0 	.word	0x400160e0

08005eb8 <HAL_DMA_Abort_IT>:
 8005eb8:	b580      	push	{r7, lr}
 8005eba:	b084      	sub	sp, #16
 8005ebc:	af00      	add	r7, sp, #0
 8005ebe:	6078      	str	r0, [r7, #4]
 8005ec0:	2300      	movs	r3, #0
 8005ec2:	73fb      	strb	r3, [r7, #15]
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8005eca:	b2db      	uxtb	r3, r3
 8005ecc:	2b02      	cmp	r3, #2
 8005ece:	d005      	beq.n	8005edc <HAL_DMA_Abort_IT+0x24>
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	2204      	movs	r2, #4
 8005ed4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005ed6:	2301      	movs	r3, #1
 8005ed8:	73fb      	strb	r3, [r7, #15]
 8005eda:	e029      	b.n	8005f30 <HAL_DMA_Abort_IT+0x78>
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	681a      	ldr	r2, [r3, #0]
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	f022 020e 	bic.w	r2, r2, #14
 8005eea:	601a      	str	r2, [r3, #0]
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	681a      	ldr	r2, [r3, #0]
 8005ef2:	687b      	ldr	r3, [r7, #4]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	f022 0201 	bic.w	r2, r2, #1
 8005efa:	601a      	str	r2, [r3, #0]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f00:	f003 021c 	and.w	r2, r3, #28
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f08:	2101      	movs	r1, #1
 8005f0a:	fa01 f202 	lsl.w	r2, r1, r2
 8005f0e:	605a      	str	r2, [r3, #4]
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	2201      	movs	r2, #1
 8005f14:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	2200      	movs	r2, #0
 8005f1c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d003      	beq.n	8005f30 <HAL_DMA_Abort_IT+0x78>
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005f2c:	6878      	ldr	r0, [r7, #4]
 8005f2e:	4798      	blx	r3
 8005f30:	7bfb      	ldrb	r3, [r7, #15]
 8005f32:	4618      	mov	r0, r3
 8005f34:	3710      	adds	r7, #16
 8005f36:	46bd      	mov	sp, r7
 8005f38:	bd80      	pop	{r7, pc}
	...

08005f3c <HAL_GPIO_Init>:
 8005f3c:	b480      	push	{r7}
 8005f3e:	b087      	sub	sp, #28
 8005f40:	af00      	add	r7, sp, #0
 8005f42:	6078      	str	r0, [r7, #4]
 8005f44:	6039      	str	r1, [r7, #0]
 8005f46:	2300      	movs	r3, #0
 8005f48:	617b      	str	r3, [r7, #20]
 8005f4a:	e17f      	b.n	800624c <HAL_GPIO_Init+0x310>
 8005f4c:	683b      	ldr	r3, [r7, #0]
 8005f4e:	681a      	ldr	r2, [r3, #0]
 8005f50:	2101      	movs	r1, #1
 8005f52:	697b      	ldr	r3, [r7, #20]
 8005f54:	fa01 f303 	lsl.w	r3, r1, r3
 8005f58:	4013      	ands	r3, r2
 8005f5a:	60fb      	str	r3, [r7, #12]
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	f000 8171 	beq.w	8006246 <HAL_GPIO_Init+0x30a>
 8005f64:	683b      	ldr	r3, [r7, #0]
 8005f66:	685b      	ldr	r3, [r3, #4]
 8005f68:	f003 0303 	and.w	r3, r3, #3
 8005f6c:	2b01      	cmp	r3, #1
 8005f6e:	d005      	beq.n	8005f7c <HAL_GPIO_Init+0x40>
 8005f70:	683b      	ldr	r3, [r7, #0]
 8005f72:	685b      	ldr	r3, [r3, #4]
 8005f74:	f003 0303 	and.w	r3, r3, #3
 8005f78:	2b02      	cmp	r3, #2
 8005f7a:	d130      	bne.n	8005fde <HAL_GPIO_Init+0xa2>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	689b      	ldr	r3, [r3, #8]
 8005f80:	613b      	str	r3, [r7, #16]
 8005f82:	697b      	ldr	r3, [r7, #20]
 8005f84:	005b      	lsls	r3, r3, #1
 8005f86:	2203      	movs	r2, #3
 8005f88:	fa02 f303 	lsl.w	r3, r2, r3
 8005f8c:	43db      	mvns	r3, r3
 8005f8e:	693a      	ldr	r2, [r7, #16]
 8005f90:	4013      	ands	r3, r2
 8005f92:	613b      	str	r3, [r7, #16]
 8005f94:	683b      	ldr	r3, [r7, #0]
 8005f96:	68da      	ldr	r2, [r3, #12]
 8005f98:	697b      	ldr	r3, [r7, #20]
 8005f9a:	005b      	lsls	r3, r3, #1
 8005f9c:	fa02 f303 	lsl.w	r3, r2, r3
 8005fa0:	693a      	ldr	r2, [r7, #16]
 8005fa2:	4313      	orrs	r3, r2
 8005fa4:	613b      	str	r3, [r7, #16]
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	693a      	ldr	r2, [r7, #16]
 8005faa:	609a      	str	r2, [r3, #8]
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	685b      	ldr	r3, [r3, #4]
 8005fb0:	613b      	str	r3, [r7, #16]
 8005fb2:	2201      	movs	r2, #1
 8005fb4:	697b      	ldr	r3, [r7, #20]
 8005fb6:	fa02 f303 	lsl.w	r3, r2, r3
 8005fba:	43db      	mvns	r3, r3
 8005fbc:	693a      	ldr	r2, [r7, #16]
 8005fbe:	4013      	ands	r3, r2
 8005fc0:	613b      	str	r3, [r7, #16]
 8005fc2:	683b      	ldr	r3, [r7, #0]
 8005fc4:	685b      	ldr	r3, [r3, #4]
 8005fc6:	091b      	lsrs	r3, r3, #4
 8005fc8:	f003 0201 	and.w	r2, r3, #1
 8005fcc:	697b      	ldr	r3, [r7, #20]
 8005fce:	fa02 f303 	lsl.w	r3, r2, r3
 8005fd2:	693a      	ldr	r2, [r7, #16]
 8005fd4:	4313      	orrs	r3, r2
 8005fd6:	613b      	str	r3, [r7, #16]
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	693a      	ldr	r2, [r7, #16]
 8005fdc:	605a      	str	r2, [r3, #4]
 8005fde:	683b      	ldr	r3, [r7, #0]
 8005fe0:	685b      	ldr	r3, [r3, #4]
 8005fe2:	f003 0303 	and.w	r3, r3, #3
 8005fe6:	2b03      	cmp	r3, #3
 8005fe8:	d118      	bne.n	800601c <HAL_GPIO_Init+0xe0>
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005fee:	613b      	str	r3, [r7, #16]
 8005ff0:	2201      	movs	r2, #1
 8005ff2:	697b      	ldr	r3, [r7, #20]
 8005ff4:	fa02 f303 	lsl.w	r3, r2, r3
 8005ff8:	43db      	mvns	r3, r3
 8005ffa:	693a      	ldr	r2, [r7, #16]
 8005ffc:	4013      	ands	r3, r2
 8005ffe:	613b      	str	r3, [r7, #16]
 8006000:	683b      	ldr	r3, [r7, #0]
 8006002:	685b      	ldr	r3, [r3, #4]
 8006004:	08db      	lsrs	r3, r3, #3
 8006006:	f003 0201 	and.w	r2, r3, #1
 800600a:	697b      	ldr	r3, [r7, #20]
 800600c:	fa02 f303 	lsl.w	r3, r2, r3
 8006010:	693a      	ldr	r2, [r7, #16]
 8006012:	4313      	orrs	r3, r2
 8006014:	613b      	str	r3, [r7, #16]
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	693a      	ldr	r2, [r7, #16]
 800601a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800601c:	683b      	ldr	r3, [r7, #0]
 800601e:	685b      	ldr	r3, [r3, #4]
 8006020:	f003 0303 	and.w	r3, r3, #3
 8006024:	2b03      	cmp	r3, #3
 8006026:	d017      	beq.n	8006058 <HAL_GPIO_Init+0x11c>
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	68db      	ldr	r3, [r3, #12]
 800602c:	613b      	str	r3, [r7, #16]
 800602e:	697b      	ldr	r3, [r7, #20]
 8006030:	005b      	lsls	r3, r3, #1
 8006032:	2203      	movs	r2, #3
 8006034:	fa02 f303 	lsl.w	r3, r2, r3
 8006038:	43db      	mvns	r3, r3
 800603a:	693a      	ldr	r2, [r7, #16]
 800603c:	4013      	ands	r3, r2
 800603e:	613b      	str	r3, [r7, #16]
 8006040:	683b      	ldr	r3, [r7, #0]
 8006042:	689a      	ldr	r2, [r3, #8]
 8006044:	697b      	ldr	r3, [r7, #20]
 8006046:	005b      	lsls	r3, r3, #1
 8006048:	fa02 f303 	lsl.w	r3, r2, r3
 800604c:	693a      	ldr	r2, [r7, #16]
 800604e:	4313      	orrs	r3, r2
 8006050:	613b      	str	r3, [r7, #16]
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	693a      	ldr	r2, [r7, #16]
 8006056:	60da      	str	r2, [r3, #12]
 8006058:	683b      	ldr	r3, [r7, #0]
 800605a:	685b      	ldr	r3, [r3, #4]
 800605c:	f003 0303 	and.w	r3, r3, #3
 8006060:	2b02      	cmp	r3, #2
 8006062:	d123      	bne.n	80060ac <HAL_GPIO_Init+0x170>
 8006064:	697b      	ldr	r3, [r7, #20]
 8006066:	08da      	lsrs	r2, r3, #3
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	3208      	adds	r2, #8
 800606c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006070:	613b      	str	r3, [r7, #16]
 8006072:	697b      	ldr	r3, [r7, #20]
 8006074:	f003 0307 	and.w	r3, r3, #7
 8006078:	009b      	lsls	r3, r3, #2
 800607a:	220f      	movs	r2, #15
 800607c:	fa02 f303 	lsl.w	r3, r2, r3
 8006080:	43db      	mvns	r3, r3
 8006082:	693a      	ldr	r2, [r7, #16]
 8006084:	4013      	ands	r3, r2
 8006086:	613b      	str	r3, [r7, #16]
 8006088:	683b      	ldr	r3, [r7, #0]
 800608a:	691a      	ldr	r2, [r3, #16]
 800608c:	697b      	ldr	r3, [r7, #20]
 800608e:	f003 0307 	and.w	r3, r3, #7
 8006092:	009b      	lsls	r3, r3, #2
 8006094:	fa02 f303 	lsl.w	r3, r2, r3
 8006098:	693a      	ldr	r2, [r7, #16]
 800609a:	4313      	orrs	r3, r2
 800609c:	613b      	str	r3, [r7, #16]
 800609e:	697b      	ldr	r3, [r7, #20]
 80060a0:	08da      	lsrs	r2, r3, #3
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	3208      	adds	r2, #8
 80060a6:	6939      	ldr	r1, [r7, #16]
 80060a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	613b      	str	r3, [r7, #16]
 80060b2:	697b      	ldr	r3, [r7, #20]
 80060b4:	005b      	lsls	r3, r3, #1
 80060b6:	2203      	movs	r2, #3
 80060b8:	fa02 f303 	lsl.w	r3, r2, r3
 80060bc:	43db      	mvns	r3, r3
 80060be:	693a      	ldr	r2, [r7, #16]
 80060c0:	4013      	ands	r3, r2
 80060c2:	613b      	str	r3, [r7, #16]
 80060c4:	683b      	ldr	r3, [r7, #0]
 80060c6:	685b      	ldr	r3, [r3, #4]
 80060c8:	f003 0203 	and.w	r2, r3, #3
 80060cc:	697b      	ldr	r3, [r7, #20]
 80060ce:	005b      	lsls	r3, r3, #1
 80060d0:	fa02 f303 	lsl.w	r3, r2, r3
 80060d4:	693a      	ldr	r2, [r7, #16]
 80060d6:	4313      	orrs	r3, r2
 80060d8:	613b      	str	r3, [r7, #16]
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	693a      	ldr	r2, [r7, #16]
 80060de:	601a      	str	r2, [r3, #0]
 80060e0:	683b      	ldr	r3, [r7, #0]
 80060e2:	685b      	ldr	r3, [r3, #4]
 80060e4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	f000 80ac 	beq.w	8006246 <HAL_GPIO_Init+0x30a>
 80060ee:	4b5f      	ldr	r3, [pc, #380]	@ (800626c <HAL_GPIO_Init+0x330>)
 80060f0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80060f2:	4a5e      	ldr	r2, [pc, #376]	@ (800626c <HAL_GPIO_Init+0x330>)
 80060f4:	f043 0301 	orr.w	r3, r3, #1
 80060f8:	6613      	str	r3, [r2, #96]	@ 0x60
 80060fa:	4b5c      	ldr	r3, [pc, #368]	@ (800626c <HAL_GPIO_Init+0x330>)
 80060fc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80060fe:	f003 0301 	and.w	r3, r3, #1
 8006102:	60bb      	str	r3, [r7, #8]
 8006104:	68bb      	ldr	r3, [r7, #8]
 8006106:	4a5a      	ldr	r2, [pc, #360]	@ (8006270 <HAL_GPIO_Init+0x334>)
 8006108:	697b      	ldr	r3, [r7, #20]
 800610a:	089b      	lsrs	r3, r3, #2
 800610c:	3302      	adds	r3, #2
 800610e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006112:	613b      	str	r3, [r7, #16]
 8006114:	697b      	ldr	r3, [r7, #20]
 8006116:	f003 0303 	and.w	r3, r3, #3
 800611a:	009b      	lsls	r3, r3, #2
 800611c:	220f      	movs	r2, #15
 800611e:	fa02 f303 	lsl.w	r3, r2, r3
 8006122:	43db      	mvns	r3, r3
 8006124:	693a      	ldr	r2, [r7, #16]
 8006126:	4013      	ands	r3, r2
 8006128:	613b      	str	r3, [r7, #16]
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8006130:	d025      	beq.n	800617e <HAL_GPIO_Init+0x242>
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	4a4f      	ldr	r2, [pc, #316]	@ (8006274 <HAL_GPIO_Init+0x338>)
 8006136:	4293      	cmp	r3, r2
 8006138:	d01f      	beq.n	800617a <HAL_GPIO_Init+0x23e>
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	4a4e      	ldr	r2, [pc, #312]	@ (8006278 <HAL_GPIO_Init+0x33c>)
 800613e:	4293      	cmp	r3, r2
 8006140:	d019      	beq.n	8006176 <HAL_GPIO_Init+0x23a>
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	4a4d      	ldr	r2, [pc, #308]	@ (800627c <HAL_GPIO_Init+0x340>)
 8006146:	4293      	cmp	r3, r2
 8006148:	d013      	beq.n	8006172 <HAL_GPIO_Init+0x236>
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	4a4c      	ldr	r2, [pc, #304]	@ (8006280 <HAL_GPIO_Init+0x344>)
 800614e:	4293      	cmp	r3, r2
 8006150:	d00d      	beq.n	800616e <HAL_GPIO_Init+0x232>
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	4a4b      	ldr	r2, [pc, #300]	@ (8006284 <HAL_GPIO_Init+0x348>)
 8006156:	4293      	cmp	r3, r2
 8006158:	d007      	beq.n	800616a <HAL_GPIO_Init+0x22e>
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	4a4a      	ldr	r2, [pc, #296]	@ (8006288 <HAL_GPIO_Init+0x34c>)
 800615e:	4293      	cmp	r3, r2
 8006160:	d101      	bne.n	8006166 <HAL_GPIO_Init+0x22a>
 8006162:	2306      	movs	r3, #6
 8006164:	e00c      	b.n	8006180 <HAL_GPIO_Init+0x244>
 8006166:	2307      	movs	r3, #7
 8006168:	e00a      	b.n	8006180 <HAL_GPIO_Init+0x244>
 800616a:	2305      	movs	r3, #5
 800616c:	e008      	b.n	8006180 <HAL_GPIO_Init+0x244>
 800616e:	2304      	movs	r3, #4
 8006170:	e006      	b.n	8006180 <HAL_GPIO_Init+0x244>
 8006172:	2303      	movs	r3, #3
 8006174:	e004      	b.n	8006180 <HAL_GPIO_Init+0x244>
 8006176:	2302      	movs	r3, #2
 8006178:	e002      	b.n	8006180 <HAL_GPIO_Init+0x244>
 800617a:	2301      	movs	r3, #1
 800617c:	e000      	b.n	8006180 <HAL_GPIO_Init+0x244>
 800617e:	2300      	movs	r3, #0
 8006180:	697a      	ldr	r2, [r7, #20]
 8006182:	f002 0203 	and.w	r2, r2, #3
 8006186:	0092      	lsls	r2, r2, #2
 8006188:	4093      	lsls	r3, r2
 800618a:	693a      	ldr	r2, [r7, #16]
 800618c:	4313      	orrs	r3, r2
 800618e:	613b      	str	r3, [r7, #16]
 8006190:	4937      	ldr	r1, [pc, #220]	@ (8006270 <HAL_GPIO_Init+0x334>)
 8006192:	697b      	ldr	r3, [r7, #20]
 8006194:	089b      	lsrs	r3, r3, #2
 8006196:	3302      	adds	r3, #2
 8006198:	693a      	ldr	r2, [r7, #16]
 800619a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800619e:	4b3b      	ldr	r3, [pc, #236]	@ (800628c <HAL_GPIO_Init+0x350>)
 80061a0:	689b      	ldr	r3, [r3, #8]
 80061a2:	613b      	str	r3, [r7, #16]
 80061a4:	68fb      	ldr	r3, [r7, #12]
 80061a6:	43db      	mvns	r3, r3
 80061a8:	693a      	ldr	r2, [r7, #16]
 80061aa:	4013      	ands	r3, r2
 80061ac:	613b      	str	r3, [r7, #16]
 80061ae:	683b      	ldr	r3, [r7, #0]
 80061b0:	685b      	ldr	r3, [r3, #4]
 80061b2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d003      	beq.n	80061c2 <HAL_GPIO_Init+0x286>
 80061ba:	693a      	ldr	r2, [r7, #16]
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	4313      	orrs	r3, r2
 80061c0:	613b      	str	r3, [r7, #16]
 80061c2:	4a32      	ldr	r2, [pc, #200]	@ (800628c <HAL_GPIO_Init+0x350>)
 80061c4:	693b      	ldr	r3, [r7, #16]
 80061c6:	6093      	str	r3, [r2, #8]
 80061c8:	4b30      	ldr	r3, [pc, #192]	@ (800628c <HAL_GPIO_Init+0x350>)
 80061ca:	68db      	ldr	r3, [r3, #12]
 80061cc:	613b      	str	r3, [r7, #16]
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	43db      	mvns	r3, r3
 80061d2:	693a      	ldr	r2, [r7, #16]
 80061d4:	4013      	ands	r3, r2
 80061d6:	613b      	str	r3, [r7, #16]
 80061d8:	683b      	ldr	r3, [r7, #0]
 80061da:	685b      	ldr	r3, [r3, #4]
 80061dc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80061e0:	2b00      	cmp	r3, #0
 80061e2:	d003      	beq.n	80061ec <HAL_GPIO_Init+0x2b0>
 80061e4:	693a      	ldr	r2, [r7, #16]
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	4313      	orrs	r3, r2
 80061ea:	613b      	str	r3, [r7, #16]
 80061ec:	4a27      	ldr	r2, [pc, #156]	@ (800628c <HAL_GPIO_Init+0x350>)
 80061ee:	693b      	ldr	r3, [r7, #16]
 80061f0:	60d3      	str	r3, [r2, #12]
 80061f2:	4b26      	ldr	r3, [pc, #152]	@ (800628c <HAL_GPIO_Init+0x350>)
 80061f4:	685b      	ldr	r3, [r3, #4]
 80061f6:	613b      	str	r3, [r7, #16]
 80061f8:	68fb      	ldr	r3, [r7, #12]
 80061fa:	43db      	mvns	r3, r3
 80061fc:	693a      	ldr	r2, [r7, #16]
 80061fe:	4013      	ands	r3, r2
 8006200:	613b      	str	r3, [r7, #16]
 8006202:	683b      	ldr	r3, [r7, #0]
 8006204:	685b      	ldr	r3, [r3, #4]
 8006206:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800620a:	2b00      	cmp	r3, #0
 800620c:	d003      	beq.n	8006216 <HAL_GPIO_Init+0x2da>
 800620e:	693a      	ldr	r2, [r7, #16]
 8006210:	68fb      	ldr	r3, [r7, #12]
 8006212:	4313      	orrs	r3, r2
 8006214:	613b      	str	r3, [r7, #16]
 8006216:	4a1d      	ldr	r2, [pc, #116]	@ (800628c <HAL_GPIO_Init+0x350>)
 8006218:	693b      	ldr	r3, [r7, #16]
 800621a:	6053      	str	r3, [r2, #4]
 800621c:	4b1b      	ldr	r3, [pc, #108]	@ (800628c <HAL_GPIO_Init+0x350>)
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	613b      	str	r3, [r7, #16]
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	43db      	mvns	r3, r3
 8006226:	693a      	ldr	r2, [r7, #16]
 8006228:	4013      	ands	r3, r2
 800622a:	613b      	str	r3, [r7, #16]
 800622c:	683b      	ldr	r3, [r7, #0]
 800622e:	685b      	ldr	r3, [r3, #4]
 8006230:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006234:	2b00      	cmp	r3, #0
 8006236:	d003      	beq.n	8006240 <HAL_GPIO_Init+0x304>
 8006238:	693a      	ldr	r2, [r7, #16]
 800623a:	68fb      	ldr	r3, [r7, #12]
 800623c:	4313      	orrs	r3, r2
 800623e:	613b      	str	r3, [r7, #16]
 8006240:	4a12      	ldr	r2, [pc, #72]	@ (800628c <HAL_GPIO_Init+0x350>)
 8006242:	693b      	ldr	r3, [r7, #16]
 8006244:	6013      	str	r3, [r2, #0]
 8006246:	697b      	ldr	r3, [r7, #20]
 8006248:	3301      	adds	r3, #1
 800624a:	617b      	str	r3, [r7, #20]
 800624c:	683b      	ldr	r3, [r7, #0]
 800624e:	681a      	ldr	r2, [r3, #0]
 8006250:	697b      	ldr	r3, [r7, #20]
 8006252:	fa22 f303 	lsr.w	r3, r2, r3
 8006256:	2b00      	cmp	r3, #0
 8006258:	f47f ae78 	bne.w	8005f4c <HAL_GPIO_Init+0x10>
 800625c:	bf00      	nop
 800625e:	bf00      	nop
 8006260:	371c      	adds	r7, #28
 8006262:	46bd      	mov	sp, r7
 8006264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006268:	4770      	bx	lr
 800626a:	bf00      	nop
 800626c:	40021000 	.word	0x40021000
 8006270:	40010000 	.word	0x40010000
 8006274:	48000400 	.word	0x48000400
 8006278:	48000800 	.word	0x48000800
 800627c:	48000c00 	.word	0x48000c00
 8006280:	48001000 	.word	0x48001000
 8006284:	48001400 	.word	0x48001400
 8006288:	48001800 	.word	0x48001800
 800628c:	40010400 	.word	0x40010400

08006290 <HAL_GPIO_DeInit>:
 8006290:	b480      	push	{r7}
 8006292:	b087      	sub	sp, #28
 8006294:	af00      	add	r7, sp, #0
 8006296:	6078      	str	r0, [r7, #4]
 8006298:	6039      	str	r1, [r7, #0]
 800629a:	2300      	movs	r3, #0
 800629c:	617b      	str	r3, [r7, #20]
 800629e:	e0cd      	b.n	800643c <HAL_GPIO_DeInit+0x1ac>
 80062a0:	2201      	movs	r2, #1
 80062a2:	697b      	ldr	r3, [r7, #20]
 80062a4:	fa02 f303 	lsl.w	r3, r2, r3
 80062a8:	683a      	ldr	r2, [r7, #0]
 80062aa:	4013      	ands	r3, r2
 80062ac:	613b      	str	r3, [r7, #16]
 80062ae:	693b      	ldr	r3, [r7, #16]
 80062b0:	2b00      	cmp	r3, #0
 80062b2:	f000 80c0 	beq.w	8006436 <HAL_GPIO_DeInit+0x1a6>
 80062b6:	4a68      	ldr	r2, [pc, #416]	@ (8006458 <HAL_GPIO_DeInit+0x1c8>)
 80062b8:	697b      	ldr	r3, [r7, #20]
 80062ba:	089b      	lsrs	r3, r3, #2
 80062bc:	3302      	adds	r3, #2
 80062be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80062c2:	60fb      	str	r3, [r7, #12]
 80062c4:	697b      	ldr	r3, [r7, #20]
 80062c6:	f003 0303 	and.w	r3, r3, #3
 80062ca:	009b      	lsls	r3, r3, #2
 80062cc:	220f      	movs	r2, #15
 80062ce:	fa02 f303 	lsl.w	r3, r2, r3
 80062d2:	68fa      	ldr	r2, [r7, #12]
 80062d4:	4013      	ands	r3, r2
 80062d6:	60fb      	str	r3, [r7, #12]
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80062de:	d025      	beq.n	800632c <HAL_GPIO_DeInit+0x9c>
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	4a5e      	ldr	r2, [pc, #376]	@ (800645c <HAL_GPIO_DeInit+0x1cc>)
 80062e4:	4293      	cmp	r3, r2
 80062e6:	d01f      	beq.n	8006328 <HAL_GPIO_DeInit+0x98>
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	4a5d      	ldr	r2, [pc, #372]	@ (8006460 <HAL_GPIO_DeInit+0x1d0>)
 80062ec:	4293      	cmp	r3, r2
 80062ee:	d019      	beq.n	8006324 <HAL_GPIO_DeInit+0x94>
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	4a5c      	ldr	r2, [pc, #368]	@ (8006464 <HAL_GPIO_DeInit+0x1d4>)
 80062f4:	4293      	cmp	r3, r2
 80062f6:	d013      	beq.n	8006320 <HAL_GPIO_DeInit+0x90>
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	4a5b      	ldr	r2, [pc, #364]	@ (8006468 <HAL_GPIO_DeInit+0x1d8>)
 80062fc:	4293      	cmp	r3, r2
 80062fe:	d00d      	beq.n	800631c <HAL_GPIO_DeInit+0x8c>
 8006300:	687b      	ldr	r3, [r7, #4]
 8006302:	4a5a      	ldr	r2, [pc, #360]	@ (800646c <HAL_GPIO_DeInit+0x1dc>)
 8006304:	4293      	cmp	r3, r2
 8006306:	d007      	beq.n	8006318 <HAL_GPIO_DeInit+0x88>
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	4a59      	ldr	r2, [pc, #356]	@ (8006470 <HAL_GPIO_DeInit+0x1e0>)
 800630c:	4293      	cmp	r3, r2
 800630e:	d101      	bne.n	8006314 <HAL_GPIO_DeInit+0x84>
 8006310:	2306      	movs	r3, #6
 8006312:	e00c      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 8006314:	2307      	movs	r3, #7
 8006316:	e00a      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 8006318:	2305      	movs	r3, #5
 800631a:	e008      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 800631c:	2304      	movs	r3, #4
 800631e:	e006      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 8006320:	2303      	movs	r3, #3
 8006322:	e004      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 8006324:	2302      	movs	r3, #2
 8006326:	e002      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 8006328:	2301      	movs	r3, #1
 800632a:	e000      	b.n	800632e <HAL_GPIO_DeInit+0x9e>
 800632c:	2300      	movs	r3, #0
 800632e:	697a      	ldr	r2, [r7, #20]
 8006330:	f002 0203 	and.w	r2, r2, #3
 8006334:	0092      	lsls	r2, r2, #2
 8006336:	4093      	lsls	r3, r2
 8006338:	68fa      	ldr	r2, [r7, #12]
 800633a:	429a      	cmp	r2, r3
 800633c:	d132      	bne.n	80063a4 <HAL_GPIO_DeInit+0x114>
 800633e:	4b4d      	ldr	r3, [pc, #308]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 8006340:	681a      	ldr	r2, [r3, #0]
 8006342:	693b      	ldr	r3, [r7, #16]
 8006344:	43db      	mvns	r3, r3
 8006346:	494b      	ldr	r1, [pc, #300]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 8006348:	4013      	ands	r3, r2
 800634a:	600b      	str	r3, [r1, #0]
 800634c:	4b49      	ldr	r3, [pc, #292]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 800634e:	685a      	ldr	r2, [r3, #4]
 8006350:	693b      	ldr	r3, [r7, #16]
 8006352:	43db      	mvns	r3, r3
 8006354:	4947      	ldr	r1, [pc, #284]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 8006356:	4013      	ands	r3, r2
 8006358:	604b      	str	r3, [r1, #4]
 800635a:	4b46      	ldr	r3, [pc, #280]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 800635c:	68da      	ldr	r2, [r3, #12]
 800635e:	693b      	ldr	r3, [r7, #16]
 8006360:	43db      	mvns	r3, r3
 8006362:	4944      	ldr	r1, [pc, #272]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 8006364:	4013      	ands	r3, r2
 8006366:	60cb      	str	r3, [r1, #12]
 8006368:	4b42      	ldr	r3, [pc, #264]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 800636a:	689a      	ldr	r2, [r3, #8]
 800636c:	693b      	ldr	r3, [r7, #16]
 800636e:	43db      	mvns	r3, r3
 8006370:	4940      	ldr	r1, [pc, #256]	@ (8006474 <HAL_GPIO_DeInit+0x1e4>)
 8006372:	4013      	ands	r3, r2
 8006374:	608b      	str	r3, [r1, #8]
 8006376:	697b      	ldr	r3, [r7, #20]
 8006378:	f003 0303 	and.w	r3, r3, #3
 800637c:	009b      	lsls	r3, r3, #2
 800637e:	220f      	movs	r2, #15
 8006380:	fa02 f303 	lsl.w	r3, r2, r3
 8006384:	60fb      	str	r3, [r7, #12]
 8006386:	4a34      	ldr	r2, [pc, #208]	@ (8006458 <HAL_GPIO_DeInit+0x1c8>)
 8006388:	697b      	ldr	r3, [r7, #20]
 800638a:	089b      	lsrs	r3, r3, #2
 800638c:	3302      	adds	r3, #2
 800638e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	43da      	mvns	r2, r3
 8006396:	4830      	ldr	r0, [pc, #192]	@ (8006458 <HAL_GPIO_DeInit+0x1c8>)
 8006398:	697b      	ldr	r3, [r7, #20]
 800639a:	089b      	lsrs	r3, r3, #2
 800639c:	400a      	ands	r2, r1
 800639e:	3302      	adds	r3, #2
 80063a0:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	681a      	ldr	r2, [r3, #0]
 80063a8:	697b      	ldr	r3, [r7, #20]
 80063aa:	005b      	lsls	r3, r3, #1
 80063ac:	2103      	movs	r1, #3
 80063ae:	fa01 f303 	lsl.w	r3, r1, r3
 80063b2:	431a      	orrs	r2, r3
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	601a      	str	r2, [r3, #0]
 80063b8:	697b      	ldr	r3, [r7, #20]
 80063ba:	08da      	lsrs	r2, r3, #3
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	3208      	adds	r2, #8
 80063c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80063c4:	697b      	ldr	r3, [r7, #20]
 80063c6:	f003 0307 	and.w	r3, r3, #7
 80063ca:	009b      	lsls	r3, r3, #2
 80063cc:	220f      	movs	r2, #15
 80063ce:	fa02 f303 	lsl.w	r3, r2, r3
 80063d2:	43db      	mvns	r3, r3
 80063d4:	697a      	ldr	r2, [r7, #20]
 80063d6:	08d2      	lsrs	r2, r2, #3
 80063d8:	4019      	ands	r1, r3
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	3208      	adds	r2, #8
 80063de:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	689a      	ldr	r2, [r3, #8]
 80063e6:	697b      	ldr	r3, [r7, #20]
 80063e8:	005b      	lsls	r3, r3, #1
 80063ea:	2103      	movs	r1, #3
 80063ec:	fa01 f303 	lsl.w	r3, r1, r3
 80063f0:	43db      	mvns	r3, r3
 80063f2:	401a      	ands	r2, r3
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	609a      	str	r2, [r3, #8]
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	685a      	ldr	r2, [r3, #4]
 80063fc:	2101      	movs	r1, #1
 80063fe:	697b      	ldr	r3, [r7, #20]
 8006400:	fa01 f303 	lsl.w	r3, r1, r3
 8006404:	43db      	mvns	r3, r3
 8006406:	401a      	ands	r2, r3
 8006408:	687b      	ldr	r3, [r7, #4]
 800640a:	605a      	str	r2, [r3, #4]
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	68da      	ldr	r2, [r3, #12]
 8006410:	697b      	ldr	r3, [r7, #20]
 8006412:	005b      	lsls	r3, r3, #1
 8006414:	2103      	movs	r1, #3
 8006416:	fa01 f303 	lsl.w	r3, r1, r3
 800641a:	43db      	mvns	r3, r3
 800641c:	401a      	ands	r2, r3
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	60da      	str	r2, [r3, #12]
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006426:	2101      	movs	r1, #1
 8006428:	697b      	ldr	r3, [r7, #20]
 800642a:	fa01 f303 	lsl.w	r3, r1, r3
 800642e:	43db      	mvns	r3, r3
 8006430:	401a      	ands	r2, r3
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006436:	697b      	ldr	r3, [r7, #20]
 8006438:	3301      	adds	r3, #1
 800643a:	617b      	str	r3, [r7, #20]
 800643c:	683a      	ldr	r2, [r7, #0]
 800643e:	697b      	ldr	r3, [r7, #20]
 8006440:	fa22 f303 	lsr.w	r3, r2, r3
 8006444:	2b00      	cmp	r3, #0
 8006446:	f47f af2b 	bne.w	80062a0 <HAL_GPIO_DeInit+0x10>
 800644a:	bf00      	nop
 800644c:	bf00      	nop
 800644e:	371c      	adds	r7, #28
 8006450:	46bd      	mov	sp, r7
 8006452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006456:	4770      	bx	lr
 8006458:	40010000 	.word	0x40010000
 800645c:	48000400 	.word	0x48000400
 8006460:	48000800 	.word	0x48000800
 8006464:	48000c00 	.word	0x48000c00
 8006468:	48001000 	.word	0x48001000
 800646c:	48001400 	.word	0x48001400
 8006470:	48001800 	.word	0x48001800
 8006474:	40010400 	.word	0x40010400

08006478 <HAL_GPIO_ReadPin>:
 8006478:	b480      	push	{r7}
 800647a:	b085      	sub	sp, #20
 800647c:	af00      	add	r7, sp, #0
 800647e:	6078      	str	r0, [r7, #4]
 8006480:	460b      	mov	r3, r1
 8006482:	807b      	strh	r3, [r7, #2]
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	691a      	ldr	r2, [r3, #16]
 8006488:	887b      	ldrh	r3, [r7, #2]
 800648a:	4013      	ands	r3, r2
 800648c:	2b00      	cmp	r3, #0
 800648e:	d002      	beq.n	8006496 <HAL_GPIO_ReadPin+0x1e>
 8006490:	2301      	movs	r3, #1
 8006492:	73fb      	strb	r3, [r7, #15]
 8006494:	e001      	b.n	800649a <HAL_GPIO_ReadPin+0x22>
 8006496:	2300      	movs	r3, #0
 8006498:	73fb      	strb	r3, [r7, #15]
 800649a:	7bfb      	ldrb	r3, [r7, #15]
 800649c:	4618      	mov	r0, r3
 800649e:	3714      	adds	r7, #20
 80064a0:	46bd      	mov	sp, r7
 80064a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064a6:	4770      	bx	lr

080064a8 <HAL_GPIO_WritePin>:
 80064a8:	b480      	push	{r7}
 80064aa:	b083      	sub	sp, #12
 80064ac:	af00      	add	r7, sp, #0
 80064ae:	6078      	str	r0, [r7, #4]
 80064b0:	460b      	mov	r3, r1
 80064b2:	807b      	strh	r3, [r7, #2]
 80064b4:	4613      	mov	r3, r2
 80064b6:	707b      	strb	r3, [r7, #1]
 80064b8:	787b      	ldrb	r3, [r7, #1]
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d003      	beq.n	80064c6 <HAL_GPIO_WritePin+0x1e>
 80064be:	887a      	ldrh	r2, [r7, #2]
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	619a      	str	r2, [r3, #24]
 80064c4:	e002      	b.n	80064cc <HAL_GPIO_WritePin+0x24>
 80064c6:	887a      	ldrh	r2, [r7, #2]
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	629a      	str	r2, [r3, #40]	@ 0x28
 80064cc:	bf00      	nop
 80064ce:	370c      	adds	r7, #12
 80064d0:	46bd      	mov	sp, r7
 80064d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064d6:	4770      	bx	lr

080064d8 <HAL_GPIO_EXTI_IRQHandler>:
 80064d8:	b580      	push	{r7, lr}
 80064da:	b082      	sub	sp, #8
 80064dc:	af00      	add	r7, sp, #0
 80064de:	4603      	mov	r3, r0
 80064e0:	80fb      	strh	r3, [r7, #6]
 80064e2:	4b08      	ldr	r3, [pc, #32]	@ (8006504 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80064e4:	695a      	ldr	r2, [r3, #20]
 80064e6:	88fb      	ldrh	r3, [r7, #6]
 80064e8:	4013      	ands	r3, r2
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d006      	beq.n	80064fc <HAL_GPIO_EXTI_IRQHandler+0x24>
 80064ee:	4a05      	ldr	r2, [pc, #20]	@ (8006504 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80064f0:	88fb      	ldrh	r3, [r7, #6]
 80064f2:	6153      	str	r3, [r2, #20]
 80064f4:	88fb      	ldrh	r3, [r7, #6]
 80064f6:	4618      	mov	r0, r3
 80064f8:	f7fd f9b8 	bl	800386c <HAL_GPIO_EXTI_Callback>
 80064fc:	bf00      	nop
 80064fe:	3708      	adds	r7, #8
 8006500:	46bd      	mov	sp, r7
 8006502:	bd80      	pop	{r7, pc}
 8006504:	40010400 	.word	0x40010400

08006508 <HAL_I2C_Init>:
 8006508:	b580      	push	{r7, lr}
 800650a:	b082      	sub	sp, #8
 800650c:	af00      	add	r7, sp, #0
 800650e:	6078      	str	r0, [r7, #4]
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	2b00      	cmp	r3, #0
 8006514:	d101      	bne.n	800651a <HAL_I2C_Init+0x12>
 8006516:	2301      	movs	r3, #1
 8006518:	e08d      	b.n	8006636 <HAL_I2C_Init+0x12e>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006520:	b2db      	uxtb	r3, r3
 8006522:	2b00      	cmp	r3, #0
 8006524:	d106      	bne.n	8006534 <HAL_I2C_Init+0x2c>
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	2200      	movs	r2, #0
 800652a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800652e:	6878      	ldr	r0, [r7, #4]
 8006530:	f7fc fd50 	bl	8002fd4 <HAL_I2C_MspInit>
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	2224      	movs	r2, #36	@ 0x24
 8006538:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	681b      	ldr	r3, [r3, #0]
 8006540:	681a      	ldr	r2, [r3, #0]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	681b      	ldr	r3, [r3, #0]
 8006546:	f022 0201 	bic.w	r2, r2, #1
 800654a:	601a      	str	r2, [r3, #0]
 800654c:	687b      	ldr	r3, [r7, #4]
 800654e:	685a      	ldr	r2, [r3, #4]
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8006558:	611a      	str	r2, [r3, #16]
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	681b      	ldr	r3, [r3, #0]
 800655e:	689a      	ldr	r2, [r3, #8]
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006568:	609a      	str	r2, [r3, #8]
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	68db      	ldr	r3, [r3, #12]
 800656e:	2b01      	cmp	r3, #1
 8006570:	d107      	bne.n	8006582 <HAL_I2C_Init+0x7a>
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	689a      	ldr	r2, [r3, #8]
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	681b      	ldr	r3, [r3, #0]
 800657a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800657e:	609a      	str	r2, [r3, #8]
 8006580:	e006      	b.n	8006590 <HAL_I2C_Init+0x88>
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	689a      	ldr	r2, [r3, #8]
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	681b      	ldr	r3, [r3, #0]
 800658a:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 800658e:	609a      	str	r2, [r3, #8]
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	68db      	ldr	r3, [r3, #12]
 8006594:	2b02      	cmp	r3, #2
 8006596:	d108      	bne.n	80065aa <HAL_I2C_Init+0xa2>
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	681b      	ldr	r3, [r3, #0]
 800659c:	685a      	ldr	r2, [r3, #4]
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80065a6:	605a      	str	r2, [r3, #4]
 80065a8:	e007      	b.n	80065ba <HAL_I2C_Init+0xb2>
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	685a      	ldr	r2, [r3, #4]
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80065b8:	605a      	str	r2, [r3, #4]
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	681b      	ldr	r3, [r3, #0]
 80065be:	685b      	ldr	r3, [r3, #4]
 80065c0:	687a      	ldr	r2, [r7, #4]
 80065c2:	6812      	ldr	r2, [r2, #0]
 80065c4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80065c8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80065cc:	6053      	str	r3, [r2, #4]
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	68da      	ldr	r2, [r3, #12]
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80065dc:	60da      	str	r2, [r3, #12]
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	691a      	ldr	r2, [r3, #16]
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	695b      	ldr	r3, [r3, #20]
 80065e6:	ea42 0103 	orr.w	r1, r2, r3
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	699b      	ldr	r3, [r3, #24]
 80065ee:	021a      	lsls	r2, r3, #8
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	430a      	orrs	r2, r1
 80065f6:	60da      	str	r2, [r3, #12]
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	69d9      	ldr	r1, [r3, #28]
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	6a1a      	ldr	r2, [r3, #32]
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	430a      	orrs	r2, r1
 8006606:	601a      	str	r2, [r3, #0]
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	681a      	ldr	r2, [r3, #0]
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	f042 0201 	orr.w	r2, r2, #1
 8006616:	601a      	str	r2, [r3, #0]
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	2200      	movs	r2, #0
 800661c:	645a      	str	r2, [r3, #68]	@ 0x44
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	2220      	movs	r2, #32
 8006622:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	2200      	movs	r2, #0
 800662a:	631a      	str	r2, [r3, #48]	@ 0x30
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	2200      	movs	r2, #0
 8006630:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006634:	2300      	movs	r3, #0
 8006636:	4618      	mov	r0, r3
 8006638:	3708      	adds	r7, #8
 800663a:	46bd      	mov	sp, r7
 800663c:	bd80      	pop	{r7, pc}

0800663e <HAL_I2C_DeInit>:
 800663e:	b580      	push	{r7, lr}
 8006640:	b082      	sub	sp, #8
 8006642:	af00      	add	r7, sp, #0
 8006644:	6078      	str	r0, [r7, #4]
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	2b00      	cmp	r3, #0
 800664a:	d101      	bne.n	8006650 <HAL_I2C_DeInit+0x12>
 800664c:	2301      	movs	r3, #1
 800664e:	e021      	b.n	8006694 <HAL_I2C_DeInit+0x56>
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	2224      	movs	r2, #36	@ 0x24
 8006654:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	681b      	ldr	r3, [r3, #0]
 800665c:	681a      	ldr	r2, [r3, #0]
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	f022 0201 	bic.w	r2, r2, #1
 8006666:	601a      	str	r2, [r3, #0]
 8006668:	6878      	ldr	r0, [r7, #4]
 800666a:	f7fc fd11 	bl	8003090 <HAL_I2C_MspDeInit>
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	2200      	movs	r2, #0
 8006672:	645a      	str	r2, [r3, #68]	@ 0x44
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	2200      	movs	r2, #0
 8006678:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	2200      	movs	r2, #0
 8006680:	631a      	str	r2, [r3, #48]	@ 0x30
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	2200      	movs	r2, #0
 8006686:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	2200      	movs	r2, #0
 800668e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006692:	2300      	movs	r3, #0
 8006694:	4618      	mov	r0, r3
 8006696:	3708      	adds	r7, #8
 8006698:	46bd      	mov	sp, r7
 800669a:	bd80      	pop	{r7, pc}

0800669c <HAL_I2C_Mem_Write>:
 800669c:	b580      	push	{r7, lr}
 800669e:	b088      	sub	sp, #32
 80066a0:	af02      	add	r7, sp, #8
 80066a2:	60f8      	str	r0, [r7, #12]
 80066a4:	4608      	mov	r0, r1
 80066a6:	4611      	mov	r1, r2
 80066a8:	461a      	mov	r2, r3
 80066aa:	4603      	mov	r3, r0
 80066ac:	817b      	strh	r3, [r7, #10]
 80066ae:	460b      	mov	r3, r1
 80066b0:	813b      	strh	r3, [r7, #8]
 80066b2:	4613      	mov	r3, r2
 80066b4:	80fb      	strh	r3, [r7, #6]
 80066b6:	68fb      	ldr	r3, [r7, #12]
 80066b8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80066bc:	b2db      	uxtb	r3, r3
 80066be:	2b20      	cmp	r3, #32
 80066c0:	f040 80f9 	bne.w	80068b6 <HAL_I2C_Mem_Write+0x21a>
 80066c4:	6a3b      	ldr	r3, [r7, #32]
 80066c6:	2b00      	cmp	r3, #0
 80066c8:	d002      	beq.n	80066d0 <HAL_I2C_Mem_Write+0x34>
 80066ca:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	d105      	bne.n	80066dc <HAL_I2C_Mem_Write+0x40>
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80066d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80066d8:	2301      	movs	r3, #1
 80066da:	e0ed      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 80066dc:	68fb      	ldr	r3, [r7, #12]
 80066de:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80066e2:	2b01      	cmp	r3, #1
 80066e4:	d101      	bne.n	80066ea <HAL_I2C_Mem_Write+0x4e>
 80066e6:	2302      	movs	r3, #2
 80066e8:	e0e6      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	2201      	movs	r2, #1
 80066ee:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80066f2:	f7ff f9c3 	bl	8005a7c <HAL_GetTick>
 80066f6:	6178      	str	r0, [r7, #20]
 80066f8:	697b      	ldr	r3, [r7, #20]
 80066fa:	9300      	str	r3, [sp, #0]
 80066fc:	2319      	movs	r3, #25
 80066fe:	2201      	movs	r2, #1
 8006700:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8006704:	68f8      	ldr	r0, [r7, #12]
 8006706:	f000 fac3 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 800670a:	4603      	mov	r3, r0
 800670c:	2b00      	cmp	r3, #0
 800670e:	d001      	beq.n	8006714 <HAL_I2C_Mem_Write+0x78>
 8006710:	2301      	movs	r3, #1
 8006712:	e0d1      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	2221      	movs	r2, #33	@ 0x21
 8006718:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	2240      	movs	r2, #64	@ 0x40
 8006720:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	2200      	movs	r2, #0
 8006728:	645a      	str	r2, [r3, #68]	@ 0x44
 800672a:	68fb      	ldr	r3, [r7, #12]
 800672c:	6a3a      	ldr	r2, [r7, #32]
 800672e:	625a      	str	r2, [r3, #36]	@ 0x24
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8006734:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8006736:	68fb      	ldr	r3, [r7, #12]
 8006738:	2200      	movs	r2, #0
 800673a:	635a      	str	r2, [r3, #52]	@ 0x34
 800673c:	88f8      	ldrh	r0, [r7, #6]
 800673e:	893a      	ldrh	r2, [r7, #8]
 8006740:	8979      	ldrh	r1, [r7, #10]
 8006742:	697b      	ldr	r3, [r7, #20]
 8006744:	9301      	str	r3, [sp, #4]
 8006746:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006748:	9300      	str	r3, [sp, #0]
 800674a:	4603      	mov	r3, r0
 800674c:	68f8      	ldr	r0, [r7, #12]
 800674e:	f000 f9d3 	bl	8006af8 <I2C_RequestMemoryWrite>
 8006752:	4603      	mov	r3, r0
 8006754:	2b00      	cmp	r3, #0
 8006756:	d005      	beq.n	8006764 <HAL_I2C_Mem_Write+0xc8>
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	2200      	movs	r2, #0
 800675c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006760:	2301      	movs	r3, #1
 8006762:	e0a9      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 8006764:	68fb      	ldr	r3, [r7, #12]
 8006766:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006768:	b29b      	uxth	r3, r3
 800676a:	2bff      	cmp	r3, #255	@ 0xff
 800676c:	d90e      	bls.n	800678c <HAL_I2C_Mem_Write+0xf0>
 800676e:	68fb      	ldr	r3, [r7, #12]
 8006770:	22ff      	movs	r2, #255	@ 0xff
 8006772:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006778:	b2da      	uxtb	r2, r3
 800677a:	8979      	ldrh	r1, [r7, #10]
 800677c:	2300      	movs	r3, #0
 800677e:	9300      	str	r3, [sp, #0]
 8006780:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8006784:	68f8      	ldr	r0, [r7, #12]
 8006786:	f000 fc47 	bl	8007018 <I2C_TransferConfig>
 800678a:	e00f      	b.n	80067ac <HAL_I2C_Mem_Write+0x110>
 800678c:	68fb      	ldr	r3, [r7, #12]
 800678e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006790:	b29a      	uxth	r2, r3
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800679a:	b2da      	uxtb	r2, r3
 800679c:	8979      	ldrh	r1, [r7, #10]
 800679e:	2300      	movs	r3, #0
 80067a0:	9300      	str	r3, [sp, #0]
 80067a2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80067a6:	68f8      	ldr	r0, [r7, #12]
 80067a8:	f000 fc36 	bl	8007018 <I2C_TransferConfig>
 80067ac:	697a      	ldr	r2, [r7, #20]
 80067ae:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80067b0:	68f8      	ldr	r0, [r7, #12]
 80067b2:	f000 fac6 	bl	8006d42 <I2C_WaitOnTXISFlagUntilTimeout>
 80067b6:	4603      	mov	r3, r0
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d001      	beq.n	80067c0 <HAL_I2C_Mem_Write+0x124>
 80067bc:	2301      	movs	r3, #1
 80067be:	e07b      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 80067c0:	68fb      	ldr	r3, [r7, #12]
 80067c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80067c4:	781a      	ldrb	r2, [r3, #0]
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	629a      	str	r2, [r3, #40]	@ 0x28
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80067d0:	1c5a      	adds	r2, r3, #1
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	625a      	str	r2, [r3, #36]	@ 0x24
 80067d6:	68fb      	ldr	r3, [r7, #12]
 80067d8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80067da:	b29b      	uxth	r3, r3
 80067dc:	3b01      	subs	r3, #1
 80067de:	b29a      	uxth	r2, r3
 80067e0:	68fb      	ldr	r3, [r7, #12]
 80067e2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80067e8:	3b01      	subs	r3, #1
 80067ea:	b29a      	uxth	r2, r3
 80067ec:	68fb      	ldr	r3, [r7, #12]
 80067ee:	851a      	strh	r2, [r3, #40]	@ 0x28
 80067f0:	68fb      	ldr	r3, [r7, #12]
 80067f2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80067f4:	b29b      	uxth	r3, r3
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d034      	beq.n	8006864 <HAL_I2C_Mem_Write+0x1c8>
 80067fa:	68fb      	ldr	r3, [r7, #12]
 80067fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80067fe:	2b00      	cmp	r3, #0
 8006800:	d130      	bne.n	8006864 <HAL_I2C_Mem_Write+0x1c8>
 8006802:	697b      	ldr	r3, [r7, #20]
 8006804:	9300      	str	r3, [sp, #0]
 8006806:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006808:	2200      	movs	r2, #0
 800680a:	2180      	movs	r1, #128	@ 0x80
 800680c:	68f8      	ldr	r0, [r7, #12]
 800680e:	f000 fa3f 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 8006812:	4603      	mov	r3, r0
 8006814:	2b00      	cmp	r3, #0
 8006816:	d001      	beq.n	800681c <HAL_I2C_Mem_Write+0x180>
 8006818:	2301      	movs	r3, #1
 800681a:	e04d      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 800681c:	68fb      	ldr	r3, [r7, #12]
 800681e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006820:	b29b      	uxth	r3, r3
 8006822:	2bff      	cmp	r3, #255	@ 0xff
 8006824:	d90e      	bls.n	8006844 <HAL_I2C_Mem_Write+0x1a8>
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	22ff      	movs	r2, #255	@ 0xff
 800682a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800682c:	68fb      	ldr	r3, [r7, #12]
 800682e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006830:	b2da      	uxtb	r2, r3
 8006832:	8979      	ldrh	r1, [r7, #10]
 8006834:	2300      	movs	r3, #0
 8006836:	9300      	str	r3, [sp, #0]
 8006838:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800683c:	68f8      	ldr	r0, [r7, #12]
 800683e:	f000 fbeb 	bl	8007018 <I2C_TransferConfig>
 8006842:	e00f      	b.n	8006864 <HAL_I2C_Mem_Write+0x1c8>
 8006844:	68fb      	ldr	r3, [r7, #12]
 8006846:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006848:	b29a      	uxth	r2, r3
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800684e:	68fb      	ldr	r3, [r7, #12]
 8006850:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006852:	b2da      	uxtb	r2, r3
 8006854:	8979      	ldrh	r1, [r7, #10]
 8006856:	2300      	movs	r3, #0
 8006858:	9300      	str	r3, [sp, #0]
 800685a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800685e:	68f8      	ldr	r0, [r7, #12]
 8006860:	f000 fbda 	bl	8007018 <I2C_TransferConfig>
 8006864:	68fb      	ldr	r3, [r7, #12]
 8006866:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006868:	b29b      	uxth	r3, r3
 800686a:	2b00      	cmp	r3, #0
 800686c:	d19e      	bne.n	80067ac <HAL_I2C_Mem_Write+0x110>
 800686e:	697a      	ldr	r2, [r7, #20]
 8006870:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006872:	68f8      	ldr	r0, [r7, #12]
 8006874:	f000 faac 	bl	8006dd0 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006878:	4603      	mov	r3, r0
 800687a:	2b00      	cmp	r3, #0
 800687c:	d001      	beq.n	8006882 <HAL_I2C_Mem_Write+0x1e6>
 800687e:	2301      	movs	r3, #1
 8006880:	e01a      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	2220      	movs	r2, #32
 8006888:	61da      	str	r2, [r3, #28]
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	6859      	ldr	r1, [r3, #4]
 8006890:	68fb      	ldr	r3, [r7, #12]
 8006892:	681a      	ldr	r2, [r3, #0]
 8006894:	4b0a      	ldr	r3, [pc, #40]	@ (80068c0 <HAL_I2C_Mem_Write+0x224>)
 8006896:	400b      	ands	r3, r1
 8006898:	6053      	str	r3, [r2, #4]
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	2220      	movs	r2, #32
 800689e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	2200      	movs	r2, #0
 80068a6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	2200      	movs	r2, #0
 80068ae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80068b2:	2300      	movs	r3, #0
 80068b4:	e000      	b.n	80068b8 <HAL_I2C_Mem_Write+0x21c>
 80068b6:	2302      	movs	r3, #2
 80068b8:	4618      	mov	r0, r3
 80068ba:	3718      	adds	r7, #24
 80068bc:	46bd      	mov	sp, r7
 80068be:	bd80      	pop	{r7, pc}
 80068c0:	fe00e800 	.word	0xfe00e800

080068c4 <HAL_I2C_Mem_Read>:
 80068c4:	b580      	push	{r7, lr}
 80068c6:	b088      	sub	sp, #32
 80068c8:	af02      	add	r7, sp, #8
 80068ca:	60f8      	str	r0, [r7, #12]
 80068cc:	4608      	mov	r0, r1
 80068ce:	4611      	mov	r1, r2
 80068d0:	461a      	mov	r2, r3
 80068d2:	4603      	mov	r3, r0
 80068d4:	817b      	strh	r3, [r7, #10]
 80068d6:	460b      	mov	r3, r1
 80068d8:	813b      	strh	r3, [r7, #8]
 80068da:	4613      	mov	r3, r2
 80068dc:	80fb      	strh	r3, [r7, #6]
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80068e4:	b2db      	uxtb	r3, r3
 80068e6:	2b20      	cmp	r3, #32
 80068e8:	f040 80fd 	bne.w	8006ae6 <HAL_I2C_Mem_Read+0x222>
 80068ec:	6a3b      	ldr	r3, [r7, #32]
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d002      	beq.n	80068f8 <HAL_I2C_Mem_Read+0x34>
 80068f2:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80068f4:	2b00      	cmp	r3, #0
 80068f6:	d105      	bne.n	8006904 <HAL_I2C_Mem_Read+0x40>
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80068fe:	645a      	str	r2, [r3, #68]	@ 0x44
 8006900:	2301      	movs	r3, #1
 8006902:	e0f1      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 8006904:	68fb      	ldr	r3, [r7, #12]
 8006906:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800690a:	2b01      	cmp	r3, #1
 800690c:	d101      	bne.n	8006912 <HAL_I2C_Mem_Read+0x4e>
 800690e:	2302      	movs	r3, #2
 8006910:	e0ea      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 8006912:	68fb      	ldr	r3, [r7, #12]
 8006914:	2201      	movs	r2, #1
 8006916:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800691a:	f7ff f8af 	bl	8005a7c <HAL_GetTick>
 800691e:	6178      	str	r0, [r7, #20]
 8006920:	697b      	ldr	r3, [r7, #20]
 8006922:	9300      	str	r3, [sp, #0]
 8006924:	2319      	movs	r3, #25
 8006926:	2201      	movs	r2, #1
 8006928:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800692c:	68f8      	ldr	r0, [r7, #12]
 800692e:	f000 f9af 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 8006932:	4603      	mov	r3, r0
 8006934:	2b00      	cmp	r3, #0
 8006936:	d001      	beq.n	800693c <HAL_I2C_Mem_Read+0x78>
 8006938:	2301      	movs	r3, #1
 800693a:	e0d5      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	2222      	movs	r2, #34	@ 0x22
 8006940:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	2240      	movs	r2, #64	@ 0x40
 8006948:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800694c:	68fb      	ldr	r3, [r7, #12]
 800694e:	2200      	movs	r2, #0
 8006950:	645a      	str	r2, [r3, #68]	@ 0x44
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	6a3a      	ldr	r2, [r7, #32]
 8006956:	625a      	str	r2, [r3, #36]	@ 0x24
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800695c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800695e:	68fb      	ldr	r3, [r7, #12]
 8006960:	2200      	movs	r2, #0
 8006962:	635a      	str	r2, [r3, #52]	@ 0x34
 8006964:	88f8      	ldrh	r0, [r7, #6]
 8006966:	893a      	ldrh	r2, [r7, #8]
 8006968:	8979      	ldrh	r1, [r7, #10]
 800696a:	697b      	ldr	r3, [r7, #20]
 800696c:	9301      	str	r3, [sp, #4]
 800696e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006970:	9300      	str	r3, [sp, #0]
 8006972:	4603      	mov	r3, r0
 8006974:	68f8      	ldr	r0, [r7, #12]
 8006976:	f000 f913 	bl	8006ba0 <I2C_RequestMemoryRead>
 800697a:	4603      	mov	r3, r0
 800697c:	2b00      	cmp	r3, #0
 800697e:	d005      	beq.n	800698c <HAL_I2C_Mem_Read+0xc8>
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	2200      	movs	r2, #0
 8006984:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006988:	2301      	movs	r3, #1
 800698a:	e0ad      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006990:	b29b      	uxth	r3, r3
 8006992:	2bff      	cmp	r3, #255	@ 0xff
 8006994:	d90e      	bls.n	80069b4 <HAL_I2C_Mem_Read+0xf0>
 8006996:	68fb      	ldr	r3, [r7, #12]
 8006998:	2201      	movs	r2, #1
 800699a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800699c:	68fb      	ldr	r3, [r7, #12]
 800699e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80069a0:	b2da      	uxtb	r2, r3
 80069a2:	8979      	ldrh	r1, [r7, #10]
 80069a4:	4b52      	ldr	r3, [pc, #328]	@ (8006af0 <HAL_I2C_Mem_Read+0x22c>)
 80069a6:	9300      	str	r3, [sp, #0]
 80069a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80069ac:	68f8      	ldr	r0, [r7, #12]
 80069ae:	f000 fb33 	bl	8007018 <I2C_TransferConfig>
 80069b2:	e00f      	b.n	80069d4 <HAL_I2C_Mem_Read+0x110>
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80069b8:	b29a      	uxth	r2, r3
 80069ba:	68fb      	ldr	r3, [r7, #12]
 80069bc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80069c2:	b2da      	uxtb	r2, r3
 80069c4:	8979      	ldrh	r1, [r7, #10]
 80069c6:	4b4a      	ldr	r3, [pc, #296]	@ (8006af0 <HAL_I2C_Mem_Read+0x22c>)
 80069c8:	9300      	str	r3, [sp, #0]
 80069ca:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80069ce:	68f8      	ldr	r0, [r7, #12]
 80069d0:	f000 fb22 	bl	8007018 <I2C_TransferConfig>
 80069d4:	697b      	ldr	r3, [r7, #20]
 80069d6:	9300      	str	r3, [sp, #0]
 80069d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80069da:	2200      	movs	r2, #0
 80069dc:	2104      	movs	r1, #4
 80069de:	68f8      	ldr	r0, [r7, #12]
 80069e0:	f000 f956 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 80069e4:	4603      	mov	r3, r0
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	d001      	beq.n	80069ee <HAL_I2C_Mem_Read+0x12a>
 80069ea:	2301      	movs	r3, #1
 80069ec:	e07c      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80069f4:	68fb      	ldr	r3, [r7, #12]
 80069f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80069f8:	b2d2      	uxtb	r2, r2
 80069fa:	701a      	strb	r2, [r3, #0]
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006a00:	1c5a      	adds	r2, r3, #1
 8006a02:	68fb      	ldr	r3, [r7, #12]
 8006a04:	625a      	str	r2, [r3, #36]	@ 0x24
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006a0a:	3b01      	subs	r3, #1
 8006a0c:	b29a      	uxth	r2, r3
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006a12:	68fb      	ldr	r3, [r7, #12]
 8006a14:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006a16:	b29b      	uxth	r3, r3
 8006a18:	3b01      	subs	r3, #1
 8006a1a:	b29a      	uxth	r2, r3
 8006a1c:	68fb      	ldr	r3, [r7, #12]
 8006a1e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8006a20:	68fb      	ldr	r3, [r7, #12]
 8006a22:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006a24:	b29b      	uxth	r3, r3
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d034      	beq.n	8006a94 <HAL_I2C_Mem_Read+0x1d0>
 8006a2a:	68fb      	ldr	r3, [r7, #12]
 8006a2c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d130      	bne.n	8006a94 <HAL_I2C_Mem_Read+0x1d0>
 8006a32:	697b      	ldr	r3, [r7, #20]
 8006a34:	9300      	str	r3, [sp, #0]
 8006a36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006a38:	2200      	movs	r2, #0
 8006a3a:	2180      	movs	r1, #128	@ 0x80
 8006a3c:	68f8      	ldr	r0, [r7, #12]
 8006a3e:	f000 f927 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 8006a42:	4603      	mov	r3, r0
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d001      	beq.n	8006a4c <HAL_I2C_Mem_Read+0x188>
 8006a48:	2301      	movs	r3, #1
 8006a4a:	e04d      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006a50:	b29b      	uxth	r3, r3
 8006a52:	2bff      	cmp	r3, #255	@ 0xff
 8006a54:	d90e      	bls.n	8006a74 <HAL_I2C_Mem_Read+0x1b0>
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	2201      	movs	r2, #1
 8006a5a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006a5c:	68fb      	ldr	r3, [r7, #12]
 8006a5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006a60:	b2da      	uxtb	r2, r3
 8006a62:	8979      	ldrh	r1, [r7, #10]
 8006a64:	2300      	movs	r3, #0
 8006a66:	9300      	str	r3, [sp, #0]
 8006a68:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8006a6c:	68f8      	ldr	r0, [r7, #12]
 8006a6e:	f000 fad3 	bl	8007018 <I2C_TransferConfig>
 8006a72:	e00f      	b.n	8006a94 <HAL_I2C_Mem_Read+0x1d0>
 8006a74:	68fb      	ldr	r3, [r7, #12]
 8006a76:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006a78:	b29a      	uxth	r2, r3
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	851a      	strh	r2, [r3, #40]	@ 0x28
 8006a7e:	68fb      	ldr	r3, [r7, #12]
 8006a80:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8006a82:	b2da      	uxtb	r2, r3
 8006a84:	8979      	ldrh	r1, [r7, #10]
 8006a86:	2300      	movs	r3, #0
 8006a88:	9300      	str	r3, [sp, #0]
 8006a8a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8006a8e:	68f8      	ldr	r0, [r7, #12]
 8006a90:	f000 fac2 	bl	8007018 <I2C_TransferConfig>
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006a98:	b29b      	uxth	r3, r3
 8006a9a:	2b00      	cmp	r3, #0
 8006a9c:	d19a      	bne.n	80069d4 <HAL_I2C_Mem_Read+0x110>
 8006a9e:	697a      	ldr	r2, [r7, #20]
 8006aa0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006aa2:	68f8      	ldr	r0, [r7, #12]
 8006aa4:	f000 f994 	bl	8006dd0 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006aa8:	4603      	mov	r3, r0
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	d001      	beq.n	8006ab2 <HAL_I2C_Mem_Read+0x1ee>
 8006aae:	2301      	movs	r3, #1
 8006ab0:	e01a      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	2220      	movs	r2, #32
 8006ab8:	61da      	str	r2, [r3, #28]
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	6859      	ldr	r1, [r3, #4]
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	681a      	ldr	r2, [r3, #0]
 8006ac4:	4b0b      	ldr	r3, [pc, #44]	@ (8006af4 <HAL_I2C_Mem_Read+0x230>)
 8006ac6:	400b      	ands	r3, r1
 8006ac8:	6053      	str	r3, [r2, #4]
 8006aca:	68fb      	ldr	r3, [r7, #12]
 8006acc:	2220      	movs	r2, #32
 8006ace:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006ad2:	68fb      	ldr	r3, [r7, #12]
 8006ad4:	2200      	movs	r2, #0
 8006ad6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ada:	68fb      	ldr	r3, [r7, #12]
 8006adc:	2200      	movs	r2, #0
 8006ade:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006ae2:	2300      	movs	r3, #0
 8006ae4:	e000      	b.n	8006ae8 <HAL_I2C_Mem_Read+0x224>
 8006ae6:	2302      	movs	r3, #2
 8006ae8:	4618      	mov	r0, r3
 8006aea:	3718      	adds	r7, #24
 8006aec:	46bd      	mov	sp, r7
 8006aee:	bd80      	pop	{r7, pc}
 8006af0:	80002400 	.word	0x80002400
 8006af4:	fe00e800 	.word	0xfe00e800

08006af8 <I2C_RequestMemoryWrite>:
 8006af8:	b580      	push	{r7, lr}
 8006afa:	b086      	sub	sp, #24
 8006afc:	af02      	add	r7, sp, #8
 8006afe:	60f8      	str	r0, [r7, #12]
 8006b00:	4608      	mov	r0, r1
 8006b02:	4611      	mov	r1, r2
 8006b04:	461a      	mov	r2, r3
 8006b06:	4603      	mov	r3, r0
 8006b08:	817b      	strh	r3, [r7, #10]
 8006b0a:	460b      	mov	r3, r1
 8006b0c:	813b      	strh	r3, [r7, #8]
 8006b0e:	4613      	mov	r3, r2
 8006b10:	80fb      	strh	r3, [r7, #6]
 8006b12:	88fb      	ldrh	r3, [r7, #6]
 8006b14:	b2da      	uxtb	r2, r3
 8006b16:	8979      	ldrh	r1, [r7, #10]
 8006b18:	4b20      	ldr	r3, [pc, #128]	@ (8006b9c <I2C_RequestMemoryWrite+0xa4>)
 8006b1a:	9300      	str	r3, [sp, #0]
 8006b1c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8006b20:	68f8      	ldr	r0, [r7, #12]
 8006b22:	f000 fa79 	bl	8007018 <I2C_TransferConfig>
 8006b26:	69fa      	ldr	r2, [r7, #28]
 8006b28:	69b9      	ldr	r1, [r7, #24]
 8006b2a:	68f8      	ldr	r0, [r7, #12]
 8006b2c:	f000 f909 	bl	8006d42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006b30:	4603      	mov	r3, r0
 8006b32:	2b00      	cmp	r3, #0
 8006b34:	d001      	beq.n	8006b3a <I2C_RequestMemoryWrite+0x42>
 8006b36:	2301      	movs	r3, #1
 8006b38:	e02c      	b.n	8006b94 <I2C_RequestMemoryWrite+0x9c>
 8006b3a:	88fb      	ldrh	r3, [r7, #6]
 8006b3c:	2b01      	cmp	r3, #1
 8006b3e:	d105      	bne.n	8006b4c <I2C_RequestMemoryWrite+0x54>
 8006b40:	893b      	ldrh	r3, [r7, #8]
 8006b42:	b2da      	uxtb	r2, r3
 8006b44:	68fb      	ldr	r3, [r7, #12]
 8006b46:	681b      	ldr	r3, [r3, #0]
 8006b48:	629a      	str	r2, [r3, #40]	@ 0x28
 8006b4a:	e015      	b.n	8006b78 <I2C_RequestMemoryWrite+0x80>
 8006b4c:	893b      	ldrh	r3, [r7, #8]
 8006b4e:	0a1b      	lsrs	r3, r3, #8
 8006b50:	b29b      	uxth	r3, r3
 8006b52:	b2da      	uxtb	r2, r3
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	629a      	str	r2, [r3, #40]	@ 0x28
 8006b5a:	69fa      	ldr	r2, [r7, #28]
 8006b5c:	69b9      	ldr	r1, [r7, #24]
 8006b5e:	68f8      	ldr	r0, [r7, #12]
 8006b60:	f000 f8ef 	bl	8006d42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006b64:	4603      	mov	r3, r0
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	d001      	beq.n	8006b6e <I2C_RequestMemoryWrite+0x76>
 8006b6a:	2301      	movs	r3, #1
 8006b6c:	e012      	b.n	8006b94 <I2C_RequestMemoryWrite+0x9c>
 8006b6e:	893b      	ldrh	r3, [r7, #8]
 8006b70:	b2da      	uxtb	r2, r3
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	629a      	str	r2, [r3, #40]	@ 0x28
 8006b78:	69fb      	ldr	r3, [r7, #28]
 8006b7a:	9300      	str	r3, [sp, #0]
 8006b7c:	69bb      	ldr	r3, [r7, #24]
 8006b7e:	2200      	movs	r2, #0
 8006b80:	2180      	movs	r1, #128	@ 0x80
 8006b82:	68f8      	ldr	r0, [r7, #12]
 8006b84:	f000 f884 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 8006b88:	4603      	mov	r3, r0
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d001      	beq.n	8006b92 <I2C_RequestMemoryWrite+0x9a>
 8006b8e:	2301      	movs	r3, #1
 8006b90:	e000      	b.n	8006b94 <I2C_RequestMemoryWrite+0x9c>
 8006b92:	2300      	movs	r3, #0
 8006b94:	4618      	mov	r0, r3
 8006b96:	3710      	adds	r7, #16
 8006b98:	46bd      	mov	sp, r7
 8006b9a:	bd80      	pop	{r7, pc}
 8006b9c:	80002000 	.word	0x80002000

08006ba0 <I2C_RequestMemoryRead>:
 8006ba0:	b580      	push	{r7, lr}
 8006ba2:	b086      	sub	sp, #24
 8006ba4:	af02      	add	r7, sp, #8
 8006ba6:	60f8      	str	r0, [r7, #12]
 8006ba8:	4608      	mov	r0, r1
 8006baa:	4611      	mov	r1, r2
 8006bac:	461a      	mov	r2, r3
 8006bae:	4603      	mov	r3, r0
 8006bb0:	817b      	strh	r3, [r7, #10]
 8006bb2:	460b      	mov	r3, r1
 8006bb4:	813b      	strh	r3, [r7, #8]
 8006bb6:	4613      	mov	r3, r2
 8006bb8:	80fb      	strh	r3, [r7, #6]
 8006bba:	88fb      	ldrh	r3, [r7, #6]
 8006bbc:	b2da      	uxtb	r2, r3
 8006bbe:	8979      	ldrh	r1, [r7, #10]
 8006bc0:	4b20      	ldr	r3, [pc, #128]	@ (8006c44 <I2C_RequestMemoryRead+0xa4>)
 8006bc2:	9300      	str	r3, [sp, #0]
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	68f8      	ldr	r0, [r7, #12]
 8006bc8:	f000 fa26 	bl	8007018 <I2C_TransferConfig>
 8006bcc:	69fa      	ldr	r2, [r7, #28]
 8006bce:	69b9      	ldr	r1, [r7, #24]
 8006bd0:	68f8      	ldr	r0, [r7, #12]
 8006bd2:	f000 f8b6 	bl	8006d42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006bd6:	4603      	mov	r3, r0
 8006bd8:	2b00      	cmp	r3, #0
 8006bda:	d001      	beq.n	8006be0 <I2C_RequestMemoryRead+0x40>
 8006bdc:	2301      	movs	r3, #1
 8006bde:	e02c      	b.n	8006c3a <I2C_RequestMemoryRead+0x9a>
 8006be0:	88fb      	ldrh	r3, [r7, #6]
 8006be2:	2b01      	cmp	r3, #1
 8006be4:	d105      	bne.n	8006bf2 <I2C_RequestMemoryRead+0x52>
 8006be6:	893b      	ldrh	r3, [r7, #8]
 8006be8:	b2da      	uxtb	r2, r3
 8006bea:	68fb      	ldr	r3, [r7, #12]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	629a      	str	r2, [r3, #40]	@ 0x28
 8006bf0:	e015      	b.n	8006c1e <I2C_RequestMemoryRead+0x7e>
 8006bf2:	893b      	ldrh	r3, [r7, #8]
 8006bf4:	0a1b      	lsrs	r3, r3, #8
 8006bf6:	b29b      	uxth	r3, r3
 8006bf8:	b2da      	uxtb	r2, r3
 8006bfa:	68fb      	ldr	r3, [r7, #12]
 8006bfc:	681b      	ldr	r3, [r3, #0]
 8006bfe:	629a      	str	r2, [r3, #40]	@ 0x28
 8006c00:	69fa      	ldr	r2, [r7, #28]
 8006c02:	69b9      	ldr	r1, [r7, #24]
 8006c04:	68f8      	ldr	r0, [r7, #12]
 8006c06:	f000 f89c 	bl	8006d42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006c0a:	4603      	mov	r3, r0
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	d001      	beq.n	8006c14 <I2C_RequestMemoryRead+0x74>
 8006c10:	2301      	movs	r3, #1
 8006c12:	e012      	b.n	8006c3a <I2C_RequestMemoryRead+0x9a>
 8006c14:	893b      	ldrh	r3, [r7, #8]
 8006c16:	b2da      	uxtb	r2, r3
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	629a      	str	r2, [r3, #40]	@ 0x28
 8006c1e:	69fb      	ldr	r3, [r7, #28]
 8006c20:	9300      	str	r3, [sp, #0]
 8006c22:	69bb      	ldr	r3, [r7, #24]
 8006c24:	2200      	movs	r2, #0
 8006c26:	2140      	movs	r1, #64	@ 0x40
 8006c28:	68f8      	ldr	r0, [r7, #12]
 8006c2a:	f000 f831 	bl	8006c90 <I2C_WaitOnFlagUntilTimeout>
 8006c2e:	4603      	mov	r3, r0
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	d001      	beq.n	8006c38 <I2C_RequestMemoryRead+0x98>
 8006c34:	2301      	movs	r3, #1
 8006c36:	e000      	b.n	8006c3a <I2C_RequestMemoryRead+0x9a>
 8006c38:	2300      	movs	r3, #0
 8006c3a:	4618      	mov	r0, r3
 8006c3c:	3710      	adds	r7, #16
 8006c3e:	46bd      	mov	sp, r7
 8006c40:	bd80      	pop	{r7, pc}
 8006c42:	bf00      	nop
 8006c44:	80002000 	.word	0x80002000

08006c48 <I2C_Flush_TXDR>:
 8006c48:	b480      	push	{r7}
 8006c4a:	b083      	sub	sp, #12
 8006c4c:	af00      	add	r7, sp, #0
 8006c4e:	6078      	str	r0, [r7, #4]
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	699b      	ldr	r3, [r3, #24]
 8006c56:	f003 0302 	and.w	r3, r3, #2
 8006c5a:	2b02      	cmp	r3, #2
 8006c5c:	d103      	bne.n	8006c66 <I2C_Flush_TXDR+0x1e>
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	2200      	movs	r2, #0
 8006c64:	629a      	str	r2, [r3, #40]	@ 0x28
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	699b      	ldr	r3, [r3, #24]
 8006c6c:	f003 0301 	and.w	r3, r3, #1
 8006c70:	2b01      	cmp	r3, #1
 8006c72:	d007      	beq.n	8006c84 <I2C_Flush_TXDR+0x3c>
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	681b      	ldr	r3, [r3, #0]
 8006c78:	699a      	ldr	r2, [r3, #24]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	681b      	ldr	r3, [r3, #0]
 8006c7e:	f042 0201 	orr.w	r2, r2, #1
 8006c82:	619a      	str	r2, [r3, #24]
 8006c84:	bf00      	nop
 8006c86:	370c      	adds	r7, #12
 8006c88:	46bd      	mov	sp, r7
 8006c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c8e:	4770      	bx	lr

08006c90 <I2C_WaitOnFlagUntilTimeout>:
 8006c90:	b580      	push	{r7, lr}
 8006c92:	b084      	sub	sp, #16
 8006c94:	af00      	add	r7, sp, #0
 8006c96:	60f8      	str	r0, [r7, #12]
 8006c98:	60b9      	str	r1, [r7, #8]
 8006c9a:	603b      	str	r3, [r7, #0]
 8006c9c:	4613      	mov	r3, r2
 8006c9e:	71fb      	strb	r3, [r7, #7]
 8006ca0:	e03b      	b.n	8006d1a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8006ca2:	69ba      	ldr	r2, [r7, #24]
 8006ca4:	6839      	ldr	r1, [r7, #0]
 8006ca6:	68f8      	ldr	r0, [r7, #12]
 8006ca8:	f000 f8d6 	bl	8006e58 <I2C_IsErrorOccurred>
 8006cac:	4603      	mov	r3, r0
 8006cae:	2b00      	cmp	r3, #0
 8006cb0:	d001      	beq.n	8006cb6 <I2C_WaitOnFlagUntilTimeout+0x26>
 8006cb2:	2301      	movs	r3, #1
 8006cb4:	e041      	b.n	8006d3a <I2C_WaitOnFlagUntilTimeout+0xaa>
 8006cb6:	683b      	ldr	r3, [r7, #0]
 8006cb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006cbc:	d02d      	beq.n	8006d1a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8006cbe:	f7fe fedd 	bl	8005a7c <HAL_GetTick>
 8006cc2:	4602      	mov	r2, r0
 8006cc4:	69bb      	ldr	r3, [r7, #24]
 8006cc6:	1ad3      	subs	r3, r2, r3
 8006cc8:	683a      	ldr	r2, [r7, #0]
 8006cca:	429a      	cmp	r2, r3
 8006ccc:	d302      	bcc.n	8006cd4 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006cce:	683b      	ldr	r3, [r7, #0]
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d122      	bne.n	8006d1a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8006cd4:	68fb      	ldr	r3, [r7, #12]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	699a      	ldr	r2, [r3, #24]
 8006cda:	68bb      	ldr	r3, [r7, #8]
 8006cdc:	4013      	ands	r3, r2
 8006cde:	68ba      	ldr	r2, [r7, #8]
 8006ce0:	429a      	cmp	r2, r3
 8006ce2:	bf0c      	ite	eq
 8006ce4:	2301      	moveq	r3, #1
 8006ce6:	2300      	movne	r3, #0
 8006ce8:	b2db      	uxtb	r3, r3
 8006cea:	461a      	mov	r2, r3
 8006cec:	79fb      	ldrb	r3, [r7, #7]
 8006cee:	429a      	cmp	r2, r3
 8006cf0:	d113      	bne.n	8006d1a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8006cf2:	68fb      	ldr	r3, [r7, #12]
 8006cf4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006cf6:	f043 0220 	orr.w	r2, r3, #32
 8006cfa:	68fb      	ldr	r3, [r7, #12]
 8006cfc:	645a      	str	r2, [r3, #68]	@ 0x44
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	2220      	movs	r2, #32
 8006d02:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006d06:	68fb      	ldr	r3, [r7, #12]
 8006d08:	2200      	movs	r2, #0
 8006d0a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	2200      	movs	r2, #0
 8006d12:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006d16:	2301      	movs	r3, #1
 8006d18:	e00f      	b.n	8006d3a <I2C_WaitOnFlagUntilTimeout+0xaa>
 8006d1a:	68fb      	ldr	r3, [r7, #12]
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	699a      	ldr	r2, [r3, #24]
 8006d20:	68bb      	ldr	r3, [r7, #8]
 8006d22:	4013      	ands	r3, r2
 8006d24:	68ba      	ldr	r2, [r7, #8]
 8006d26:	429a      	cmp	r2, r3
 8006d28:	bf0c      	ite	eq
 8006d2a:	2301      	moveq	r3, #1
 8006d2c:	2300      	movne	r3, #0
 8006d2e:	b2db      	uxtb	r3, r3
 8006d30:	461a      	mov	r2, r3
 8006d32:	79fb      	ldrb	r3, [r7, #7]
 8006d34:	429a      	cmp	r2, r3
 8006d36:	d0b4      	beq.n	8006ca2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8006d38:	2300      	movs	r3, #0
 8006d3a:	4618      	mov	r0, r3
 8006d3c:	3710      	adds	r7, #16
 8006d3e:	46bd      	mov	sp, r7
 8006d40:	bd80      	pop	{r7, pc}

08006d42 <I2C_WaitOnTXISFlagUntilTimeout>:
 8006d42:	b580      	push	{r7, lr}
 8006d44:	b084      	sub	sp, #16
 8006d46:	af00      	add	r7, sp, #0
 8006d48:	60f8      	str	r0, [r7, #12]
 8006d4a:	60b9      	str	r1, [r7, #8]
 8006d4c:	607a      	str	r2, [r7, #4]
 8006d4e:	e033      	b.n	8006db8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8006d50:	687a      	ldr	r2, [r7, #4]
 8006d52:	68b9      	ldr	r1, [r7, #8]
 8006d54:	68f8      	ldr	r0, [r7, #12]
 8006d56:	f000 f87f 	bl	8006e58 <I2C_IsErrorOccurred>
 8006d5a:	4603      	mov	r3, r0
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d001      	beq.n	8006d64 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8006d60:	2301      	movs	r3, #1
 8006d62:	e031      	b.n	8006dc8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8006d64:	68bb      	ldr	r3, [r7, #8]
 8006d66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d6a:	d025      	beq.n	8006db8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8006d6c:	f7fe fe86 	bl	8005a7c <HAL_GetTick>
 8006d70:	4602      	mov	r2, r0
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	1ad3      	subs	r3, r2, r3
 8006d76:	68ba      	ldr	r2, [r7, #8]
 8006d78:	429a      	cmp	r2, r3
 8006d7a:	d302      	bcc.n	8006d82 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8006d7c:	68bb      	ldr	r3, [r7, #8]
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d11a      	bne.n	8006db8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8006d82:	68fb      	ldr	r3, [r7, #12]
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	699b      	ldr	r3, [r3, #24]
 8006d88:	f003 0302 	and.w	r3, r3, #2
 8006d8c:	2b02      	cmp	r3, #2
 8006d8e:	d013      	beq.n	8006db8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8006d90:	68fb      	ldr	r3, [r7, #12]
 8006d92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006d94:	f043 0220 	orr.w	r2, r3, #32
 8006d98:	68fb      	ldr	r3, [r7, #12]
 8006d9a:	645a      	str	r2, [r3, #68]	@ 0x44
 8006d9c:	68fb      	ldr	r3, [r7, #12]
 8006d9e:	2220      	movs	r2, #32
 8006da0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	2200      	movs	r2, #0
 8006da8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	2200      	movs	r2, #0
 8006db0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006db4:	2301      	movs	r3, #1
 8006db6:	e007      	b.n	8006dc8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	699b      	ldr	r3, [r3, #24]
 8006dbe:	f003 0302 	and.w	r3, r3, #2
 8006dc2:	2b02      	cmp	r3, #2
 8006dc4:	d1c4      	bne.n	8006d50 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8006dc6:	2300      	movs	r3, #0
 8006dc8:	4618      	mov	r0, r3
 8006dca:	3710      	adds	r7, #16
 8006dcc:	46bd      	mov	sp, r7
 8006dce:	bd80      	pop	{r7, pc}

08006dd0 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8006dd0:	b580      	push	{r7, lr}
 8006dd2:	b084      	sub	sp, #16
 8006dd4:	af00      	add	r7, sp, #0
 8006dd6:	60f8      	str	r0, [r7, #12]
 8006dd8:	60b9      	str	r1, [r7, #8]
 8006dda:	607a      	str	r2, [r7, #4]
 8006ddc:	e02f      	b.n	8006e3e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8006dde:	687a      	ldr	r2, [r7, #4]
 8006de0:	68b9      	ldr	r1, [r7, #8]
 8006de2:	68f8      	ldr	r0, [r7, #12]
 8006de4:	f000 f838 	bl	8006e58 <I2C_IsErrorOccurred>
 8006de8:	4603      	mov	r3, r0
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d001      	beq.n	8006df2 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8006dee:	2301      	movs	r3, #1
 8006df0:	e02d      	b.n	8006e4e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8006df2:	f7fe fe43 	bl	8005a7c <HAL_GetTick>
 8006df6:	4602      	mov	r2, r0
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	1ad3      	subs	r3, r2, r3
 8006dfc:	68ba      	ldr	r2, [r7, #8]
 8006dfe:	429a      	cmp	r2, r3
 8006e00:	d302      	bcc.n	8006e08 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8006e02:	68bb      	ldr	r3, [r7, #8]
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	d11a      	bne.n	8006e3e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8006e08:	68fb      	ldr	r3, [r7, #12]
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	699b      	ldr	r3, [r3, #24]
 8006e0e:	f003 0320 	and.w	r3, r3, #32
 8006e12:	2b20      	cmp	r3, #32
 8006e14:	d013      	beq.n	8006e3e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006e1a:	f043 0220 	orr.w	r2, r3, #32
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	645a      	str	r2, [r3, #68]	@ 0x44
 8006e22:	68fb      	ldr	r3, [r7, #12]
 8006e24:	2220      	movs	r2, #32
 8006e26:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e2a:	68fb      	ldr	r3, [r7, #12]
 8006e2c:	2200      	movs	r2, #0
 8006e2e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006e32:	68fb      	ldr	r3, [r7, #12]
 8006e34:	2200      	movs	r2, #0
 8006e36:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006e3a:	2301      	movs	r3, #1
 8006e3c:	e007      	b.n	8006e4e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	699b      	ldr	r3, [r3, #24]
 8006e44:	f003 0320 	and.w	r3, r3, #32
 8006e48:	2b20      	cmp	r3, #32
 8006e4a:	d1c8      	bne.n	8006dde <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8006e4c:	2300      	movs	r3, #0
 8006e4e:	4618      	mov	r0, r3
 8006e50:	3710      	adds	r7, #16
 8006e52:	46bd      	mov	sp, r7
 8006e54:	bd80      	pop	{r7, pc}
	...

08006e58 <I2C_IsErrorOccurred>:
 8006e58:	b580      	push	{r7, lr}
 8006e5a:	b08a      	sub	sp, #40	@ 0x28
 8006e5c:	af00      	add	r7, sp, #0
 8006e5e:	60f8      	str	r0, [r7, #12]
 8006e60:	60b9      	str	r1, [r7, #8]
 8006e62:	607a      	str	r2, [r7, #4]
 8006e64:	2300      	movs	r3, #0
 8006e66:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006e6a:	68fb      	ldr	r3, [r7, #12]
 8006e6c:	681b      	ldr	r3, [r3, #0]
 8006e6e:	699b      	ldr	r3, [r3, #24]
 8006e70:	61bb      	str	r3, [r7, #24]
 8006e72:	2300      	movs	r3, #0
 8006e74:	623b      	str	r3, [r7, #32]
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	61fb      	str	r3, [r7, #28]
 8006e7a:	69bb      	ldr	r3, [r7, #24]
 8006e7c:	f003 0310 	and.w	r3, r3, #16
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	d068      	beq.n	8006f56 <I2C_IsErrorOccurred+0xfe>
 8006e84:	68fb      	ldr	r3, [r7, #12]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	2210      	movs	r2, #16
 8006e8a:	61da      	str	r2, [r3, #28]
 8006e8c:	e049      	b.n	8006f22 <I2C_IsErrorOccurred+0xca>
 8006e8e:	68bb      	ldr	r3, [r7, #8]
 8006e90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006e94:	d045      	beq.n	8006f22 <I2C_IsErrorOccurred+0xca>
 8006e96:	f7fe fdf1 	bl	8005a7c <HAL_GetTick>
 8006e9a:	4602      	mov	r2, r0
 8006e9c:	69fb      	ldr	r3, [r7, #28]
 8006e9e:	1ad3      	subs	r3, r2, r3
 8006ea0:	68ba      	ldr	r2, [r7, #8]
 8006ea2:	429a      	cmp	r2, r3
 8006ea4:	d302      	bcc.n	8006eac <I2C_IsErrorOccurred+0x54>
 8006ea6:	68bb      	ldr	r3, [r7, #8]
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	d13a      	bne.n	8006f22 <I2C_IsErrorOccurred+0xca>
 8006eac:	68fb      	ldr	r3, [r7, #12]
 8006eae:	681b      	ldr	r3, [r3, #0]
 8006eb0:	685b      	ldr	r3, [r3, #4]
 8006eb2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006eb6:	617b      	str	r3, [r7, #20]
 8006eb8:	68fb      	ldr	r3, [r7, #12]
 8006eba:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006ebe:	74fb      	strb	r3, [r7, #19]
 8006ec0:	68fb      	ldr	r3, [r7, #12]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	699b      	ldr	r3, [r3, #24]
 8006ec6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006eca:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006ece:	d121      	bne.n	8006f14 <I2C_IsErrorOccurred+0xbc>
 8006ed0:	697b      	ldr	r3, [r7, #20]
 8006ed2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006ed6:	d01d      	beq.n	8006f14 <I2C_IsErrorOccurred+0xbc>
 8006ed8:	7cfb      	ldrb	r3, [r7, #19]
 8006eda:	2b20      	cmp	r3, #32
 8006edc:	d01a      	beq.n	8006f14 <I2C_IsErrorOccurred+0xbc>
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	681b      	ldr	r3, [r3, #0]
 8006ee2:	685a      	ldr	r2, [r3, #4]
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	681b      	ldr	r3, [r3, #0]
 8006ee8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006eec:	605a      	str	r2, [r3, #4]
 8006eee:	f7fe fdc5 	bl	8005a7c <HAL_GetTick>
 8006ef2:	61f8      	str	r0, [r7, #28]
 8006ef4:	e00e      	b.n	8006f14 <I2C_IsErrorOccurred+0xbc>
 8006ef6:	f7fe fdc1 	bl	8005a7c <HAL_GetTick>
 8006efa:	4602      	mov	r2, r0
 8006efc:	69fb      	ldr	r3, [r7, #28]
 8006efe:	1ad3      	subs	r3, r2, r3
 8006f00:	2b19      	cmp	r3, #25
 8006f02:	d907      	bls.n	8006f14 <I2C_IsErrorOccurred+0xbc>
 8006f04:	6a3b      	ldr	r3, [r7, #32]
 8006f06:	f043 0320 	orr.w	r3, r3, #32
 8006f0a:	623b      	str	r3, [r7, #32]
 8006f0c:	2301      	movs	r3, #1
 8006f0e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006f12:	e006      	b.n	8006f22 <I2C_IsErrorOccurred+0xca>
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	699b      	ldr	r3, [r3, #24]
 8006f1a:	f003 0320 	and.w	r3, r3, #32
 8006f1e:	2b20      	cmp	r3, #32
 8006f20:	d1e9      	bne.n	8006ef6 <I2C_IsErrorOccurred+0x9e>
 8006f22:	68fb      	ldr	r3, [r7, #12]
 8006f24:	681b      	ldr	r3, [r3, #0]
 8006f26:	699b      	ldr	r3, [r3, #24]
 8006f28:	f003 0320 	and.w	r3, r3, #32
 8006f2c:	2b20      	cmp	r3, #32
 8006f2e:	d003      	beq.n	8006f38 <I2C_IsErrorOccurred+0xe0>
 8006f30:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	d0aa      	beq.n	8006e8e <I2C_IsErrorOccurred+0x36>
 8006f38:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	d103      	bne.n	8006f48 <I2C_IsErrorOccurred+0xf0>
 8006f40:	68fb      	ldr	r3, [r7, #12]
 8006f42:	681b      	ldr	r3, [r3, #0]
 8006f44:	2220      	movs	r2, #32
 8006f46:	61da      	str	r2, [r3, #28]
 8006f48:	6a3b      	ldr	r3, [r7, #32]
 8006f4a:	f043 0304 	orr.w	r3, r3, #4
 8006f4e:	623b      	str	r3, [r7, #32]
 8006f50:	2301      	movs	r3, #1
 8006f52:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006f56:	68fb      	ldr	r3, [r7, #12]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	699b      	ldr	r3, [r3, #24]
 8006f5c:	61bb      	str	r3, [r7, #24]
 8006f5e:	69bb      	ldr	r3, [r7, #24]
 8006f60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006f64:	2b00      	cmp	r3, #0
 8006f66:	d00b      	beq.n	8006f80 <I2C_IsErrorOccurred+0x128>
 8006f68:	6a3b      	ldr	r3, [r7, #32]
 8006f6a:	f043 0301 	orr.w	r3, r3, #1
 8006f6e:	623b      	str	r3, [r7, #32]
 8006f70:	68fb      	ldr	r3, [r7, #12]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8006f78:	61da      	str	r2, [r3, #28]
 8006f7a:	2301      	movs	r3, #1
 8006f7c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006f80:	69bb      	ldr	r3, [r7, #24]
 8006f82:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006f86:	2b00      	cmp	r3, #0
 8006f88:	d00b      	beq.n	8006fa2 <I2C_IsErrorOccurred+0x14a>
 8006f8a:	6a3b      	ldr	r3, [r7, #32]
 8006f8c:	f043 0308 	orr.w	r3, r3, #8
 8006f90:	623b      	str	r3, [r7, #32]
 8006f92:	68fb      	ldr	r3, [r7, #12]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8006f9a:	61da      	str	r2, [r3, #28]
 8006f9c:	2301      	movs	r3, #1
 8006f9e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006fa2:	69bb      	ldr	r3, [r7, #24]
 8006fa4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006fa8:	2b00      	cmp	r3, #0
 8006faa:	d00b      	beq.n	8006fc4 <I2C_IsErrorOccurred+0x16c>
 8006fac:	6a3b      	ldr	r3, [r7, #32]
 8006fae:	f043 0302 	orr.w	r3, r3, #2
 8006fb2:	623b      	str	r3, [r7, #32]
 8006fb4:	68fb      	ldr	r3, [r7, #12]
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006fbc:	61da      	str	r2, [r3, #28]
 8006fbe:	2301      	movs	r3, #1
 8006fc0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8006fc4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d01c      	beq.n	8007006 <I2C_IsErrorOccurred+0x1ae>
 8006fcc:	68f8      	ldr	r0, [r7, #12]
 8006fce:	f7ff fe3b 	bl	8006c48 <I2C_Flush_TXDR>
 8006fd2:	68fb      	ldr	r3, [r7, #12]
 8006fd4:	681b      	ldr	r3, [r3, #0]
 8006fd6:	6859      	ldr	r1, [r3, #4]
 8006fd8:	68fb      	ldr	r3, [r7, #12]
 8006fda:	681a      	ldr	r2, [r3, #0]
 8006fdc:	4b0d      	ldr	r3, [pc, #52]	@ (8007014 <I2C_IsErrorOccurred+0x1bc>)
 8006fde:	400b      	ands	r3, r1
 8006fe0:	6053      	str	r3, [r2, #4]
 8006fe2:	68fb      	ldr	r3, [r7, #12]
 8006fe4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006fe6:	6a3b      	ldr	r3, [r7, #32]
 8006fe8:	431a      	orrs	r2, r3
 8006fea:	68fb      	ldr	r3, [r7, #12]
 8006fec:	645a      	str	r2, [r3, #68]	@ 0x44
 8006fee:	68fb      	ldr	r3, [r7, #12]
 8006ff0:	2220      	movs	r2, #32
 8006ff2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006ff6:	68fb      	ldr	r3, [r7, #12]
 8006ff8:	2200      	movs	r2, #0
 8006ffa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	2200      	movs	r2, #0
 8007002:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007006:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800700a:	4618      	mov	r0, r3
 800700c:	3728      	adds	r7, #40	@ 0x28
 800700e:	46bd      	mov	sp, r7
 8007010:	bd80      	pop	{r7, pc}
 8007012:	bf00      	nop
 8007014:	fe00e800 	.word	0xfe00e800

08007018 <I2C_TransferConfig>:
 8007018:	b480      	push	{r7}
 800701a:	b087      	sub	sp, #28
 800701c:	af00      	add	r7, sp, #0
 800701e:	60f8      	str	r0, [r7, #12]
 8007020:	607b      	str	r3, [r7, #4]
 8007022:	460b      	mov	r3, r1
 8007024:	817b      	strh	r3, [r7, #10]
 8007026:	4613      	mov	r3, r2
 8007028:	727b      	strb	r3, [r7, #9]
 800702a:	897b      	ldrh	r3, [r7, #10]
 800702c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8007030:	7a7b      	ldrb	r3, [r7, #9]
 8007032:	041b      	lsls	r3, r3, #16
 8007034:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8007038:	431a      	orrs	r2, r3
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	431a      	orrs	r2, r3
 800703e:	6a3b      	ldr	r3, [r7, #32]
 8007040:	4313      	orrs	r3, r2
 8007042:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8007046:	617b      	str	r3, [r7, #20]
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	685a      	ldr	r2, [r3, #4]
 800704e:	6a3b      	ldr	r3, [r7, #32]
 8007050:	0d5b      	lsrs	r3, r3, #21
 8007052:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8007056:	4b08      	ldr	r3, [pc, #32]	@ (8007078 <I2C_TransferConfig+0x60>)
 8007058:	430b      	orrs	r3, r1
 800705a:	43db      	mvns	r3, r3
 800705c:	ea02 0103 	and.w	r1, r2, r3
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	697a      	ldr	r2, [r7, #20]
 8007066:	430a      	orrs	r2, r1
 8007068:	605a      	str	r2, [r3, #4]
 800706a:	bf00      	nop
 800706c:	371c      	adds	r7, #28
 800706e:	46bd      	mov	sp, r7
 8007070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007074:	4770      	bx	lr
 8007076:	bf00      	nop
 8007078:	03ff63ff 	.word	0x03ff63ff

0800707c <HAL_I2CEx_ConfigAnalogFilter>:
 800707c:	b480      	push	{r7}
 800707e:	b083      	sub	sp, #12
 8007080:	af00      	add	r7, sp, #0
 8007082:	6078      	str	r0, [r7, #4]
 8007084:	6039      	str	r1, [r7, #0]
 8007086:	687b      	ldr	r3, [r7, #4]
 8007088:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800708c:	b2db      	uxtb	r3, r3
 800708e:	2b20      	cmp	r3, #32
 8007090:	d138      	bne.n	8007104 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8007098:	2b01      	cmp	r3, #1
 800709a:	d101      	bne.n	80070a0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800709c:	2302      	movs	r3, #2
 800709e:	e032      	b.n	8007106 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	2201      	movs	r2, #1
 80070a4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	2224      	movs	r2, #36	@ 0x24
 80070ac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	681a      	ldr	r2, [r3, #0]
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	681b      	ldr	r3, [r3, #0]
 80070ba:	f022 0201 	bic.w	r2, r2, #1
 80070be:	601a      	str	r2, [r3, #0]
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	681a      	ldr	r2, [r3, #0]
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80070ce:	601a      	str	r2, [r3, #0]
 80070d0:	687b      	ldr	r3, [r7, #4]
 80070d2:	681b      	ldr	r3, [r3, #0]
 80070d4:	6819      	ldr	r1, [r3, #0]
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	683a      	ldr	r2, [r7, #0]
 80070dc:	430a      	orrs	r2, r1
 80070de:	601a      	str	r2, [r3, #0]
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	681a      	ldr	r2, [r3, #0]
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	681b      	ldr	r3, [r3, #0]
 80070ea:	f042 0201 	orr.w	r2, r2, #1
 80070ee:	601a      	str	r2, [r3, #0]
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	2220      	movs	r2, #32
 80070f4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	2200      	movs	r2, #0
 80070fc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007100:	2300      	movs	r3, #0
 8007102:	e000      	b.n	8007106 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8007104:	2302      	movs	r3, #2
 8007106:	4618      	mov	r0, r3
 8007108:	370c      	adds	r7, #12
 800710a:	46bd      	mov	sp, r7
 800710c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007110:	4770      	bx	lr

08007112 <HAL_I2CEx_ConfigDigitalFilter>:
 8007112:	b480      	push	{r7}
 8007114:	b085      	sub	sp, #20
 8007116:	af00      	add	r7, sp, #0
 8007118:	6078      	str	r0, [r7, #4]
 800711a:	6039      	str	r1, [r7, #0]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007122:	b2db      	uxtb	r3, r3
 8007124:	2b20      	cmp	r3, #32
 8007126:	d139      	bne.n	800719c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800712e:	2b01      	cmp	r3, #1
 8007130:	d101      	bne.n	8007136 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8007132:	2302      	movs	r3, #2
 8007134:	e033      	b.n	800719e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	2201      	movs	r2, #1
 800713a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	2224      	movs	r2, #36	@ 0x24
 8007142:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	681a      	ldr	r2, [r3, #0]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	f022 0201 	bic.w	r2, r2, #1
 8007154:	601a      	str	r2, [r3, #0]
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	681b      	ldr	r3, [r3, #0]
 800715c:	60fb      	str	r3, [r7, #12]
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8007164:	60fb      	str	r3, [r7, #12]
 8007166:	683b      	ldr	r3, [r7, #0]
 8007168:	021b      	lsls	r3, r3, #8
 800716a:	68fa      	ldr	r2, [r7, #12]
 800716c:	4313      	orrs	r3, r2
 800716e:	60fb      	str	r3, [r7, #12]
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	681b      	ldr	r3, [r3, #0]
 8007174:	68fa      	ldr	r2, [r7, #12]
 8007176:	601a      	str	r2, [r3, #0]
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	681a      	ldr	r2, [r3, #0]
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	f042 0201 	orr.w	r2, r2, #1
 8007186:	601a      	str	r2, [r3, #0]
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	2220      	movs	r2, #32
 800718c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	2200      	movs	r2, #0
 8007194:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007198:	2300      	movs	r3, #0
 800719a:	e000      	b.n	800719e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800719c:	2302      	movs	r3, #2
 800719e:	4618      	mov	r0, r3
 80071a0:	3714      	adds	r7, #20
 80071a2:	46bd      	mov	sp, r7
 80071a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a8:	4770      	bx	lr

080071aa <HAL_PCD_Init>:
 80071aa:	b580      	push	{r7, lr}
 80071ac:	b086      	sub	sp, #24
 80071ae:	af02      	add	r7, sp, #8
 80071b0:	6078      	str	r0, [r7, #4]
 80071b2:	687b      	ldr	r3, [r7, #4]
 80071b4:	2b00      	cmp	r3, #0
 80071b6:	d101      	bne.n	80071bc <HAL_PCD_Init+0x12>
 80071b8:	2301      	movs	r3, #1
 80071ba:	e101      	b.n	80073c0 <HAL_PCD_Init+0x216>
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 80071c2:	b2db      	uxtb	r3, r3
 80071c4:	2b00      	cmp	r3, #0
 80071c6:	d106      	bne.n	80071d6 <HAL_PCD_Init+0x2c>
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2200      	movs	r2, #0
 80071cc:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80071d0:	6878      	ldr	r0, [r7, #4]
 80071d2:	f7fc f94b 	bl	800346c <HAL_PCD_MspInit>
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	2203      	movs	r2, #3
 80071da:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	2200      	movs	r2, #0
 80071e2:	719a      	strb	r2, [r3, #6]
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	4618      	mov	r0, r3
 80071ea:	f004 fdc7 	bl	800bd7c <USB_DisableGlobalInt>
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	6818      	ldr	r0, [r3, #0]
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	7c1a      	ldrb	r2, [r3, #16]
 80071f6:	f88d 2000 	strb.w	r2, [sp]
 80071fa:	3304      	adds	r3, #4
 80071fc:	cb0e      	ldmia	r3, {r1, r2, r3}
 80071fe:	f004 fd90 	bl	800bd22 <USB_CoreInit>
 8007202:	4603      	mov	r3, r0
 8007204:	2b00      	cmp	r3, #0
 8007206:	d005      	beq.n	8007214 <HAL_PCD_Init+0x6a>
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	2202      	movs	r2, #2
 800720c:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8007210:	2301      	movs	r3, #1
 8007212:	e0d5      	b.n	80073c0 <HAL_PCD_Init+0x216>
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	2100      	movs	r1, #0
 800721a:	4618      	mov	r0, r3
 800721c:	f004 fdbf 	bl	800bd9e <USB_SetCurrentMode>
 8007220:	4603      	mov	r3, r0
 8007222:	2b00      	cmp	r3, #0
 8007224:	d005      	beq.n	8007232 <HAL_PCD_Init+0x88>
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	2202      	movs	r2, #2
 800722a:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 800722e:	2301      	movs	r3, #1
 8007230:	e0c6      	b.n	80073c0 <HAL_PCD_Init+0x216>
 8007232:	2300      	movs	r3, #0
 8007234:	73fb      	strb	r3, [r7, #15]
 8007236:	e04a      	b.n	80072ce <HAL_PCD_Init+0x124>
 8007238:	7bfa      	ldrb	r2, [r7, #15]
 800723a:	6879      	ldr	r1, [r7, #4]
 800723c:	4613      	mov	r3, r2
 800723e:	00db      	lsls	r3, r3, #3
 8007240:	4413      	add	r3, r2
 8007242:	009b      	lsls	r3, r3, #2
 8007244:	440b      	add	r3, r1
 8007246:	3315      	adds	r3, #21
 8007248:	2201      	movs	r2, #1
 800724a:	701a      	strb	r2, [r3, #0]
 800724c:	7bfa      	ldrb	r2, [r7, #15]
 800724e:	6879      	ldr	r1, [r7, #4]
 8007250:	4613      	mov	r3, r2
 8007252:	00db      	lsls	r3, r3, #3
 8007254:	4413      	add	r3, r2
 8007256:	009b      	lsls	r3, r3, #2
 8007258:	440b      	add	r3, r1
 800725a:	3314      	adds	r3, #20
 800725c:	7bfa      	ldrb	r2, [r7, #15]
 800725e:	701a      	strb	r2, [r3, #0]
 8007260:	7bfa      	ldrb	r2, [r7, #15]
 8007262:	7bfb      	ldrb	r3, [r7, #15]
 8007264:	b298      	uxth	r0, r3
 8007266:	6879      	ldr	r1, [r7, #4]
 8007268:	4613      	mov	r3, r2
 800726a:	00db      	lsls	r3, r3, #3
 800726c:	4413      	add	r3, r2
 800726e:	009b      	lsls	r3, r3, #2
 8007270:	440b      	add	r3, r1
 8007272:	332e      	adds	r3, #46	@ 0x2e
 8007274:	4602      	mov	r2, r0
 8007276:	801a      	strh	r2, [r3, #0]
 8007278:	7bfa      	ldrb	r2, [r7, #15]
 800727a:	6879      	ldr	r1, [r7, #4]
 800727c:	4613      	mov	r3, r2
 800727e:	00db      	lsls	r3, r3, #3
 8007280:	4413      	add	r3, r2
 8007282:	009b      	lsls	r3, r3, #2
 8007284:	440b      	add	r3, r1
 8007286:	3318      	adds	r3, #24
 8007288:	2200      	movs	r2, #0
 800728a:	701a      	strb	r2, [r3, #0]
 800728c:	7bfa      	ldrb	r2, [r7, #15]
 800728e:	6879      	ldr	r1, [r7, #4]
 8007290:	4613      	mov	r3, r2
 8007292:	00db      	lsls	r3, r3, #3
 8007294:	4413      	add	r3, r2
 8007296:	009b      	lsls	r3, r3, #2
 8007298:	440b      	add	r3, r1
 800729a:	331c      	adds	r3, #28
 800729c:	2200      	movs	r2, #0
 800729e:	601a      	str	r2, [r3, #0]
 80072a0:	7bfa      	ldrb	r2, [r7, #15]
 80072a2:	6879      	ldr	r1, [r7, #4]
 80072a4:	4613      	mov	r3, r2
 80072a6:	00db      	lsls	r3, r3, #3
 80072a8:	4413      	add	r3, r2
 80072aa:	009b      	lsls	r3, r3, #2
 80072ac:	440b      	add	r3, r1
 80072ae:	3320      	adds	r3, #32
 80072b0:	2200      	movs	r2, #0
 80072b2:	601a      	str	r2, [r3, #0]
 80072b4:	7bfa      	ldrb	r2, [r7, #15]
 80072b6:	6879      	ldr	r1, [r7, #4]
 80072b8:	4613      	mov	r3, r2
 80072ba:	00db      	lsls	r3, r3, #3
 80072bc:	4413      	add	r3, r2
 80072be:	009b      	lsls	r3, r3, #2
 80072c0:	440b      	add	r3, r1
 80072c2:	3324      	adds	r3, #36	@ 0x24
 80072c4:	2200      	movs	r2, #0
 80072c6:	601a      	str	r2, [r3, #0]
 80072c8:	7bfb      	ldrb	r3, [r7, #15]
 80072ca:	3301      	adds	r3, #1
 80072cc:	73fb      	strb	r3, [r7, #15]
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	791b      	ldrb	r3, [r3, #4]
 80072d2:	7bfa      	ldrb	r2, [r7, #15]
 80072d4:	429a      	cmp	r2, r3
 80072d6:	d3af      	bcc.n	8007238 <HAL_PCD_Init+0x8e>
 80072d8:	2300      	movs	r3, #0
 80072da:	73fb      	strb	r3, [r7, #15]
 80072dc:	e044      	b.n	8007368 <HAL_PCD_Init+0x1be>
 80072de:	7bfa      	ldrb	r2, [r7, #15]
 80072e0:	6879      	ldr	r1, [r7, #4]
 80072e2:	4613      	mov	r3, r2
 80072e4:	00db      	lsls	r3, r3, #3
 80072e6:	4413      	add	r3, r2
 80072e8:	009b      	lsls	r3, r3, #2
 80072ea:	440b      	add	r3, r1
 80072ec:	f203 2355 	addw	r3, r3, #597	@ 0x255
 80072f0:	2200      	movs	r2, #0
 80072f2:	701a      	strb	r2, [r3, #0]
 80072f4:	7bfa      	ldrb	r2, [r7, #15]
 80072f6:	6879      	ldr	r1, [r7, #4]
 80072f8:	4613      	mov	r3, r2
 80072fa:	00db      	lsls	r3, r3, #3
 80072fc:	4413      	add	r3, r2
 80072fe:	009b      	lsls	r3, r3, #2
 8007300:	440b      	add	r3, r1
 8007302:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 8007306:	7bfa      	ldrb	r2, [r7, #15]
 8007308:	701a      	strb	r2, [r3, #0]
 800730a:	7bfa      	ldrb	r2, [r7, #15]
 800730c:	6879      	ldr	r1, [r7, #4]
 800730e:	4613      	mov	r3, r2
 8007310:	00db      	lsls	r3, r3, #3
 8007312:	4413      	add	r3, r2
 8007314:	009b      	lsls	r3, r3, #2
 8007316:	440b      	add	r3, r1
 8007318:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800731c:	2200      	movs	r2, #0
 800731e:	701a      	strb	r2, [r3, #0]
 8007320:	7bfa      	ldrb	r2, [r7, #15]
 8007322:	6879      	ldr	r1, [r7, #4]
 8007324:	4613      	mov	r3, r2
 8007326:	00db      	lsls	r3, r3, #3
 8007328:	4413      	add	r3, r2
 800732a:	009b      	lsls	r3, r3, #2
 800732c:	440b      	add	r3, r1
 800732e:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8007332:	2200      	movs	r2, #0
 8007334:	601a      	str	r2, [r3, #0]
 8007336:	7bfa      	ldrb	r2, [r7, #15]
 8007338:	6879      	ldr	r1, [r7, #4]
 800733a:	4613      	mov	r3, r2
 800733c:	00db      	lsls	r3, r3, #3
 800733e:	4413      	add	r3, r2
 8007340:	009b      	lsls	r3, r3, #2
 8007342:	440b      	add	r3, r1
 8007344:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8007348:	2200      	movs	r2, #0
 800734a:	601a      	str	r2, [r3, #0]
 800734c:	7bfa      	ldrb	r2, [r7, #15]
 800734e:	6879      	ldr	r1, [r7, #4]
 8007350:	4613      	mov	r3, r2
 8007352:	00db      	lsls	r3, r3, #3
 8007354:	4413      	add	r3, r2
 8007356:	009b      	lsls	r3, r3, #2
 8007358:	440b      	add	r3, r1
 800735a:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 800735e:	2200      	movs	r2, #0
 8007360:	601a      	str	r2, [r3, #0]
 8007362:	7bfb      	ldrb	r3, [r7, #15]
 8007364:	3301      	adds	r3, #1
 8007366:	73fb      	strb	r3, [r7, #15]
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	791b      	ldrb	r3, [r3, #4]
 800736c:	7bfa      	ldrb	r2, [r7, #15]
 800736e:	429a      	cmp	r2, r3
 8007370:	d3b5      	bcc.n	80072de <HAL_PCD_Init+0x134>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	6818      	ldr	r0, [r3, #0]
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	7c1a      	ldrb	r2, [r3, #16]
 800737a:	f88d 2000 	strb.w	r2, [sp]
 800737e:	3304      	adds	r3, #4
 8007380:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007382:	f004 fd59 	bl	800be38 <USB_DevInit>
 8007386:	4603      	mov	r3, r0
 8007388:	2b00      	cmp	r3, #0
 800738a:	d005      	beq.n	8007398 <HAL_PCD_Init+0x1ee>
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	2202      	movs	r2, #2
 8007390:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8007394:	2301      	movs	r3, #1
 8007396:	e013      	b.n	80073c0 <HAL_PCD_Init+0x216>
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	2200      	movs	r2, #0
 800739c:	745a      	strb	r2, [r3, #17]
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	2201      	movs	r2, #1
 80073a2:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	7b1b      	ldrb	r3, [r3, #12]
 80073aa:	2b01      	cmp	r3, #1
 80073ac:	d102      	bne.n	80073b4 <HAL_PCD_Init+0x20a>
 80073ae:	6878      	ldr	r0, [r7, #4]
 80073b0:	f000 f80a 	bl	80073c8 <HAL_PCDEx_ActivateLPM>
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	4618      	mov	r0, r3
 80073ba:	f004 fefe 	bl	800c1ba <USB_DevDisconnect>
 80073be:	2300      	movs	r3, #0
 80073c0:	4618      	mov	r0, r3
 80073c2:	3710      	adds	r7, #16
 80073c4:	46bd      	mov	sp, r7
 80073c6:	bd80      	pop	{r7, pc}

080073c8 <HAL_PCDEx_ActivateLPM>:
 80073c8:	b480      	push	{r7}
 80073ca:	b085      	sub	sp, #20
 80073cc:	af00      	add	r7, sp, #0
 80073ce:	6078      	str	r0, [r7, #4]
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	681b      	ldr	r3, [r3, #0]
 80073d4:	60fb      	str	r3, [r7, #12]
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	2201      	movs	r2, #1
 80073da:	f8c3 24d8 	str.w	r2, [r3, #1240]	@ 0x4d8
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	2200      	movs	r2, #0
 80073e2:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 80073e6:	68fb      	ldr	r3, [r7, #12]
 80073e8:	699b      	ldr	r3, [r3, #24]
 80073ea:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 80073ee:	68fb      	ldr	r3, [r7, #12]
 80073f0:	619a      	str	r2, [r3, #24]
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80073f6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80073fa:	f043 0303 	orr.w	r3, r3, #3
 80073fe:	68fa      	ldr	r2, [r7, #12]
 8007400:	6553      	str	r3, [r2, #84]	@ 0x54
 8007402:	2300      	movs	r3, #0
 8007404:	4618      	mov	r0, r3
 8007406:	3714      	adds	r7, #20
 8007408:	46bd      	mov	sp, r7
 800740a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800740e:	4770      	bx	lr

08007410 <HAL_PWR_EnableBkUpAccess>:
 8007410:	b480      	push	{r7}
 8007412:	af00      	add	r7, sp, #0
 8007414:	4b05      	ldr	r3, [pc, #20]	@ (800742c <HAL_PWR_EnableBkUpAccess+0x1c>)
 8007416:	681b      	ldr	r3, [r3, #0]
 8007418:	4a04      	ldr	r2, [pc, #16]	@ (800742c <HAL_PWR_EnableBkUpAccess+0x1c>)
 800741a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800741e:	6013      	str	r3, [r2, #0]
 8007420:	bf00      	nop
 8007422:	46bd      	mov	sp, r7
 8007424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007428:	4770      	bx	lr
 800742a:	bf00      	nop
 800742c:	40007000 	.word	0x40007000

08007430 <HAL_PWREx_GetVoltageRange>:
 8007430:	b480      	push	{r7}
 8007432:	af00      	add	r7, sp, #0
 8007434:	4b04      	ldr	r3, [pc, #16]	@ (8007448 <HAL_PWREx_GetVoltageRange+0x18>)
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800743c:	4618      	mov	r0, r3
 800743e:	46bd      	mov	sp, r7
 8007440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007444:	4770      	bx	lr
 8007446:	bf00      	nop
 8007448:	40007000 	.word	0x40007000

0800744c <HAL_PWREx_ControlVoltageScaling>:
 800744c:	b480      	push	{r7}
 800744e:	b085      	sub	sp, #20
 8007450:	af00      	add	r7, sp, #0
 8007452:	6078      	str	r0, [r7, #4]
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800745a:	d130      	bne.n	80074be <HAL_PWREx_ControlVoltageScaling+0x72>
 800745c:	4b23      	ldr	r3, [pc, #140]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800745e:	681b      	ldr	r3, [r3, #0]
 8007460:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8007464:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007468:	d038      	beq.n	80074dc <HAL_PWREx_ControlVoltageScaling+0x90>
 800746a:	4b20      	ldr	r3, [pc, #128]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800746c:	681b      	ldr	r3, [r3, #0]
 800746e:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8007472:	4a1e      	ldr	r2, [pc, #120]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8007474:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8007478:	6013      	str	r3, [r2, #0]
 800747a:	4b1d      	ldr	r3, [pc, #116]	@ (80074f0 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	2232      	movs	r2, #50	@ 0x32
 8007480:	fb02 f303 	mul.w	r3, r2, r3
 8007484:	4a1b      	ldr	r2, [pc, #108]	@ (80074f4 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8007486:	fba2 2303 	umull	r2, r3, r2, r3
 800748a:	0c9b      	lsrs	r3, r3, #18
 800748c:	3301      	adds	r3, #1
 800748e:	60fb      	str	r3, [r7, #12]
 8007490:	e002      	b.n	8007498 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	3b01      	subs	r3, #1
 8007496:	60fb      	str	r3, [r7, #12]
 8007498:	4b14      	ldr	r3, [pc, #80]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800749a:	695b      	ldr	r3, [r3, #20]
 800749c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80074a0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80074a4:	d102      	bne.n	80074ac <HAL_PWREx_ControlVoltageScaling+0x60>
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	2b00      	cmp	r3, #0
 80074aa:	d1f2      	bne.n	8007492 <HAL_PWREx_ControlVoltageScaling+0x46>
 80074ac:	4b0f      	ldr	r3, [pc, #60]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80074ae:	695b      	ldr	r3, [r3, #20]
 80074b0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80074b4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80074b8:	d110      	bne.n	80074dc <HAL_PWREx_ControlVoltageScaling+0x90>
 80074ba:	2303      	movs	r3, #3
 80074bc:	e00f      	b.n	80074de <HAL_PWREx_ControlVoltageScaling+0x92>
 80074be:	4b0b      	ldr	r3, [pc, #44]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80074c6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80074ca:	d007      	beq.n	80074dc <HAL_PWREx_ControlVoltageScaling+0x90>
 80074cc:	4b07      	ldr	r3, [pc, #28]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80074d4:	4a05      	ldr	r2, [pc, #20]	@ (80074ec <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80074d6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80074da:	6013      	str	r3, [r2, #0]
 80074dc:	2300      	movs	r3, #0
 80074de:	4618      	mov	r0, r3
 80074e0:	3714      	adds	r7, #20
 80074e2:	46bd      	mov	sp, r7
 80074e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e8:	4770      	bx	lr
 80074ea:	bf00      	nop
 80074ec:	40007000 	.word	0x40007000
 80074f0:	20000000 	.word	0x20000000
 80074f4:	431bde83 	.word	0x431bde83

080074f8 <HAL_PWREx_EnableVddUSB>:
 80074f8:	b480      	push	{r7}
 80074fa:	af00      	add	r7, sp, #0
 80074fc:	4b05      	ldr	r3, [pc, #20]	@ (8007514 <HAL_PWREx_EnableVddUSB+0x1c>)
 80074fe:	685b      	ldr	r3, [r3, #4]
 8007500:	4a04      	ldr	r2, [pc, #16]	@ (8007514 <HAL_PWREx_EnableVddUSB+0x1c>)
 8007502:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8007506:	6053      	str	r3, [r2, #4]
 8007508:	bf00      	nop
 800750a:	46bd      	mov	sp, r7
 800750c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007510:	4770      	bx	lr
 8007512:	bf00      	nop
 8007514:	40007000 	.word	0x40007000

08007518 <HAL_QSPI_Init>:
 8007518:	b580      	push	{r7, lr}
 800751a:	b086      	sub	sp, #24
 800751c:	af02      	add	r7, sp, #8
 800751e:	6078      	str	r0, [r7, #4]
 8007520:	f7fe faac 	bl	8005a7c <HAL_GetTick>
 8007524:	60f8      	str	r0, [r7, #12]
 8007526:	687b      	ldr	r3, [r7, #4]
 8007528:	2b00      	cmp	r3, #0
 800752a:	d101      	bne.n	8007530 <HAL_QSPI_Init+0x18>
 800752c:	2301      	movs	r3, #1
 800752e:	e063      	b.n	80075f8 <HAL_QSPI_Init+0xe0>
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8007536:	b2db      	uxtb	r3, r3
 8007538:	2b00      	cmp	r3, #0
 800753a:	d10b      	bne.n	8007554 <HAL_QSPI_Init+0x3c>
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	2200      	movs	r2, #0
 8007540:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8007544:	6878      	ldr	r0, [r7, #4]
 8007546:	f7fb fdc7 	bl	80030d8 <HAL_QSPI_MspInit>
 800754a:	f241 3188 	movw	r1, #5000	@ 0x1388
 800754e:	6878      	ldr	r0, [r7, #4]
 8007550:	f000 f858 	bl	8007604 <HAL_QSPI_SetTimeout>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	681b      	ldr	r3, [r3, #0]
 8007558:	681b      	ldr	r3, [r3, #0]
 800755a:	f423 6170 	bic.w	r1, r3, #3840	@ 0xf00
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	689b      	ldr	r3, [r3, #8]
 8007562:	3b01      	subs	r3, #1
 8007564:	021a      	lsls	r2, r3, #8
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	681b      	ldr	r3, [r3, #0]
 800756a:	430a      	orrs	r2, r1
 800756c:	601a      	str	r2, [r3, #0]
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007572:	9300      	str	r3, [sp, #0]
 8007574:	68fb      	ldr	r3, [r7, #12]
 8007576:	2200      	movs	r2, #0
 8007578:	2120      	movs	r1, #32
 800757a:	6878      	ldr	r0, [r7, #4]
 800757c:	f000 f850 	bl	8007620 <QSPI_WaitFlagStateUntilTimeout>
 8007580:	4603      	mov	r3, r0
 8007582:	72fb      	strb	r3, [r7, #11]
 8007584:	7afb      	ldrb	r3, [r7, #11]
 8007586:	2b00      	cmp	r3, #0
 8007588:	d131      	bne.n	80075ee <HAL_QSPI_Init+0xd6>
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8007594:	f023 0310 	bic.w	r3, r3, #16
 8007598:	687a      	ldr	r2, [r7, #4]
 800759a:	6852      	ldr	r2, [r2, #4]
 800759c:	0611      	lsls	r1, r2, #24
 800759e:	687a      	ldr	r2, [r7, #4]
 80075a0:	68d2      	ldr	r2, [r2, #12]
 80075a2:	4311      	orrs	r1, r2
 80075a4:	687a      	ldr	r2, [r7, #4]
 80075a6:	6812      	ldr	r2, [r2, #0]
 80075a8:	430b      	orrs	r3, r1
 80075aa:	6013      	str	r3, [r2, #0]
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	685a      	ldr	r2, [r3, #4]
 80075b2:	4b13      	ldr	r3, [pc, #76]	@ (8007600 <HAL_QSPI_Init+0xe8>)
 80075b4:	4013      	ands	r3, r2
 80075b6:	687a      	ldr	r2, [r7, #4]
 80075b8:	6912      	ldr	r2, [r2, #16]
 80075ba:	0411      	lsls	r1, r2, #16
 80075bc:	687a      	ldr	r2, [r7, #4]
 80075be:	6952      	ldr	r2, [r2, #20]
 80075c0:	4311      	orrs	r1, r2
 80075c2:	687a      	ldr	r2, [r7, #4]
 80075c4:	6992      	ldr	r2, [r2, #24]
 80075c6:	4311      	orrs	r1, r2
 80075c8:	687a      	ldr	r2, [r7, #4]
 80075ca:	6812      	ldr	r2, [r2, #0]
 80075cc:	430b      	orrs	r3, r1
 80075ce:	6053      	str	r3, [r2, #4]
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	681b      	ldr	r3, [r3, #0]
 80075d4:	681a      	ldr	r2, [r3, #0]
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	f042 0201 	orr.w	r2, r2, #1
 80075de:	601a      	str	r2, [r3, #0]
 80075e0:	687b      	ldr	r3, [r7, #4]
 80075e2:	2200      	movs	r2, #0
 80075e4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	2201      	movs	r2, #1
 80075ea:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	2200      	movs	r2, #0
 80075f2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80075f6:	7afb      	ldrb	r3, [r7, #11]
 80075f8:	4618      	mov	r0, r3
 80075fa:	3710      	adds	r7, #16
 80075fc:	46bd      	mov	sp, r7
 80075fe:	bd80      	pop	{r7, pc}
 8007600:	ffe0f8fe 	.word	0xffe0f8fe

08007604 <HAL_QSPI_SetTimeout>:
 8007604:	b480      	push	{r7}
 8007606:	b083      	sub	sp, #12
 8007608:	af00      	add	r7, sp, #0
 800760a:	6078      	str	r0, [r7, #4]
 800760c:	6039      	str	r1, [r7, #0]
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	683a      	ldr	r2, [r7, #0]
 8007612:	641a      	str	r2, [r3, #64]	@ 0x40
 8007614:	bf00      	nop
 8007616:	370c      	adds	r7, #12
 8007618:	46bd      	mov	sp, r7
 800761a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800761e:	4770      	bx	lr

08007620 <QSPI_WaitFlagStateUntilTimeout>:
 8007620:	b580      	push	{r7, lr}
 8007622:	b084      	sub	sp, #16
 8007624:	af00      	add	r7, sp, #0
 8007626:	60f8      	str	r0, [r7, #12]
 8007628:	60b9      	str	r1, [r7, #8]
 800762a:	603b      	str	r3, [r7, #0]
 800762c:	4613      	mov	r3, r2
 800762e:	71fb      	strb	r3, [r7, #7]
 8007630:	e01a      	b.n	8007668 <QSPI_WaitFlagStateUntilTimeout+0x48>
 8007632:	69bb      	ldr	r3, [r7, #24]
 8007634:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007638:	d016      	beq.n	8007668 <QSPI_WaitFlagStateUntilTimeout+0x48>
 800763a:	f7fe fa1f 	bl	8005a7c <HAL_GetTick>
 800763e:	4602      	mov	r2, r0
 8007640:	683b      	ldr	r3, [r7, #0]
 8007642:	1ad3      	subs	r3, r2, r3
 8007644:	69ba      	ldr	r2, [r7, #24]
 8007646:	429a      	cmp	r2, r3
 8007648:	d302      	bcc.n	8007650 <QSPI_WaitFlagStateUntilTimeout+0x30>
 800764a:	69bb      	ldr	r3, [r7, #24]
 800764c:	2b00      	cmp	r3, #0
 800764e:	d10b      	bne.n	8007668 <QSPI_WaitFlagStateUntilTimeout+0x48>
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	2204      	movs	r2, #4
 8007654:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800765c:	f043 0201 	orr.w	r2, r3, #1
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007664:	2301      	movs	r3, #1
 8007666:	e00e      	b.n	8007686 <QSPI_WaitFlagStateUntilTimeout+0x66>
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	689a      	ldr	r2, [r3, #8]
 800766e:	68bb      	ldr	r3, [r7, #8]
 8007670:	4013      	ands	r3, r2
 8007672:	2b00      	cmp	r3, #0
 8007674:	bf14      	ite	ne
 8007676:	2301      	movne	r3, #1
 8007678:	2300      	moveq	r3, #0
 800767a:	b2db      	uxtb	r3, r3
 800767c:	461a      	mov	r2, r3
 800767e:	79fb      	ldrb	r3, [r7, #7]
 8007680:	429a      	cmp	r2, r3
 8007682:	d1d6      	bne.n	8007632 <QSPI_WaitFlagStateUntilTimeout+0x12>
 8007684:	2300      	movs	r3, #0
 8007686:	4618      	mov	r0, r3
 8007688:	3710      	adds	r7, #16
 800768a:	46bd      	mov	sp, r7
 800768c:	bd80      	pop	{r7, pc}
	...

08007690 <HAL_RCC_OscConfig>:
 8007690:	b580      	push	{r7, lr}
 8007692:	b088      	sub	sp, #32
 8007694:	af00      	add	r7, sp, #0
 8007696:	6078      	str	r0, [r7, #4]
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	2b00      	cmp	r3, #0
 800769c:	d101      	bne.n	80076a2 <HAL_RCC_OscConfig+0x12>
 800769e:	2301      	movs	r3, #1
 80076a0:	e3ca      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80076a2:	4b97      	ldr	r3, [pc, #604]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80076a4:	689b      	ldr	r3, [r3, #8]
 80076a6:	f003 030c 	and.w	r3, r3, #12
 80076aa:	61bb      	str	r3, [r7, #24]
 80076ac:	4b94      	ldr	r3, [pc, #592]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80076ae:	68db      	ldr	r3, [r3, #12]
 80076b0:	f003 0303 	and.w	r3, r3, #3
 80076b4:	617b      	str	r3, [r7, #20]
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	f003 0310 	and.w	r3, r3, #16
 80076be:	2b00      	cmp	r3, #0
 80076c0:	f000 80e4 	beq.w	800788c <HAL_RCC_OscConfig+0x1fc>
 80076c4:	69bb      	ldr	r3, [r7, #24]
 80076c6:	2b00      	cmp	r3, #0
 80076c8:	d007      	beq.n	80076da <HAL_RCC_OscConfig+0x4a>
 80076ca:	69bb      	ldr	r3, [r7, #24]
 80076cc:	2b0c      	cmp	r3, #12
 80076ce:	f040 808b 	bne.w	80077e8 <HAL_RCC_OscConfig+0x158>
 80076d2:	697b      	ldr	r3, [r7, #20]
 80076d4:	2b01      	cmp	r3, #1
 80076d6:	f040 8087 	bne.w	80077e8 <HAL_RCC_OscConfig+0x158>
 80076da:	4b89      	ldr	r3, [pc, #548]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	f003 0302 	and.w	r3, r3, #2
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d005      	beq.n	80076f2 <HAL_RCC_OscConfig+0x62>
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	699b      	ldr	r3, [r3, #24]
 80076ea:	2b00      	cmp	r3, #0
 80076ec:	d101      	bne.n	80076f2 <HAL_RCC_OscConfig+0x62>
 80076ee:	2301      	movs	r3, #1
 80076f0:	e3a2      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	6a1a      	ldr	r2, [r3, #32]
 80076f6:	4b82      	ldr	r3, [pc, #520]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	f003 0308 	and.w	r3, r3, #8
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d004      	beq.n	800770c <HAL_RCC_OscConfig+0x7c>
 8007702:	4b7f      	ldr	r3, [pc, #508]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800770a:	e005      	b.n	8007718 <HAL_RCC_OscConfig+0x88>
 800770c:	4b7c      	ldr	r3, [pc, #496]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800770e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007712:	091b      	lsrs	r3, r3, #4
 8007714:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007718:	4293      	cmp	r3, r2
 800771a:	d223      	bcs.n	8007764 <HAL_RCC_OscConfig+0xd4>
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	6a1b      	ldr	r3, [r3, #32]
 8007720:	4618      	mov	r0, r3
 8007722:	f000 fd87 	bl	8008234 <RCC_SetFlashLatencyFromMSIRange>
 8007726:	4603      	mov	r3, r0
 8007728:	2b00      	cmp	r3, #0
 800772a:	d001      	beq.n	8007730 <HAL_RCC_OscConfig+0xa0>
 800772c:	2301      	movs	r3, #1
 800772e:	e383      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007730:	4b73      	ldr	r3, [pc, #460]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	4a72      	ldr	r2, [pc, #456]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007736:	f043 0308 	orr.w	r3, r3, #8
 800773a:	6013      	str	r3, [r2, #0]
 800773c:	4b70      	ldr	r3, [pc, #448]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	6a1b      	ldr	r3, [r3, #32]
 8007748:	496d      	ldr	r1, [pc, #436]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800774a:	4313      	orrs	r3, r2
 800774c:	600b      	str	r3, [r1, #0]
 800774e:	4b6c      	ldr	r3, [pc, #432]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007750:	685b      	ldr	r3, [r3, #4]
 8007752:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8007756:	687b      	ldr	r3, [r7, #4]
 8007758:	69db      	ldr	r3, [r3, #28]
 800775a:	021b      	lsls	r3, r3, #8
 800775c:	4968      	ldr	r1, [pc, #416]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800775e:	4313      	orrs	r3, r2
 8007760:	604b      	str	r3, [r1, #4]
 8007762:	e025      	b.n	80077b0 <HAL_RCC_OscConfig+0x120>
 8007764:	4b66      	ldr	r3, [pc, #408]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	4a65      	ldr	r2, [pc, #404]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800776a:	f043 0308 	orr.w	r3, r3, #8
 800776e:	6013      	str	r3, [r2, #0]
 8007770:	4b63      	ldr	r3, [pc, #396]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007772:	681b      	ldr	r3, [r3, #0]
 8007774:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	6a1b      	ldr	r3, [r3, #32]
 800777c:	4960      	ldr	r1, [pc, #384]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800777e:	4313      	orrs	r3, r2
 8007780:	600b      	str	r3, [r1, #0]
 8007782:	4b5f      	ldr	r3, [pc, #380]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007784:	685b      	ldr	r3, [r3, #4]
 8007786:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	69db      	ldr	r3, [r3, #28]
 800778e:	021b      	lsls	r3, r3, #8
 8007790:	495b      	ldr	r1, [pc, #364]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007792:	4313      	orrs	r3, r2
 8007794:	604b      	str	r3, [r1, #4]
 8007796:	69bb      	ldr	r3, [r7, #24]
 8007798:	2b00      	cmp	r3, #0
 800779a:	d109      	bne.n	80077b0 <HAL_RCC_OscConfig+0x120>
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	6a1b      	ldr	r3, [r3, #32]
 80077a0:	4618      	mov	r0, r3
 80077a2:	f000 fd47 	bl	8008234 <RCC_SetFlashLatencyFromMSIRange>
 80077a6:	4603      	mov	r3, r0
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d001      	beq.n	80077b0 <HAL_RCC_OscConfig+0x120>
 80077ac:	2301      	movs	r3, #1
 80077ae:	e343      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80077b0:	f000 fc4a 	bl	8008048 <HAL_RCC_GetSysClockFreq>
 80077b4:	4602      	mov	r2, r0
 80077b6:	4b52      	ldr	r3, [pc, #328]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80077b8:	689b      	ldr	r3, [r3, #8]
 80077ba:	091b      	lsrs	r3, r3, #4
 80077bc:	f003 030f 	and.w	r3, r3, #15
 80077c0:	4950      	ldr	r1, [pc, #320]	@ (8007904 <HAL_RCC_OscConfig+0x274>)
 80077c2:	5ccb      	ldrb	r3, [r1, r3]
 80077c4:	f003 031f 	and.w	r3, r3, #31
 80077c8:	fa22 f303 	lsr.w	r3, r2, r3
 80077cc:	4a4e      	ldr	r2, [pc, #312]	@ (8007908 <HAL_RCC_OscConfig+0x278>)
 80077ce:	6013      	str	r3, [r2, #0]
 80077d0:	4b4e      	ldr	r3, [pc, #312]	@ (800790c <HAL_RCC_OscConfig+0x27c>)
 80077d2:	681b      	ldr	r3, [r3, #0]
 80077d4:	4618      	mov	r0, r3
 80077d6:	f7fb feb5 	bl	8003544 <HAL_InitTick>
 80077da:	4603      	mov	r3, r0
 80077dc:	73fb      	strb	r3, [r7, #15]
 80077de:	7bfb      	ldrb	r3, [r7, #15]
 80077e0:	2b00      	cmp	r3, #0
 80077e2:	d052      	beq.n	800788a <HAL_RCC_OscConfig+0x1fa>
 80077e4:	7bfb      	ldrb	r3, [r7, #15]
 80077e6:	e327      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	699b      	ldr	r3, [r3, #24]
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	d032      	beq.n	8007856 <HAL_RCC_OscConfig+0x1c6>
 80077f0:	4b43      	ldr	r3, [pc, #268]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	4a42      	ldr	r2, [pc, #264]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80077f6:	f043 0301 	orr.w	r3, r3, #1
 80077fa:	6013      	str	r3, [r2, #0]
 80077fc:	f7fe f93e 	bl	8005a7c <HAL_GetTick>
 8007800:	6138      	str	r0, [r7, #16]
 8007802:	e008      	b.n	8007816 <HAL_RCC_OscConfig+0x186>
 8007804:	f7fe f93a 	bl	8005a7c <HAL_GetTick>
 8007808:	4602      	mov	r2, r0
 800780a:	693b      	ldr	r3, [r7, #16]
 800780c:	1ad3      	subs	r3, r2, r3
 800780e:	2b02      	cmp	r3, #2
 8007810:	d901      	bls.n	8007816 <HAL_RCC_OscConfig+0x186>
 8007812:	2303      	movs	r3, #3
 8007814:	e310      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007816:	4b3a      	ldr	r3, [pc, #232]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	f003 0302 	and.w	r3, r3, #2
 800781e:	2b00      	cmp	r3, #0
 8007820:	d0f0      	beq.n	8007804 <HAL_RCC_OscConfig+0x174>
 8007822:	4b37      	ldr	r3, [pc, #220]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	4a36      	ldr	r2, [pc, #216]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007828:	f043 0308 	orr.w	r3, r3, #8
 800782c:	6013      	str	r3, [r2, #0]
 800782e:	4b34      	ldr	r3, [pc, #208]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007830:	681b      	ldr	r3, [r3, #0]
 8007832:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007836:	687b      	ldr	r3, [r7, #4]
 8007838:	6a1b      	ldr	r3, [r3, #32]
 800783a:	4931      	ldr	r1, [pc, #196]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800783c:	4313      	orrs	r3, r2
 800783e:	600b      	str	r3, [r1, #0]
 8007840:	4b2f      	ldr	r3, [pc, #188]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007842:	685b      	ldr	r3, [r3, #4]
 8007844:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	69db      	ldr	r3, [r3, #28]
 800784c:	021b      	lsls	r3, r3, #8
 800784e:	492c      	ldr	r1, [pc, #176]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007850:	4313      	orrs	r3, r2
 8007852:	604b      	str	r3, [r1, #4]
 8007854:	e01a      	b.n	800788c <HAL_RCC_OscConfig+0x1fc>
 8007856:	4b2a      	ldr	r3, [pc, #168]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	4a29      	ldr	r2, [pc, #164]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800785c:	f023 0301 	bic.w	r3, r3, #1
 8007860:	6013      	str	r3, [r2, #0]
 8007862:	f7fe f90b 	bl	8005a7c <HAL_GetTick>
 8007866:	6138      	str	r0, [r7, #16]
 8007868:	e008      	b.n	800787c <HAL_RCC_OscConfig+0x1ec>
 800786a:	f7fe f907 	bl	8005a7c <HAL_GetTick>
 800786e:	4602      	mov	r2, r0
 8007870:	693b      	ldr	r3, [r7, #16]
 8007872:	1ad3      	subs	r3, r2, r3
 8007874:	2b02      	cmp	r3, #2
 8007876:	d901      	bls.n	800787c <HAL_RCC_OscConfig+0x1ec>
 8007878:	2303      	movs	r3, #3
 800787a:	e2dd      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 800787c:	4b20      	ldr	r3, [pc, #128]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	f003 0302 	and.w	r3, r3, #2
 8007884:	2b00      	cmp	r3, #0
 8007886:	d1f0      	bne.n	800786a <HAL_RCC_OscConfig+0x1da>
 8007888:	e000      	b.n	800788c <HAL_RCC_OscConfig+0x1fc>
 800788a:	bf00      	nop
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	681b      	ldr	r3, [r3, #0]
 8007890:	f003 0301 	and.w	r3, r3, #1
 8007894:	2b00      	cmp	r3, #0
 8007896:	d074      	beq.n	8007982 <HAL_RCC_OscConfig+0x2f2>
 8007898:	69bb      	ldr	r3, [r7, #24]
 800789a:	2b08      	cmp	r3, #8
 800789c:	d005      	beq.n	80078aa <HAL_RCC_OscConfig+0x21a>
 800789e:	69bb      	ldr	r3, [r7, #24]
 80078a0:	2b0c      	cmp	r3, #12
 80078a2:	d10e      	bne.n	80078c2 <HAL_RCC_OscConfig+0x232>
 80078a4:	697b      	ldr	r3, [r7, #20]
 80078a6:	2b03      	cmp	r3, #3
 80078a8:	d10b      	bne.n	80078c2 <HAL_RCC_OscConfig+0x232>
 80078aa:	4b15      	ldr	r3, [pc, #84]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078ac:	681b      	ldr	r3, [r3, #0]
 80078ae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80078b2:	2b00      	cmp	r3, #0
 80078b4:	d064      	beq.n	8007980 <HAL_RCC_OscConfig+0x2f0>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	685b      	ldr	r3, [r3, #4]
 80078ba:	2b00      	cmp	r3, #0
 80078bc:	d160      	bne.n	8007980 <HAL_RCC_OscConfig+0x2f0>
 80078be:	2301      	movs	r3, #1
 80078c0:	e2ba      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	685b      	ldr	r3, [r3, #4]
 80078c6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80078ca:	d106      	bne.n	80078da <HAL_RCC_OscConfig+0x24a>
 80078cc:	4b0c      	ldr	r3, [pc, #48]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	4a0b      	ldr	r2, [pc, #44]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078d2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80078d6:	6013      	str	r3, [r2, #0]
 80078d8:	e026      	b.n	8007928 <HAL_RCC_OscConfig+0x298>
 80078da:	687b      	ldr	r3, [r7, #4]
 80078dc:	685b      	ldr	r3, [r3, #4]
 80078de:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80078e2:	d115      	bne.n	8007910 <HAL_RCC_OscConfig+0x280>
 80078e4:	4b06      	ldr	r3, [pc, #24]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	4a05      	ldr	r2, [pc, #20]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078ea:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80078ee:	6013      	str	r3, [r2, #0]
 80078f0:	4b03      	ldr	r3, [pc, #12]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	4a02      	ldr	r2, [pc, #8]	@ (8007900 <HAL_RCC_OscConfig+0x270>)
 80078f6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80078fa:	6013      	str	r3, [r2, #0]
 80078fc:	e014      	b.n	8007928 <HAL_RCC_OscConfig+0x298>
 80078fe:	bf00      	nop
 8007900:	40021000 	.word	0x40021000
 8007904:	08015644 	.word	0x08015644
 8007908:	20000000 	.word	0x20000000
 800790c:	2000006c 	.word	0x2000006c
 8007910:	4ba0      	ldr	r3, [pc, #640]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	4a9f      	ldr	r2, [pc, #636]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007916:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800791a:	6013      	str	r3, [r2, #0]
 800791c:	4b9d      	ldr	r3, [pc, #628]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 800791e:	681b      	ldr	r3, [r3, #0]
 8007920:	4a9c      	ldr	r2, [pc, #624]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007922:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007926:	6013      	str	r3, [r2, #0]
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	685b      	ldr	r3, [r3, #4]
 800792c:	2b00      	cmp	r3, #0
 800792e:	d013      	beq.n	8007958 <HAL_RCC_OscConfig+0x2c8>
 8007930:	f7fe f8a4 	bl	8005a7c <HAL_GetTick>
 8007934:	6138      	str	r0, [r7, #16]
 8007936:	e008      	b.n	800794a <HAL_RCC_OscConfig+0x2ba>
 8007938:	f7fe f8a0 	bl	8005a7c <HAL_GetTick>
 800793c:	4602      	mov	r2, r0
 800793e:	693b      	ldr	r3, [r7, #16]
 8007940:	1ad3      	subs	r3, r2, r3
 8007942:	2b64      	cmp	r3, #100	@ 0x64
 8007944:	d901      	bls.n	800794a <HAL_RCC_OscConfig+0x2ba>
 8007946:	2303      	movs	r3, #3
 8007948:	e276      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 800794a:	4b92      	ldr	r3, [pc, #584]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007952:	2b00      	cmp	r3, #0
 8007954:	d0f0      	beq.n	8007938 <HAL_RCC_OscConfig+0x2a8>
 8007956:	e014      	b.n	8007982 <HAL_RCC_OscConfig+0x2f2>
 8007958:	f7fe f890 	bl	8005a7c <HAL_GetTick>
 800795c:	6138      	str	r0, [r7, #16]
 800795e:	e008      	b.n	8007972 <HAL_RCC_OscConfig+0x2e2>
 8007960:	f7fe f88c 	bl	8005a7c <HAL_GetTick>
 8007964:	4602      	mov	r2, r0
 8007966:	693b      	ldr	r3, [r7, #16]
 8007968:	1ad3      	subs	r3, r2, r3
 800796a:	2b64      	cmp	r3, #100	@ 0x64
 800796c:	d901      	bls.n	8007972 <HAL_RCC_OscConfig+0x2e2>
 800796e:	2303      	movs	r3, #3
 8007970:	e262      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007972:	4b88      	ldr	r3, [pc, #544]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007974:	681b      	ldr	r3, [r3, #0]
 8007976:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800797a:	2b00      	cmp	r3, #0
 800797c:	d1f0      	bne.n	8007960 <HAL_RCC_OscConfig+0x2d0>
 800797e:	e000      	b.n	8007982 <HAL_RCC_OscConfig+0x2f2>
 8007980:	bf00      	nop
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	681b      	ldr	r3, [r3, #0]
 8007986:	f003 0302 	and.w	r3, r3, #2
 800798a:	2b00      	cmp	r3, #0
 800798c:	d060      	beq.n	8007a50 <HAL_RCC_OscConfig+0x3c0>
 800798e:	69bb      	ldr	r3, [r7, #24]
 8007990:	2b04      	cmp	r3, #4
 8007992:	d005      	beq.n	80079a0 <HAL_RCC_OscConfig+0x310>
 8007994:	69bb      	ldr	r3, [r7, #24]
 8007996:	2b0c      	cmp	r3, #12
 8007998:	d119      	bne.n	80079ce <HAL_RCC_OscConfig+0x33e>
 800799a:	697b      	ldr	r3, [r7, #20]
 800799c:	2b02      	cmp	r3, #2
 800799e:	d116      	bne.n	80079ce <HAL_RCC_OscConfig+0x33e>
 80079a0:	4b7c      	ldr	r3, [pc, #496]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d005      	beq.n	80079b8 <HAL_RCC_OscConfig+0x328>
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	68db      	ldr	r3, [r3, #12]
 80079b0:	2b00      	cmp	r3, #0
 80079b2:	d101      	bne.n	80079b8 <HAL_RCC_OscConfig+0x328>
 80079b4:	2301      	movs	r3, #1
 80079b6:	e23f      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80079b8:	4b76      	ldr	r3, [pc, #472]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079ba:	685b      	ldr	r3, [r3, #4]
 80079bc:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	691b      	ldr	r3, [r3, #16]
 80079c4:	061b      	lsls	r3, r3, #24
 80079c6:	4973      	ldr	r1, [pc, #460]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079c8:	4313      	orrs	r3, r2
 80079ca:	604b      	str	r3, [r1, #4]
 80079cc:	e040      	b.n	8007a50 <HAL_RCC_OscConfig+0x3c0>
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	68db      	ldr	r3, [r3, #12]
 80079d2:	2b00      	cmp	r3, #0
 80079d4:	d023      	beq.n	8007a1e <HAL_RCC_OscConfig+0x38e>
 80079d6:	4b6f      	ldr	r3, [pc, #444]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	4a6e      	ldr	r2, [pc, #440]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079dc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80079e0:	6013      	str	r3, [r2, #0]
 80079e2:	f7fe f84b 	bl	8005a7c <HAL_GetTick>
 80079e6:	6138      	str	r0, [r7, #16]
 80079e8:	e008      	b.n	80079fc <HAL_RCC_OscConfig+0x36c>
 80079ea:	f7fe f847 	bl	8005a7c <HAL_GetTick>
 80079ee:	4602      	mov	r2, r0
 80079f0:	693b      	ldr	r3, [r7, #16]
 80079f2:	1ad3      	subs	r3, r2, r3
 80079f4:	2b02      	cmp	r3, #2
 80079f6:	d901      	bls.n	80079fc <HAL_RCC_OscConfig+0x36c>
 80079f8:	2303      	movs	r3, #3
 80079fa:	e21d      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 80079fc:	4b65      	ldr	r3, [pc, #404]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007a04:	2b00      	cmp	r3, #0
 8007a06:	d0f0      	beq.n	80079ea <HAL_RCC_OscConfig+0x35a>
 8007a08:	4b62      	ldr	r3, [pc, #392]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a0a:	685b      	ldr	r3, [r3, #4]
 8007a0c:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	691b      	ldr	r3, [r3, #16]
 8007a14:	061b      	lsls	r3, r3, #24
 8007a16:	495f      	ldr	r1, [pc, #380]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a18:	4313      	orrs	r3, r2
 8007a1a:	604b      	str	r3, [r1, #4]
 8007a1c:	e018      	b.n	8007a50 <HAL_RCC_OscConfig+0x3c0>
 8007a1e:	4b5d      	ldr	r3, [pc, #372]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a20:	681b      	ldr	r3, [r3, #0]
 8007a22:	4a5c      	ldr	r2, [pc, #368]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a24:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007a28:	6013      	str	r3, [r2, #0]
 8007a2a:	f7fe f827 	bl	8005a7c <HAL_GetTick>
 8007a2e:	6138      	str	r0, [r7, #16]
 8007a30:	e008      	b.n	8007a44 <HAL_RCC_OscConfig+0x3b4>
 8007a32:	f7fe f823 	bl	8005a7c <HAL_GetTick>
 8007a36:	4602      	mov	r2, r0
 8007a38:	693b      	ldr	r3, [r7, #16]
 8007a3a:	1ad3      	subs	r3, r2, r3
 8007a3c:	2b02      	cmp	r3, #2
 8007a3e:	d901      	bls.n	8007a44 <HAL_RCC_OscConfig+0x3b4>
 8007a40:	2303      	movs	r3, #3
 8007a42:	e1f9      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007a44:	4b53      	ldr	r3, [pc, #332]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007a4c:	2b00      	cmp	r3, #0
 8007a4e:	d1f0      	bne.n	8007a32 <HAL_RCC_OscConfig+0x3a2>
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	681b      	ldr	r3, [r3, #0]
 8007a54:	f003 0308 	and.w	r3, r3, #8
 8007a58:	2b00      	cmp	r3, #0
 8007a5a:	d03c      	beq.n	8007ad6 <HAL_RCC_OscConfig+0x446>
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	695b      	ldr	r3, [r3, #20]
 8007a60:	2b00      	cmp	r3, #0
 8007a62:	d01c      	beq.n	8007a9e <HAL_RCC_OscConfig+0x40e>
 8007a64:	4b4b      	ldr	r3, [pc, #300]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a66:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007a6a:	4a4a      	ldr	r2, [pc, #296]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a6c:	f043 0301 	orr.w	r3, r3, #1
 8007a70:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8007a74:	f7fe f802 	bl	8005a7c <HAL_GetTick>
 8007a78:	6138      	str	r0, [r7, #16]
 8007a7a:	e008      	b.n	8007a8e <HAL_RCC_OscConfig+0x3fe>
 8007a7c:	f7fd fffe 	bl	8005a7c <HAL_GetTick>
 8007a80:	4602      	mov	r2, r0
 8007a82:	693b      	ldr	r3, [r7, #16]
 8007a84:	1ad3      	subs	r3, r2, r3
 8007a86:	2b02      	cmp	r3, #2
 8007a88:	d901      	bls.n	8007a8e <HAL_RCC_OscConfig+0x3fe>
 8007a8a:	2303      	movs	r3, #3
 8007a8c:	e1d4      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007a8e:	4b41      	ldr	r3, [pc, #260]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007a90:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007a94:	f003 0302 	and.w	r3, r3, #2
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	d0ef      	beq.n	8007a7c <HAL_RCC_OscConfig+0x3ec>
 8007a9c:	e01b      	b.n	8007ad6 <HAL_RCC_OscConfig+0x446>
 8007a9e:	4b3d      	ldr	r3, [pc, #244]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007aa0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007aa4:	4a3b      	ldr	r2, [pc, #236]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007aa6:	f023 0301 	bic.w	r3, r3, #1
 8007aaa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8007aae:	f7fd ffe5 	bl	8005a7c <HAL_GetTick>
 8007ab2:	6138      	str	r0, [r7, #16]
 8007ab4:	e008      	b.n	8007ac8 <HAL_RCC_OscConfig+0x438>
 8007ab6:	f7fd ffe1 	bl	8005a7c <HAL_GetTick>
 8007aba:	4602      	mov	r2, r0
 8007abc:	693b      	ldr	r3, [r7, #16]
 8007abe:	1ad3      	subs	r3, r2, r3
 8007ac0:	2b02      	cmp	r3, #2
 8007ac2:	d901      	bls.n	8007ac8 <HAL_RCC_OscConfig+0x438>
 8007ac4:	2303      	movs	r3, #3
 8007ac6:	e1b7      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007ac8:	4b32      	ldr	r3, [pc, #200]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007aca:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007ace:	f003 0302 	and.w	r3, r3, #2
 8007ad2:	2b00      	cmp	r3, #0
 8007ad4:	d1ef      	bne.n	8007ab6 <HAL_RCC_OscConfig+0x426>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	f003 0304 	and.w	r3, r3, #4
 8007ade:	2b00      	cmp	r3, #0
 8007ae0:	f000 80a6 	beq.w	8007c30 <HAL_RCC_OscConfig+0x5a0>
 8007ae4:	2300      	movs	r3, #0
 8007ae6:	77fb      	strb	r3, [r7, #31]
 8007ae8:	4b2a      	ldr	r3, [pc, #168]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007aea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007aec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007af0:	2b00      	cmp	r3, #0
 8007af2:	d10d      	bne.n	8007b10 <HAL_RCC_OscConfig+0x480>
 8007af4:	4b27      	ldr	r3, [pc, #156]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007af6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007af8:	4a26      	ldr	r2, [pc, #152]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007afa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007afe:	6593      	str	r3, [r2, #88]	@ 0x58
 8007b00:	4b24      	ldr	r3, [pc, #144]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b02:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007b04:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007b08:	60bb      	str	r3, [r7, #8]
 8007b0a:	68bb      	ldr	r3, [r7, #8]
 8007b0c:	2301      	movs	r3, #1
 8007b0e:	77fb      	strb	r3, [r7, #31]
 8007b10:	4b21      	ldr	r3, [pc, #132]	@ (8007b98 <HAL_RCC_OscConfig+0x508>)
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007b18:	2b00      	cmp	r3, #0
 8007b1a:	d118      	bne.n	8007b4e <HAL_RCC_OscConfig+0x4be>
 8007b1c:	4b1e      	ldr	r3, [pc, #120]	@ (8007b98 <HAL_RCC_OscConfig+0x508>)
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	4a1d      	ldr	r2, [pc, #116]	@ (8007b98 <HAL_RCC_OscConfig+0x508>)
 8007b22:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007b26:	6013      	str	r3, [r2, #0]
 8007b28:	f7fd ffa8 	bl	8005a7c <HAL_GetTick>
 8007b2c:	6138      	str	r0, [r7, #16]
 8007b2e:	e008      	b.n	8007b42 <HAL_RCC_OscConfig+0x4b2>
 8007b30:	f7fd ffa4 	bl	8005a7c <HAL_GetTick>
 8007b34:	4602      	mov	r2, r0
 8007b36:	693b      	ldr	r3, [r7, #16]
 8007b38:	1ad3      	subs	r3, r2, r3
 8007b3a:	2b02      	cmp	r3, #2
 8007b3c:	d901      	bls.n	8007b42 <HAL_RCC_OscConfig+0x4b2>
 8007b3e:	2303      	movs	r3, #3
 8007b40:	e17a      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007b42:	4b15      	ldr	r3, [pc, #84]	@ (8007b98 <HAL_RCC_OscConfig+0x508>)
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d0f0      	beq.n	8007b30 <HAL_RCC_OscConfig+0x4a0>
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	689b      	ldr	r3, [r3, #8]
 8007b52:	2b01      	cmp	r3, #1
 8007b54:	d108      	bne.n	8007b68 <HAL_RCC_OscConfig+0x4d8>
 8007b56:	4b0f      	ldr	r3, [pc, #60]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b58:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007b5c:	4a0d      	ldr	r2, [pc, #52]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b5e:	f043 0301 	orr.w	r3, r3, #1
 8007b62:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007b66:	e029      	b.n	8007bbc <HAL_RCC_OscConfig+0x52c>
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	689b      	ldr	r3, [r3, #8]
 8007b6c:	2b05      	cmp	r3, #5
 8007b6e:	d115      	bne.n	8007b9c <HAL_RCC_OscConfig+0x50c>
 8007b70:	4b08      	ldr	r3, [pc, #32]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b72:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007b76:	4a07      	ldr	r2, [pc, #28]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b78:	f043 0304 	orr.w	r3, r3, #4
 8007b7c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007b80:	4b04      	ldr	r3, [pc, #16]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b82:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007b86:	4a03      	ldr	r2, [pc, #12]	@ (8007b94 <HAL_RCC_OscConfig+0x504>)
 8007b88:	f043 0301 	orr.w	r3, r3, #1
 8007b8c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007b90:	e014      	b.n	8007bbc <HAL_RCC_OscConfig+0x52c>
 8007b92:	bf00      	nop
 8007b94:	40021000 	.word	0x40021000
 8007b98:	40007000 	.word	0x40007000
 8007b9c:	4b9c      	ldr	r3, [pc, #624]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007b9e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007ba2:	4a9b      	ldr	r2, [pc, #620]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007ba4:	f023 0301 	bic.w	r3, r3, #1
 8007ba8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007bac:	4b98      	ldr	r3, [pc, #608]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007bae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007bb2:	4a97      	ldr	r2, [pc, #604]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007bb4:	f023 0304 	bic.w	r3, r3, #4
 8007bb8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	689b      	ldr	r3, [r3, #8]
 8007bc0:	2b00      	cmp	r3, #0
 8007bc2:	d016      	beq.n	8007bf2 <HAL_RCC_OscConfig+0x562>
 8007bc4:	f7fd ff5a 	bl	8005a7c <HAL_GetTick>
 8007bc8:	6138      	str	r0, [r7, #16]
 8007bca:	e00a      	b.n	8007be2 <HAL_RCC_OscConfig+0x552>
 8007bcc:	f7fd ff56 	bl	8005a7c <HAL_GetTick>
 8007bd0:	4602      	mov	r2, r0
 8007bd2:	693b      	ldr	r3, [r7, #16]
 8007bd4:	1ad3      	subs	r3, r2, r3
 8007bd6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007bda:	4293      	cmp	r3, r2
 8007bdc:	d901      	bls.n	8007be2 <HAL_RCC_OscConfig+0x552>
 8007bde:	2303      	movs	r3, #3
 8007be0:	e12a      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007be2:	4b8b      	ldr	r3, [pc, #556]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007be4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007be8:	f003 0302 	and.w	r3, r3, #2
 8007bec:	2b00      	cmp	r3, #0
 8007bee:	d0ed      	beq.n	8007bcc <HAL_RCC_OscConfig+0x53c>
 8007bf0:	e015      	b.n	8007c1e <HAL_RCC_OscConfig+0x58e>
 8007bf2:	f7fd ff43 	bl	8005a7c <HAL_GetTick>
 8007bf6:	6138      	str	r0, [r7, #16]
 8007bf8:	e00a      	b.n	8007c10 <HAL_RCC_OscConfig+0x580>
 8007bfa:	f7fd ff3f 	bl	8005a7c <HAL_GetTick>
 8007bfe:	4602      	mov	r2, r0
 8007c00:	693b      	ldr	r3, [r7, #16]
 8007c02:	1ad3      	subs	r3, r2, r3
 8007c04:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007c08:	4293      	cmp	r3, r2
 8007c0a:	d901      	bls.n	8007c10 <HAL_RCC_OscConfig+0x580>
 8007c0c:	2303      	movs	r3, #3
 8007c0e:	e113      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007c10:	4b7f      	ldr	r3, [pc, #508]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007c12:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c16:	f003 0302 	and.w	r3, r3, #2
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	d1ed      	bne.n	8007bfa <HAL_RCC_OscConfig+0x56a>
 8007c1e:	7ffb      	ldrb	r3, [r7, #31]
 8007c20:	2b01      	cmp	r3, #1
 8007c22:	d105      	bne.n	8007c30 <HAL_RCC_OscConfig+0x5a0>
 8007c24:	4b7a      	ldr	r3, [pc, #488]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007c26:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007c28:	4a79      	ldr	r2, [pc, #484]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007c2a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007c2e:	6593      	str	r3, [r2, #88]	@ 0x58
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	f000 80fe 	beq.w	8007e36 <HAL_RCC_OscConfig+0x7a6>
 8007c3a:	687b      	ldr	r3, [r7, #4]
 8007c3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007c3e:	2b02      	cmp	r3, #2
 8007c40:	f040 80d0 	bne.w	8007de4 <HAL_RCC_OscConfig+0x754>
 8007c44:	4b72      	ldr	r3, [pc, #456]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007c46:	68db      	ldr	r3, [r3, #12]
 8007c48:	617b      	str	r3, [r7, #20]
 8007c4a:	697b      	ldr	r3, [r7, #20]
 8007c4c:	f003 0203 	and.w	r2, r3, #3
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007c54:	429a      	cmp	r2, r3
 8007c56:	d130      	bne.n	8007cba <HAL_RCC_OscConfig+0x62a>
 8007c58:	697b      	ldr	r3, [r7, #20]
 8007c5a:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007c62:	3b01      	subs	r3, #1
 8007c64:	011b      	lsls	r3, r3, #4
 8007c66:	429a      	cmp	r2, r3
 8007c68:	d127      	bne.n	8007cba <HAL_RCC_OscConfig+0x62a>
 8007c6a:	697b      	ldr	r3, [r7, #20]
 8007c6c:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007c74:	021b      	lsls	r3, r3, #8
 8007c76:	429a      	cmp	r2, r3
 8007c78:	d11f      	bne.n	8007cba <HAL_RCC_OscConfig+0x62a>
 8007c7a:	697b      	ldr	r3, [r7, #20]
 8007c7c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007c80:	687a      	ldr	r2, [r7, #4]
 8007c82:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8007c84:	2a07      	cmp	r2, #7
 8007c86:	bf14      	ite	ne
 8007c88:	2201      	movne	r2, #1
 8007c8a:	2200      	moveq	r2, #0
 8007c8c:	b2d2      	uxtb	r2, r2
 8007c8e:	4293      	cmp	r3, r2
 8007c90:	d113      	bne.n	8007cba <HAL_RCC_OscConfig+0x62a>
 8007c92:	697b      	ldr	r3, [r7, #20]
 8007c94:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c9c:	085b      	lsrs	r3, r3, #1
 8007c9e:	3b01      	subs	r3, #1
 8007ca0:	055b      	lsls	r3, r3, #21
 8007ca2:	429a      	cmp	r2, r3
 8007ca4:	d109      	bne.n	8007cba <HAL_RCC_OscConfig+0x62a>
 8007ca6:	697b      	ldr	r3, [r7, #20]
 8007ca8:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007cb0:	085b      	lsrs	r3, r3, #1
 8007cb2:	3b01      	subs	r3, #1
 8007cb4:	065b      	lsls	r3, r3, #25
 8007cb6:	429a      	cmp	r2, r3
 8007cb8:	d06e      	beq.n	8007d98 <HAL_RCC_OscConfig+0x708>
 8007cba:	69bb      	ldr	r3, [r7, #24]
 8007cbc:	2b0c      	cmp	r3, #12
 8007cbe:	d069      	beq.n	8007d94 <HAL_RCC_OscConfig+0x704>
 8007cc0:	4b53      	ldr	r3, [pc, #332]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	d105      	bne.n	8007cd8 <HAL_RCC_OscConfig+0x648>
 8007ccc:	4b50      	ldr	r3, [pc, #320]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007cce:	681b      	ldr	r3, [r3, #0]
 8007cd0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d001      	beq.n	8007cdc <HAL_RCC_OscConfig+0x64c>
 8007cd8:	2301      	movs	r3, #1
 8007cda:	e0ad      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007cdc:	4b4c      	ldr	r3, [pc, #304]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	4a4b      	ldr	r2, [pc, #300]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007ce2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007ce6:	6013      	str	r3, [r2, #0]
 8007ce8:	f7fd fec8 	bl	8005a7c <HAL_GetTick>
 8007cec:	6138      	str	r0, [r7, #16]
 8007cee:	e008      	b.n	8007d02 <HAL_RCC_OscConfig+0x672>
 8007cf0:	f7fd fec4 	bl	8005a7c <HAL_GetTick>
 8007cf4:	4602      	mov	r2, r0
 8007cf6:	693b      	ldr	r3, [r7, #16]
 8007cf8:	1ad3      	subs	r3, r2, r3
 8007cfa:	2b02      	cmp	r3, #2
 8007cfc:	d901      	bls.n	8007d02 <HAL_RCC_OscConfig+0x672>
 8007cfe:	2303      	movs	r3, #3
 8007d00:	e09a      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007d02:	4b43      	ldr	r3, [pc, #268]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007d0a:	2b00      	cmp	r3, #0
 8007d0c:	d1f0      	bne.n	8007cf0 <HAL_RCC_OscConfig+0x660>
 8007d0e:	4b40      	ldr	r3, [pc, #256]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d10:	68da      	ldr	r2, [r3, #12]
 8007d12:	4b40      	ldr	r3, [pc, #256]	@ (8007e14 <HAL_RCC_OscConfig+0x784>)
 8007d14:	4013      	ands	r3, r2
 8007d16:	687a      	ldr	r2, [r7, #4]
 8007d18:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8007d1a:	687a      	ldr	r2, [r7, #4]
 8007d1c:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8007d1e:	3a01      	subs	r2, #1
 8007d20:	0112      	lsls	r2, r2, #4
 8007d22:	4311      	orrs	r1, r2
 8007d24:	687a      	ldr	r2, [r7, #4]
 8007d26:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8007d28:	0212      	lsls	r2, r2, #8
 8007d2a:	4311      	orrs	r1, r2
 8007d2c:	687a      	ldr	r2, [r7, #4]
 8007d2e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8007d30:	0852      	lsrs	r2, r2, #1
 8007d32:	3a01      	subs	r2, #1
 8007d34:	0552      	lsls	r2, r2, #21
 8007d36:	4311      	orrs	r1, r2
 8007d38:	687a      	ldr	r2, [r7, #4]
 8007d3a:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8007d3c:	0852      	lsrs	r2, r2, #1
 8007d3e:	3a01      	subs	r2, #1
 8007d40:	0652      	lsls	r2, r2, #25
 8007d42:	4311      	orrs	r1, r2
 8007d44:	687a      	ldr	r2, [r7, #4]
 8007d46:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8007d48:	0912      	lsrs	r2, r2, #4
 8007d4a:	0452      	lsls	r2, r2, #17
 8007d4c:	430a      	orrs	r2, r1
 8007d4e:	4930      	ldr	r1, [pc, #192]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d50:	4313      	orrs	r3, r2
 8007d52:	60cb      	str	r3, [r1, #12]
 8007d54:	4b2e      	ldr	r3, [pc, #184]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	4a2d      	ldr	r2, [pc, #180]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d5a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007d5e:	6013      	str	r3, [r2, #0]
 8007d60:	4b2b      	ldr	r3, [pc, #172]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d62:	68db      	ldr	r3, [r3, #12]
 8007d64:	4a2a      	ldr	r2, [pc, #168]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d66:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007d6a:	60d3      	str	r3, [r2, #12]
 8007d6c:	f7fd fe86 	bl	8005a7c <HAL_GetTick>
 8007d70:	6138      	str	r0, [r7, #16]
 8007d72:	e008      	b.n	8007d86 <HAL_RCC_OscConfig+0x6f6>
 8007d74:	f7fd fe82 	bl	8005a7c <HAL_GetTick>
 8007d78:	4602      	mov	r2, r0
 8007d7a:	693b      	ldr	r3, [r7, #16]
 8007d7c:	1ad3      	subs	r3, r2, r3
 8007d7e:	2b02      	cmp	r3, #2
 8007d80:	d901      	bls.n	8007d86 <HAL_RCC_OscConfig+0x6f6>
 8007d82:	2303      	movs	r3, #3
 8007d84:	e058      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007d86:	4b22      	ldr	r3, [pc, #136]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007d8e:	2b00      	cmp	r3, #0
 8007d90:	d0f0      	beq.n	8007d74 <HAL_RCC_OscConfig+0x6e4>
 8007d92:	e050      	b.n	8007e36 <HAL_RCC_OscConfig+0x7a6>
 8007d94:	2301      	movs	r3, #1
 8007d96:	e04f      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007d98:	4b1d      	ldr	r3, [pc, #116]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	d148      	bne.n	8007e36 <HAL_RCC_OscConfig+0x7a6>
 8007da4:	4b1a      	ldr	r3, [pc, #104]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007da6:	681b      	ldr	r3, [r3, #0]
 8007da8:	4a19      	ldr	r2, [pc, #100]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007daa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007dae:	6013      	str	r3, [r2, #0]
 8007db0:	4b17      	ldr	r3, [pc, #92]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007db2:	68db      	ldr	r3, [r3, #12]
 8007db4:	4a16      	ldr	r2, [pc, #88]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007db6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007dba:	60d3      	str	r3, [r2, #12]
 8007dbc:	f7fd fe5e 	bl	8005a7c <HAL_GetTick>
 8007dc0:	6138      	str	r0, [r7, #16]
 8007dc2:	e008      	b.n	8007dd6 <HAL_RCC_OscConfig+0x746>
 8007dc4:	f7fd fe5a 	bl	8005a7c <HAL_GetTick>
 8007dc8:	4602      	mov	r2, r0
 8007dca:	693b      	ldr	r3, [r7, #16]
 8007dcc:	1ad3      	subs	r3, r2, r3
 8007dce:	2b02      	cmp	r3, #2
 8007dd0:	d901      	bls.n	8007dd6 <HAL_RCC_OscConfig+0x746>
 8007dd2:	2303      	movs	r3, #3
 8007dd4:	e030      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007dd6:	4b0e      	ldr	r3, [pc, #56]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007dde:	2b00      	cmp	r3, #0
 8007de0:	d0f0      	beq.n	8007dc4 <HAL_RCC_OscConfig+0x734>
 8007de2:	e028      	b.n	8007e36 <HAL_RCC_OscConfig+0x7a6>
 8007de4:	69bb      	ldr	r3, [r7, #24]
 8007de6:	2b0c      	cmp	r3, #12
 8007de8:	d023      	beq.n	8007e32 <HAL_RCC_OscConfig+0x7a2>
 8007dea:	4b09      	ldr	r3, [pc, #36]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	4a08      	ldr	r2, [pc, #32]	@ (8007e10 <HAL_RCC_OscConfig+0x780>)
 8007df0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007df4:	6013      	str	r3, [r2, #0]
 8007df6:	f7fd fe41 	bl	8005a7c <HAL_GetTick>
 8007dfa:	6138      	str	r0, [r7, #16]
 8007dfc:	e00c      	b.n	8007e18 <HAL_RCC_OscConfig+0x788>
 8007dfe:	f7fd fe3d 	bl	8005a7c <HAL_GetTick>
 8007e02:	4602      	mov	r2, r0
 8007e04:	693b      	ldr	r3, [r7, #16]
 8007e06:	1ad3      	subs	r3, r2, r3
 8007e08:	2b02      	cmp	r3, #2
 8007e0a:	d905      	bls.n	8007e18 <HAL_RCC_OscConfig+0x788>
 8007e0c:	2303      	movs	r3, #3
 8007e0e:	e013      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007e10:	40021000 	.word	0x40021000
 8007e14:	f99d808c 	.word	0xf99d808c
 8007e18:	4b09      	ldr	r3, [pc, #36]	@ (8007e40 <HAL_RCC_OscConfig+0x7b0>)
 8007e1a:	681b      	ldr	r3, [r3, #0]
 8007e1c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	d1ec      	bne.n	8007dfe <HAL_RCC_OscConfig+0x76e>
 8007e24:	4b06      	ldr	r3, [pc, #24]	@ (8007e40 <HAL_RCC_OscConfig+0x7b0>)
 8007e26:	68da      	ldr	r2, [r3, #12]
 8007e28:	4905      	ldr	r1, [pc, #20]	@ (8007e40 <HAL_RCC_OscConfig+0x7b0>)
 8007e2a:	4b06      	ldr	r3, [pc, #24]	@ (8007e44 <HAL_RCC_OscConfig+0x7b4>)
 8007e2c:	4013      	ands	r3, r2
 8007e2e:	60cb      	str	r3, [r1, #12]
 8007e30:	e001      	b.n	8007e36 <HAL_RCC_OscConfig+0x7a6>
 8007e32:	2301      	movs	r3, #1
 8007e34:	e000      	b.n	8007e38 <HAL_RCC_OscConfig+0x7a8>
 8007e36:	2300      	movs	r3, #0
 8007e38:	4618      	mov	r0, r3
 8007e3a:	3720      	adds	r7, #32
 8007e3c:	46bd      	mov	sp, r7
 8007e3e:	bd80      	pop	{r7, pc}
 8007e40:	40021000 	.word	0x40021000
 8007e44:	feeefffc 	.word	0xfeeefffc

08007e48 <HAL_RCC_ClockConfig>:
 8007e48:	b580      	push	{r7, lr}
 8007e4a:	b084      	sub	sp, #16
 8007e4c:	af00      	add	r7, sp, #0
 8007e4e:	6078      	str	r0, [r7, #4]
 8007e50:	6039      	str	r1, [r7, #0]
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	2b00      	cmp	r3, #0
 8007e56:	d101      	bne.n	8007e5c <HAL_RCC_ClockConfig+0x14>
 8007e58:	2301      	movs	r3, #1
 8007e5a:	e0e7      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007e5c:	4b75      	ldr	r3, [pc, #468]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	f003 0307 	and.w	r3, r3, #7
 8007e64:	683a      	ldr	r2, [r7, #0]
 8007e66:	429a      	cmp	r2, r3
 8007e68:	d910      	bls.n	8007e8c <HAL_RCC_ClockConfig+0x44>
 8007e6a:	4b72      	ldr	r3, [pc, #456]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	f023 0207 	bic.w	r2, r3, #7
 8007e72:	4970      	ldr	r1, [pc, #448]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007e74:	683b      	ldr	r3, [r7, #0]
 8007e76:	4313      	orrs	r3, r2
 8007e78:	600b      	str	r3, [r1, #0]
 8007e7a:	4b6e      	ldr	r3, [pc, #440]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	f003 0307 	and.w	r3, r3, #7
 8007e82:	683a      	ldr	r2, [r7, #0]
 8007e84:	429a      	cmp	r2, r3
 8007e86:	d001      	beq.n	8007e8c <HAL_RCC_ClockConfig+0x44>
 8007e88:	2301      	movs	r3, #1
 8007e8a:	e0cf      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	f003 0302 	and.w	r3, r3, #2
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d010      	beq.n	8007eba <HAL_RCC_ClockConfig+0x72>
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	689a      	ldr	r2, [r3, #8]
 8007e9c:	4b66      	ldr	r3, [pc, #408]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007e9e:	689b      	ldr	r3, [r3, #8]
 8007ea0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007ea4:	429a      	cmp	r2, r3
 8007ea6:	d908      	bls.n	8007eba <HAL_RCC_ClockConfig+0x72>
 8007ea8:	4b63      	ldr	r3, [pc, #396]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007eaa:	689b      	ldr	r3, [r3, #8]
 8007eac:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	689b      	ldr	r3, [r3, #8]
 8007eb4:	4960      	ldr	r1, [pc, #384]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007eb6:	4313      	orrs	r3, r2
 8007eb8:	608b      	str	r3, [r1, #8]
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	681b      	ldr	r3, [r3, #0]
 8007ebe:	f003 0301 	and.w	r3, r3, #1
 8007ec2:	2b00      	cmp	r3, #0
 8007ec4:	d04c      	beq.n	8007f60 <HAL_RCC_ClockConfig+0x118>
 8007ec6:	687b      	ldr	r3, [r7, #4]
 8007ec8:	685b      	ldr	r3, [r3, #4]
 8007eca:	2b03      	cmp	r3, #3
 8007ecc:	d107      	bne.n	8007ede <HAL_RCC_ClockConfig+0x96>
 8007ece:	4b5a      	ldr	r3, [pc, #360]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007ed6:	2b00      	cmp	r3, #0
 8007ed8:	d121      	bne.n	8007f1e <HAL_RCC_ClockConfig+0xd6>
 8007eda:	2301      	movs	r3, #1
 8007edc:	e0a6      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	685b      	ldr	r3, [r3, #4]
 8007ee2:	2b02      	cmp	r3, #2
 8007ee4:	d107      	bne.n	8007ef6 <HAL_RCC_ClockConfig+0xae>
 8007ee6:	4b54      	ldr	r3, [pc, #336]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007eee:	2b00      	cmp	r3, #0
 8007ef0:	d115      	bne.n	8007f1e <HAL_RCC_ClockConfig+0xd6>
 8007ef2:	2301      	movs	r3, #1
 8007ef4:	e09a      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	685b      	ldr	r3, [r3, #4]
 8007efa:	2b00      	cmp	r3, #0
 8007efc:	d107      	bne.n	8007f0e <HAL_RCC_ClockConfig+0xc6>
 8007efe:	4b4e      	ldr	r3, [pc, #312]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f00:	681b      	ldr	r3, [r3, #0]
 8007f02:	f003 0302 	and.w	r3, r3, #2
 8007f06:	2b00      	cmp	r3, #0
 8007f08:	d109      	bne.n	8007f1e <HAL_RCC_ClockConfig+0xd6>
 8007f0a:	2301      	movs	r3, #1
 8007f0c:	e08e      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007f0e:	4b4a      	ldr	r3, [pc, #296]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f10:	681b      	ldr	r3, [r3, #0]
 8007f12:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007f16:	2b00      	cmp	r3, #0
 8007f18:	d101      	bne.n	8007f1e <HAL_RCC_ClockConfig+0xd6>
 8007f1a:	2301      	movs	r3, #1
 8007f1c:	e086      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007f1e:	4b46      	ldr	r3, [pc, #280]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f20:	689b      	ldr	r3, [r3, #8]
 8007f22:	f023 0203 	bic.w	r2, r3, #3
 8007f26:	687b      	ldr	r3, [r7, #4]
 8007f28:	685b      	ldr	r3, [r3, #4]
 8007f2a:	4943      	ldr	r1, [pc, #268]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f2c:	4313      	orrs	r3, r2
 8007f2e:	608b      	str	r3, [r1, #8]
 8007f30:	f7fd fda4 	bl	8005a7c <HAL_GetTick>
 8007f34:	60f8      	str	r0, [r7, #12]
 8007f36:	e00a      	b.n	8007f4e <HAL_RCC_ClockConfig+0x106>
 8007f38:	f7fd fda0 	bl	8005a7c <HAL_GetTick>
 8007f3c:	4602      	mov	r2, r0
 8007f3e:	68fb      	ldr	r3, [r7, #12]
 8007f40:	1ad3      	subs	r3, r2, r3
 8007f42:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007f46:	4293      	cmp	r3, r2
 8007f48:	d901      	bls.n	8007f4e <HAL_RCC_ClockConfig+0x106>
 8007f4a:	2303      	movs	r3, #3
 8007f4c:	e06e      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007f4e:	4b3a      	ldr	r3, [pc, #232]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f50:	689b      	ldr	r3, [r3, #8]
 8007f52:	f003 020c 	and.w	r2, r3, #12
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	685b      	ldr	r3, [r3, #4]
 8007f5a:	009b      	lsls	r3, r3, #2
 8007f5c:	429a      	cmp	r2, r3
 8007f5e:	d1eb      	bne.n	8007f38 <HAL_RCC_ClockConfig+0xf0>
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	681b      	ldr	r3, [r3, #0]
 8007f64:	f003 0302 	and.w	r3, r3, #2
 8007f68:	2b00      	cmp	r3, #0
 8007f6a:	d010      	beq.n	8007f8e <HAL_RCC_ClockConfig+0x146>
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	689a      	ldr	r2, [r3, #8]
 8007f70:	4b31      	ldr	r3, [pc, #196]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f72:	689b      	ldr	r3, [r3, #8]
 8007f74:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007f78:	429a      	cmp	r2, r3
 8007f7a:	d208      	bcs.n	8007f8e <HAL_RCC_ClockConfig+0x146>
 8007f7c:	4b2e      	ldr	r3, [pc, #184]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f7e:	689b      	ldr	r3, [r3, #8]
 8007f80:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	689b      	ldr	r3, [r3, #8]
 8007f88:	492b      	ldr	r1, [pc, #172]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007f8a:	4313      	orrs	r3, r2
 8007f8c:	608b      	str	r3, [r1, #8]
 8007f8e:	4b29      	ldr	r3, [pc, #164]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	f003 0307 	and.w	r3, r3, #7
 8007f96:	683a      	ldr	r2, [r7, #0]
 8007f98:	429a      	cmp	r2, r3
 8007f9a:	d210      	bcs.n	8007fbe <HAL_RCC_ClockConfig+0x176>
 8007f9c:	4b25      	ldr	r3, [pc, #148]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007f9e:	681b      	ldr	r3, [r3, #0]
 8007fa0:	f023 0207 	bic.w	r2, r3, #7
 8007fa4:	4923      	ldr	r1, [pc, #140]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007fa6:	683b      	ldr	r3, [r7, #0]
 8007fa8:	4313      	orrs	r3, r2
 8007faa:	600b      	str	r3, [r1, #0]
 8007fac:	4b21      	ldr	r3, [pc, #132]	@ (8008034 <HAL_RCC_ClockConfig+0x1ec>)
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	f003 0307 	and.w	r3, r3, #7
 8007fb4:	683a      	ldr	r2, [r7, #0]
 8007fb6:	429a      	cmp	r2, r3
 8007fb8:	d001      	beq.n	8007fbe <HAL_RCC_ClockConfig+0x176>
 8007fba:	2301      	movs	r3, #1
 8007fbc:	e036      	b.n	800802c <HAL_RCC_ClockConfig+0x1e4>
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	681b      	ldr	r3, [r3, #0]
 8007fc2:	f003 0304 	and.w	r3, r3, #4
 8007fc6:	2b00      	cmp	r3, #0
 8007fc8:	d008      	beq.n	8007fdc <HAL_RCC_ClockConfig+0x194>
 8007fca:	4b1b      	ldr	r3, [pc, #108]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007fcc:	689b      	ldr	r3, [r3, #8]
 8007fce:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	68db      	ldr	r3, [r3, #12]
 8007fd6:	4918      	ldr	r1, [pc, #96]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007fd8:	4313      	orrs	r3, r2
 8007fda:	608b      	str	r3, [r1, #8]
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	681b      	ldr	r3, [r3, #0]
 8007fe0:	f003 0308 	and.w	r3, r3, #8
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d009      	beq.n	8007ffc <HAL_RCC_ClockConfig+0x1b4>
 8007fe8:	4b13      	ldr	r3, [pc, #76]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007fea:	689b      	ldr	r3, [r3, #8]
 8007fec:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	691b      	ldr	r3, [r3, #16]
 8007ff4:	00db      	lsls	r3, r3, #3
 8007ff6:	4910      	ldr	r1, [pc, #64]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8007ff8:	4313      	orrs	r3, r2
 8007ffa:	608b      	str	r3, [r1, #8]
 8007ffc:	f000 f824 	bl	8008048 <HAL_RCC_GetSysClockFreq>
 8008000:	4602      	mov	r2, r0
 8008002:	4b0d      	ldr	r3, [pc, #52]	@ (8008038 <HAL_RCC_ClockConfig+0x1f0>)
 8008004:	689b      	ldr	r3, [r3, #8]
 8008006:	091b      	lsrs	r3, r3, #4
 8008008:	f003 030f 	and.w	r3, r3, #15
 800800c:	490b      	ldr	r1, [pc, #44]	@ (800803c <HAL_RCC_ClockConfig+0x1f4>)
 800800e:	5ccb      	ldrb	r3, [r1, r3]
 8008010:	f003 031f 	and.w	r3, r3, #31
 8008014:	fa22 f303 	lsr.w	r3, r2, r3
 8008018:	4a09      	ldr	r2, [pc, #36]	@ (8008040 <HAL_RCC_ClockConfig+0x1f8>)
 800801a:	6013      	str	r3, [r2, #0]
 800801c:	4b09      	ldr	r3, [pc, #36]	@ (8008044 <HAL_RCC_ClockConfig+0x1fc>)
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	4618      	mov	r0, r3
 8008022:	f7fb fa8f 	bl	8003544 <HAL_InitTick>
 8008026:	4603      	mov	r3, r0
 8008028:	72fb      	strb	r3, [r7, #11]
 800802a:	7afb      	ldrb	r3, [r7, #11]
 800802c:	4618      	mov	r0, r3
 800802e:	3710      	adds	r7, #16
 8008030:	46bd      	mov	sp, r7
 8008032:	bd80      	pop	{r7, pc}
 8008034:	40022000 	.word	0x40022000
 8008038:	40021000 	.word	0x40021000
 800803c:	08015644 	.word	0x08015644
 8008040:	20000000 	.word	0x20000000
 8008044:	2000006c 	.word	0x2000006c

08008048 <HAL_RCC_GetSysClockFreq>:
 8008048:	b480      	push	{r7}
 800804a:	b089      	sub	sp, #36	@ 0x24
 800804c:	af00      	add	r7, sp, #0
 800804e:	2300      	movs	r3, #0
 8008050:	61fb      	str	r3, [r7, #28]
 8008052:	2300      	movs	r3, #0
 8008054:	61bb      	str	r3, [r7, #24]
 8008056:	4b3e      	ldr	r3, [pc, #248]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 8008058:	689b      	ldr	r3, [r3, #8]
 800805a:	f003 030c 	and.w	r3, r3, #12
 800805e:	613b      	str	r3, [r7, #16]
 8008060:	4b3b      	ldr	r3, [pc, #236]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 8008062:	68db      	ldr	r3, [r3, #12]
 8008064:	f003 0303 	and.w	r3, r3, #3
 8008068:	60fb      	str	r3, [r7, #12]
 800806a:	693b      	ldr	r3, [r7, #16]
 800806c:	2b00      	cmp	r3, #0
 800806e:	d005      	beq.n	800807c <HAL_RCC_GetSysClockFreq+0x34>
 8008070:	693b      	ldr	r3, [r7, #16]
 8008072:	2b0c      	cmp	r3, #12
 8008074:	d121      	bne.n	80080ba <HAL_RCC_GetSysClockFreq+0x72>
 8008076:	68fb      	ldr	r3, [r7, #12]
 8008078:	2b01      	cmp	r3, #1
 800807a:	d11e      	bne.n	80080ba <HAL_RCC_GetSysClockFreq+0x72>
 800807c:	4b34      	ldr	r3, [pc, #208]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 800807e:	681b      	ldr	r3, [r3, #0]
 8008080:	f003 0308 	and.w	r3, r3, #8
 8008084:	2b00      	cmp	r3, #0
 8008086:	d107      	bne.n	8008098 <HAL_RCC_GetSysClockFreq+0x50>
 8008088:	4b31      	ldr	r3, [pc, #196]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 800808a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800808e:	0a1b      	lsrs	r3, r3, #8
 8008090:	f003 030f 	and.w	r3, r3, #15
 8008094:	61fb      	str	r3, [r7, #28]
 8008096:	e005      	b.n	80080a4 <HAL_RCC_GetSysClockFreq+0x5c>
 8008098:	4b2d      	ldr	r3, [pc, #180]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	091b      	lsrs	r3, r3, #4
 800809e:	f003 030f 	and.w	r3, r3, #15
 80080a2:	61fb      	str	r3, [r7, #28]
 80080a4:	4a2b      	ldr	r2, [pc, #172]	@ (8008154 <HAL_RCC_GetSysClockFreq+0x10c>)
 80080a6:	69fb      	ldr	r3, [r7, #28]
 80080a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80080ac:	61fb      	str	r3, [r7, #28]
 80080ae:	693b      	ldr	r3, [r7, #16]
 80080b0:	2b00      	cmp	r3, #0
 80080b2:	d10d      	bne.n	80080d0 <HAL_RCC_GetSysClockFreq+0x88>
 80080b4:	69fb      	ldr	r3, [r7, #28]
 80080b6:	61bb      	str	r3, [r7, #24]
 80080b8:	e00a      	b.n	80080d0 <HAL_RCC_GetSysClockFreq+0x88>
 80080ba:	693b      	ldr	r3, [r7, #16]
 80080bc:	2b04      	cmp	r3, #4
 80080be:	d102      	bne.n	80080c6 <HAL_RCC_GetSysClockFreq+0x7e>
 80080c0:	4b25      	ldr	r3, [pc, #148]	@ (8008158 <HAL_RCC_GetSysClockFreq+0x110>)
 80080c2:	61bb      	str	r3, [r7, #24]
 80080c4:	e004      	b.n	80080d0 <HAL_RCC_GetSysClockFreq+0x88>
 80080c6:	693b      	ldr	r3, [r7, #16]
 80080c8:	2b08      	cmp	r3, #8
 80080ca:	d101      	bne.n	80080d0 <HAL_RCC_GetSysClockFreq+0x88>
 80080cc:	4b23      	ldr	r3, [pc, #140]	@ (800815c <HAL_RCC_GetSysClockFreq+0x114>)
 80080ce:	61bb      	str	r3, [r7, #24]
 80080d0:	693b      	ldr	r3, [r7, #16]
 80080d2:	2b0c      	cmp	r3, #12
 80080d4:	d134      	bne.n	8008140 <HAL_RCC_GetSysClockFreq+0xf8>
 80080d6:	4b1e      	ldr	r3, [pc, #120]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 80080d8:	68db      	ldr	r3, [r3, #12]
 80080da:	f003 0303 	and.w	r3, r3, #3
 80080de:	60bb      	str	r3, [r7, #8]
 80080e0:	68bb      	ldr	r3, [r7, #8]
 80080e2:	2b02      	cmp	r3, #2
 80080e4:	d003      	beq.n	80080ee <HAL_RCC_GetSysClockFreq+0xa6>
 80080e6:	68bb      	ldr	r3, [r7, #8]
 80080e8:	2b03      	cmp	r3, #3
 80080ea:	d003      	beq.n	80080f4 <HAL_RCC_GetSysClockFreq+0xac>
 80080ec:	e005      	b.n	80080fa <HAL_RCC_GetSysClockFreq+0xb2>
 80080ee:	4b1a      	ldr	r3, [pc, #104]	@ (8008158 <HAL_RCC_GetSysClockFreq+0x110>)
 80080f0:	617b      	str	r3, [r7, #20]
 80080f2:	e005      	b.n	8008100 <HAL_RCC_GetSysClockFreq+0xb8>
 80080f4:	4b19      	ldr	r3, [pc, #100]	@ (800815c <HAL_RCC_GetSysClockFreq+0x114>)
 80080f6:	617b      	str	r3, [r7, #20]
 80080f8:	e002      	b.n	8008100 <HAL_RCC_GetSysClockFreq+0xb8>
 80080fa:	69fb      	ldr	r3, [r7, #28]
 80080fc:	617b      	str	r3, [r7, #20]
 80080fe:	bf00      	nop
 8008100:	4b13      	ldr	r3, [pc, #76]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 8008102:	68db      	ldr	r3, [r3, #12]
 8008104:	091b      	lsrs	r3, r3, #4
 8008106:	f003 0307 	and.w	r3, r3, #7
 800810a:	3301      	adds	r3, #1
 800810c:	607b      	str	r3, [r7, #4]
 800810e:	4b10      	ldr	r3, [pc, #64]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 8008110:	68db      	ldr	r3, [r3, #12]
 8008112:	0a1b      	lsrs	r3, r3, #8
 8008114:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008118:	697a      	ldr	r2, [r7, #20]
 800811a:	fb03 f202 	mul.w	r2, r3, r2
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	fbb2 f3f3 	udiv	r3, r2, r3
 8008124:	617b      	str	r3, [r7, #20]
 8008126:	4b0a      	ldr	r3, [pc, #40]	@ (8008150 <HAL_RCC_GetSysClockFreq+0x108>)
 8008128:	68db      	ldr	r3, [r3, #12]
 800812a:	0e5b      	lsrs	r3, r3, #25
 800812c:	f003 0303 	and.w	r3, r3, #3
 8008130:	3301      	adds	r3, #1
 8008132:	005b      	lsls	r3, r3, #1
 8008134:	603b      	str	r3, [r7, #0]
 8008136:	697a      	ldr	r2, [r7, #20]
 8008138:	683b      	ldr	r3, [r7, #0]
 800813a:	fbb2 f3f3 	udiv	r3, r2, r3
 800813e:	61bb      	str	r3, [r7, #24]
 8008140:	69bb      	ldr	r3, [r7, #24]
 8008142:	4618      	mov	r0, r3
 8008144:	3724      	adds	r7, #36	@ 0x24
 8008146:	46bd      	mov	sp, r7
 8008148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800814c:	4770      	bx	lr
 800814e:	bf00      	nop
 8008150:	40021000 	.word	0x40021000
 8008154:	0801565c 	.word	0x0801565c
 8008158:	00f42400 	.word	0x00f42400
 800815c:	007a1200 	.word	0x007a1200

08008160 <HAL_RCC_GetHCLKFreq>:
 8008160:	b480      	push	{r7}
 8008162:	af00      	add	r7, sp, #0
 8008164:	4b03      	ldr	r3, [pc, #12]	@ (8008174 <HAL_RCC_GetHCLKFreq+0x14>)
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	4618      	mov	r0, r3
 800816a:	46bd      	mov	sp, r7
 800816c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008170:	4770      	bx	lr
 8008172:	bf00      	nop
 8008174:	20000000 	.word	0x20000000

08008178 <HAL_RCC_GetPCLK1Freq>:
 8008178:	b580      	push	{r7, lr}
 800817a:	af00      	add	r7, sp, #0
 800817c:	f7ff fff0 	bl	8008160 <HAL_RCC_GetHCLKFreq>
 8008180:	4602      	mov	r2, r0
 8008182:	4b06      	ldr	r3, [pc, #24]	@ (800819c <HAL_RCC_GetPCLK1Freq+0x24>)
 8008184:	689b      	ldr	r3, [r3, #8]
 8008186:	0a1b      	lsrs	r3, r3, #8
 8008188:	f003 0307 	and.w	r3, r3, #7
 800818c:	4904      	ldr	r1, [pc, #16]	@ (80081a0 <HAL_RCC_GetPCLK1Freq+0x28>)
 800818e:	5ccb      	ldrb	r3, [r1, r3]
 8008190:	f003 031f 	and.w	r3, r3, #31
 8008194:	fa22 f303 	lsr.w	r3, r2, r3
 8008198:	4618      	mov	r0, r3
 800819a:	bd80      	pop	{r7, pc}
 800819c:	40021000 	.word	0x40021000
 80081a0:	08015654 	.word	0x08015654

080081a4 <HAL_RCC_GetPCLK2Freq>:
 80081a4:	b580      	push	{r7, lr}
 80081a6:	af00      	add	r7, sp, #0
 80081a8:	f7ff ffda 	bl	8008160 <HAL_RCC_GetHCLKFreq>
 80081ac:	4602      	mov	r2, r0
 80081ae:	4b06      	ldr	r3, [pc, #24]	@ (80081c8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80081b0:	689b      	ldr	r3, [r3, #8]
 80081b2:	0adb      	lsrs	r3, r3, #11
 80081b4:	f003 0307 	and.w	r3, r3, #7
 80081b8:	4904      	ldr	r1, [pc, #16]	@ (80081cc <HAL_RCC_GetPCLK2Freq+0x28>)
 80081ba:	5ccb      	ldrb	r3, [r1, r3]
 80081bc:	f003 031f 	and.w	r3, r3, #31
 80081c0:	fa22 f303 	lsr.w	r3, r2, r3
 80081c4:	4618      	mov	r0, r3
 80081c6:	bd80      	pop	{r7, pc}
 80081c8:	40021000 	.word	0x40021000
 80081cc:	08015654 	.word	0x08015654

080081d0 <HAL_RCC_GetClockConfig>:
 80081d0:	b480      	push	{r7}
 80081d2:	b083      	sub	sp, #12
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	6078      	str	r0, [r7, #4]
 80081d8:	6039      	str	r1, [r7, #0]
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	220f      	movs	r2, #15
 80081de:	601a      	str	r2, [r3, #0]
 80081e0:	4b12      	ldr	r3, [pc, #72]	@ (800822c <HAL_RCC_GetClockConfig+0x5c>)
 80081e2:	689b      	ldr	r3, [r3, #8]
 80081e4:	f003 0203 	and.w	r2, r3, #3
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	605a      	str	r2, [r3, #4]
 80081ec:	4b0f      	ldr	r3, [pc, #60]	@ (800822c <HAL_RCC_GetClockConfig+0x5c>)
 80081ee:	689b      	ldr	r3, [r3, #8]
 80081f0:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80081f4:	687b      	ldr	r3, [r7, #4]
 80081f6:	609a      	str	r2, [r3, #8]
 80081f8:	4b0c      	ldr	r3, [pc, #48]	@ (800822c <HAL_RCC_GetClockConfig+0x5c>)
 80081fa:	689b      	ldr	r3, [r3, #8]
 80081fc:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	60da      	str	r2, [r3, #12]
 8008204:	4b09      	ldr	r3, [pc, #36]	@ (800822c <HAL_RCC_GetClockConfig+0x5c>)
 8008206:	689b      	ldr	r3, [r3, #8]
 8008208:	08db      	lsrs	r3, r3, #3
 800820a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800820e:	687b      	ldr	r3, [r7, #4]
 8008210:	611a      	str	r2, [r3, #16]
 8008212:	4b07      	ldr	r3, [pc, #28]	@ (8008230 <HAL_RCC_GetClockConfig+0x60>)
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	f003 0207 	and.w	r2, r3, #7
 800821a:	683b      	ldr	r3, [r7, #0]
 800821c:	601a      	str	r2, [r3, #0]
 800821e:	bf00      	nop
 8008220:	370c      	adds	r7, #12
 8008222:	46bd      	mov	sp, r7
 8008224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008228:	4770      	bx	lr
 800822a:	bf00      	nop
 800822c:	40021000 	.word	0x40021000
 8008230:	40022000 	.word	0x40022000

08008234 <RCC_SetFlashLatencyFromMSIRange>:
 8008234:	b580      	push	{r7, lr}
 8008236:	b086      	sub	sp, #24
 8008238:	af00      	add	r7, sp, #0
 800823a:	6078      	str	r0, [r7, #4]
 800823c:	2300      	movs	r3, #0
 800823e:	613b      	str	r3, [r7, #16]
 8008240:	4b2a      	ldr	r3, [pc, #168]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8008242:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008244:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008248:	2b00      	cmp	r3, #0
 800824a:	d003      	beq.n	8008254 <RCC_SetFlashLatencyFromMSIRange+0x20>
 800824c:	f7ff f8f0 	bl	8007430 <HAL_PWREx_GetVoltageRange>
 8008250:	6178      	str	r0, [r7, #20]
 8008252:	e014      	b.n	800827e <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8008254:	4b25      	ldr	r3, [pc, #148]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8008256:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008258:	4a24      	ldr	r2, [pc, #144]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800825a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800825e:	6593      	str	r3, [r2, #88]	@ 0x58
 8008260:	4b22      	ldr	r3, [pc, #136]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8008262:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008264:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008268:	60fb      	str	r3, [r7, #12]
 800826a:	68fb      	ldr	r3, [r7, #12]
 800826c:	f7ff f8e0 	bl	8007430 <HAL_PWREx_GetVoltageRange>
 8008270:	6178      	str	r0, [r7, #20]
 8008272:	4b1e      	ldr	r3, [pc, #120]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8008274:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008276:	4a1d      	ldr	r2, [pc, #116]	@ (80082ec <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8008278:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800827c:	6593      	str	r3, [r2, #88]	@ 0x58
 800827e:	697b      	ldr	r3, [r7, #20]
 8008280:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008284:	d10b      	bne.n	800829e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8008286:	687b      	ldr	r3, [r7, #4]
 8008288:	2b80      	cmp	r3, #128	@ 0x80
 800828a:	d919      	bls.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	2ba0      	cmp	r3, #160	@ 0xa0
 8008290:	d902      	bls.n	8008298 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8008292:	2302      	movs	r3, #2
 8008294:	613b      	str	r3, [r7, #16]
 8008296:	e013      	b.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8008298:	2301      	movs	r3, #1
 800829a:	613b      	str	r3, [r7, #16]
 800829c:	e010      	b.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	2b80      	cmp	r3, #128	@ 0x80
 80082a2:	d902      	bls.n	80082aa <RCC_SetFlashLatencyFromMSIRange+0x76>
 80082a4:	2303      	movs	r3, #3
 80082a6:	613b      	str	r3, [r7, #16]
 80082a8:	e00a      	b.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	2b80      	cmp	r3, #128	@ 0x80
 80082ae:	d102      	bne.n	80082b6 <RCC_SetFlashLatencyFromMSIRange+0x82>
 80082b0:	2302      	movs	r3, #2
 80082b2:	613b      	str	r3, [r7, #16]
 80082b4:	e004      	b.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	2b70      	cmp	r3, #112	@ 0x70
 80082ba:	d101      	bne.n	80082c0 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80082bc:	2301      	movs	r3, #1
 80082be:	613b      	str	r3, [r7, #16]
 80082c0:	4b0b      	ldr	r3, [pc, #44]	@ (80082f0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80082c2:	681b      	ldr	r3, [r3, #0]
 80082c4:	f023 0207 	bic.w	r2, r3, #7
 80082c8:	4909      	ldr	r1, [pc, #36]	@ (80082f0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80082ca:	693b      	ldr	r3, [r7, #16]
 80082cc:	4313      	orrs	r3, r2
 80082ce:	600b      	str	r3, [r1, #0]
 80082d0:	4b07      	ldr	r3, [pc, #28]	@ (80082f0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	f003 0307 	and.w	r3, r3, #7
 80082d8:	693a      	ldr	r2, [r7, #16]
 80082da:	429a      	cmp	r2, r3
 80082dc:	d001      	beq.n	80082e2 <RCC_SetFlashLatencyFromMSIRange+0xae>
 80082de:	2301      	movs	r3, #1
 80082e0:	e000      	b.n	80082e4 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80082e2:	2300      	movs	r3, #0
 80082e4:	4618      	mov	r0, r3
 80082e6:	3718      	adds	r7, #24
 80082e8:	46bd      	mov	sp, r7
 80082ea:	bd80      	pop	{r7, pc}
 80082ec:	40021000 	.word	0x40021000
 80082f0:	40022000 	.word	0x40022000

080082f4 <HAL_RCCEx_PeriphCLKConfig>:
 80082f4:	b580      	push	{r7, lr}
 80082f6:	b086      	sub	sp, #24
 80082f8:	af00      	add	r7, sp, #0
 80082fa:	6078      	str	r0, [r7, #4]
 80082fc:	2300      	movs	r3, #0
 80082fe:	74fb      	strb	r3, [r7, #19]
 8008300:	2300      	movs	r3, #0
 8008302:	74bb      	strb	r3, [r7, #18]
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800830c:	2b00      	cmp	r3, #0
 800830e:	d041      	beq.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008314:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8008318:	d02a      	beq.n	8008370 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800831a:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800831e:	d824      	bhi.n	800836a <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008320:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8008324:	d008      	beq.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8008326:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800832a:	d81e      	bhi.n	800836a <HAL_RCCEx_PeriphCLKConfig+0x76>
 800832c:	2b00      	cmp	r3, #0
 800832e:	d00a      	beq.n	8008346 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8008330:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8008334:	d010      	beq.n	8008358 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008336:	e018      	b.n	800836a <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008338:	4b86      	ldr	r3, [pc, #536]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800833a:	68db      	ldr	r3, [r3, #12]
 800833c:	4a85      	ldr	r2, [pc, #532]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800833e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008342:	60d3      	str	r3, [r2, #12]
 8008344:	e015      	b.n	8008372 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008346:	687b      	ldr	r3, [r7, #4]
 8008348:	3304      	adds	r3, #4
 800834a:	2100      	movs	r1, #0
 800834c:	4618      	mov	r0, r3
 800834e:	f000 facb 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 8008352:	4603      	mov	r3, r0
 8008354:	74fb      	strb	r3, [r7, #19]
 8008356:	e00c      	b.n	8008372 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	3320      	adds	r3, #32
 800835c:	2100      	movs	r1, #0
 800835e:	4618      	mov	r0, r3
 8008360:	f000 fbb6 	bl	8008ad0 <RCCEx_PLLSAI2_Config>
 8008364:	4603      	mov	r3, r0
 8008366:	74fb      	strb	r3, [r7, #19]
 8008368:	e003      	b.n	8008372 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800836a:	2301      	movs	r3, #1
 800836c:	74fb      	strb	r3, [r7, #19]
 800836e:	e000      	b.n	8008372 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008370:	bf00      	nop
 8008372:	7cfb      	ldrb	r3, [r7, #19]
 8008374:	2b00      	cmp	r3, #0
 8008376:	d10b      	bne.n	8008390 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8008378:	4b76      	ldr	r3, [pc, #472]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800837a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800837e:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8008382:	687b      	ldr	r3, [r7, #4]
 8008384:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008386:	4973      	ldr	r1, [pc, #460]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008388:	4313      	orrs	r3, r2
 800838a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800838e:	e001      	b.n	8008394 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8008390:	7cfb      	ldrb	r3, [r7, #19]
 8008392:	74bb      	strb	r3, [r7, #18]
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800839c:	2b00      	cmp	r3, #0
 800839e:	d041      	beq.n	8008424 <HAL_RCCEx_PeriphCLKConfig+0x130>
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80083a4:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80083a8:	d02a      	beq.n	8008400 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80083aa:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80083ae:	d824      	bhi.n	80083fa <HAL_RCCEx_PeriphCLKConfig+0x106>
 80083b0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80083b4:	d008      	beq.n	80083c8 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80083b6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80083ba:	d81e      	bhi.n	80083fa <HAL_RCCEx_PeriphCLKConfig+0x106>
 80083bc:	2b00      	cmp	r3, #0
 80083be:	d00a      	beq.n	80083d6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 80083c0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80083c4:	d010      	beq.n	80083e8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80083c6:	e018      	b.n	80083fa <HAL_RCCEx_PeriphCLKConfig+0x106>
 80083c8:	4b62      	ldr	r3, [pc, #392]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80083ca:	68db      	ldr	r3, [r3, #12]
 80083cc:	4a61      	ldr	r2, [pc, #388]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80083ce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80083d2:	60d3      	str	r3, [r2, #12]
 80083d4:	e015      	b.n	8008402 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	3304      	adds	r3, #4
 80083da:	2100      	movs	r1, #0
 80083dc:	4618      	mov	r0, r3
 80083de:	f000 fa83 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 80083e2:	4603      	mov	r3, r0
 80083e4:	74fb      	strb	r3, [r7, #19]
 80083e6:	e00c      	b.n	8008402 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	3320      	adds	r3, #32
 80083ec:	2100      	movs	r1, #0
 80083ee:	4618      	mov	r0, r3
 80083f0:	f000 fb6e 	bl	8008ad0 <RCCEx_PLLSAI2_Config>
 80083f4:	4603      	mov	r3, r0
 80083f6:	74fb      	strb	r3, [r7, #19]
 80083f8:	e003      	b.n	8008402 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80083fa:	2301      	movs	r3, #1
 80083fc:	74fb      	strb	r3, [r7, #19]
 80083fe:	e000      	b.n	8008402 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8008400:	bf00      	nop
 8008402:	7cfb      	ldrb	r3, [r7, #19]
 8008404:	2b00      	cmp	r3, #0
 8008406:	d10b      	bne.n	8008420 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8008408:	4b52      	ldr	r3, [pc, #328]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800840a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800840e:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008416:	494f      	ldr	r1, [pc, #316]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008418:	4313      	orrs	r3, r2
 800841a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800841e:	e001      	b.n	8008424 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8008420:	7cfb      	ldrb	r3, [r7, #19]
 8008422:	74bb      	strb	r3, [r7, #18]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	681b      	ldr	r3, [r3, #0]
 8008428:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800842c:	2b00      	cmp	r3, #0
 800842e:	f000 80a0 	beq.w	8008572 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8008432:	2300      	movs	r3, #0
 8008434:	747b      	strb	r3, [r7, #17]
 8008436:	4b47      	ldr	r3, [pc, #284]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008438:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800843a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800843e:	2b00      	cmp	r3, #0
 8008440:	d101      	bne.n	8008446 <HAL_RCCEx_PeriphCLKConfig+0x152>
 8008442:	2301      	movs	r3, #1
 8008444:	e000      	b.n	8008448 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8008446:	2300      	movs	r3, #0
 8008448:	2b00      	cmp	r3, #0
 800844a:	d00d      	beq.n	8008468 <HAL_RCCEx_PeriphCLKConfig+0x174>
 800844c:	4b41      	ldr	r3, [pc, #260]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800844e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008450:	4a40      	ldr	r2, [pc, #256]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008452:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008456:	6593      	str	r3, [r2, #88]	@ 0x58
 8008458:	4b3e      	ldr	r3, [pc, #248]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800845a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800845c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008460:	60bb      	str	r3, [r7, #8]
 8008462:	68bb      	ldr	r3, [r7, #8]
 8008464:	2301      	movs	r3, #1
 8008466:	747b      	strb	r3, [r7, #17]
 8008468:	4b3b      	ldr	r3, [pc, #236]	@ (8008558 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	4a3a      	ldr	r2, [pc, #232]	@ (8008558 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800846e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008472:	6013      	str	r3, [r2, #0]
 8008474:	f7fd fb02 	bl	8005a7c <HAL_GetTick>
 8008478:	60f8      	str	r0, [r7, #12]
 800847a:	e009      	b.n	8008490 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800847c:	f7fd fafe 	bl	8005a7c <HAL_GetTick>
 8008480:	4602      	mov	r2, r0
 8008482:	68fb      	ldr	r3, [r7, #12]
 8008484:	1ad3      	subs	r3, r2, r3
 8008486:	2b02      	cmp	r3, #2
 8008488:	d902      	bls.n	8008490 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800848a:	2303      	movs	r3, #3
 800848c:	74fb      	strb	r3, [r7, #19]
 800848e:	e005      	b.n	800849c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8008490:	4b31      	ldr	r3, [pc, #196]	@ (8008558 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8008492:	681b      	ldr	r3, [r3, #0]
 8008494:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008498:	2b00      	cmp	r3, #0
 800849a:	d0ef      	beq.n	800847c <HAL_RCCEx_PeriphCLKConfig+0x188>
 800849c:	7cfb      	ldrb	r3, [r7, #19]
 800849e:	2b00      	cmp	r3, #0
 80084a0:	d15c      	bne.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x268>
 80084a2:	4b2c      	ldr	r3, [pc, #176]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80084a8:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80084ac:	617b      	str	r3, [r7, #20]
 80084ae:	697b      	ldr	r3, [r7, #20]
 80084b0:	2b00      	cmp	r3, #0
 80084b2:	d01f      	beq.n	80084f4 <HAL_RCCEx_PeriphCLKConfig+0x200>
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80084ba:	697a      	ldr	r2, [r7, #20]
 80084bc:	429a      	cmp	r2, r3
 80084be:	d019      	beq.n	80084f4 <HAL_RCCEx_PeriphCLKConfig+0x200>
 80084c0:	4b24      	ldr	r3, [pc, #144]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084c2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80084c6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80084ca:	617b      	str	r3, [r7, #20]
 80084cc:	4b21      	ldr	r3, [pc, #132]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80084d2:	4a20      	ldr	r2, [pc, #128]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084d4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80084d8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80084dc:	4b1d      	ldr	r3, [pc, #116]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084de:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80084e2:	4a1c      	ldr	r2, [pc, #112]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084e4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80084e8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80084ec:	4a19      	ldr	r2, [pc, #100]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80084ee:	697b      	ldr	r3, [r7, #20]
 80084f0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80084f4:	697b      	ldr	r3, [r7, #20]
 80084f6:	f003 0301 	and.w	r3, r3, #1
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d016      	beq.n	800852c <HAL_RCCEx_PeriphCLKConfig+0x238>
 80084fe:	f7fd fabd 	bl	8005a7c <HAL_GetTick>
 8008502:	60f8      	str	r0, [r7, #12]
 8008504:	e00b      	b.n	800851e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8008506:	f7fd fab9 	bl	8005a7c <HAL_GetTick>
 800850a:	4602      	mov	r2, r0
 800850c:	68fb      	ldr	r3, [r7, #12]
 800850e:	1ad3      	subs	r3, r2, r3
 8008510:	f241 3288 	movw	r2, #5000	@ 0x1388
 8008514:	4293      	cmp	r3, r2
 8008516:	d902      	bls.n	800851e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8008518:	2303      	movs	r3, #3
 800851a:	74fb      	strb	r3, [r7, #19]
 800851c:	e006      	b.n	800852c <HAL_RCCEx_PeriphCLKConfig+0x238>
 800851e:	4b0d      	ldr	r3, [pc, #52]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008520:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008524:	f003 0302 	and.w	r3, r3, #2
 8008528:	2b00      	cmp	r3, #0
 800852a:	d0ec      	beq.n	8008506 <HAL_RCCEx_PeriphCLKConfig+0x212>
 800852c:	7cfb      	ldrb	r3, [r7, #19]
 800852e:	2b00      	cmp	r3, #0
 8008530:	d10c      	bne.n	800854c <HAL_RCCEx_PeriphCLKConfig+0x258>
 8008532:	4b08      	ldr	r3, [pc, #32]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008534:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008538:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008542:	4904      	ldr	r1, [pc, #16]	@ (8008554 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8008544:	4313      	orrs	r3, r2
 8008546:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 800854a:	e009      	b.n	8008560 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800854c:	7cfb      	ldrb	r3, [r7, #19]
 800854e:	74bb      	strb	r3, [r7, #18]
 8008550:	e006      	b.n	8008560 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8008552:	bf00      	nop
 8008554:	40021000 	.word	0x40021000
 8008558:	40007000 	.word	0x40007000
 800855c:	7cfb      	ldrb	r3, [r7, #19]
 800855e:	74bb      	strb	r3, [r7, #18]
 8008560:	7c7b      	ldrb	r3, [r7, #17]
 8008562:	2b01      	cmp	r3, #1
 8008564:	d105      	bne.n	8008572 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8008566:	4b9e      	ldr	r3, [pc, #632]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008568:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800856a:	4a9d      	ldr	r2, [pc, #628]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800856c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8008570:	6593      	str	r3, [r2, #88]	@ 0x58
 8008572:	687b      	ldr	r3, [r7, #4]
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	f003 0301 	and.w	r3, r3, #1
 800857a:	2b00      	cmp	r3, #0
 800857c:	d00a      	beq.n	8008594 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 800857e:	4b98      	ldr	r3, [pc, #608]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008580:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008584:	f023 0203 	bic.w	r2, r3, #3
 8008588:	687b      	ldr	r3, [r7, #4]
 800858a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800858c:	4994      	ldr	r1, [pc, #592]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800858e:	4313      	orrs	r3, r2
 8008590:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008594:	687b      	ldr	r3, [r7, #4]
 8008596:	681b      	ldr	r3, [r3, #0]
 8008598:	f003 0302 	and.w	r3, r3, #2
 800859c:	2b00      	cmp	r3, #0
 800859e:	d00a      	beq.n	80085b6 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 80085a0:	4b8f      	ldr	r3, [pc, #572]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80085a6:	f023 020c 	bic.w	r2, r3, #12
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80085ae:	498c      	ldr	r1, [pc, #560]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085b0:	4313      	orrs	r3, r2
 80085b2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	f003 0304 	and.w	r3, r3, #4
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d00a      	beq.n	80085d8 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 80085c2:	4b87      	ldr	r3, [pc, #540]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80085c8:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80085d0:	4983      	ldr	r1, [pc, #524]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085d2:	4313      	orrs	r3, r2
 80085d4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80085d8:	687b      	ldr	r3, [r7, #4]
 80085da:	681b      	ldr	r3, [r3, #0]
 80085dc:	f003 0308 	and.w	r3, r3, #8
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d00a      	beq.n	80085fa <HAL_RCCEx_PeriphCLKConfig+0x306>
 80085e4:	4b7e      	ldr	r3, [pc, #504]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80085ea:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80085f2:	497b      	ldr	r1, [pc, #492]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80085f4:	4313      	orrs	r3, r2
 80085f6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	f003 0310 	and.w	r3, r3, #16
 8008602:	2b00      	cmp	r3, #0
 8008604:	d00a      	beq.n	800861c <HAL_RCCEx_PeriphCLKConfig+0x328>
 8008606:	4b76      	ldr	r3, [pc, #472]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008608:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800860c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008614:	4972      	ldr	r1, [pc, #456]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008616:	4313      	orrs	r3, r2
 8008618:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	681b      	ldr	r3, [r3, #0]
 8008620:	f003 0320 	and.w	r3, r3, #32
 8008624:	2b00      	cmp	r3, #0
 8008626:	d00a      	beq.n	800863e <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8008628:	4b6d      	ldr	r3, [pc, #436]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800862a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800862e:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008636:	496a      	ldr	r1, [pc, #424]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008638:	4313      	orrs	r3, r2
 800863a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800863e:	687b      	ldr	r3, [r7, #4]
 8008640:	681b      	ldr	r3, [r3, #0]
 8008642:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8008646:	2b00      	cmp	r3, #0
 8008648:	d00a      	beq.n	8008660 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 800864a:	4b65      	ldr	r3, [pc, #404]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800864c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008650:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8008658:	4961      	ldr	r1, [pc, #388]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800865a:	4313      	orrs	r3, r2
 800865c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008668:	2b00      	cmp	r3, #0
 800866a:	d00a      	beq.n	8008682 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 800866c:	4b5c      	ldr	r3, [pc, #368]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800866e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008672:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800867a:	4959      	ldr	r1, [pc, #356]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800867c:	4313      	orrs	r3, r2
 800867e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008682:	687b      	ldr	r3, [r7, #4]
 8008684:	681b      	ldr	r3, [r3, #0]
 8008686:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800868a:	2b00      	cmp	r3, #0
 800868c:	d00a      	beq.n	80086a4 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 800868e:	4b54      	ldr	r3, [pc, #336]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008690:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008694:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8008698:	687b      	ldr	r3, [r7, #4]
 800869a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800869c:	4950      	ldr	r1, [pc, #320]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800869e:	4313      	orrs	r3, r2
 80086a0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80086a4:	687b      	ldr	r3, [r7, #4]
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80086ac:	2b00      	cmp	r3, #0
 80086ae:	d00a      	beq.n	80086c6 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 80086b0:	4b4b      	ldr	r3, [pc, #300]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80086b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80086b6:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80086be:	4948      	ldr	r1, [pc, #288]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80086c0:	4313      	orrs	r3, r2
 80086c2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	d00a      	beq.n	80086e8 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 80086d2:	4b43      	ldr	r3, [pc, #268]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80086d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80086d8:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80086e0:	493f      	ldr	r1, [pc, #252]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80086e2:	4313      	orrs	r3, r2
 80086e4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80086e8:	687b      	ldr	r3, [r7, #4]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80086f0:	2b00      	cmp	r3, #0
 80086f2:	d028      	beq.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0x452>
 80086f4:	4b3a      	ldr	r3, [pc, #232]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80086f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80086fa:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008702:	4937      	ldr	r1, [pc, #220]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008704:	4313      	orrs	r3, r2
 8008706:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800870e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8008712:	d106      	bne.n	8008722 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8008714:	4b32      	ldr	r3, [pc, #200]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008716:	68db      	ldr	r3, [r3, #12]
 8008718:	4a31      	ldr	r2, [pc, #196]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800871a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800871e:	60d3      	str	r3, [r2, #12]
 8008720:	e011      	b.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008726:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800872a:	d10c      	bne.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0x452>
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	3304      	adds	r3, #4
 8008730:	2101      	movs	r1, #1
 8008732:	4618      	mov	r0, r3
 8008734:	f000 f8d8 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 8008738:	4603      	mov	r3, r0
 800873a:	74fb      	strb	r3, [r7, #19]
 800873c:	7cfb      	ldrb	r3, [r7, #19]
 800873e:	2b00      	cmp	r3, #0
 8008740:	d001      	beq.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8008742:	7cfb      	ldrb	r3, [r7, #19]
 8008744:	74bb      	strb	r3, [r7, #18]
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800874e:	2b00      	cmp	r3, #0
 8008750:	d028      	beq.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8008752:	4b23      	ldr	r3, [pc, #140]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008754:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008758:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800875c:	687b      	ldr	r3, [r7, #4]
 800875e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008760:	491f      	ldr	r1, [pc, #124]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008762:	4313      	orrs	r3, r2
 8008764:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800876c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8008770:	d106      	bne.n	8008780 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8008772:	4b1b      	ldr	r3, [pc, #108]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008774:	68db      	ldr	r3, [r3, #12]
 8008776:	4a1a      	ldr	r2, [pc, #104]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8008778:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800877c:	60d3      	str	r3, [r2, #12]
 800877e:	e011      	b.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8008780:	687b      	ldr	r3, [r7, #4]
 8008782:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008784:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8008788:	d10c      	bne.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 800878a:	687b      	ldr	r3, [r7, #4]
 800878c:	3304      	adds	r3, #4
 800878e:	2101      	movs	r1, #1
 8008790:	4618      	mov	r0, r3
 8008792:	f000 f8a9 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 8008796:	4603      	mov	r3, r0
 8008798:	74fb      	strb	r3, [r7, #19]
 800879a:	7cfb      	ldrb	r3, [r7, #19]
 800879c:	2b00      	cmp	r3, #0
 800879e:	d001      	beq.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80087a0:	7cfb      	ldrb	r3, [r7, #19]
 80087a2:	74bb      	strb	r3, [r7, #18]
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80087ac:	2b00      	cmp	r3, #0
 80087ae:	d02b      	beq.n	8008808 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80087b0:	4b0b      	ldr	r3, [pc, #44]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80087b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80087b6:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80087be:	4908      	ldr	r1, [pc, #32]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80087c0:	4313      	orrs	r3, r2
 80087c2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80087c6:	687b      	ldr	r3, [r7, #4]
 80087c8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80087ca:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80087ce:	d109      	bne.n	80087e4 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 80087d0:	4b03      	ldr	r3, [pc, #12]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80087d2:	68db      	ldr	r3, [r3, #12]
 80087d4:	4a02      	ldr	r2, [pc, #8]	@ (80087e0 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80087d6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80087da:	60d3      	str	r3, [r2, #12]
 80087dc:	e014      	b.n	8008808 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80087de:	bf00      	nop
 80087e0:	40021000 	.word	0x40021000
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80087e8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80087ec:	d10c      	bne.n	8008808 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	3304      	adds	r3, #4
 80087f2:	2101      	movs	r1, #1
 80087f4:	4618      	mov	r0, r3
 80087f6:	f000 f877 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 80087fa:	4603      	mov	r3, r0
 80087fc:	74fb      	strb	r3, [r7, #19]
 80087fe:	7cfb      	ldrb	r3, [r7, #19]
 8008800:	2b00      	cmp	r3, #0
 8008802:	d001      	beq.n	8008808 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8008804:	7cfb      	ldrb	r3, [r7, #19]
 8008806:	74bb      	strb	r3, [r7, #18]
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8008810:	2b00      	cmp	r3, #0
 8008812:	d02f      	beq.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8008814:	4b2b      	ldr	r3, [pc, #172]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8008816:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800881a:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008822:	4928      	ldr	r1, [pc, #160]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8008824:	4313      	orrs	r3, r2
 8008826:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800882e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008832:	d10d      	bne.n	8008850 <HAL_RCCEx_PeriphCLKConfig+0x55c>
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	3304      	adds	r3, #4
 8008838:	2102      	movs	r1, #2
 800883a:	4618      	mov	r0, r3
 800883c:	f000 f854 	bl	80088e8 <RCCEx_PLLSAI1_Config>
 8008840:	4603      	mov	r3, r0
 8008842:	74fb      	strb	r3, [r7, #19]
 8008844:	7cfb      	ldrb	r3, [r7, #19]
 8008846:	2b00      	cmp	r3, #0
 8008848:	d014      	beq.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x580>
 800884a:	7cfb      	ldrb	r3, [r7, #19]
 800884c:	74bb      	strb	r3, [r7, #18]
 800884e:	e011      	b.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008854:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008858:	d10c      	bne.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x580>
 800885a:	687b      	ldr	r3, [r7, #4]
 800885c:	3320      	adds	r3, #32
 800885e:	2102      	movs	r1, #2
 8008860:	4618      	mov	r0, r3
 8008862:	f000 f935 	bl	8008ad0 <RCCEx_PLLSAI2_Config>
 8008866:	4603      	mov	r3, r0
 8008868:	74fb      	strb	r3, [r7, #19]
 800886a:	7cfb      	ldrb	r3, [r7, #19]
 800886c:	2b00      	cmp	r3, #0
 800886e:	d001      	beq.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8008870:	7cfb      	ldrb	r3, [r7, #19]
 8008872:	74bb      	strb	r3, [r7, #18]
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800887c:	2b00      	cmp	r3, #0
 800887e:	d00a      	beq.n	8008896 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 8008880:	4b10      	ldr	r3, [pc, #64]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8008882:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008886:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800888e:	490d      	ldr	r1, [pc, #52]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8008890:	4313      	orrs	r3, r2
 8008892:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8008896:	687b      	ldr	r3, [r7, #4]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800889e:	2b00      	cmp	r3, #0
 80088a0:	d00b      	beq.n	80088ba <HAL_RCCEx_PeriphCLKConfig+0x5c6>
 80088a2:	4b08      	ldr	r3, [pc, #32]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80088a4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80088a8:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80088ac:	687b      	ldr	r3, [r7, #4]
 80088ae:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088b2:	4904      	ldr	r1, [pc, #16]	@ (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80088b4:	4313      	orrs	r3, r2
 80088b6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80088ba:	7cbb      	ldrb	r3, [r7, #18]
 80088bc:	4618      	mov	r0, r3
 80088be:	3718      	adds	r7, #24
 80088c0:	46bd      	mov	sp, r7
 80088c2:	bd80      	pop	{r7, pc}
 80088c4:	40021000 	.word	0x40021000

080088c8 <HAL_RCCEx_EnableMSIPLLMode>:
 80088c8:	b480      	push	{r7}
 80088ca:	af00      	add	r7, sp, #0
 80088cc:	4b05      	ldr	r3, [pc, #20]	@ (80088e4 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	4a04      	ldr	r2, [pc, #16]	@ (80088e4 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 80088d2:	f043 0304 	orr.w	r3, r3, #4
 80088d6:	6013      	str	r3, [r2, #0]
 80088d8:	bf00      	nop
 80088da:	46bd      	mov	sp, r7
 80088dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088e0:	4770      	bx	lr
 80088e2:	bf00      	nop
 80088e4:	40021000 	.word	0x40021000

080088e8 <RCCEx_PLLSAI1_Config>:
 80088e8:	b580      	push	{r7, lr}
 80088ea:	b084      	sub	sp, #16
 80088ec:	af00      	add	r7, sp, #0
 80088ee:	6078      	str	r0, [r7, #4]
 80088f0:	6039      	str	r1, [r7, #0]
 80088f2:	2300      	movs	r3, #0
 80088f4:	73fb      	strb	r3, [r7, #15]
 80088f6:	4b75      	ldr	r3, [pc, #468]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80088f8:	68db      	ldr	r3, [r3, #12]
 80088fa:	f003 0303 	and.w	r3, r3, #3
 80088fe:	2b00      	cmp	r3, #0
 8008900:	d018      	beq.n	8008934 <RCCEx_PLLSAI1_Config+0x4c>
 8008902:	4b72      	ldr	r3, [pc, #456]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008904:	68db      	ldr	r3, [r3, #12]
 8008906:	f003 0203 	and.w	r2, r3, #3
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	429a      	cmp	r2, r3
 8008910:	d10d      	bne.n	800892e <RCCEx_PLLSAI1_Config+0x46>
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	2b00      	cmp	r3, #0
 8008918:	d009      	beq.n	800892e <RCCEx_PLLSAI1_Config+0x46>
 800891a:	4b6c      	ldr	r3, [pc, #432]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 800891c:	68db      	ldr	r3, [r3, #12]
 800891e:	091b      	lsrs	r3, r3, #4
 8008920:	f003 0307 	and.w	r3, r3, #7
 8008924:	1c5a      	adds	r2, r3, #1
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	685b      	ldr	r3, [r3, #4]
 800892a:	429a      	cmp	r2, r3
 800892c:	d047      	beq.n	80089be <RCCEx_PLLSAI1_Config+0xd6>
 800892e:	2301      	movs	r3, #1
 8008930:	73fb      	strb	r3, [r7, #15]
 8008932:	e044      	b.n	80089be <RCCEx_PLLSAI1_Config+0xd6>
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	2b03      	cmp	r3, #3
 800893a:	d018      	beq.n	800896e <RCCEx_PLLSAI1_Config+0x86>
 800893c:	2b03      	cmp	r3, #3
 800893e:	d825      	bhi.n	800898c <RCCEx_PLLSAI1_Config+0xa4>
 8008940:	2b01      	cmp	r3, #1
 8008942:	d002      	beq.n	800894a <RCCEx_PLLSAI1_Config+0x62>
 8008944:	2b02      	cmp	r3, #2
 8008946:	d009      	beq.n	800895c <RCCEx_PLLSAI1_Config+0x74>
 8008948:	e020      	b.n	800898c <RCCEx_PLLSAI1_Config+0xa4>
 800894a:	4b60      	ldr	r3, [pc, #384]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	f003 0302 	and.w	r3, r3, #2
 8008952:	2b00      	cmp	r3, #0
 8008954:	d11d      	bne.n	8008992 <RCCEx_PLLSAI1_Config+0xaa>
 8008956:	2301      	movs	r3, #1
 8008958:	73fb      	strb	r3, [r7, #15]
 800895a:	e01a      	b.n	8008992 <RCCEx_PLLSAI1_Config+0xaa>
 800895c:	4b5b      	ldr	r3, [pc, #364]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 800895e:	681b      	ldr	r3, [r3, #0]
 8008960:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008964:	2b00      	cmp	r3, #0
 8008966:	d116      	bne.n	8008996 <RCCEx_PLLSAI1_Config+0xae>
 8008968:	2301      	movs	r3, #1
 800896a:	73fb      	strb	r3, [r7, #15]
 800896c:	e013      	b.n	8008996 <RCCEx_PLLSAI1_Config+0xae>
 800896e:	4b57      	ldr	r3, [pc, #348]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8008976:	2b00      	cmp	r3, #0
 8008978:	d10f      	bne.n	800899a <RCCEx_PLLSAI1_Config+0xb2>
 800897a:	4b54      	ldr	r3, [pc, #336]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8008982:	2b00      	cmp	r3, #0
 8008984:	d109      	bne.n	800899a <RCCEx_PLLSAI1_Config+0xb2>
 8008986:	2301      	movs	r3, #1
 8008988:	73fb      	strb	r3, [r7, #15]
 800898a:	e006      	b.n	800899a <RCCEx_PLLSAI1_Config+0xb2>
 800898c:	2301      	movs	r3, #1
 800898e:	73fb      	strb	r3, [r7, #15]
 8008990:	e004      	b.n	800899c <RCCEx_PLLSAI1_Config+0xb4>
 8008992:	bf00      	nop
 8008994:	e002      	b.n	800899c <RCCEx_PLLSAI1_Config+0xb4>
 8008996:	bf00      	nop
 8008998:	e000      	b.n	800899c <RCCEx_PLLSAI1_Config+0xb4>
 800899a:	bf00      	nop
 800899c:	7bfb      	ldrb	r3, [r7, #15]
 800899e:	2b00      	cmp	r3, #0
 80089a0:	d10d      	bne.n	80089be <RCCEx_PLLSAI1_Config+0xd6>
 80089a2:	4b4a      	ldr	r3, [pc, #296]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80089a4:	68db      	ldr	r3, [r3, #12]
 80089a6:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	6819      	ldr	r1, [r3, #0]
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	685b      	ldr	r3, [r3, #4]
 80089b2:	3b01      	subs	r3, #1
 80089b4:	011b      	lsls	r3, r3, #4
 80089b6:	430b      	orrs	r3, r1
 80089b8:	4944      	ldr	r1, [pc, #272]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80089ba:	4313      	orrs	r3, r2
 80089bc:	60cb      	str	r3, [r1, #12]
 80089be:	7bfb      	ldrb	r3, [r7, #15]
 80089c0:	2b00      	cmp	r3, #0
 80089c2:	d17d      	bne.n	8008ac0 <RCCEx_PLLSAI1_Config+0x1d8>
 80089c4:	4b41      	ldr	r3, [pc, #260]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	4a40      	ldr	r2, [pc, #256]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80089ca:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80089ce:	6013      	str	r3, [r2, #0]
 80089d0:	f7fd f854 	bl	8005a7c <HAL_GetTick>
 80089d4:	60b8      	str	r0, [r7, #8]
 80089d6:	e009      	b.n	80089ec <RCCEx_PLLSAI1_Config+0x104>
 80089d8:	f7fd f850 	bl	8005a7c <HAL_GetTick>
 80089dc:	4602      	mov	r2, r0
 80089de:	68bb      	ldr	r3, [r7, #8]
 80089e0:	1ad3      	subs	r3, r2, r3
 80089e2:	2b02      	cmp	r3, #2
 80089e4:	d902      	bls.n	80089ec <RCCEx_PLLSAI1_Config+0x104>
 80089e6:	2303      	movs	r3, #3
 80089e8:	73fb      	strb	r3, [r7, #15]
 80089ea:	e005      	b.n	80089f8 <RCCEx_PLLSAI1_Config+0x110>
 80089ec:	4b37      	ldr	r3, [pc, #220]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 80089ee:	681b      	ldr	r3, [r3, #0]
 80089f0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80089f4:	2b00      	cmp	r3, #0
 80089f6:	d1ef      	bne.n	80089d8 <RCCEx_PLLSAI1_Config+0xf0>
 80089f8:	7bfb      	ldrb	r3, [r7, #15]
 80089fa:	2b00      	cmp	r3, #0
 80089fc:	d160      	bne.n	8008ac0 <RCCEx_PLLSAI1_Config+0x1d8>
 80089fe:	683b      	ldr	r3, [r7, #0]
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d111      	bne.n	8008a28 <RCCEx_PLLSAI1_Config+0x140>
 8008a04:	4b31      	ldr	r3, [pc, #196]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a06:	691b      	ldr	r3, [r3, #16]
 8008a08:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8008a0c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008a10:	687a      	ldr	r2, [r7, #4]
 8008a12:	6892      	ldr	r2, [r2, #8]
 8008a14:	0211      	lsls	r1, r2, #8
 8008a16:	687a      	ldr	r2, [r7, #4]
 8008a18:	68d2      	ldr	r2, [r2, #12]
 8008a1a:	0912      	lsrs	r2, r2, #4
 8008a1c:	0452      	lsls	r2, r2, #17
 8008a1e:	430a      	orrs	r2, r1
 8008a20:	492a      	ldr	r1, [pc, #168]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a22:	4313      	orrs	r3, r2
 8008a24:	610b      	str	r3, [r1, #16]
 8008a26:	e027      	b.n	8008a78 <RCCEx_PLLSAI1_Config+0x190>
 8008a28:	683b      	ldr	r3, [r7, #0]
 8008a2a:	2b01      	cmp	r3, #1
 8008a2c:	d112      	bne.n	8008a54 <RCCEx_PLLSAI1_Config+0x16c>
 8008a2e:	4b27      	ldr	r3, [pc, #156]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a30:	691b      	ldr	r3, [r3, #16]
 8008a32:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8008a36:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8008a3a:	687a      	ldr	r2, [r7, #4]
 8008a3c:	6892      	ldr	r2, [r2, #8]
 8008a3e:	0211      	lsls	r1, r2, #8
 8008a40:	687a      	ldr	r2, [r7, #4]
 8008a42:	6912      	ldr	r2, [r2, #16]
 8008a44:	0852      	lsrs	r2, r2, #1
 8008a46:	3a01      	subs	r2, #1
 8008a48:	0552      	lsls	r2, r2, #21
 8008a4a:	430a      	orrs	r2, r1
 8008a4c:	491f      	ldr	r1, [pc, #124]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a4e:	4313      	orrs	r3, r2
 8008a50:	610b      	str	r3, [r1, #16]
 8008a52:	e011      	b.n	8008a78 <RCCEx_PLLSAI1_Config+0x190>
 8008a54:	4b1d      	ldr	r3, [pc, #116]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a56:	691b      	ldr	r3, [r3, #16]
 8008a58:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8008a5c:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8008a60:	687a      	ldr	r2, [r7, #4]
 8008a62:	6892      	ldr	r2, [r2, #8]
 8008a64:	0211      	lsls	r1, r2, #8
 8008a66:	687a      	ldr	r2, [r7, #4]
 8008a68:	6952      	ldr	r2, [r2, #20]
 8008a6a:	0852      	lsrs	r2, r2, #1
 8008a6c:	3a01      	subs	r2, #1
 8008a6e:	0652      	lsls	r2, r2, #25
 8008a70:	430a      	orrs	r2, r1
 8008a72:	4916      	ldr	r1, [pc, #88]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a74:	4313      	orrs	r3, r2
 8008a76:	610b      	str	r3, [r1, #16]
 8008a78:	4b14      	ldr	r3, [pc, #80]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	4a13      	ldr	r2, [pc, #76]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008a7e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8008a82:	6013      	str	r3, [r2, #0]
 8008a84:	f7fc fffa 	bl	8005a7c <HAL_GetTick>
 8008a88:	60b8      	str	r0, [r7, #8]
 8008a8a:	e009      	b.n	8008aa0 <RCCEx_PLLSAI1_Config+0x1b8>
 8008a8c:	f7fc fff6 	bl	8005a7c <HAL_GetTick>
 8008a90:	4602      	mov	r2, r0
 8008a92:	68bb      	ldr	r3, [r7, #8]
 8008a94:	1ad3      	subs	r3, r2, r3
 8008a96:	2b02      	cmp	r3, #2
 8008a98:	d902      	bls.n	8008aa0 <RCCEx_PLLSAI1_Config+0x1b8>
 8008a9a:	2303      	movs	r3, #3
 8008a9c:	73fb      	strb	r3, [r7, #15]
 8008a9e:	e005      	b.n	8008aac <RCCEx_PLLSAI1_Config+0x1c4>
 8008aa0:	4b0a      	ldr	r3, [pc, #40]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008aa2:	681b      	ldr	r3, [r3, #0]
 8008aa4:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8008aa8:	2b00      	cmp	r3, #0
 8008aaa:	d0ef      	beq.n	8008a8c <RCCEx_PLLSAI1_Config+0x1a4>
 8008aac:	7bfb      	ldrb	r3, [r7, #15]
 8008aae:	2b00      	cmp	r3, #0
 8008ab0:	d106      	bne.n	8008ac0 <RCCEx_PLLSAI1_Config+0x1d8>
 8008ab2:	4b06      	ldr	r3, [pc, #24]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008ab4:	691a      	ldr	r2, [r3, #16]
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	699b      	ldr	r3, [r3, #24]
 8008aba:	4904      	ldr	r1, [pc, #16]	@ (8008acc <RCCEx_PLLSAI1_Config+0x1e4>)
 8008abc:	4313      	orrs	r3, r2
 8008abe:	610b      	str	r3, [r1, #16]
 8008ac0:	7bfb      	ldrb	r3, [r7, #15]
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	3710      	adds	r7, #16
 8008ac6:	46bd      	mov	sp, r7
 8008ac8:	bd80      	pop	{r7, pc}
 8008aca:	bf00      	nop
 8008acc:	40021000 	.word	0x40021000

08008ad0 <RCCEx_PLLSAI2_Config>:
 8008ad0:	b580      	push	{r7, lr}
 8008ad2:	b084      	sub	sp, #16
 8008ad4:	af00      	add	r7, sp, #0
 8008ad6:	6078      	str	r0, [r7, #4]
 8008ad8:	6039      	str	r1, [r7, #0]
 8008ada:	2300      	movs	r3, #0
 8008adc:	73fb      	strb	r3, [r7, #15]
 8008ade:	4b6a      	ldr	r3, [pc, #424]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008ae0:	68db      	ldr	r3, [r3, #12]
 8008ae2:	f003 0303 	and.w	r3, r3, #3
 8008ae6:	2b00      	cmp	r3, #0
 8008ae8:	d018      	beq.n	8008b1c <RCCEx_PLLSAI2_Config+0x4c>
 8008aea:	4b67      	ldr	r3, [pc, #412]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008aec:	68db      	ldr	r3, [r3, #12]
 8008aee:	f003 0203 	and.w	r2, r3, #3
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	681b      	ldr	r3, [r3, #0]
 8008af6:	429a      	cmp	r2, r3
 8008af8:	d10d      	bne.n	8008b16 <RCCEx_PLLSAI2_Config+0x46>
 8008afa:	687b      	ldr	r3, [r7, #4]
 8008afc:	681b      	ldr	r3, [r3, #0]
 8008afe:	2b00      	cmp	r3, #0
 8008b00:	d009      	beq.n	8008b16 <RCCEx_PLLSAI2_Config+0x46>
 8008b02:	4b61      	ldr	r3, [pc, #388]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b04:	68db      	ldr	r3, [r3, #12]
 8008b06:	091b      	lsrs	r3, r3, #4
 8008b08:	f003 0307 	and.w	r3, r3, #7
 8008b0c:	1c5a      	adds	r2, r3, #1
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	685b      	ldr	r3, [r3, #4]
 8008b12:	429a      	cmp	r2, r3
 8008b14:	d047      	beq.n	8008ba6 <RCCEx_PLLSAI2_Config+0xd6>
 8008b16:	2301      	movs	r3, #1
 8008b18:	73fb      	strb	r3, [r7, #15]
 8008b1a:	e044      	b.n	8008ba6 <RCCEx_PLLSAI2_Config+0xd6>
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	2b03      	cmp	r3, #3
 8008b22:	d018      	beq.n	8008b56 <RCCEx_PLLSAI2_Config+0x86>
 8008b24:	2b03      	cmp	r3, #3
 8008b26:	d825      	bhi.n	8008b74 <RCCEx_PLLSAI2_Config+0xa4>
 8008b28:	2b01      	cmp	r3, #1
 8008b2a:	d002      	beq.n	8008b32 <RCCEx_PLLSAI2_Config+0x62>
 8008b2c:	2b02      	cmp	r3, #2
 8008b2e:	d009      	beq.n	8008b44 <RCCEx_PLLSAI2_Config+0x74>
 8008b30:	e020      	b.n	8008b74 <RCCEx_PLLSAI2_Config+0xa4>
 8008b32:	4b55      	ldr	r3, [pc, #340]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b34:	681b      	ldr	r3, [r3, #0]
 8008b36:	f003 0302 	and.w	r3, r3, #2
 8008b3a:	2b00      	cmp	r3, #0
 8008b3c:	d11d      	bne.n	8008b7a <RCCEx_PLLSAI2_Config+0xaa>
 8008b3e:	2301      	movs	r3, #1
 8008b40:	73fb      	strb	r3, [r7, #15]
 8008b42:	e01a      	b.n	8008b7a <RCCEx_PLLSAI2_Config+0xaa>
 8008b44:	4b50      	ldr	r3, [pc, #320]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b46:	681b      	ldr	r3, [r3, #0]
 8008b48:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8008b4c:	2b00      	cmp	r3, #0
 8008b4e:	d116      	bne.n	8008b7e <RCCEx_PLLSAI2_Config+0xae>
 8008b50:	2301      	movs	r3, #1
 8008b52:	73fb      	strb	r3, [r7, #15]
 8008b54:	e013      	b.n	8008b7e <RCCEx_PLLSAI2_Config+0xae>
 8008b56:	4b4c      	ldr	r3, [pc, #304]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8008b5e:	2b00      	cmp	r3, #0
 8008b60:	d10f      	bne.n	8008b82 <RCCEx_PLLSAI2_Config+0xb2>
 8008b62:	4b49      	ldr	r3, [pc, #292]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b64:	681b      	ldr	r3, [r3, #0]
 8008b66:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8008b6a:	2b00      	cmp	r3, #0
 8008b6c:	d109      	bne.n	8008b82 <RCCEx_PLLSAI2_Config+0xb2>
 8008b6e:	2301      	movs	r3, #1
 8008b70:	73fb      	strb	r3, [r7, #15]
 8008b72:	e006      	b.n	8008b82 <RCCEx_PLLSAI2_Config+0xb2>
 8008b74:	2301      	movs	r3, #1
 8008b76:	73fb      	strb	r3, [r7, #15]
 8008b78:	e004      	b.n	8008b84 <RCCEx_PLLSAI2_Config+0xb4>
 8008b7a:	bf00      	nop
 8008b7c:	e002      	b.n	8008b84 <RCCEx_PLLSAI2_Config+0xb4>
 8008b7e:	bf00      	nop
 8008b80:	e000      	b.n	8008b84 <RCCEx_PLLSAI2_Config+0xb4>
 8008b82:	bf00      	nop
 8008b84:	7bfb      	ldrb	r3, [r7, #15]
 8008b86:	2b00      	cmp	r3, #0
 8008b88:	d10d      	bne.n	8008ba6 <RCCEx_PLLSAI2_Config+0xd6>
 8008b8a:	4b3f      	ldr	r3, [pc, #252]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008b8c:	68db      	ldr	r3, [r3, #12]
 8008b8e:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	6819      	ldr	r1, [r3, #0]
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	685b      	ldr	r3, [r3, #4]
 8008b9a:	3b01      	subs	r3, #1
 8008b9c:	011b      	lsls	r3, r3, #4
 8008b9e:	430b      	orrs	r3, r1
 8008ba0:	4939      	ldr	r1, [pc, #228]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008ba2:	4313      	orrs	r3, r2
 8008ba4:	60cb      	str	r3, [r1, #12]
 8008ba6:	7bfb      	ldrb	r3, [r7, #15]
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	d167      	bne.n	8008c7c <RCCEx_PLLSAI2_Config+0x1ac>
 8008bac:	4b36      	ldr	r3, [pc, #216]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	4a35      	ldr	r2, [pc, #212]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008bb2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8008bb6:	6013      	str	r3, [r2, #0]
 8008bb8:	f7fc ff60 	bl	8005a7c <HAL_GetTick>
 8008bbc:	60b8      	str	r0, [r7, #8]
 8008bbe:	e009      	b.n	8008bd4 <RCCEx_PLLSAI2_Config+0x104>
 8008bc0:	f7fc ff5c 	bl	8005a7c <HAL_GetTick>
 8008bc4:	4602      	mov	r2, r0
 8008bc6:	68bb      	ldr	r3, [r7, #8]
 8008bc8:	1ad3      	subs	r3, r2, r3
 8008bca:	2b02      	cmp	r3, #2
 8008bcc:	d902      	bls.n	8008bd4 <RCCEx_PLLSAI2_Config+0x104>
 8008bce:	2303      	movs	r3, #3
 8008bd0:	73fb      	strb	r3, [r7, #15]
 8008bd2:	e005      	b.n	8008be0 <RCCEx_PLLSAI2_Config+0x110>
 8008bd4:	4b2c      	ldr	r3, [pc, #176]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d1ef      	bne.n	8008bc0 <RCCEx_PLLSAI2_Config+0xf0>
 8008be0:	7bfb      	ldrb	r3, [r7, #15]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d14a      	bne.n	8008c7c <RCCEx_PLLSAI2_Config+0x1ac>
 8008be6:	683b      	ldr	r3, [r7, #0]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	d111      	bne.n	8008c10 <RCCEx_PLLSAI2_Config+0x140>
 8008bec:	4b26      	ldr	r3, [pc, #152]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008bee:	695b      	ldr	r3, [r3, #20]
 8008bf0:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8008bf4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008bf8:	687a      	ldr	r2, [r7, #4]
 8008bfa:	6892      	ldr	r2, [r2, #8]
 8008bfc:	0211      	lsls	r1, r2, #8
 8008bfe:	687a      	ldr	r2, [r7, #4]
 8008c00:	68d2      	ldr	r2, [r2, #12]
 8008c02:	0912      	lsrs	r2, r2, #4
 8008c04:	0452      	lsls	r2, r2, #17
 8008c06:	430a      	orrs	r2, r1
 8008c08:	491f      	ldr	r1, [pc, #124]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c0a:	4313      	orrs	r3, r2
 8008c0c:	614b      	str	r3, [r1, #20]
 8008c0e:	e011      	b.n	8008c34 <RCCEx_PLLSAI2_Config+0x164>
 8008c10:	4b1d      	ldr	r3, [pc, #116]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c12:	695b      	ldr	r3, [r3, #20]
 8008c14:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8008c18:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8008c1c:	687a      	ldr	r2, [r7, #4]
 8008c1e:	6892      	ldr	r2, [r2, #8]
 8008c20:	0211      	lsls	r1, r2, #8
 8008c22:	687a      	ldr	r2, [r7, #4]
 8008c24:	6912      	ldr	r2, [r2, #16]
 8008c26:	0852      	lsrs	r2, r2, #1
 8008c28:	3a01      	subs	r2, #1
 8008c2a:	0652      	lsls	r2, r2, #25
 8008c2c:	430a      	orrs	r2, r1
 8008c2e:	4916      	ldr	r1, [pc, #88]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c30:	4313      	orrs	r3, r2
 8008c32:	614b      	str	r3, [r1, #20]
 8008c34:	4b14      	ldr	r3, [pc, #80]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	4a13      	ldr	r2, [pc, #76]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c3a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8008c3e:	6013      	str	r3, [r2, #0]
 8008c40:	f7fc ff1c 	bl	8005a7c <HAL_GetTick>
 8008c44:	60b8      	str	r0, [r7, #8]
 8008c46:	e009      	b.n	8008c5c <RCCEx_PLLSAI2_Config+0x18c>
 8008c48:	f7fc ff18 	bl	8005a7c <HAL_GetTick>
 8008c4c:	4602      	mov	r2, r0
 8008c4e:	68bb      	ldr	r3, [r7, #8]
 8008c50:	1ad3      	subs	r3, r2, r3
 8008c52:	2b02      	cmp	r3, #2
 8008c54:	d902      	bls.n	8008c5c <RCCEx_PLLSAI2_Config+0x18c>
 8008c56:	2303      	movs	r3, #3
 8008c58:	73fb      	strb	r3, [r7, #15]
 8008c5a:	e005      	b.n	8008c68 <RCCEx_PLLSAI2_Config+0x198>
 8008c5c:	4b0a      	ldr	r3, [pc, #40]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008c64:	2b00      	cmp	r3, #0
 8008c66:	d0ef      	beq.n	8008c48 <RCCEx_PLLSAI2_Config+0x178>
 8008c68:	7bfb      	ldrb	r3, [r7, #15]
 8008c6a:	2b00      	cmp	r3, #0
 8008c6c:	d106      	bne.n	8008c7c <RCCEx_PLLSAI2_Config+0x1ac>
 8008c6e:	4b06      	ldr	r3, [pc, #24]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c70:	695a      	ldr	r2, [r3, #20]
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	695b      	ldr	r3, [r3, #20]
 8008c76:	4904      	ldr	r1, [pc, #16]	@ (8008c88 <RCCEx_PLLSAI2_Config+0x1b8>)
 8008c78:	4313      	orrs	r3, r2
 8008c7a:	614b      	str	r3, [r1, #20]
 8008c7c:	7bfb      	ldrb	r3, [r7, #15]
 8008c7e:	4618      	mov	r0, r3
 8008c80:	3710      	adds	r7, #16
 8008c82:	46bd      	mov	sp, r7
 8008c84:	bd80      	pop	{r7, pc}
 8008c86:	bf00      	nop
 8008c88:	40021000 	.word	0x40021000

08008c8c <HAL_RNG_Init>:
 8008c8c:	b580      	push	{r7, lr}
 8008c8e:	b084      	sub	sp, #16
 8008c90:	af00      	add	r7, sp, #0
 8008c92:	6078      	str	r0, [r7, #4]
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	2b00      	cmp	r3, #0
 8008c98:	d101      	bne.n	8008c9e <HAL_RNG_Init+0x12>
 8008c9a:	2301      	movs	r3, #1
 8008c9c:	e049      	b.n	8008d32 <HAL_RNG_Init+0xa6>
 8008c9e:	687b      	ldr	r3, [r7, #4]
 8008ca0:	795b      	ldrb	r3, [r3, #5]
 8008ca2:	b2db      	uxtb	r3, r3
 8008ca4:	2b00      	cmp	r3, #0
 8008ca6:	d105      	bne.n	8008cb4 <HAL_RNG_Init+0x28>
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	2200      	movs	r2, #0
 8008cac:	711a      	strb	r2, [r3, #4]
 8008cae:	6878      	ldr	r0, [r7, #4]
 8008cb0:	f7fa fa56 	bl	8003160 <HAL_RNG_MspInit>
 8008cb4:	687b      	ldr	r3, [r7, #4]
 8008cb6:	2202      	movs	r2, #2
 8008cb8:	715a      	strb	r2, [r3, #5]
 8008cba:	687b      	ldr	r3, [r7, #4]
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	681a      	ldr	r2, [r3, #0]
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	f042 0204 	orr.w	r2, r2, #4
 8008cc8:	601a      	str	r2, [r3, #0]
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	681b      	ldr	r3, [r3, #0]
 8008cce:	685b      	ldr	r3, [r3, #4]
 8008cd0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008cd4:	2b40      	cmp	r3, #64	@ 0x40
 8008cd6:	d104      	bne.n	8008ce2 <HAL_RNG_Init+0x56>
 8008cd8:	687b      	ldr	r3, [r7, #4]
 8008cda:	2204      	movs	r2, #4
 8008cdc:	715a      	strb	r2, [r3, #5]
 8008cde:	2301      	movs	r3, #1
 8008ce0:	e027      	b.n	8008d32 <HAL_RNG_Init+0xa6>
 8008ce2:	f7fc fecb 	bl	8005a7c <HAL_GetTick>
 8008ce6:	60f8      	str	r0, [r7, #12]
 8008ce8:	e015      	b.n	8008d16 <HAL_RNG_Init+0x8a>
 8008cea:	f7fc fec7 	bl	8005a7c <HAL_GetTick>
 8008cee:	4602      	mov	r2, r0
 8008cf0:	68fb      	ldr	r3, [r7, #12]
 8008cf2:	1ad3      	subs	r3, r2, r3
 8008cf4:	2b02      	cmp	r3, #2
 8008cf6:	d90e      	bls.n	8008d16 <HAL_RNG_Init+0x8a>
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	681b      	ldr	r3, [r3, #0]
 8008cfc:	685b      	ldr	r3, [r3, #4]
 8008cfe:	f003 0301 	and.w	r3, r3, #1
 8008d02:	2b01      	cmp	r3, #1
 8008d04:	d007      	beq.n	8008d16 <HAL_RNG_Init+0x8a>
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	2204      	movs	r2, #4
 8008d0a:	715a      	strb	r2, [r3, #5]
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	2202      	movs	r2, #2
 8008d10:	609a      	str	r2, [r3, #8]
 8008d12:	2301      	movs	r3, #1
 8008d14:	e00d      	b.n	8008d32 <HAL_RNG_Init+0xa6>
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	681b      	ldr	r3, [r3, #0]
 8008d1a:	685b      	ldr	r3, [r3, #4]
 8008d1c:	f003 0301 	and.w	r3, r3, #1
 8008d20:	2b01      	cmp	r3, #1
 8008d22:	d1e2      	bne.n	8008cea <HAL_RNG_Init+0x5e>
 8008d24:	687b      	ldr	r3, [r7, #4]
 8008d26:	2201      	movs	r2, #1
 8008d28:	715a      	strb	r2, [r3, #5]
 8008d2a:	687b      	ldr	r3, [r7, #4]
 8008d2c:	2200      	movs	r2, #0
 8008d2e:	609a      	str	r2, [r3, #8]
 8008d30:	2300      	movs	r3, #0
 8008d32:	4618      	mov	r0, r3
 8008d34:	3710      	adds	r7, #16
 8008d36:	46bd      	mov	sp, r7
 8008d38:	bd80      	pop	{r7, pc}

08008d3a <HAL_RTC_Init>:
 8008d3a:	b580      	push	{r7, lr}
 8008d3c:	b084      	sub	sp, #16
 8008d3e:	af00      	add	r7, sp, #0
 8008d40:	6078      	str	r0, [r7, #4]
 8008d42:	2301      	movs	r3, #1
 8008d44:	73fb      	strb	r3, [r7, #15]
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	2b00      	cmp	r3, #0
 8008d4a:	d079      	beq.n	8008e40 <HAL_RTC_Init+0x106>
 8008d4c:	687b      	ldr	r3, [r7, #4]
 8008d4e:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8008d52:	b2db      	uxtb	r3, r3
 8008d54:	2b00      	cmp	r3, #0
 8008d56:	d106      	bne.n	8008d66 <HAL_RTC_Init+0x2c>
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	2200      	movs	r2, #0
 8008d5c:	f883 2020 	strb.w	r2, [r3, #32]
 8008d60:	6878      	ldr	r0, [r7, #4]
 8008d62:	f7fa fa1d 	bl	80031a0 <HAL_RTC_MspInit>
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	2202      	movs	r2, #2
 8008d6a:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8008d6e:	687b      	ldr	r3, [r7, #4]
 8008d70:	681b      	ldr	r3, [r3, #0]
 8008d72:	68db      	ldr	r3, [r3, #12]
 8008d74:	f003 0310 	and.w	r3, r3, #16
 8008d78:	2b10      	cmp	r3, #16
 8008d7a:	d058      	beq.n	8008e2e <HAL_RTC_Init+0xf4>
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	681b      	ldr	r3, [r3, #0]
 8008d80:	22ca      	movs	r2, #202	@ 0xca
 8008d82:	625a      	str	r2, [r3, #36]	@ 0x24
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	681b      	ldr	r3, [r3, #0]
 8008d88:	2253      	movs	r2, #83	@ 0x53
 8008d8a:	625a      	str	r2, [r3, #36]	@ 0x24
 8008d8c:	6878      	ldr	r0, [r7, #4]
 8008d8e:	f000 fa4d 	bl	800922c <RTC_EnterInitMode>
 8008d92:	4603      	mov	r3, r0
 8008d94:	73fb      	strb	r3, [r7, #15]
 8008d96:	7bfb      	ldrb	r3, [r7, #15]
 8008d98:	2b00      	cmp	r3, #0
 8008d9a:	d127      	bne.n	8008dec <HAL_RTC_Init+0xb2>
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	689b      	ldr	r3, [r3, #8]
 8008da2:	687a      	ldr	r2, [r7, #4]
 8008da4:	6812      	ldr	r2, [r2, #0]
 8008da6:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8008daa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008dae:	6093      	str	r3, [r2, #8]
 8008db0:	687b      	ldr	r3, [r7, #4]
 8008db2:	681b      	ldr	r3, [r3, #0]
 8008db4:	6899      	ldr	r1, [r3, #8]
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	685a      	ldr	r2, [r3, #4]
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	691b      	ldr	r3, [r3, #16]
 8008dbe:	431a      	orrs	r2, r3
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	699b      	ldr	r3, [r3, #24]
 8008dc4:	431a      	orrs	r2, r3
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	681b      	ldr	r3, [r3, #0]
 8008dca:	430a      	orrs	r2, r1
 8008dcc:	609a      	str	r2, [r3, #8]
 8008dce:	687b      	ldr	r3, [r7, #4]
 8008dd0:	681b      	ldr	r3, [r3, #0]
 8008dd2:	687a      	ldr	r2, [r7, #4]
 8008dd4:	68d2      	ldr	r2, [r2, #12]
 8008dd6:	611a      	str	r2, [r3, #16]
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	681b      	ldr	r3, [r3, #0]
 8008ddc:	6919      	ldr	r1, [r3, #16]
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	689b      	ldr	r3, [r3, #8]
 8008de2:	041a      	lsls	r2, r3, #16
 8008de4:	687b      	ldr	r3, [r7, #4]
 8008de6:	681b      	ldr	r3, [r3, #0]
 8008de8:	430a      	orrs	r2, r1
 8008dea:	611a      	str	r2, [r3, #16]
 8008dec:	6878      	ldr	r0, [r7, #4]
 8008dee:	f000 fa51 	bl	8009294 <RTC_ExitInitMode>
 8008df2:	4603      	mov	r3, r0
 8008df4:	73fb      	strb	r3, [r7, #15]
 8008df6:	7bfb      	ldrb	r3, [r7, #15]
 8008df8:	2b00      	cmp	r3, #0
 8008dfa:	d113      	bne.n	8008e24 <HAL_RTC_Init+0xea>
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	681b      	ldr	r3, [r3, #0]
 8008e06:	f022 0203 	bic.w	r2, r2, #3
 8008e0a:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	681b      	ldr	r3, [r3, #0]
 8008e10:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	69da      	ldr	r2, [r3, #28]
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	695b      	ldr	r3, [r3, #20]
 8008e1a:	431a      	orrs	r2, r3
 8008e1c:	687b      	ldr	r3, [r7, #4]
 8008e1e:	681b      	ldr	r3, [r3, #0]
 8008e20:	430a      	orrs	r2, r1
 8008e22:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	681b      	ldr	r3, [r3, #0]
 8008e28:	22ff      	movs	r2, #255	@ 0xff
 8008e2a:	625a      	str	r2, [r3, #36]	@ 0x24
 8008e2c:	e001      	b.n	8008e32 <HAL_RTC_Init+0xf8>
 8008e2e:	2300      	movs	r3, #0
 8008e30:	73fb      	strb	r3, [r7, #15]
 8008e32:	7bfb      	ldrb	r3, [r7, #15]
 8008e34:	2b00      	cmp	r3, #0
 8008e36:	d103      	bne.n	8008e40 <HAL_RTC_Init+0x106>
 8008e38:	687b      	ldr	r3, [r7, #4]
 8008e3a:	2201      	movs	r2, #1
 8008e3c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8008e40:	7bfb      	ldrb	r3, [r7, #15]
 8008e42:	4618      	mov	r0, r3
 8008e44:	3710      	adds	r7, #16
 8008e46:	46bd      	mov	sp, r7
 8008e48:	bd80      	pop	{r7, pc}

08008e4a <HAL_RTC_SetTime>:
 8008e4a:	b590      	push	{r4, r7, lr}
 8008e4c:	b087      	sub	sp, #28
 8008e4e:	af00      	add	r7, sp, #0
 8008e50:	60f8      	str	r0, [r7, #12]
 8008e52:	60b9      	str	r1, [r7, #8]
 8008e54:	607a      	str	r2, [r7, #4]
 8008e56:	68fb      	ldr	r3, [r7, #12]
 8008e58:	f893 3020 	ldrb.w	r3, [r3, #32]
 8008e5c:	2b01      	cmp	r3, #1
 8008e5e:	d101      	bne.n	8008e64 <HAL_RTC_SetTime+0x1a>
 8008e60:	2302      	movs	r3, #2
 8008e62:	e08b      	b.n	8008f7c <HAL_RTC_SetTime+0x132>
 8008e64:	68fb      	ldr	r3, [r7, #12]
 8008e66:	2201      	movs	r2, #1
 8008e68:	f883 2020 	strb.w	r2, [r3, #32]
 8008e6c:	68fb      	ldr	r3, [r7, #12]
 8008e6e:	2202      	movs	r2, #2
 8008e70:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8008e74:	68fb      	ldr	r3, [r7, #12]
 8008e76:	681b      	ldr	r3, [r3, #0]
 8008e78:	22ca      	movs	r2, #202	@ 0xca
 8008e7a:	625a      	str	r2, [r3, #36]	@ 0x24
 8008e7c:	68fb      	ldr	r3, [r7, #12]
 8008e7e:	681b      	ldr	r3, [r3, #0]
 8008e80:	2253      	movs	r2, #83	@ 0x53
 8008e82:	625a      	str	r2, [r3, #36]	@ 0x24
 8008e84:	68f8      	ldr	r0, [r7, #12]
 8008e86:	f000 f9d1 	bl	800922c <RTC_EnterInitMode>
 8008e8a:	4603      	mov	r3, r0
 8008e8c:	74fb      	strb	r3, [r7, #19]
 8008e8e:	7cfb      	ldrb	r3, [r7, #19]
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d163      	bne.n	8008f5c <HAL_RTC_SetTime+0x112>
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	d126      	bne.n	8008ee8 <HAL_RTC_SetTime+0x9e>
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	689b      	ldr	r3, [r3, #8]
 8008ea0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008ea4:	2b00      	cmp	r3, #0
 8008ea6:	d102      	bne.n	8008eae <HAL_RTC_SetTime+0x64>
 8008ea8:	68bb      	ldr	r3, [r7, #8]
 8008eaa:	2200      	movs	r2, #0
 8008eac:	70da      	strb	r2, [r3, #3]
 8008eae:	68bb      	ldr	r3, [r7, #8]
 8008eb0:	781b      	ldrb	r3, [r3, #0]
 8008eb2:	4618      	mov	r0, r3
 8008eb4:	f000 fa2c 	bl	8009310 <RTC_ByteToBcd2>
 8008eb8:	4603      	mov	r3, r0
 8008eba:	041c      	lsls	r4, r3, #16
 8008ebc:	68bb      	ldr	r3, [r7, #8]
 8008ebe:	785b      	ldrb	r3, [r3, #1]
 8008ec0:	4618      	mov	r0, r3
 8008ec2:	f000 fa25 	bl	8009310 <RTC_ByteToBcd2>
 8008ec6:	4603      	mov	r3, r0
 8008ec8:	021b      	lsls	r3, r3, #8
 8008eca:	431c      	orrs	r4, r3
 8008ecc:	68bb      	ldr	r3, [r7, #8]
 8008ece:	789b      	ldrb	r3, [r3, #2]
 8008ed0:	4618      	mov	r0, r3
 8008ed2:	f000 fa1d 	bl	8009310 <RTC_ByteToBcd2>
 8008ed6:	4603      	mov	r3, r0
 8008ed8:	ea44 0203 	orr.w	r2, r4, r3
 8008edc:	68bb      	ldr	r3, [r7, #8]
 8008ede:	78db      	ldrb	r3, [r3, #3]
 8008ee0:	059b      	lsls	r3, r3, #22
 8008ee2:	4313      	orrs	r3, r2
 8008ee4:	617b      	str	r3, [r7, #20]
 8008ee6:	e018      	b.n	8008f1a <HAL_RTC_SetTime+0xd0>
 8008ee8:	68fb      	ldr	r3, [r7, #12]
 8008eea:	681b      	ldr	r3, [r3, #0]
 8008eec:	689b      	ldr	r3, [r3, #8]
 8008eee:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008ef2:	2b00      	cmp	r3, #0
 8008ef4:	d102      	bne.n	8008efc <HAL_RTC_SetTime+0xb2>
 8008ef6:	68bb      	ldr	r3, [r7, #8]
 8008ef8:	2200      	movs	r2, #0
 8008efa:	70da      	strb	r2, [r3, #3]
 8008efc:	68bb      	ldr	r3, [r7, #8]
 8008efe:	781b      	ldrb	r3, [r3, #0]
 8008f00:	041a      	lsls	r2, r3, #16
 8008f02:	68bb      	ldr	r3, [r7, #8]
 8008f04:	785b      	ldrb	r3, [r3, #1]
 8008f06:	021b      	lsls	r3, r3, #8
 8008f08:	4313      	orrs	r3, r2
 8008f0a:	68ba      	ldr	r2, [r7, #8]
 8008f0c:	7892      	ldrb	r2, [r2, #2]
 8008f0e:	431a      	orrs	r2, r3
 8008f10:	68bb      	ldr	r3, [r7, #8]
 8008f12:	78db      	ldrb	r3, [r3, #3]
 8008f14:	059b      	lsls	r3, r3, #22
 8008f16:	4313      	orrs	r3, r2
 8008f18:	617b      	str	r3, [r7, #20]
 8008f1a:	68fb      	ldr	r3, [r7, #12]
 8008f1c:	681a      	ldr	r2, [r3, #0]
 8008f1e:	697b      	ldr	r3, [r7, #20]
 8008f20:	f003 337f 	and.w	r3, r3, #2139062143	@ 0x7f7f7f7f
 8008f24:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8008f28:	6013      	str	r3, [r2, #0]
 8008f2a:	68fb      	ldr	r3, [r7, #12]
 8008f2c:	681b      	ldr	r3, [r3, #0]
 8008f2e:	689a      	ldr	r2, [r3, #8]
 8008f30:	68fb      	ldr	r3, [r7, #12]
 8008f32:	681b      	ldr	r3, [r3, #0]
 8008f34:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8008f38:	609a      	str	r2, [r3, #8]
 8008f3a:	68fb      	ldr	r3, [r7, #12]
 8008f3c:	681b      	ldr	r3, [r3, #0]
 8008f3e:	6899      	ldr	r1, [r3, #8]
 8008f40:	68bb      	ldr	r3, [r7, #8]
 8008f42:	68da      	ldr	r2, [r3, #12]
 8008f44:	68bb      	ldr	r3, [r7, #8]
 8008f46:	691b      	ldr	r3, [r3, #16]
 8008f48:	431a      	orrs	r2, r3
 8008f4a:	68fb      	ldr	r3, [r7, #12]
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	430a      	orrs	r2, r1
 8008f50:	609a      	str	r2, [r3, #8]
 8008f52:	68f8      	ldr	r0, [r7, #12]
 8008f54:	f000 f99e 	bl	8009294 <RTC_ExitInitMode>
 8008f58:	4603      	mov	r3, r0
 8008f5a:	74fb      	strb	r3, [r7, #19]
 8008f5c:	68fb      	ldr	r3, [r7, #12]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	22ff      	movs	r2, #255	@ 0xff
 8008f62:	625a      	str	r2, [r3, #36]	@ 0x24
 8008f64:	7cfb      	ldrb	r3, [r7, #19]
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	d103      	bne.n	8008f72 <HAL_RTC_SetTime+0x128>
 8008f6a:	68fb      	ldr	r3, [r7, #12]
 8008f6c:	2201      	movs	r2, #1
 8008f6e:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8008f72:	68fb      	ldr	r3, [r7, #12]
 8008f74:	2200      	movs	r2, #0
 8008f76:	f883 2020 	strb.w	r2, [r3, #32]
 8008f7a:	7cfb      	ldrb	r3, [r7, #19]
 8008f7c:	4618      	mov	r0, r3
 8008f7e:	371c      	adds	r7, #28
 8008f80:	46bd      	mov	sp, r7
 8008f82:	bd90      	pop	{r4, r7, pc}

08008f84 <HAL_RTC_GetTime>:
 8008f84:	b580      	push	{r7, lr}
 8008f86:	b086      	sub	sp, #24
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	60f8      	str	r0, [r7, #12]
 8008f8c:	60b9      	str	r1, [r7, #8]
 8008f8e:	607a      	str	r2, [r7, #4]
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8008f96:	68bb      	ldr	r3, [r7, #8]
 8008f98:	605a      	str	r2, [r3, #4]
 8008f9a:	68fb      	ldr	r3, [r7, #12]
 8008f9c:	681b      	ldr	r3, [r3, #0]
 8008f9e:	691b      	ldr	r3, [r3, #16]
 8008fa0:	f3c3 020e 	ubfx	r2, r3, #0, #15
 8008fa4:	68bb      	ldr	r3, [r7, #8]
 8008fa6:	609a      	str	r2, [r3, #8]
 8008fa8:	68fb      	ldr	r3, [r7, #12]
 8008faa:	681b      	ldr	r3, [r3, #0]
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	f003 337f 	and.w	r3, r3, #2139062143	@ 0x7f7f7f7f
 8008fb2:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8008fb6:	617b      	str	r3, [r7, #20]
 8008fb8:	697b      	ldr	r3, [r7, #20]
 8008fba:	0c1b      	lsrs	r3, r3, #16
 8008fbc:	b2db      	uxtb	r3, r3
 8008fbe:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8008fc2:	b2da      	uxtb	r2, r3
 8008fc4:	68bb      	ldr	r3, [r7, #8]
 8008fc6:	701a      	strb	r2, [r3, #0]
 8008fc8:	697b      	ldr	r3, [r7, #20]
 8008fca:	0a1b      	lsrs	r3, r3, #8
 8008fcc:	b2db      	uxtb	r3, r3
 8008fce:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008fd2:	b2da      	uxtb	r2, r3
 8008fd4:	68bb      	ldr	r3, [r7, #8]
 8008fd6:	705a      	strb	r2, [r3, #1]
 8008fd8:	697b      	ldr	r3, [r7, #20]
 8008fda:	b2db      	uxtb	r3, r3
 8008fdc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008fe0:	b2da      	uxtb	r2, r3
 8008fe2:	68bb      	ldr	r3, [r7, #8]
 8008fe4:	709a      	strb	r2, [r3, #2]
 8008fe6:	697b      	ldr	r3, [r7, #20]
 8008fe8:	0d9b      	lsrs	r3, r3, #22
 8008fea:	b2db      	uxtb	r3, r3
 8008fec:	f003 0301 	and.w	r3, r3, #1
 8008ff0:	b2da      	uxtb	r2, r3
 8008ff2:	68bb      	ldr	r3, [r7, #8]
 8008ff4:	70da      	strb	r2, [r3, #3]
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d11a      	bne.n	8009032 <HAL_RTC_GetTime+0xae>
 8008ffc:	68bb      	ldr	r3, [r7, #8]
 8008ffe:	781b      	ldrb	r3, [r3, #0]
 8009000:	4618      	mov	r0, r3
 8009002:	f000 f9a5 	bl	8009350 <RTC_Bcd2ToByte>
 8009006:	4603      	mov	r3, r0
 8009008:	461a      	mov	r2, r3
 800900a:	68bb      	ldr	r3, [r7, #8]
 800900c:	701a      	strb	r2, [r3, #0]
 800900e:	68bb      	ldr	r3, [r7, #8]
 8009010:	785b      	ldrb	r3, [r3, #1]
 8009012:	4618      	mov	r0, r3
 8009014:	f000 f99c 	bl	8009350 <RTC_Bcd2ToByte>
 8009018:	4603      	mov	r3, r0
 800901a:	461a      	mov	r2, r3
 800901c:	68bb      	ldr	r3, [r7, #8]
 800901e:	705a      	strb	r2, [r3, #1]
 8009020:	68bb      	ldr	r3, [r7, #8]
 8009022:	789b      	ldrb	r3, [r3, #2]
 8009024:	4618      	mov	r0, r3
 8009026:	f000 f993 	bl	8009350 <RTC_Bcd2ToByte>
 800902a:	4603      	mov	r3, r0
 800902c:	461a      	mov	r2, r3
 800902e:	68bb      	ldr	r3, [r7, #8]
 8009030:	709a      	strb	r2, [r3, #2]
 8009032:	2300      	movs	r3, #0
 8009034:	4618      	mov	r0, r3
 8009036:	3718      	adds	r7, #24
 8009038:	46bd      	mov	sp, r7
 800903a:	bd80      	pop	{r7, pc}

0800903c <HAL_RTC_SetDate>:
 800903c:	b590      	push	{r4, r7, lr}
 800903e:	b087      	sub	sp, #28
 8009040:	af00      	add	r7, sp, #0
 8009042:	60f8      	str	r0, [r7, #12]
 8009044:	60b9      	str	r1, [r7, #8]
 8009046:	607a      	str	r2, [r7, #4]
 8009048:	68fb      	ldr	r3, [r7, #12]
 800904a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800904e:	2b01      	cmp	r3, #1
 8009050:	d101      	bne.n	8009056 <HAL_RTC_SetDate+0x1a>
 8009052:	2302      	movs	r3, #2
 8009054:	e075      	b.n	8009142 <HAL_RTC_SetDate+0x106>
 8009056:	68fb      	ldr	r3, [r7, #12]
 8009058:	2201      	movs	r2, #1
 800905a:	f883 2020 	strb.w	r2, [r3, #32]
 800905e:	68fb      	ldr	r3, [r7, #12]
 8009060:	2202      	movs	r2, #2
 8009062:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	2b00      	cmp	r3, #0
 800906a:	d10e      	bne.n	800908a <HAL_RTC_SetDate+0x4e>
 800906c:	68bb      	ldr	r3, [r7, #8]
 800906e:	785b      	ldrb	r3, [r3, #1]
 8009070:	f003 0310 	and.w	r3, r3, #16
 8009074:	2b00      	cmp	r3, #0
 8009076:	d008      	beq.n	800908a <HAL_RTC_SetDate+0x4e>
 8009078:	68bb      	ldr	r3, [r7, #8]
 800907a:	785b      	ldrb	r3, [r3, #1]
 800907c:	f023 0310 	bic.w	r3, r3, #16
 8009080:	b2db      	uxtb	r3, r3
 8009082:	330a      	adds	r3, #10
 8009084:	b2da      	uxtb	r2, r3
 8009086:	68bb      	ldr	r3, [r7, #8]
 8009088:	705a      	strb	r2, [r3, #1]
 800908a:	687b      	ldr	r3, [r7, #4]
 800908c:	2b00      	cmp	r3, #0
 800908e:	d11c      	bne.n	80090ca <HAL_RTC_SetDate+0x8e>
 8009090:	68bb      	ldr	r3, [r7, #8]
 8009092:	78db      	ldrb	r3, [r3, #3]
 8009094:	4618      	mov	r0, r3
 8009096:	f000 f93b 	bl	8009310 <RTC_ByteToBcd2>
 800909a:	4603      	mov	r3, r0
 800909c:	041c      	lsls	r4, r3, #16
 800909e:	68bb      	ldr	r3, [r7, #8]
 80090a0:	785b      	ldrb	r3, [r3, #1]
 80090a2:	4618      	mov	r0, r3
 80090a4:	f000 f934 	bl	8009310 <RTC_ByteToBcd2>
 80090a8:	4603      	mov	r3, r0
 80090aa:	021b      	lsls	r3, r3, #8
 80090ac:	431c      	orrs	r4, r3
 80090ae:	68bb      	ldr	r3, [r7, #8]
 80090b0:	789b      	ldrb	r3, [r3, #2]
 80090b2:	4618      	mov	r0, r3
 80090b4:	f000 f92c 	bl	8009310 <RTC_ByteToBcd2>
 80090b8:	4603      	mov	r3, r0
 80090ba:	ea44 0203 	orr.w	r2, r4, r3
 80090be:	68bb      	ldr	r3, [r7, #8]
 80090c0:	781b      	ldrb	r3, [r3, #0]
 80090c2:	035b      	lsls	r3, r3, #13
 80090c4:	4313      	orrs	r3, r2
 80090c6:	617b      	str	r3, [r7, #20]
 80090c8:	e00e      	b.n	80090e8 <HAL_RTC_SetDate+0xac>
 80090ca:	68bb      	ldr	r3, [r7, #8]
 80090cc:	78db      	ldrb	r3, [r3, #3]
 80090ce:	041a      	lsls	r2, r3, #16
 80090d0:	68bb      	ldr	r3, [r7, #8]
 80090d2:	785b      	ldrb	r3, [r3, #1]
 80090d4:	021b      	lsls	r3, r3, #8
 80090d6:	4313      	orrs	r3, r2
 80090d8:	68ba      	ldr	r2, [r7, #8]
 80090da:	7892      	ldrb	r2, [r2, #2]
 80090dc:	431a      	orrs	r2, r3
 80090de:	68bb      	ldr	r3, [r7, #8]
 80090e0:	781b      	ldrb	r3, [r3, #0]
 80090e2:	035b      	lsls	r3, r3, #13
 80090e4:	4313      	orrs	r3, r2
 80090e6:	617b      	str	r3, [r7, #20]
 80090e8:	68fb      	ldr	r3, [r7, #12]
 80090ea:	681b      	ldr	r3, [r3, #0]
 80090ec:	22ca      	movs	r2, #202	@ 0xca
 80090ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80090f0:	68fb      	ldr	r3, [r7, #12]
 80090f2:	681b      	ldr	r3, [r3, #0]
 80090f4:	2253      	movs	r2, #83	@ 0x53
 80090f6:	625a      	str	r2, [r3, #36]	@ 0x24
 80090f8:	68f8      	ldr	r0, [r7, #12]
 80090fa:	f000 f897 	bl	800922c <RTC_EnterInitMode>
 80090fe:	4603      	mov	r3, r0
 8009100:	74fb      	strb	r3, [r7, #19]
 8009102:	7cfb      	ldrb	r3, [r7, #19]
 8009104:	2b00      	cmp	r3, #0
 8009106:	d10c      	bne.n	8009122 <HAL_RTC_SetDate+0xe6>
 8009108:	68fb      	ldr	r3, [r7, #12]
 800910a:	681a      	ldr	r2, [r3, #0]
 800910c:	697b      	ldr	r3, [r7, #20]
 800910e:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8009112:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8009116:	6053      	str	r3, [r2, #4]
 8009118:	68f8      	ldr	r0, [r7, #12]
 800911a:	f000 f8bb 	bl	8009294 <RTC_ExitInitMode>
 800911e:	4603      	mov	r3, r0
 8009120:	74fb      	strb	r3, [r7, #19]
 8009122:	68fb      	ldr	r3, [r7, #12]
 8009124:	681b      	ldr	r3, [r3, #0]
 8009126:	22ff      	movs	r2, #255	@ 0xff
 8009128:	625a      	str	r2, [r3, #36]	@ 0x24
 800912a:	7cfb      	ldrb	r3, [r7, #19]
 800912c:	2b00      	cmp	r3, #0
 800912e:	d103      	bne.n	8009138 <HAL_RTC_SetDate+0xfc>
 8009130:	68fb      	ldr	r3, [r7, #12]
 8009132:	2201      	movs	r2, #1
 8009134:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8009138:	68fb      	ldr	r3, [r7, #12]
 800913a:	2200      	movs	r2, #0
 800913c:	f883 2020 	strb.w	r2, [r3, #32]
 8009140:	7cfb      	ldrb	r3, [r7, #19]
 8009142:	4618      	mov	r0, r3
 8009144:	371c      	adds	r7, #28
 8009146:	46bd      	mov	sp, r7
 8009148:	bd90      	pop	{r4, r7, pc}

0800914a <HAL_RTC_GetDate>:
 800914a:	b580      	push	{r7, lr}
 800914c:	b086      	sub	sp, #24
 800914e:	af00      	add	r7, sp, #0
 8009150:	60f8      	str	r0, [r7, #12]
 8009152:	60b9      	str	r1, [r7, #8]
 8009154:	607a      	str	r2, [r7, #4]
 8009156:	68fb      	ldr	r3, [r7, #12]
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	685b      	ldr	r3, [r3, #4]
 800915c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8009160:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8009164:	617b      	str	r3, [r7, #20]
 8009166:	697b      	ldr	r3, [r7, #20]
 8009168:	0c1b      	lsrs	r3, r3, #16
 800916a:	b2da      	uxtb	r2, r3
 800916c:	68bb      	ldr	r3, [r7, #8]
 800916e:	70da      	strb	r2, [r3, #3]
 8009170:	697b      	ldr	r3, [r7, #20]
 8009172:	0a1b      	lsrs	r3, r3, #8
 8009174:	b2db      	uxtb	r3, r3
 8009176:	f003 031f 	and.w	r3, r3, #31
 800917a:	b2da      	uxtb	r2, r3
 800917c:	68bb      	ldr	r3, [r7, #8]
 800917e:	705a      	strb	r2, [r3, #1]
 8009180:	697b      	ldr	r3, [r7, #20]
 8009182:	b2db      	uxtb	r3, r3
 8009184:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8009188:	b2da      	uxtb	r2, r3
 800918a:	68bb      	ldr	r3, [r7, #8]
 800918c:	709a      	strb	r2, [r3, #2]
 800918e:	697b      	ldr	r3, [r7, #20]
 8009190:	0b5b      	lsrs	r3, r3, #13
 8009192:	b2db      	uxtb	r3, r3
 8009194:	f003 0307 	and.w	r3, r3, #7
 8009198:	b2da      	uxtb	r2, r3
 800919a:	68bb      	ldr	r3, [r7, #8]
 800919c:	701a      	strb	r2, [r3, #0]
 800919e:	687b      	ldr	r3, [r7, #4]
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d11a      	bne.n	80091da <HAL_RTC_GetDate+0x90>
 80091a4:	68bb      	ldr	r3, [r7, #8]
 80091a6:	78db      	ldrb	r3, [r3, #3]
 80091a8:	4618      	mov	r0, r3
 80091aa:	f000 f8d1 	bl	8009350 <RTC_Bcd2ToByte>
 80091ae:	4603      	mov	r3, r0
 80091b0:	461a      	mov	r2, r3
 80091b2:	68bb      	ldr	r3, [r7, #8]
 80091b4:	70da      	strb	r2, [r3, #3]
 80091b6:	68bb      	ldr	r3, [r7, #8]
 80091b8:	785b      	ldrb	r3, [r3, #1]
 80091ba:	4618      	mov	r0, r3
 80091bc:	f000 f8c8 	bl	8009350 <RTC_Bcd2ToByte>
 80091c0:	4603      	mov	r3, r0
 80091c2:	461a      	mov	r2, r3
 80091c4:	68bb      	ldr	r3, [r7, #8]
 80091c6:	705a      	strb	r2, [r3, #1]
 80091c8:	68bb      	ldr	r3, [r7, #8]
 80091ca:	789b      	ldrb	r3, [r3, #2]
 80091cc:	4618      	mov	r0, r3
 80091ce:	f000 f8bf 	bl	8009350 <RTC_Bcd2ToByte>
 80091d2:	4603      	mov	r3, r0
 80091d4:	461a      	mov	r2, r3
 80091d6:	68bb      	ldr	r3, [r7, #8]
 80091d8:	709a      	strb	r2, [r3, #2]
 80091da:	2300      	movs	r3, #0
 80091dc:	4618      	mov	r0, r3
 80091de:	3718      	adds	r7, #24
 80091e0:	46bd      	mov	sp, r7
 80091e2:	bd80      	pop	{r7, pc}

080091e4 <HAL_RTC_WaitForSynchro>:
 80091e4:	b580      	push	{r7, lr}
 80091e6:	b084      	sub	sp, #16
 80091e8:	af00      	add	r7, sp, #0
 80091ea:	6078      	str	r0, [r7, #4]
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	681b      	ldr	r3, [r3, #0]
 80091f0:	4a0d      	ldr	r2, [pc, #52]	@ (8009228 <HAL_RTC_WaitForSynchro+0x44>)
 80091f2:	60da      	str	r2, [r3, #12]
 80091f4:	f7fc fc42 	bl	8005a7c <HAL_GetTick>
 80091f8:	60f8      	str	r0, [r7, #12]
 80091fa:	e009      	b.n	8009210 <HAL_RTC_WaitForSynchro+0x2c>
 80091fc:	f7fc fc3e 	bl	8005a7c <HAL_GetTick>
 8009200:	4602      	mov	r2, r0
 8009202:	68fb      	ldr	r3, [r7, #12]
 8009204:	1ad3      	subs	r3, r2, r3
 8009206:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800920a:	d901      	bls.n	8009210 <HAL_RTC_WaitForSynchro+0x2c>
 800920c:	2303      	movs	r3, #3
 800920e:	e007      	b.n	8009220 <HAL_RTC_WaitForSynchro+0x3c>
 8009210:	687b      	ldr	r3, [r7, #4]
 8009212:	681b      	ldr	r3, [r3, #0]
 8009214:	68db      	ldr	r3, [r3, #12]
 8009216:	f003 0320 	and.w	r3, r3, #32
 800921a:	2b00      	cmp	r3, #0
 800921c:	d0ee      	beq.n	80091fc <HAL_RTC_WaitForSynchro+0x18>
 800921e:	2300      	movs	r3, #0
 8009220:	4618      	mov	r0, r3
 8009222:	3710      	adds	r7, #16
 8009224:	46bd      	mov	sp, r7
 8009226:	bd80      	pop	{r7, pc}
 8009228:	0003ff5f 	.word	0x0003ff5f

0800922c <RTC_EnterInitMode>:
 800922c:	b580      	push	{r7, lr}
 800922e:	b084      	sub	sp, #16
 8009230:	af00      	add	r7, sp, #0
 8009232:	6078      	str	r0, [r7, #4]
 8009234:	2300      	movs	r3, #0
 8009236:	73fb      	strb	r3, [r7, #15]
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	681b      	ldr	r3, [r3, #0]
 800923c:	68db      	ldr	r3, [r3, #12]
 800923e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009242:	2b00      	cmp	r3, #0
 8009244:	d120      	bne.n	8009288 <RTC_EnterInitMode+0x5c>
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	f04f 32ff 	mov.w	r2, #4294967295
 800924e:	60da      	str	r2, [r3, #12]
 8009250:	f7fc fc14 	bl	8005a7c <HAL_GetTick>
 8009254:	60b8      	str	r0, [r7, #8]
 8009256:	e00d      	b.n	8009274 <RTC_EnterInitMode+0x48>
 8009258:	f7fc fc10 	bl	8005a7c <HAL_GetTick>
 800925c:	4602      	mov	r2, r0
 800925e:	68bb      	ldr	r3, [r7, #8]
 8009260:	1ad3      	subs	r3, r2, r3
 8009262:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8009266:	d905      	bls.n	8009274 <RTC_EnterInitMode+0x48>
 8009268:	2303      	movs	r3, #3
 800926a:	73fb      	strb	r3, [r7, #15]
 800926c:	687b      	ldr	r3, [r7, #4]
 800926e:	2203      	movs	r2, #3
 8009270:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	681b      	ldr	r3, [r3, #0]
 8009278:	68db      	ldr	r3, [r3, #12]
 800927a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800927e:	2b00      	cmp	r3, #0
 8009280:	d102      	bne.n	8009288 <RTC_EnterInitMode+0x5c>
 8009282:	7bfb      	ldrb	r3, [r7, #15]
 8009284:	2b03      	cmp	r3, #3
 8009286:	d1e7      	bne.n	8009258 <RTC_EnterInitMode+0x2c>
 8009288:	7bfb      	ldrb	r3, [r7, #15]
 800928a:	4618      	mov	r0, r3
 800928c:	3710      	adds	r7, #16
 800928e:	46bd      	mov	sp, r7
 8009290:	bd80      	pop	{r7, pc}
	...

08009294 <RTC_ExitInitMode>:
 8009294:	b580      	push	{r7, lr}
 8009296:	b084      	sub	sp, #16
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
 800929c:	2300      	movs	r3, #0
 800929e:	73fb      	strb	r3, [r7, #15]
 80092a0:	4b1a      	ldr	r3, [pc, #104]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092a2:	68db      	ldr	r3, [r3, #12]
 80092a4:	4a19      	ldr	r2, [pc, #100]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092a6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80092aa:	60d3      	str	r3, [r2, #12]
 80092ac:	4b17      	ldr	r3, [pc, #92]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092ae:	689b      	ldr	r3, [r3, #8]
 80092b0:	f003 0320 	and.w	r3, r3, #32
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d10c      	bne.n	80092d2 <RTC_ExitInitMode+0x3e>
 80092b8:	6878      	ldr	r0, [r7, #4]
 80092ba:	f7ff ff93 	bl	80091e4 <HAL_RTC_WaitForSynchro>
 80092be:	4603      	mov	r3, r0
 80092c0:	2b00      	cmp	r3, #0
 80092c2:	d01e      	beq.n	8009302 <RTC_ExitInitMode+0x6e>
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	2203      	movs	r2, #3
 80092c8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80092cc:	2303      	movs	r3, #3
 80092ce:	73fb      	strb	r3, [r7, #15]
 80092d0:	e017      	b.n	8009302 <RTC_ExitInitMode+0x6e>
 80092d2:	4b0e      	ldr	r3, [pc, #56]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092d4:	689b      	ldr	r3, [r3, #8]
 80092d6:	4a0d      	ldr	r2, [pc, #52]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092d8:	f023 0320 	bic.w	r3, r3, #32
 80092dc:	6093      	str	r3, [r2, #8]
 80092de:	6878      	ldr	r0, [r7, #4]
 80092e0:	f7ff ff80 	bl	80091e4 <HAL_RTC_WaitForSynchro>
 80092e4:	4603      	mov	r3, r0
 80092e6:	2b00      	cmp	r3, #0
 80092e8:	d005      	beq.n	80092f6 <RTC_ExitInitMode+0x62>
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	2203      	movs	r2, #3
 80092ee:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80092f2:	2303      	movs	r3, #3
 80092f4:	73fb      	strb	r3, [r7, #15]
 80092f6:	4b05      	ldr	r3, [pc, #20]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092f8:	689b      	ldr	r3, [r3, #8]
 80092fa:	4a04      	ldr	r2, [pc, #16]	@ (800930c <RTC_ExitInitMode+0x78>)
 80092fc:	f043 0320 	orr.w	r3, r3, #32
 8009300:	6093      	str	r3, [r2, #8]
 8009302:	7bfb      	ldrb	r3, [r7, #15]
 8009304:	4618      	mov	r0, r3
 8009306:	3710      	adds	r7, #16
 8009308:	46bd      	mov	sp, r7
 800930a:	bd80      	pop	{r7, pc}
 800930c:	40002800 	.word	0x40002800

08009310 <RTC_ByteToBcd2>:
 8009310:	b480      	push	{r7}
 8009312:	b085      	sub	sp, #20
 8009314:	af00      	add	r7, sp, #0
 8009316:	4603      	mov	r3, r0
 8009318:	71fb      	strb	r3, [r7, #7]
 800931a:	2300      	movs	r3, #0
 800931c:	60fb      	str	r3, [r7, #12]
 800931e:	79fb      	ldrb	r3, [r7, #7]
 8009320:	72fb      	strb	r3, [r7, #11]
 8009322:	e005      	b.n	8009330 <RTC_ByteToBcd2+0x20>
 8009324:	68fb      	ldr	r3, [r7, #12]
 8009326:	3301      	adds	r3, #1
 8009328:	60fb      	str	r3, [r7, #12]
 800932a:	7afb      	ldrb	r3, [r7, #11]
 800932c:	3b0a      	subs	r3, #10
 800932e:	72fb      	strb	r3, [r7, #11]
 8009330:	7afb      	ldrb	r3, [r7, #11]
 8009332:	2b09      	cmp	r3, #9
 8009334:	d8f6      	bhi.n	8009324 <RTC_ByteToBcd2+0x14>
 8009336:	68fb      	ldr	r3, [r7, #12]
 8009338:	b2db      	uxtb	r3, r3
 800933a:	011b      	lsls	r3, r3, #4
 800933c:	b2da      	uxtb	r2, r3
 800933e:	7afb      	ldrb	r3, [r7, #11]
 8009340:	4313      	orrs	r3, r2
 8009342:	b2db      	uxtb	r3, r3
 8009344:	4618      	mov	r0, r3
 8009346:	3714      	adds	r7, #20
 8009348:	46bd      	mov	sp, r7
 800934a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800934e:	4770      	bx	lr

08009350 <RTC_Bcd2ToByte>:
 8009350:	b480      	push	{r7}
 8009352:	b085      	sub	sp, #20
 8009354:	af00      	add	r7, sp, #0
 8009356:	4603      	mov	r3, r0
 8009358:	71fb      	strb	r3, [r7, #7]
 800935a:	79fb      	ldrb	r3, [r7, #7]
 800935c:	091b      	lsrs	r3, r3, #4
 800935e:	b2db      	uxtb	r3, r3
 8009360:	461a      	mov	r2, r3
 8009362:	0092      	lsls	r2, r2, #2
 8009364:	4413      	add	r3, r2
 8009366:	005b      	lsls	r3, r3, #1
 8009368:	73fb      	strb	r3, [r7, #15]
 800936a:	79fb      	ldrb	r3, [r7, #7]
 800936c:	f003 030f 	and.w	r3, r3, #15
 8009370:	b2da      	uxtb	r2, r3
 8009372:	7bfb      	ldrb	r3, [r7, #15]
 8009374:	4413      	add	r3, r2
 8009376:	b2db      	uxtb	r3, r3
 8009378:	4618      	mov	r0, r3
 800937a:	3714      	adds	r7, #20
 800937c:	46bd      	mov	sp, r7
 800937e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009382:	4770      	bx	lr

08009384 <HAL_RTCEx_SetWakeUpTimer_IT>:
 8009384:	b580      	push	{r7, lr}
 8009386:	b086      	sub	sp, #24
 8009388:	af00      	add	r7, sp, #0
 800938a:	60f8      	str	r0, [r7, #12]
 800938c:	60b9      	str	r1, [r7, #8]
 800938e:	607a      	str	r2, [r7, #4]
 8009390:	68fb      	ldr	r3, [r7, #12]
 8009392:	f893 3020 	ldrb.w	r3, [r3, #32]
 8009396:	2b01      	cmp	r3, #1
 8009398:	d101      	bne.n	800939e <HAL_RTCEx_SetWakeUpTimer_IT+0x1a>
 800939a:	2302      	movs	r3, #2
 800939c:	e07f      	b.n	800949e <HAL_RTCEx_SetWakeUpTimer_IT+0x11a>
 800939e:	68fb      	ldr	r3, [r7, #12]
 80093a0:	2201      	movs	r2, #1
 80093a2:	f883 2020 	strb.w	r2, [r3, #32]
 80093a6:	68fb      	ldr	r3, [r7, #12]
 80093a8:	2202      	movs	r2, #2
 80093aa:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80093ae:	68fb      	ldr	r3, [r7, #12]
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	22ca      	movs	r2, #202	@ 0xca
 80093b4:	625a      	str	r2, [r3, #36]	@ 0x24
 80093b6:	68fb      	ldr	r3, [r7, #12]
 80093b8:	681b      	ldr	r3, [r3, #0]
 80093ba:	2253      	movs	r2, #83	@ 0x53
 80093bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80093be:	68fb      	ldr	r3, [r7, #12]
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	689a      	ldr	r2, [r3, #8]
 80093c4:	68fb      	ldr	r3, [r7, #12]
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80093cc:	609a      	str	r2, [r3, #8]
 80093ce:	68fb      	ldr	r3, [r7, #12]
 80093d0:	681b      	ldr	r3, [r3, #0]
 80093d2:	68db      	ldr	r3, [r3, #12]
 80093d4:	b2da      	uxtb	r2, r3
 80093d6:	68fb      	ldr	r3, [r7, #12]
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	f462 6290 	orn	r2, r2, #1152	@ 0x480
 80093de:	60da      	str	r2, [r3, #12]
 80093e0:	68fb      	ldr	r3, [r7, #12]
 80093e2:	681b      	ldr	r3, [r3, #0]
 80093e4:	68db      	ldr	r3, [r3, #12]
 80093e6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80093ea:	2b00      	cmp	r3, #0
 80093ec:	d120      	bne.n	8009430 <HAL_RTCEx_SetWakeUpTimer_IT+0xac>
 80093ee:	f7fc fb45 	bl	8005a7c <HAL_GetTick>
 80093f2:	6178      	str	r0, [r7, #20]
 80093f4:	e015      	b.n	8009422 <HAL_RTCEx_SetWakeUpTimer_IT+0x9e>
 80093f6:	f7fc fb41 	bl	8005a7c <HAL_GetTick>
 80093fa:	4602      	mov	r2, r0
 80093fc:	697b      	ldr	r3, [r7, #20]
 80093fe:	1ad3      	subs	r3, r2, r3
 8009400:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8009404:	d90d      	bls.n	8009422 <HAL_RTCEx_SetWakeUpTimer_IT+0x9e>
 8009406:	68fb      	ldr	r3, [r7, #12]
 8009408:	681b      	ldr	r3, [r3, #0]
 800940a:	22ff      	movs	r2, #255	@ 0xff
 800940c:	625a      	str	r2, [r3, #36]	@ 0x24
 800940e:	68fb      	ldr	r3, [r7, #12]
 8009410:	2203      	movs	r2, #3
 8009412:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8009416:	68fb      	ldr	r3, [r7, #12]
 8009418:	2200      	movs	r2, #0
 800941a:	f883 2020 	strb.w	r2, [r3, #32]
 800941e:	2303      	movs	r3, #3
 8009420:	e03d      	b.n	800949e <HAL_RTCEx_SetWakeUpTimer_IT+0x11a>
 8009422:	68fb      	ldr	r3, [r7, #12]
 8009424:	681b      	ldr	r3, [r3, #0]
 8009426:	68db      	ldr	r3, [r3, #12]
 8009428:	f003 0304 	and.w	r3, r3, #4
 800942c:	2b00      	cmp	r3, #0
 800942e:	d0e2      	beq.n	80093f6 <HAL_RTCEx_SetWakeUpTimer_IT+0x72>
 8009430:	68fb      	ldr	r3, [r7, #12]
 8009432:	681b      	ldr	r3, [r3, #0]
 8009434:	68ba      	ldr	r2, [r7, #8]
 8009436:	615a      	str	r2, [r3, #20]
 8009438:	68fb      	ldr	r3, [r7, #12]
 800943a:	681b      	ldr	r3, [r3, #0]
 800943c:	689b      	ldr	r3, [r3, #8]
 800943e:	f023 0107 	bic.w	r1, r3, #7
 8009442:	68fb      	ldr	r3, [r7, #12]
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	687a      	ldr	r2, [r7, #4]
 8009448:	430a      	orrs	r2, r1
 800944a:	609a      	str	r2, [r3, #8]
 800944c:	4b16      	ldr	r3, [pc, #88]	@ (80094a8 <HAL_RTCEx_SetWakeUpTimer_IT+0x124>)
 800944e:	681b      	ldr	r3, [r3, #0]
 8009450:	4a15      	ldr	r2, [pc, #84]	@ (80094a8 <HAL_RTCEx_SetWakeUpTimer_IT+0x124>)
 8009452:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009456:	6013      	str	r3, [r2, #0]
 8009458:	4b13      	ldr	r3, [pc, #76]	@ (80094a8 <HAL_RTCEx_SetWakeUpTimer_IT+0x124>)
 800945a:	689b      	ldr	r3, [r3, #8]
 800945c:	4a12      	ldr	r2, [pc, #72]	@ (80094a8 <HAL_RTCEx_SetWakeUpTimer_IT+0x124>)
 800945e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009462:	6093      	str	r3, [r2, #8]
 8009464:	68fb      	ldr	r3, [r7, #12]
 8009466:	681b      	ldr	r3, [r3, #0]
 8009468:	689a      	ldr	r2, [r3, #8]
 800946a:	68fb      	ldr	r3, [r7, #12]
 800946c:	681b      	ldr	r3, [r3, #0]
 800946e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8009472:	609a      	str	r2, [r3, #8]
 8009474:	68fb      	ldr	r3, [r7, #12]
 8009476:	681b      	ldr	r3, [r3, #0]
 8009478:	689a      	ldr	r2, [r3, #8]
 800947a:	68fb      	ldr	r3, [r7, #12]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8009482:	609a      	str	r2, [r3, #8]
 8009484:	68fb      	ldr	r3, [r7, #12]
 8009486:	681b      	ldr	r3, [r3, #0]
 8009488:	22ff      	movs	r2, #255	@ 0xff
 800948a:	625a      	str	r2, [r3, #36]	@ 0x24
 800948c:	68fb      	ldr	r3, [r7, #12]
 800948e:	2201      	movs	r2, #1
 8009490:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8009494:	68fb      	ldr	r3, [r7, #12]
 8009496:	2200      	movs	r2, #0
 8009498:	f883 2020 	strb.w	r2, [r3, #32]
 800949c:	2300      	movs	r3, #0
 800949e:	4618      	mov	r0, r3
 80094a0:	3718      	adds	r7, #24
 80094a2:	46bd      	mov	sp, r7
 80094a4:	bd80      	pop	{r7, pc}
 80094a6:	bf00      	nop
 80094a8:	40010400 	.word	0x40010400

080094ac <HAL_RTCEx_WakeUpTimerIRQHandler>:
 80094ac:	b580      	push	{r7, lr}
 80094ae:	b082      	sub	sp, #8
 80094b0:	af00      	add	r7, sp, #0
 80094b2:	6078      	str	r0, [r7, #4]
 80094b4:	4b0f      	ldr	r3, [pc, #60]	@ (80094f4 <HAL_RTCEx_WakeUpTimerIRQHandler+0x48>)
 80094b6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80094ba:	615a      	str	r2, [r3, #20]
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	681b      	ldr	r3, [r3, #0]
 80094c0:	68db      	ldr	r3, [r3, #12]
 80094c2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80094c6:	2b00      	cmp	r3, #0
 80094c8:	d00b      	beq.n	80094e2 <HAL_RTCEx_WakeUpTimerIRQHandler+0x36>
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	681b      	ldr	r3, [r3, #0]
 80094ce:	68db      	ldr	r3, [r3, #12]
 80094d0:	b2da      	uxtb	r2, r3
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	681b      	ldr	r3, [r3, #0]
 80094d6:	f462 6290 	orn	r2, r2, #1152	@ 0x480
 80094da:	60da      	str	r2, [r3, #12]
 80094dc:	6878      	ldr	r0, [r7, #4]
 80094de:	f7fa f9f7 	bl	80038d0 <HAL_RTCEx_WakeUpTimerEventCallback>
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	2201      	movs	r2, #1
 80094e6:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80094ea:	bf00      	nop
 80094ec:	3708      	adds	r7, #8
 80094ee:	46bd      	mov	sp, r7
 80094f0:	bd80      	pop	{r7, pc}
 80094f2:	bf00      	nop
 80094f4:	40010400 	.word	0x40010400

080094f8 <HAL_SPI_Init>:
 80094f8:	b580      	push	{r7, lr}
 80094fa:	b084      	sub	sp, #16
 80094fc:	af00      	add	r7, sp, #0
 80094fe:	6078      	str	r0, [r7, #4]
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	2b00      	cmp	r3, #0
 8009504:	d101      	bne.n	800950a <HAL_SPI_Init+0x12>
 8009506:	2301      	movs	r3, #1
 8009508:	e095      	b.n	8009636 <HAL_SPI_Init+0x13e>
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800950e:	2b00      	cmp	r3, #0
 8009510:	d108      	bne.n	8009524 <HAL_SPI_Init+0x2c>
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	685b      	ldr	r3, [r3, #4]
 8009516:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800951a:	d009      	beq.n	8009530 <HAL_SPI_Init+0x38>
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	2200      	movs	r2, #0
 8009520:	61da      	str	r2, [r3, #28]
 8009522:	e005      	b.n	8009530 <HAL_SPI_Init+0x38>
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	2200      	movs	r2, #0
 8009528:	611a      	str	r2, [r3, #16]
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	2200      	movs	r2, #0
 800952e:	615a      	str	r2, [r3, #20]
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	2200      	movs	r2, #0
 8009534:	629a      	str	r2, [r3, #40]	@ 0x28
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800953c:	b2db      	uxtb	r3, r3
 800953e:	2b00      	cmp	r3, #0
 8009540:	d106      	bne.n	8009550 <HAL_SPI_Init+0x58>
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	2200      	movs	r2, #0
 8009546:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800954a:	6878      	ldr	r0, [r7, #4]
 800954c:	f7f9 fe62 	bl	8003214 <HAL_SPI_MspInit>
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	2202      	movs	r2, #2
 8009554:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009558:	687b      	ldr	r3, [r7, #4]
 800955a:	681b      	ldr	r3, [r3, #0]
 800955c:	681a      	ldr	r2, [r3, #0]
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009566:	601a      	str	r2, [r3, #0]
 8009568:	687b      	ldr	r3, [r7, #4]
 800956a:	68db      	ldr	r3, [r3, #12]
 800956c:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009570:	d902      	bls.n	8009578 <HAL_SPI_Init+0x80>
 8009572:	2300      	movs	r3, #0
 8009574:	60fb      	str	r3, [r7, #12]
 8009576:	e002      	b.n	800957e <HAL_SPI_Init+0x86>
 8009578:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800957c:	60fb      	str	r3, [r7, #12]
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	68db      	ldr	r3, [r3, #12]
 8009582:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8009586:	d007      	beq.n	8009598 <HAL_SPI_Init+0xa0>
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	68db      	ldr	r3, [r3, #12]
 800958c:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009590:	d002      	beq.n	8009598 <HAL_SPI_Init+0xa0>
 8009592:	687b      	ldr	r3, [r7, #4]
 8009594:	2200      	movs	r2, #0
 8009596:	629a      	str	r2, [r3, #40]	@ 0x28
 8009598:	687b      	ldr	r3, [r7, #4]
 800959a:	685b      	ldr	r3, [r3, #4]
 800959c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80095a0:	687b      	ldr	r3, [r7, #4]
 80095a2:	689b      	ldr	r3, [r3, #8]
 80095a4:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80095a8:	431a      	orrs	r2, r3
 80095aa:	687b      	ldr	r3, [r7, #4]
 80095ac:	691b      	ldr	r3, [r3, #16]
 80095ae:	f003 0302 	and.w	r3, r3, #2
 80095b2:	431a      	orrs	r2, r3
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	695b      	ldr	r3, [r3, #20]
 80095b8:	f003 0301 	and.w	r3, r3, #1
 80095bc:	431a      	orrs	r2, r3
 80095be:	687b      	ldr	r3, [r7, #4]
 80095c0:	699b      	ldr	r3, [r3, #24]
 80095c2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80095c6:	431a      	orrs	r2, r3
 80095c8:	687b      	ldr	r3, [r7, #4]
 80095ca:	69db      	ldr	r3, [r3, #28]
 80095cc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80095d0:	431a      	orrs	r2, r3
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	6a1b      	ldr	r3, [r3, #32]
 80095d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80095da:	ea42 0103 	orr.w	r1, r2, r3
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80095e2:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	681b      	ldr	r3, [r3, #0]
 80095ea:	430a      	orrs	r2, r1
 80095ec:	601a      	str	r2, [r3, #0]
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	699b      	ldr	r3, [r3, #24]
 80095f2:	0c1b      	lsrs	r3, r3, #16
 80095f4:	f003 0204 	and.w	r2, r3, #4
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80095fc:	f003 0310 	and.w	r3, r3, #16
 8009600:	431a      	orrs	r2, r3
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009606:	f003 0308 	and.w	r3, r3, #8
 800960a:	431a      	orrs	r2, r3
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	68db      	ldr	r3, [r3, #12]
 8009610:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8009614:	ea42 0103 	orr.w	r1, r2, r3
 8009618:	68fb      	ldr	r3, [r7, #12]
 800961a:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	430a      	orrs	r2, r1
 8009624:	605a      	str	r2, [r3, #4]
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	2200      	movs	r2, #0
 800962a:	661a      	str	r2, [r3, #96]	@ 0x60
 800962c:	687b      	ldr	r3, [r7, #4]
 800962e:	2201      	movs	r2, #1
 8009630:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009634:	2300      	movs	r3, #0
 8009636:	4618      	mov	r0, r3
 8009638:	3710      	adds	r7, #16
 800963a:	46bd      	mov	sp, r7
 800963c:	bd80      	pop	{r7, pc}

0800963e <HAL_SPI_DeInit>:
 800963e:	b580      	push	{r7, lr}
 8009640:	b082      	sub	sp, #8
 8009642:	af00      	add	r7, sp, #0
 8009644:	6078      	str	r0, [r7, #4]
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	2b00      	cmp	r3, #0
 800964a:	d101      	bne.n	8009650 <HAL_SPI_DeInit+0x12>
 800964c:	2301      	movs	r3, #1
 800964e:	e01a      	b.n	8009686 <HAL_SPI_DeInit+0x48>
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	2202      	movs	r2, #2
 8009654:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	681b      	ldr	r3, [r3, #0]
 800965c:	681a      	ldr	r2, [r3, #0]
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	681b      	ldr	r3, [r3, #0]
 8009662:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009666:	601a      	str	r2, [r3, #0]
 8009668:	6878      	ldr	r0, [r7, #4]
 800966a:	f7f9 fe17 	bl	800329c <HAL_SPI_MspDeInit>
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	2200      	movs	r2, #0
 8009672:	661a      	str	r2, [r3, #96]	@ 0x60
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	2200      	movs	r2, #0
 8009678:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	2200      	movs	r2, #0
 8009680:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009684:	2300      	movs	r3, #0
 8009686:	4618      	mov	r0, r3
 8009688:	3708      	adds	r7, #8
 800968a:	46bd      	mov	sp, r7
 800968c:	bd80      	pop	{r7, pc}

0800968e <HAL_SPI_Receive>:
 800968e:	b580      	push	{r7, lr}
 8009690:	b088      	sub	sp, #32
 8009692:	af02      	add	r7, sp, #8
 8009694:	60f8      	str	r0, [r7, #12]
 8009696:	60b9      	str	r1, [r7, #8]
 8009698:	603b      	str	r3, [r7, #0]
 800969a:	4613      	mov	r3, r2
 800969c:	80fb      	strh	r3, [r7, #6]
 800969e:	68fb      	ldr	r3, [r7, #12]
 80096a0:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 80096a4:	b2db      	uxtb	r3, r3
 80096a6:	2b01      	cmp	r3, #1
 80096a8:	d001      	beq.n	80096ae <HAL_SPI_Receive+0x20>
 80096aa:	2302      	movs	r3, #2
 80096ac:	e123      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 80096ae:	68fb      	ldr	r3, [r7, #12]
 80096b0:	685b      	ldr	r3, [r3, #4]
 80096b2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80096b6:	d112      	bne.n	80096de <HAL_SPI_Receive+0x50>
 80096b8:	68fb      	ldr	r3, [r7, #12]
 80096ba:	689b      	ldr	r3, [r3, #8]
 80096bc:	2b00      	cmp	r3, #0
 80096be:	d10e      	bne.n	80096de <HAL_SPI_Receive+0x50>
 80096c0:	68fb      	ldr	r3, [r7, #12]
 80096c2:	2204      	movs	r2, #4
 80096c4:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80096c8:	88fa      	ldrh	r2, [r7, #6]
 80096ca:	683b      	ldr	r3, [r7, #0]
 80096cc:	9300      	str	r3, [sp, #0]
 80096ce:	4613      	mov	r3, r2
 80096d0:	68ba      	ldr	r2, [r7, #8]
 80096d2:	68b9      	ldr	r1, [r7, #8]
 80096d4:	68f8      	ldr	r0, [r7, #12]
 80096d6:	f000 f912 	bl	80098fe <HAL_SPI_TransmitReceive>
 80096da:	4603      	mov	r3, r0
 80096dc:	e10b      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 80096de:	f7fc f9cd 	bl	8005a7c <HAL_GetTick>
 80096e2:	6178      	str	r0, [r7, #20]
 80096e4:	68bb      	ldr	r3, [r7, #8]
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	d002      	beq.n	80096f0 <HAL_SPI_Receive+0x62>
 80096ea:	88fb      	ldrh	r3, [r7, #6]
 80096ec:	2b00      	cmp	r3, #0
 80096ee:	d101      	bne.n	80096f4 <HAL_SPI_Receive+0x66>
 80096f0:	2301      	movs	r3, #1
 80096f2:	e100      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 80096fa:	2b01      	cmp	r3, #1
 80096fc:	d101      	bne.n	8009702 <HAL_SPI_Receive+0x74>
 80096fe:	2302      	movs	r3, #2
 8009700:	e0f9      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 8009702:	68fb      	ldr	r3, [r7, #12]
 8009704:	2201      	movs	r2, #1
 8009706:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800970a:	68fb      	ldr	r3, [r7, #12]
 800970c:	2204      	movs	r2, #4
 800970e:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009712:	68fb      	ldr	r3, [r7, #12]
 8009714:	2200      	movs	r2, #0
 8009716:	661a      	str	r2, [r3, #96]	@ 0x60
 8009718:	68fb      	ldr	r3, [r7, #12]
 800971a:	68ba      	ldr	r2, [r7, #8]
 800971c:	641a      	str	r2, [r3, #64]	@ 0x40
 800971e:	68fb      	ldr	r3, [r7, #12]
 8009720:	88fa      	ldrh	r2, [r7, #6]
 8009722:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8009726:	68fb      	ldr	r3, [r7, #12]
 8009728:	88fa      	ldrh	r2, [r7, #6]
 800972a:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800972e:	68fb      	ldr	r3, [r7, #12]
 8009730:	2200      	movs	r2, #0
 8009732:	639a      	str	r2, [r3, #56]	@ 0x38
 8009734:	68fb      	ldr	r3, [r7, #12]
 8009736:	2200      	movs	r2, #0
 8009738:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800973a:	68fb      	ldr	r3, [r7, #12]
 800973c:	2200      	movs	r2, #0
 800973e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009740:	68fb      	ldr	r3, [r7, #12]
 8009742:	2200      	movs	r2, #0
 8009744:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	2200      	movs	r2, #0
 800974a:	651a      	str	r2, [r3, #80]	@ 0x50
 800974c:	68fb      	ldr	r3, [r7, #12]
 800974e:	68db      	ldr	r3, [r3, #12]
 8009750:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009754:	d908      	bls.n	8009768 <HAL_SPI_Receive+0xda>
 8009756:	68fb      	ldr	r3, [r7, #12]
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	685a      	ldr	r2, [r3, #4]
 800975c:	68fb      	ldr	r3, [r7, #12]
 800975e:	681b      	ldr	r3, [r3, #0]
 8009760:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8009764:	605a      	str	r2, [r3, #4]
 8009766:	e007      	b.n	8009778 <HAL_SPI_Receive+0xea>
 8009768:	68fb      	ldr	r3, [r7, #12]
 800976a:	681b      	ldr	r3, [r3, #0]
 800976c:	685a      	ldr	r2, [r3, #4]
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8009776:	605a      	str	r2, [r3, #4]
 8009778:	68fb      	ldr	r3, [r7, #12]
 800977a:	689b      	ldr	r3, [r3, #8]
 800977c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009780:	d10f      	bne.n	80097a2 <HAL_SPI_Receive+0x114>
 8009782:	68fb      	ldr	r3, [r7, #12]
 8009784:	681b      	ldr	r3, [r3, #0]
 8009786:	681a      	ldr	r2, [r3, #0]
 8009788:	68fb      	ldr	r3, [r7, #12]
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009790:	601a      	str	r2, [r3, #0]
 8009792:	68fb      	ldr	r3, [r7, #12]
 8009794:	681b      	ldr	r3, [r3, #0]
 8009796:	681a      	ldr	r2, [r3, #0]
 8009798:	68fb      	ldr	r3, [r7, #12]
 800979a:	681b      	ldr	r3, [r3, #0]
 800979c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80097a0:	601a      	str	r2, [r3, #0]
 80097a2:	68fb      	ldr	r3, [r7, #12]
 80097a4:	681b      	ldr	r3, [r3, #0]
 80097a6:	681b      	ldr	r3, [r3, #0]
 80097a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80097ac:	2b40      	cmp	r3, #64	@ 0x40
 80097ae:	d007      	beq.n	80097c0 <HAL_SPI_Receive+0x132>
 80097b0:	68fb      	ldr	r3, [r7, #12]
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	681a      	ldr	r2, [r3, #0]
 80097b6:	68fb      	ldr	r3, [r7, #12]
 80097b8:	681b      	ldr	r3, [r3, #0]
 80097ba:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80097be:	601a      	str	r2, [r3, #0]
 80097c0:	68fb      	ldr	r3, [r7, #12]
 80097c2:	68db      	ldr	r3, [r3, #12]
 80097c4:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80097c8:	d875      	bhi.n	80098b6 <HAL_SPI_Receive+0x228>
 80097ca:	e037      	b.n	800983c <HAL_SPI_Receive+0x1ae>
 80097cc:	68fb      	ldr	r3, [r7, #12]
 80097ce:	681b      	ldr	r3, [r3, #0]
 80097d0:	689b      	ldr	r3, [r3, #8]
 80097d2:	f003 0301 	and.w	r3, r3, #1
 80097d6:	2b01      	cmp	r3, #1
 80097d8:	d117      	bne.n	800980a <HAL_SPI_Receive+0x17c>
 80097da:	68fb      	ldr	r3, [r7, #12]
 80097dc:	681b      	ldr	r3, [r3, #0]
 80097de:	f103 020c 	add.w	r2, r3, #12
 80097e2:	68fb      	ldr	r3, [r7, #12]
 80097e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80097e6:	7812      	ldrb	r2, [r2, #0]
 80097e8:	b2d2      	uxtb	r2, r2
 80097ea:	701a      	strb	r2, [r3, #0]
 80097ec:	68fb      	ldr	r3, [r7, #12]
 80097ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80097f0:	1c5a      	adds	r2, r3, #1
 80097f2:	68fb      	ldr	r3, [r7, #12]
 80097f4:	641a      	str	r2, [r3, #64]	@ 0x40
 80097f6:	68fb      	ldr	r3, [r7, #12]
 80097f8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80097fc:	b29b      	uxth	r3, r3
 80097fe:	3b01      	subs	r3, #1
 8009800:	b29a      	uxth	r2, r3
 8009802:	68fb      	ldr	r3, [r7, #12]
 8009804:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009808:	e018      	b.n	800983c <HAL_SPI_Receive+0x1ae>
 800980a:	f7fc f937 	bl	8005a7c <HAL_GetTick>
 800980e:	4602      	mov	r2, r0
 8009810:	697b      	ldr	r3, [r7, #20]
 8009812:	1ad3      	subs	r3, r2, r3
 8009814:	683a      	ldr	r2, [r7, #0]
 8009816:	429a      	cmp	r2, r3
 8009818:	d803      	bhi.n	8009822 <HAL_SPI_Receive+0x194>
 800981a:	683b      	ldr	r3, [r7, #0]
 800981c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009820:	d102      	bne.n	8009828 <HAL_SPI_Receive+0x19a>
 8009822:	683b      	ldr	r3, [r7, #0]
 8009824:	2b00      	cmp	r3, #0
 8009826:	d109      	bne.n	800983c <HAL_SPI_Receive+0x1ae>
 8009828:	68fb      	ldr	r3, [r7, #12]
 800982a:	2201      	movs	r2, #1
 800982c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009830:	68fb      	ldr	r3, [r7, #12]
 8009832:	2200      	movs	r2, #0
 8009834:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009838:	2303      	movs	r3, #3
 800983a:	e05c      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 800983c:	68fb      	ldr	r3, [r7, #12]
 800983e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009842:	b29b      	uxth	r3, r3
 8009844:	2b00      	cmp	r3, #0
 8009846:	d1c1      	bne.n	80097cc <HAL_SPI_Receive+0x13e>
 8009848:	e03b      	b.n	80098c2 <HAL_SPI_Receive+0x234>
 800984a:	68fb      	ldr	r3, [r7, #12]
 800984c:	681b      	ldr	r3, [r3, #0]
 800984e:	689b      	ldr	r3, [r3, #8]
 8009850:	f003 0301 	and.w	r3, r3, #1
 8009854:	2b01      	cmp	r3, #1
 8009856:	d115      	bne.n	8009884 <HAL_SPI_Receive+0x1f6>
 8009858:	68fb      	ldr	r3, [r7, #12]
 800985a:	681b      	ldr	r3, [r3, #0]
 800985c:	68da      	ldr	r2, [r3, #12]
 800985e:	68fb      	ldr	r3, [r7, #12]
 8009860:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009862:	b292      	uxth	r2, r2
 8009864:	801a      	strh	r2, [r3, #0]
 8009866:	68fb      	ldr	r3, [r7, #12]
 8009868:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800986a:	1c9a      	adds	r2, r3, #2
 800986c:	68fb      	ldr	r3, [r7, #12]
 800986e:	641a      	str	r2, [r3, #64]	@ 0x40
 8009870:	68fb      	ldr	r3, [r7, #12]
 8009872:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009876:	b29b      	uxth	r3, r3
 8009878:	3b01      	subs	r3, #1
 800987a:	b29a      	uxth	r2, r3
 800987c:	68fb      	ldr	r3, [r7, #12]
 800987e:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009882:	e018      	b.n	80098b6 <HAL_SPI_Receive+0x228>
 8009884:	f7fc f8fa 	bl	8005a7c <HAL_GetTick>
 8009888:	4602      	mov	r2, r0
 800988a:	697b      	ldr	r3, [r7, #20]
 800988c:	1ad3      	subs	r3, r2, r3
 800988e:	683a      	ldr	r2, [r7, #0]
 8009890:	429a      	cmp	r2, r3
 8009892:	d803      	bhi.n	800989c <HAL_SPI_Receive+0x20e>
 8009894:	683b      	ldr	r3, [r7, #0]
 8009896:	f1b3 3fff 	cmp.w	r3, #4294967295
 800989a:	d102      	bne.n	80098a2 <HAL_SPI_Receive+0x214>
 800989c:	683b      	ldr	r3, [r7, #0]
 800989e:	2b00      	cmp	r3, #0
 80098a0:	d109      	bne.n	80098b6 <HAL_SPI_Receive+0x228>
 80098a2:	68fb      	ldr	r3, [r7, #12]
 80098a4:	2201      	movs	r2, #1
 80098a6:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80098aa:	68fb      	ldr	r3, [r7, #12]
 80098ac:	2200      	movs	r2, #0
 80098ae:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80098b2:	2303      	movs	r3, #3
 80098b4:	e01f      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 80098b6:	68fb      	ldr	r3, [r7, #12]
 80098b8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80098bc:	b29b      	uxth	r3, r3
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d1c3      	bne.n	800984a <HAL_SPI_Receive+0x1bc>
 80098c2:	697a      	ldr	r2, [r7, #20]
 80098c4:	6839      	ldr	r1, [r7, #0]
 80098c6:	68f8      	ldr	r0, [r7, #12]
 80098c8:	f000 ffee 	bl	800a8a8 <SPI_EndRxTransaction>
 80098cc:	4603      	mov	r3, r0
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	d002      	beq.n	80098d8 <HAL_SPI_Receive+0x24a>
 80098d2:	68fb      	ldr	r3, [r7, #12]
 80098d4:	2220      	movs	r2, #32
 80098d6:	661a      	str	r2, [r3, #96]	@ 0x60
 80098d8:	68fb      	ldr	r3, [r7, #12]
 80098da:	2201      	movs	r2, #1
 80098dc:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80098e0:	68fb      	ldr	r3, [r7, #12]
 80098e2:	2200      	movs	r2, #0
 80098e4:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80098e8:	68fb      	ldr	r3, [r7, #12]
 80098ea:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80098ec:	2b00      	cmp	r3, #0
 80098ee:	d001      	beq.n	80098f4 <HAL_SPI_Receive+0x266>
 80098f0:	2301      	movs	r3, #1
 80098f2:	e000      	b.n	80098f6 <HAL_SPI_Receive+0x268>
 80098f4:	2300      	movs	r3, #0
 80098f6:	4618      	mov	r0, r3
 80098f8:	3718      	adds	r7, #24
 80098fa:	46bd      	mov	sp, r7
 80098fc:	bd80      	pop	{r7, pc}

080098fe <HAL_SPI_TransmitReceive>:
 80098fe:	b580      	push	{r7, lr}
 8009900:	b08a      	sub	sp, #40	@ 0x28
 8009902:	af00      	add	r7, sp, #0
 8009904:	60f8      	str	r0, [r7, #12]
 8009906:	60b9      	str	r1, [r7, #8]
 8009908:	607a      	str	r2, [r7, #4]
 800990a:	807b      	strh	r3, [r7, #2]
 800990c:	2301      	movs	r3, #1
 800990e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009910:	f7fc f8b4 	bl	8005a7c <HAL_GetTick>
 8009914:	6238      	str	r0, [r7, #32]
 8009916:	68fb      	ldr	r3, [r7, #12]
 8009918:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800991c:	77fb      	strb	r3, [r7, #31]
 800991e:	68fb      	ldr	r3, [r7, #12]
 8009920:	685b      	ldr	r3, [r3, #4]
 8009922:	61bb      	str	r3, [r7, #24]
 8009924:	887b      	ldrh	r3, [r7, #2]
 8009926:	82fb      	strh	r3, [r7, #22]
 8009928:	887b      	ldrh	r3, [r7, #2]
 800992a:	82bb      	strh	r3, [r7, #20]
 800992c:	7ffb      	ldrb	r3, [r7, #31]
 800992e:	2b01      	cmp	r3, #1
 8009930:	d00c      	beq.n	800994c <HAL_SPI_TransmitReceive+0x4e>
 8009932:	69bb      	ldr	r3, [r7, #24]
 8009934:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009938:	d106      	bne.n	8009948 <HAL_SPI_TransmitReceive+0x4a>
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	689b      	ldr	r3, [r3, #8]
 800993e:	2b00      	cmp	r3, #0
 8009940:	d102      	bne.n	8009948 <HAL_SPI_TransmitReceive+0x4a>
 8009942:	7ffb      	ldrb	r3, [r7, #31]
 8009944:	2b04      	cmp	r3, #4
 8009946:	d001      	beq.n	800994c <HAL_SPI_TransmitReceive+0x4e>
 8009948:	2302      	movs	r3, #2
 800994a:	e1f3      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 800994c:	68bb      	ldr	r3, [r7, #8]
 800994e:	2b00      	cmp	r3, #0
 8009950:	d005      	beq.n	800995e <HAL_SPI_TransmitReceive+0x60>
 8009952:	687b      	ldr	r3, [r7, #4]
 8009954:	2b00      	cmp	r3, #0
 8009956:	d002      	beq.n	800995e <HAL_SPI_TransmitReceive+0x60>
 8009958:	887b      	ldrh	r3, [r7, #2]
 800995a:	2b00      	cmp	r3, #0
 800995c:	d101      	bne.n	8009962 <HAL_SPI_TransmitReceive+0x64>
 800995e:	2301      	movs	r3, #1
 8009960:	e1e8      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009962:	68fb      	ldr	r3, [r7, #12]
 8009964:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8009968:	2b01      	cmp	r3, #1
 800996a:	d101      	bne.n	8009970 <HAL_SPI_TransmitReceive+0x72>
 800996c:	2302      	movs	r3, #2
 800996e:	e1e1      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009970:	68fb      	ldr	r3, [r7, #12]
 8009972:	2201      	movs	r2, #1
 8009974:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009978:	68fb      	ldr	r3, [r7, #12]
 800997a:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800997e:	b2db      	uxtb	r3, r3
 8009980:	2b04      	cmp	r3, #4
 8009982:	d003      	beq.n	800998c <HAL_SPI_TransmitReceive+0x8e>
 8009984:	68fb      	ldr	r3, [r7, #12]
 8009986:	2205      	movs	r2, #5
 8009988:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800998c:	68fb      	ldr	r3, [r7, #12]
 800998e:	2200      	movs	r2, #0
 8009990:	661a      	str	r2, [r3, #96]	@ 0x60
 8009992:	68fb      	ldr	r3, [r7, #12]
 8009994:	687a      	ldr	r2, [r7, #4]
 8009996:	641a      	str	r2, [r3, #64]	@ 0x40
 8009998:	68fb      	ldr	r3, [r7, #12]
 800999a:	887a      	ldrh	r2, [r7, #2]
 800999c:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 80099a0:	68fb      	ldr	r3, [r7, #12]
 80099a2:	887a      	ldrh	r2, [r7, #2]
 80099a4:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 80099a8:	68fb      	ldr	r3, [r7, #12]
 80099aa:	68ba      	ldr	r2, [r7, #8]
 80099ac:	639a      	str	r2, [r3, #56]	@ 0x38
 80099ae:	68fb      	ldr	r3, [r7, #12]
 80099b0:	887a      	ldrh	r2, [r7, #2]
 80099b2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80099b4:	68fb      	ldr	r3, [r7, #12]
 80099b6:	887a      	ldrh	r2, [r7, #2]
 80099b8:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80099ba:	68fb      	ldr	r3, [r7, #12]
 80099bc:	2200      	movs	r2, #0
 80099be:	64da      	str	r2, [r3, #76]	@ 0x4c
 80099c0:	68fb      	ldr	r3, [r7, #12]
 80099c2:	2200      	movs	r2, #0
 80099c4:	651a      	str	r2, [r3, #80]	@ 0x50
 80099c6:	68fb      	ldr	r3, [r7, #12]
 80099c8:	68db      	ldr	r3, [r3, #12]
 80099ca:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80099ce:	d802      	bhi.n	80099d6 <HAL_SPI_TransmitReceive+0xd8>
 80099d0:	8abb      	ldrh	r3, [r7, #20]
 80099d2:	2b01      	cmp	r3, #1
 80099d4:	d908      	bls.n	80099e8 <HAL_SPI_TransmitReceive+0xea>
 80099d6:	68fb      	ldr	r3, [r7, #12]
 80099d8:	681b      	ldr	r3, [r3, #0]
 80099da:	685a      	ldr	r2, [r3, #4]
 80099dc:	68fb      	ldr	r3, [r7, #12]
 80099de:	681b      	ldr	r3, [r3, #0]
 80099e0:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80099e4:	605a      	str	r2, [r3, #4]
 80099e6:	e007      	b.n	80099f8 <HAL_SPI_TransmitReceive+0xfa>
 80099e8:	68fb      	ldr	r3, [r7, #12]
 80099ea:	681b      	ldr	r3, [r3, #0]
 80099ec:	685a      	ldr	r2, [r3, #4]
 80099ee:	68fb      	ldr	r3, [r7, #12]
 80099f0:	681b      	ldr	r3, [r3, #0]
 80099f2:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80099f6:	605a      	str	r2, [r3, #4]
 80099f8:	68fb      	ldr	r3, [r7, #12]
 80099fa:	681b      	ldr	r3, [r3, #0]
 80099fc:	681b      	ldr	r3, [r3, #0]
 80099fe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009a02:	2b40      	cmp	r3, #64	@ 0x40
 8009a04:	d007      	beq.n	8009a16 <HAL_SPI_TransmitReceive+0x118>
 8009a06:	68fb      	ldr	r3, [r7, #12]
 8009a08:	681b      	ldr	r3, [r3, #0]
 8009a0a:	681a      	ldr	r2, [r3, #0]
 8009a0c:	68fb      	ldr	r3, [r7, #12]
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8009a14:	601a      	str	r2, [r3, #0]
 8009a16:	68fb      	ldr	r3, [r7, #12]
 8009a18:	68db      	ldr	r3, [r3, #12]
 8009a1a:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009a1e:	f240 8083 	bls.w	8009b28 <HAL_SPI_TransmitReceive+0x22a>
 8009a22:	68fb      	ldr	r3, [r7, #12]
 8009a24:	685b      	ldr	r3, [r3, #4]
 8009a26:	2b00      	cmp	r3, #0
 8009a28:	d002      	beq.n	8009a30 <HAL_SPI_TransmitReceive+0x132>
 8009a2a:	8afb      	ldrh	r3, [r7, #22]
 8009a2c:	2b01      	cmp	r3, #1
 8009a2e:	d16f      	bne.n	8009b10 <HAL_SPI_TransmitReceive+0x212>
 8009a30:	68fb      	ldr	r3, [r7, #12]
 8009a32:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009a34:	881a      	ldrh	r2, [r3, #0]
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	60da      	str	r2, [r3, #12]
 8009a3c:	68fb      	ldr	r3, [r7, #12]
 8009a3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009a40:	1c9a      	adds	r2, r3, #2
 8009a42:	68fb      	ldr	r3, [r7, #12]
 8009a44:	639a      	str	r2, [r3, #56]	@ 0x38
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009a4a:	b29b      	uxth	r3, r3
 8009a4c:	3b01      	subs	r3, #1
 8009a4e:	b29a      	uxth	r2, r3
 8009a50:	68fb      	ldr	r3, [r7, #12]
 8009a52:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009a54:	e05c      	b.n	8009b10 <HAL_SPI_TransmitReceive+0x212>
 8009a56:	68fb      	ldr	r3, [r7, #12]
 8009a58:	681b      	ldr	r3, [r3, #0]
 8009a5a:	689b      	ldr	r3, [r3, #8]
 8009a5c:	f003 0302 	and.w	r3, r3, #2
 8009a60:	2b02      	cmp	r3, #2
 8009a62:	d11b      	bne.n	8009a9c <HAL_SPI_TransmitReceive+0x19e>
 8009a64:	68fb      	ldr	r3, [r7, #12]
 8009a66:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009a68:	b29b      	uxth	r3, r3
 8009a6a:	2b00      	cmp	r3, #0
 8009a6c:	d016      	beq.n	8009a9c <HAL_SPI_TransmitReceive+0x19e>
 8009a6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a70:	2b01      	cmp	r3, #1
 8009a72:	d113      	bne.n	8009a9c <HAL_SPI_TransmitReceive+0x19e>
 8009a74:	68fb      	ldr	r3, [r7, #12]
 8009a76:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009a78:	881a      	ldrh	r2, [r3, #0]
 8009a7a:	68fb      	ldr	r3, [r7, #12]
 8009a7c:	681b      	ldr	r3, [r3, #0]
 8009a7e:	60da      	str	r2, [r3, #12]
 8009a80:	68fb      	ldr	r3, [r7, #12]
 8009a82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009a84:	1c9a      	adds	r2, r3, #2
 8009a86:	68fb      	ldr	r3, [r7, #12]
 8009a88:	639a      	str	r2, [r3, #56]	@ 0x38
 8009a8a:	68fb      	ldr	r3, [r7, #12]
 8009a8c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009a8e:	b29b      	uxth	r3, r3
 8009a90:	3b01      	subs	r3, #1
 8009a92:	b29a      	uxth	r2, r3
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009a98:	2300      	movs	r3, #0
 8009a9a:	627b      	str	r3, [r7, #36]	@ 0x24
 8009a9c:	68fb      	ldr	r3, [r7, #12]
 8009a9e:	681b      	ldr	r3, [r3, #0]
 8009aa0:	689b      	ldr	r3, [r3, #8]
 8009aa2:	f003 0301 	and.w	r3, r3, #1
 8009aa6:	2b01      	cmp	r3, #1
 8009aa8:	d11c      	bne.n	8009ae4 <HAL_SPI_TransmitReceive+0x1e6>
 8009aaa:	68fb      	ldr	r3, [r7, #12]
 8009aac:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009ab0:	b29b      	uxth	r3, r3
 8009ab2:	2b00      	cmp	r3, #0
 8009ab4:	d016      	beq.n	8009ae4 <HAL_SPI_TransmitReceive+0x1e6>
 8009ab6:	68fb      	ldr	r3, [r7, #12]
 8009ab8:	681b      	ldr	r3, [r3, #0]
 8009aba:	68da      	ldr	r2, [r3, #12]
 8009abc:	68fb      	ldr	r3, [r7, #12]
 8009abe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009ac0:	b292      	uxth	r2, r2
 8009ac2:	801a      	strh	r2, [r3, #0]
 8009ac4:	68fb      	ldr	r3, [r7, #12]
 8009ac6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009ac8:	1c9a      	adds	r2, r3, #2
 8009aca:	68fb      	ldr	r3, [r7, #12]
 8009acc:	641a      	str	r2, [r3, #64]	@ 0x40
 8009ace:	68fb      	ldr	r3, [r7, #12]
 8009ad0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009ad4:	b29b      	uxth	r3, r3
 8009ad6:	3b01      	subs	r3, #1
 8009ad8:	b29a      	uxth	r2, r3
 8009ada:	68fb      	ldr	r3, [r7, #12]
 8009adc:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009ae0:	2301      	movs	r3, #1
 8009ae2:	627b      	str	r3, [r7, #36]	@ 0x24
 8009ae4:	f7fb ffca 	bl	8005a7c <HAL_GetTick>
 8009ae8:	4602      	mov	r2, r0
 8009aea:	6a3b      	ldr	r3, [r7, #32]
 8009aec:	1ad3      	subs	r3, r2, r3
 8009aee:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009af0:	429a      	cmp	r2, r3
 8009af2:	d80d      	bhi.n	8009b10 <HAL_SPI_TransmitReceive+0x212>
 8009af4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009af6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009afa:	d009      	beq.n	8009b10 <HAL_SPI_TransmitReceive+0x212>
 8009afc:	68fb      	ldr	r3, [r7, #12]
 8009afe:	2201      	movs	r2, #1
 8009b00:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009b04:	68fb      	ldr	r3, [r7, #12]
 8009b06:	2200      	movs	r2, #0
 8009b08:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009b0c:	2303      	movs	r3, #3
 8009b0e:	e111      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009b10:	68fb      	ldr	r3, [r7, #12]
 8009b12:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009b14:	b29b      	uxth	r3, r3
 8009b16:	2b00      	cmp	r3, #0
 8009b18:	d19d      	bne.n	8009a56 <HAL_SPI_TransmitReceive+0x158>
 8009b1a:	68fb      	ldr	r3, [r7, #12]
 8009b1c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009b20:	b29b      	uxth	r3, r3
 8009b22:	2b00      	cmp	r3, #0
 8009b24:	d197      	bne.n	8009a56 <HAL_SPI_TransmitReceive+0x158>
 8009b26:	e0e5      	b.n	8009cf4 <HAL_SPI_TransmitReceive+0x3f6>
 8009b28:	68fb      	ldr	r3, [r7, #12]
 8009b2a:	685b      	ldr	r3, [r3, #4]
 8009b2c:	2b00      	cmp	r3, #0
 8009b2e:	d003      	beq.n	8009b38 <HAL_SPI_TransmitReceive+0x23a>
 8009b30:	8afb      	ldrh	r3, [r7, #22]
 8009b32:	2b01      	cmp	r3, #1
 8009b34:	f040 80d1 	bne.w	8009cda <HAL_SPI_TransmitReceive+0x3dc>
 8009b38:	68fb      	ldr	r3, [r7, #12]
 8009b3a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009b3c:	b29b      	uxth	r3, r3
 8009b3e:	2b01      	cmp	r3, #1
 8009b40:	d912      	bls.n	8009b68 <HAL_SPI_TransmitReceive+0x26a>
 8009b42:	68fb      	ldr	r3, [r7, #12]
 8009b44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009b46:	881a      	ldrh	r2, [r3, #0]
 8009b48:	68fb      	ldr	r3, [r7, #12]
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	60da      	str	r2, [r3, #12]
 8009b4e:	68fb      	ldr	r3, [r7, #12]
 8009b50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009b52:	1c9a      	adds	r2, r3, #2
 8009b54:	68fb      	ldr	r3, [r7, #12]
 8009b56:	639a      	str	r2, [r3, #56]	@ 0x38
 8009b58:	68fb      	ldr	r3, [r7, #12]
 8009b5a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009b5c:	b29b      	uxth	r3, r3
 8009b5e:	3b02      	subs	r3, #2
 8009b60:	b29a      	uxth	r2, r3
 8009b62:	68fb      	ldr	r3, [r7, #12]
 8009b64:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009b66:	e0b8      	b.n	8009cda <HAL_SPI_TransmitReceive+0x3dc>
 8009b68:	68fb      	ldr	r3, [r7, #12]
 8009b6a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009b6c:	68fb      	ldr	r3, [r7, #12]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	330c      	adds	r3, #12
 8009b72:	7812      	ldrb	r2, [r2, #0]
 8009b74:	701a      	strb	r2, [r3, #0]
 8009b76:	68fb      	ldr	r3, [r7, #12]
 8009b78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009b7a:	1c5a      	adds	r2, r3, #1
 8009b7c:	68fb      	ldr	r3, [r7, #12]
 8009b7e:	639a      	str	r2, [r3, #56]	@ 0x38
 8009b80:	68fb      	ldr	r3, [r7, #12]
 8009b82:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009b84:	b29b      	uxth	r3, r3
 8009b86:	3b01      	subs	r3, #1
 8009b88:	b29a      	uxth	r2, r3
 8009b8a:	68fb      	ldr	r3, [r7, #12]
 8009b8c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009b8e:	e0a4      	b.n	8009cda <HAL_SPI_TransmitReceive+0x3dc>
 8009b90:	68fb      	ldr	r3, [r7, #12]
 8009b92:	681b      	ldr	r3, [r3, #0]
 8009b94:	689b      	ldr	r3, [r3, #8]
 8009b96:	f003 0302 	and.w	r3, r3, #2
 8009b9a:	2b02      	cmp	r3, #2
 8009b9c:	d134      	bne.n	8009c08 <HAL_SPI_TransmitReceive+0x30a>
 8009b9e:	68fb      	ldr	r3, [r7, #12]
 8009ba0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009ba2:	b29b      	uxth	r3, r3
 8009ba4:	2b00      	cmp	r3, #0
 8009ba6:	d02f      	beq.n	8009c08 <HAL_SPI_TransmitReceive+0x30a>
 8009ba8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009baa:	2b01      	cmp	r3, #1
 8009bac:	d12c      	bne.n	8009c08 <HAL_SPI_TransmitReceive+0x30a>
 8009bae:	68fb      	ldr	r3, [r7, #12]
 8009bb0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009bb2:	b29b      	uxth	r3, r3
 8009bb4:	2b01      	cmp	r3, #1
 8009bb6:	d912      	bls.n	8009bde <HAL_SPI_TransmitReceive+0x2e0>
 8009bb8:	68fb      	ldr	r3, [r7, #12]
 8009bba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009bbc:	881a      	ldrh	r2, [r3, #0]
 8009bbe:	68fb      	ldr	r3, [r7, #12]
 8009bc0:	681b      	ldr	r3, [r3, #0]
 8009bc2:	60da      	str	r2, [r3, #12]
 8009bc4:	68fb      	ldr	r3, [r7, #12]
 8009bc6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009bc8:	1c9a      	adds	r2, r3, #2
 8009bca:	68fb      	ldr	r3, [r7, #12]
 8009bcc:	639a      	str	r2, [r3, #56]	@ 0x38
 8009bce:	68fb      	ldr	r3, [r7, #12]
 8009bd0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009bd2:	b29b      	uxth	r3, r3
 8009bd4:	3b02      	subs	r3, #2
 8009bd6:	b29a      	uxth	r2, r3
 8009bd8:	68fb      	ldr	r3, [r7, #12]
 8009bda:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009bdc:	e012      	b.n	8009c04 <HAL_SPI_TransmitReceive+0x306>
 8009bde:	68fb      	ldr	r3, [r7, #12]
 8009be0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009be2:	68fb      	ldr	r3, [r7, #12]
 8009be4:	681b      	ldr	r3, [r3, #0]
 8009be6:	330c      	adds	r3, #12
 8009be8:	7812      	ldrb	r2, [r2, #0]
 8009bea:	701a      	strb	r2, [r3, #0]
 8009bec:	68fb      	ldr	r3, [r7, #12]
 8009bee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009bf0:	1c5a      	adds	r2, r3, #1
 8009bf2:	68fb      	ldr	r3, [r7, #12]
 8009bf4:	639a      	str	r2, [r3, #56]	@ 0x38
 8009bf6:	68fb      	ldr	r3, [r7, #12]
 8009bf8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009bfa:	b29b      	uxth	r3, r3
 8009bfc:	3b01      	subs	r3, #1
 8009bfe:	b29a      	uxth	r2, r3
 8009c00:	68fb      	ldr	r3, [r7, #12]
 8009c02:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009c04:	2300      	movs	r3, #0
 8009c06:	627b      	str	r3, [r7, #36]	@ 0x24
 8009c08:	68fb      	ldr	r3, [r7, #12]
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	689b      	ldr	r3, [r3, #8]
 8009c0e:	f003 0301 	and.w	r3, r3, #1
 8009c12:	2b01      	cmp	r3, #1
 8009c14:	d148      	bne.n	8009ca8 <HAL_SPI_TransmitReceive+0x3aa>
 8009c16:	68fb      	ldr	r3, [r7, #12]
 8009c18:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009c1c:	b29b      	uxth	r3, r3
 8009c1e:	2b00      	cmp	r3, #0
 8009c20:	d042      	beq.n	8009ca8 <HAL_SPI_TransmitReceive+0x3aa>
 8009c22:	68fb      	ldr	r3, [r7, #12]
 8009c24:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009c28:	b29b      	uxth	r3, r3
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d923      	bls.n	8009c76 <HAL_SPI_TransmitReceive+0x378>
 8009c2e:	68fb      	ldr	r3, [r7, #12]
 8009c30:	681b      	ldr	r3, [r3, #0]
 8009c32:	68da      	ldr	r2, [r3, #12]
 8009c34:	68fb      	ldr	r3, [r7, #12]
 8009c36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009c38:	b292      	uxth	r2, r2
 8009c3a:	801a      	strh	r2, [r3, #0]
 8009c3c:	68fb      	ldr	r3, [r7, #12]
 8009c3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009c40:	1c9a      	adds	r2, r3, #2
 8009c42:	68fb      	ldr	r3, [r7, #12]
 8009c44:	641a      	str	r2, [r3, #64]	@ 0x40
 8009c46:	68fb      	ldr	r3, [r7, #12]
 8009c48:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009c4c:	b29b      	uxth	r3, r3
 8009c4e:	3b02      	subs	r3, #2
 8009c50:	b29a      	uxth	r2, r3
 8009c52:	68fb      	ldr	r3, [r7, #12]
 8009c54:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009c58:	68fb      	ldr	r3, [r7, #12]
 8009c5a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009c5e:	b29b      	uxth	r3, r3
 8009c60:	2b01      	cmp	r3, #1
 8009c62:	d81f      	bhi.n	8009ca4 <HAL_SPI_TransmitReceive+0x3a6>
 8009c64:	68fb      	ldr	r3, [r7, #12]
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	685a      	ldr	r2, [r3, #4]
 8009c6a:	68fb      	ldr	r3, [r7, #12]
 8009c6c:	681b      	ldr	r3, [r3, #0]
 8009c6e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8009c72:	605a      	str	r2, [r3, #4]
 8009c74:	e016      	b.n	8009ca4 <HAL_SPI_TransmitReceive+0x3a6>
 8009c76:	68fb      	ldr	r3, [r7, #12]
 8009c78:	681b      	ldr	r3, [r3, #0]
 8009c7a:	f103 020c 	add.w	r2, r3, #12
 8009c7e:	68fb      	ldr	r3, [r7, #12]
 8009c80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009c82:	7812      	ldrb	r2, [r2, #0]
 8009c84:	b2d2      	uxtb	r2, r2
 8009c86:	701a      	strb	r2, [r3, #0]
 8009c88:	68fb      	ldr	r3, [r7, #12]
 8009c8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009c8c:	1c5a      	adds	r2, r3, #1
 8009c8e:	68fb      	ldr	r3, [r7, #12]
 8009c90:	641a      	str	r2, [r3, #64]	@ 0x40
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009c98:	b29b      	uxth	r3, r3
 8009c9a:	3b01      	subs	r3, #1
 8009c9c:	b29a      	uxth	r2, r3
 8009c9e:	68fb      	ldr	r3, [r7, #12]
 8009ca0:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009ca4:	2301      	movs	r3, #1
 8009ca6:	627b      	str	r3, [r7, #36]	@ 0x24
 8009ca8:	f7fb fee8 	bl	8005a7c <HAL_GetTick>
 8009cac:	4602      	mov	r2, r0
 8009cae:	6a3b      	ldr	r3, [r7, #32]
 8009cb0:	1ad3      	subs	r3, r2, r3
 8009cb2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009cb4:	429a      	cmp	r2, r3
 8009cb6:	d803      	bhi.n	8009cc0 <HAL_SPI_TransmitReceive+0x3c2>
 8009cb8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009cba:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009cbe:	d102      	bne.n	8009cc6 <HAL_SPI_TransmitReceive+0x3c8>
 8009cc0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009cc2:	2b00      	cmp	r3, #0
 8009cc4:	d109      	bne.n	8009cda <HAL_SPI_TransmitReceive+0x3dc>
 8009cc6:	68fb      	ldr	r3, [r7, #12]
 8009cc8:	2201      	movs	r2, #1
 8009cca:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009cce:	68fb      	ldr	r3, [r7, #12]
 8009cd0:	2200      	movs	r2, #0
 8009cd2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009cd6:	2303      	movs	r3, #3
 8009cd8:	e02c      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009cda:	68fb      	ldr	r3, [r7, #12]
 8009cdc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8009cde:	b29b      	uxth	r3, r3
 8009ce0:	2b00      	cmp	r3, #0
 8009ce2:	f47f af55 	bne.w	8009b90 <HAL_SPI_TransmitReceive+0x292>
 8009ce6:	68fb      	ldr	r3, [r7, #12]
 8009ce8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8009cec:	b29b      	uxth	r3, r3
 8009cee:	2b00      	cmp	r3, #0
 8009cf0:	f47f af4e 	bne.w	8009b90 <HAL_SPI_TransmitReceive+0x292>
 8009cf4:	6a3a      	ldr	r2, [r7, #32]
 8009cf6:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009cf8:	68f8      	ldr	r0, [r7, #12]
 8009cfa:	f000 fe2d 	bl	800a958 <SPI_EndRxTxTransaction>
 8009cfe:	4603      	mov	r3, r0
 8009d00:	2b00      	cmp	r3, #0
 8009d02:	d008      	beq.n	8009d16 <HAL_SPI_TransmitReceive+0x418>
 8009d04:	68fb      	ldr	r3, [r7, #12]
 8009d06:	2220      	movs	r2, #32
 8009d08:	661a      	str	r2, [r3, #96]	@ 0x60
 8009d0a:	68fb      	ldr	r3, [r7, #12]
 8009d0c:	2200      	movs	r2, #0
 8009d0e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009d12:	2301      	movs	r3, #1
 8009d14:	e00e      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009d16:	68fb      	ldr	r3, [r7, #12]
 8009d18:	2201      	movs	r2, #1
 8009d1a:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009d1e:	68fb      	ldr	r3, [r7, #12]
 8009d20:	2200      	movs	r2, #0
 8009d22:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009d26:	68fb      	ldr	r3, [r7, #12]
 8009d28:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009d2a:	2b00      	cmp	r3, #0
 8009d2c:	d001      	beq.n	8009d32 <HAL_SPI_TransmitReceive+0x434>
 8009d2e:	2301      	movs	r3, #1
 8009d30:	e000      	b.n	8009d34 <HAL_SPI_TransmitReceive+0x436>
 8009d32:	2300      	movs	r3, #0
 8009d34:	4618      	mov	r0, r3
 8009d36:	3728      	adds	r7, #40	@ 0x28
 8009d38:	46bd      	mov	sp, r7
 8009d3a:	bd80      	pop	{r7, pc}

08009d3c <HAL_SPI_Transmit_IT>:
 8009d3c:	b480      	push	{r7}
 8009d3e:	b085      	sub	sp, #20
 8009d40:	af00      	add	r7, sp, #0
 8009d42:	60f8      	str	r0, [r7, #12]
 8009d44:	60b9      	str	r1, [r7, #8]
 8009d46:	4613      	mov	r3, r2
 8009d48:	80fb      	strh	r3, [r7, #6]
 8009d4a:	68bb      	ldr	r3, [r7, #8]
 8009d4c:	2b00      	cmp	r3, #0
 8009d4e:	d002      	beq.n	8009d56 <HAL_SPI_Transmit_IT+0x1a>
 8009d50:	88fb      	ldrh	r3, [r7, #6]
 8009d52:	2b00      	cmp	r3, #0
 8009d54:	d101      	bne.n	8009d5a <HAL_SPI_Transmit_IT+0x1e>
 8009d56:	2301      	movs	r3, #1
 8009d58:	e06d      	b.n	8009e36 <HAL_SPI_Transmit_IT+0xfa>
 8009d5a:	68fb      	ldr	r3, [r7, #12]
 8009d5c:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8009d60:	b2db      	uxtb	r3, r3
 8009d62:	2b01      	cmp	r3, #1
 8009d64:	d001      	beq.n	8009d6a <HAL_SPI_Transmit_IT+0x2e>
 8009d66:	2302      	movs	r3, #2
 8009d68:	e065      	b.n	8009e36 <HAL_SPI_Transmit_IT+0xfa>
 8009d6a:	68fb      	ldr	r3, [r7, #12]
 8009d6c:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8009d70:	2b01      	cmp	r3, #1
 8009d72:	d101      	bne.n	8009d78 <HAL_SPI_Transmit_IT+0x3c>
 8009d74:	2302      	movs	r3, #2
 8009d76:	e05e      	b.n	8009e36 <HAL_SPI_Transmit_IT+0xfa>
 8009d78:	68fb      	ldr	r3, [r7, #12]
 8009d7a:	2201      	movs	r2, #1
 8009d7c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009d80:	68fb      	ldr	r3, [r7, #12]
 8009d82:	2203      	movs	r2, #3
 8009d84:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009d88:	68fb      	ldr	r3, [r7, #12]
 8009d8a:	2200      	movs	r2, #0
 8009d8c:	661a      	str	r2, [r3, #96]	@ 0x60
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	68ba      	ldr	r2, [r7, #8]
 8009d92:	639a      	str	r2, [r3, #56]	@ 0x38
 8009d94:	68fb      	ldr	r3, [r7, #12]
 8009d96:	88fa      	ldrh	r2, [r7, #6]
 8009d98:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8009d9a:	68fb      	ldr	r3, [r7, #12]
 8009d9c:	88fa      	ldrh	r2, [r7, #6]
 8009d9e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009da0:	68fb      	ldr	r3, [r7, #12]
 8009da2:	2200      	movs	r2, #0
 8009da4:	641a      	str	r2, [r3, #64]	@ 0x40
 8009da6:	68fb      	ldr	r3, [r7, #12]
 8009da8:	2200      	movs	r2, #0
 8009daa:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8009dae:	68fb      	ldr	r3, [r7, #12]
 8009db0:	2200      	movs	r2, #0
 8009db2:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009db6:	68fb      	ldr	r3, [r7, #12]
 8009db8:	2200      	movs	r2, #0
 8009dba:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009dbc:	68fb      	ldr	r3, [r7, #12]
 8009dbe:	68db      	ldr	r3, [r3, #12]
 8009dc0:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009dc4:	d903      	bls.n	8009dce <HAL_SPI_Transmit_IT+0x92>
 8009dc6:	68fb      	ldr	r3, [r7, #12]
 8009dc8:	4a1e      	ldr	r2, [pc, #120]	@ (8009e44 <HAL_SPI_Transmit_IT+0x108>)
 8009dca:	651a      	str	r2, [r3, #80]	@ 0x50
 8009dcc:	e002      	b.n	8009dd4 <HAL_SPI_Transmit_IT+0x98>
 8009dce:	68fb      	ldr	r3, [r7, #12]
 8009dd0:	4a1d      	ldr	r2, [pc, #116]	@ (8009e48 <HAL_SPI_Transmit_IT+0x10c>)
 8009dd2:	651a      	str	r2, [r3, #80]	@ 0x50
 8009dd4:	68fb      	ldr	r3, [r7, #12]
 8009dd6:	689b      	ldr	r3, [r3, #8]
 8009dd8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009ddc:	d10f      	bne.n	8009dfe <HAL_SPI_Transmit_IT+0xc2>
 8009dde:	68fb      	ldr	r3, [r7, #12]
 8009de0:	681b      	ldr	r3, [r3, #0]
 8009de2:	681a      	ldr	r2, [r3, #0]
 8009de4:	68fb      	ldr	r3, [r7, #12]
 8009de6:	681b      	ldr	r3, [r3, #0]
 8009de8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009dec:	601a      	str	r2, [r3, #0]
 8009dee:	68fb      	ldr	r3, [r7, #12]
 8009df0:	681b      	ldr	r3, [r3, #0]
 8009df2:	681a      	ldr	r2, [r3, #0]
 8009df4:	68fb      	ldr	r3, [r7, #12]
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8009dfc:	601a      	str	r2, [r3, #0]
 8009dfe:	68fb      	ldr	r3, [r7, #12]
 8009e00:	681b      	ldr	r3, [r3, #0]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009e08:	2b40      	cmp	r3, #64	@ 0x40
 8009e0a:	d007      	beq.n	8009e1c <HAL_SPI_Transmit_IT+0xe0>
 8009e0c:	68fb      	ldr	r3, [r7, #12]
 8009e0e:	681b      	ldr	r3, [r3, #0]
 8009e10:	681a      	ldr	r2, [r3, #0]
 8009e12:	68fb      	ldr	r3, [r7, #12]
 8009e14:	681b      	ldr	r3, [r3, #0]
 8009e16:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8009e1a:	601a      	str	r2, [r3, #0]
 8009e1c:	68fb      	ldr	r3, [r7, #12]
 8009e1e:	2200      	movs	r2, #0
 8009e20:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009e24:	68fb      	ldr	r3, [r7, #12]
 8009e26:	681b      	ldr	r3, [r3, #0]
 8009e28:	685a      	ldr	r2, [r3, #4]
 8009e2a:	68fb      	ldr	r3, [r7, #12]
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	f042 02a0 	orr.w	r2, r2, #160	@ 0xa0
 8009e32:	605a      	str	r2, [r3, #4]
 8009e34:	2300      	movs	r3, #0
 8009e36:	4618      	mov	r0, r3
 8009e38:	3714      	adds	r7, #20
 8009e3a:	46bd      	mov	sp, r7
 8009e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e40:	4770      	bx	lr
 8009e42:	bf00      	nop
 8009e44:	0800a627 	.word	0x0800a627
 8009e48:	0800a5e1 	.word	0x0800a5e1

08009e4c <HAL_SPI_Receive_IT>:
 8009e4c:	b580      	push	{r7, lr}
 8009e4e:	b084      	sub	sp, #16
 8009e50:	af00      	add	r7, sp, #0
 8009e52:	60f8      	str	r0, [r7, #12]
 8009e54:	60b9      	str	r1, [r7, #8]
 8009e56:	4613      	mov	r3, r2
 8009e58:	80fb      	strh	r3, [r7, #6]
 8009e5a:	68fb      	ldr	r3, [r7, #12]
 8009e5c:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8009e60:	b2db      	uxtb	r3, r3
 8009e62:	2b01      	cmp	r3, #1
 8009e64:	d001      	beq.n	8009e6a <HAL_SPI_Receive_IT+0x1e>
 8009e66:	2302      	movs	r3, #2
 8009e68:	e092      	b.n	8009f90 <HAL_SPI_Receive_IT+0x144>
 8009e6a:	68fb      	ldr	r3, [r7, #12]
 8009e6c:	689b      	ldr	r3, [r3, #8]
 8009e6e:	2b00      	cmp	r3, #0
 8009e70:	d110      	bne.n	8009e94 <HAL_SPI_Receive_IT+0x48>
 8009e72:	68fb      	ldr	r3, [r7, #12]
 8009e74:	685b      	ldr	r3, [r3, #4]
 8009e76:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009e7a:	d10b      	bne.n	8009e94 <HAL_SPI_Receive_IT+0x48>
 8009e7c:	68fb      	ldr	r3, [r7, #12]
 8009e7e:	2204      	movs	r2, #4
 8009e80:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009e84:	88fb      	ldrh	r3, [r7, #6]
 8009e86:	68ba      	ldr	r2, [r7, #8]
 8009e88:	68b9      	ldr	r1, [r7, #8]
 8009e8a:	68f8      	ldr	r0, [r7, #12]
 8009e8c:	f000 f888 	bl	8009fa0 <HAL_SPI_TransmitReceive_IT>
 8009e90:	4603      	mov	r3, r0
 8009e92:	e07d      	b.n	8009f90 <HAL_SPI_Receive_IT+0x144>
 8009e94:	68bb      	ldr	r3, [r7, #8]
 8009e96:	2b00      	cmp	r3, #0
 8009e98:	d002      	beq.n	8009ea0 <HAL_SPI_Receive_IT+0x54>
 8009e9a:	88fb      	ldrh	r3, [r7, #6]
 8009e9c:	2b00      	cmp	r3, #0
 8009e9e:	d101      	bne.n	8009ea4 <HAL_SPI_Receive_IT+0x58>
 8009ea0:	2301      	movs	r3, #1
 8009ea2:	e075      	b.n	8009f90 <HAL_SPI_Receive_IT+0x144>
 8009ea4:	68fb      	ldr	r3, [r7, #12]
 8009ea6:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8009eaa:	2b01      	cmp	r3, #1
 8009eac:	d101      	bne.n	8009eb2 <HAL_SPI_Receive_IT+0x66>
 8009eae:	2302      	movs	r3, #2
 8009eb0:	e06e      	b.n	8009f90 <HAL_SPI_Receive_IT+0x144>
 8009eb2:	68fb      	ldr	r3, [r7, #12]
 8009eb4:	2201      	movs	r2, #1
 8009eb6:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009eba:	68fb      	ldr	r3, [r7, #12]
 8009ebc:	2204      	movs	r2, #4
 8009ebe:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8009ec2:	68fb      	ldr	r3, [r7, #12]
 8009ec4:	2200      	movs	r2, #0
 8009ec6:	661a      	str	r2, [r3, #96]	@ 0x60
 8009ec8:	68fb      	ldr	r3, [r7, #12]
 8009eca:	68ba      	ldr	r2, [r7, #8]
 8009ecc:	641a      	str	r2, [r3, #64]	@ 0x40
 8009ece:	68fb      	ldr	r3, [r7, #12]
 8009ed0:	88fa      	ldrh	r2, [r7, #6]
 8009ed2:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8009ed6:	68fb      	ldr	r3, [r7, #12]
 8009ed8:	88fa      	ldrh	r2, [r7, #6]
 8009eda:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8009ede:	68fb      	ldr	r3, [r7, #12]
 8009ee0:	2200      	movs	r2, #0
 8009ee2:	639a      	str	r2, [r3, #56]	@ 0x38
 8009ee4:	68fb      	ldr	r3, [r7, #12]
 8009ee6:	2200      	movs	r2, #0
 8009ee8:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8009eea:	68fb      	ldr	r3, [r7, #12]
 8009eec:	2200      	movs	r2, #0
 8009eee:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8009ef0:	68fb      	ldr	r3, [r7, #12]
 8009ef2:	2200      	movs	r2, #0
 8009ef4:	651a      	str	r2, [r3, #80]	@ 0x50
 8009ef6:	68fb      	ldr	r3, [r7, #12]
 8009ef8:	68db      	ldr	r3, [r3, #12]
 8009efa:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8009efe:	d90b      	bls.n	8009f18 <HAL_SPI_Receive_IT+0xcc>
 8009f00:	68fb      	ldr	r3, [r7, #12]
 8009f02:	681b      	ldr	r3, [r3, #0]
 8009f04:	685a      	ldr	r2, [r3, #4]
 8009f06:	68fb      	ldr	r3, [r7, #12]
 8009f08:	681b      	ldr	r3, [r3, #0]
 8009f0a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8009f0e:	605a      	str	r2, [r3, #4]
 8009f10:	68fb      	ldr	r3, [r7, #12]
 8009f12:	4a21      	ldr	r2, [pc, #132]	@ (8009f98 <HAL_SPI_Receive_IT+0x14c>)
 8009f14:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009f16:	e00a      	b.n	8009f2e <HAL_SPI_Receive_IT+0xe2>
 8009f18:	68fb      	ldr	r3, [r7, #12]
 8009f1a:	681b      	ldr	r3, [r3, #0]
 8009f1c:	685a      	ldr	r2, [r3, #4]
 8009f1e:	68fb      	ldr	r3, [r7, #12]
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8009f26:	605a      	str	r2, [r3, #4]
 8009f28:	68fb      	ldr	r3, [r7, #12]
 8009f2a:	4a1c      	ldr	r2, [pc, #112]	@ (8009f9c <HAL_SPI_Receive_IT+0x150>)
 8009f2c:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009f2e:	68fb      	ldr	r3, [r7, #12]
 8009f30:	689b      	ldr	r3, [r3, #8]
 8009f32:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009f36:	d10f      	bne.n	8009f58 <HAL_SPI_Receive_IT+0x10c>
 8009f38:	68fb      	ldr	r3, [r7, #12]
 8009f3a:	681b      	ldr	r3, [r3, #0]
 8009f3c:	681a      	ldr	r2, [r3, #0]
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8009f46:	601a      	str	r2, [r3, #0]
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	681b      	ldr	r3, [r3, #0]
 8009f4c:	681a      	ldr	r2, [r3, #0]
 8009f4e:	68fb      	ldr	r3, [r7, #12]
 8009f50:	681b      	ldr	r3, [r3, #0]
 8009f52:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8009f56:	601a      	str	r2, [r3, #0]
 8009f58:	68fb      	ldr	r3, [r7, #12]
 8009f5a:	681b      	ldr	r3, [r3, #0]
 8009f5c:	681b      	ldr	r3, [r3, #0]
 8009f5e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009f62:	2b40      	cmp	r3, #64	@ 0x40
 8009f64:	d007      	beq.n	8009f76 <HAL_SPI_Receive_IT+0x12a>
 8009f66:	68fb      	ldr	r3, [r7, #12]
 8009f68:	681b      	ldr	r3, [r3, #0]
 8009f6a:	681a      	ldr	r2, [r3, #0]
 8009f6c:	68fb      	ldr	r3, [r7, #12]
 8009f6e:	681b      	ldr	r3, [r3, #0]
 8009f70:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8009f74:	601a      	str	r2, [r3, #0]
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	2200      	movs	r2, #0
 8009f7a:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8009f7e:	68fb      	ldr	r3, [r7, #12]
 8009f80:	681b      	ldr	r3, [r3, #0]
 8009f82:	685a      	ldr	r2, [r3, #4]
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	681b      	ldr	r3, [r3, #0]
 8009f88:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8009f8c:	605a      	str	r2, [r3, #4]
 8009f8e:	2300      	movs	r3, #0
 8009f90:	4618      	mov	r0, r3
 8009f92:	3710      	adds	r7, #16
 8009f94:	46bd      	mov	sp, r7
 8009f96:	bd80      	pop	{r7, pc}
 8009f98:	0800a595 	.word	0x0800a595
 8009f9c:	0800a545 	.word	0x0800a545

08009fa0 <HAL_SPI_TransmitReceive_IT>:
 8009fa0:	b480      	push	{r7}
 8009fa2:	b087      	sub	sp, #28
 8009fa4:	af00      	add	r7, sp, #0
 8009fa6:	60f8      	str	r0, [r7, #12]
 8009fa8:	60b9      	str	r1, [r7, #8]
 8009faa:	607a      	str	r2, [r7, #4]
 8009fac:	807b      	strh	r3, [r7, #2]
 8009fae:	68fb      	ldr	r3, [r7, #12]
 8009fb0:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8009fb4:	75fb      	strb	r3, [r7, #23]
 8009fb6:	68fb      	ldr	r3, [r7, #12]
 8009fb8:	685b      	ldr	r3, [r3, #4]
 8009fba:	613b      	str	r3, [r7, #16]
 8009fbc:	7dfb      	ldrb	r3, [r7, #23]
 8009fbe:	2b01      	cmp	r3, #1
 8009fc0:	d00c      	beq.n	8009fdc <HAL_SPI_TransmitReceive_IT+0x3c>
 8009fc2:	693b      	ldr	r3, [r7, #16]
 8009fc4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8009fc8:	d106      	bne.n	8009fd8 <HAL_SPI_TransmitReceive_IT+0x38>
 8009fca:	68fb      	ldr	r3, [r7, #12]
 8009fcc:	689b      	ldr	r3, [r3, #8]
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d102      	bne.n	8009fd8 <HAL_SPI_TransmitReceive_IT+0x38>
 8009fd2:	7dfb      	ldrb	r3, [r7, #23]
 8009fd4:	2b04      	cmp	r3, #4
 8009fd6:	d001      	beq.n	8009fdc <HAL_SPI_TransmitReceive_IT+0x3c>
 8009fd8:	2302      	movs	r3, #2
 8009fda:	e07d      	b.n	800a0d8 <HAL_SPI_TransmitReceive_IT+0x138>
 8009fdc:	68bb      	ldr	r3, [r7, #8]
 8009fde:	2b00      	cmp	r3, #0
 8009fe0:	d005      	beq.n	8009fee <HAL_SPI_TransmitReceive_IT+0x4e>
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d002      	beq.n	8009fee <HAL_SPI_TransmitReceive_IT+0x4e>
 8009fe8:	887b      	ldrh	r3, [r7, #2]
 8009fea:	2b00      	cmp	r3, #0
 8009fec:	d101      	bne.n	8009ff2 <HAL_SPI_TransmitReceive_IT+0x52>
 8009fee:	2301      	movs	r3, #1
 8009ff0:	e072      	b.n	800a0d8 <HAL_SPI_TransmitReceive_IT+0x138>
 8009ff2:	68fb      	ldr	r3, [r7, #12]
 8009ff4:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8009ff8:	2b01      	cmp	r3, #1
 8009ffa:	d101      	bne.n	800a000 <HAL_SPI_TransmitReceive_IT+0x60>
 8009ffc:	2302      	movs	r3, #2
 8009ffe:	e06b      	b.n	800a0d8 <HAL_SPI_TransmitReceive_IT+0x138>
 800a000:	68fb      	ldr	r3, [r7, #12]
 800a002:	2201      	movs	r2, #1
 800a004:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800a008:	68fb      	ldr	r3, [r7, #12]
 800a00a:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800a00e:	b2db      	uxtb	r3, r3
 800a010:	2b04      	cmp	r3, #4
 800a012:	d003      	beq.n	800a01c <HAL_SPI_TransmitReceive_IT+0x7c>
 800a014:	68fb      	ldr	r3, [r7, #12]
 800a016:	2205      	movs	r2, #5
 800a018:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800a01c:	68fb      	ldr	r3, [r7, #12]
 800a01e:	2200      	movs	r2, #0
 800a020:	661a      	str	r2, [r3, #96]	@ 0x60
 800a022:	68fb      	ldr	r3, [r7, #12]
 800a024:	68ba      	ldr	r2, [r7, #8]
 800a026:	639a      	str	r2, [r3, #56]	@ 0x38
 800a028:	68fb      	ldr	r3, [r7, #12]
 800a02a:	887a      	ldrh	r2, [r7, #2]
 800a02c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800a02e:	68fb      	ldr	r3, [r7, #12]
 800a030:	887a      	ldrh	r2, [r7, #2]
 800a032:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a034:	68fb      	ldr	r3, [r7, #12]
 800a036:	687a      	ldr	r2, [r7, #4]
 800a038:	641a      	str	r2, [r3, #64]	@ 0x40
 800a03a:	68fb      	ldr	r3, [r7, #12]
 800a03c:	887a      	ldrh	r2, [r7, #2]
 800a03e:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	887a      	ldrh	r2, [r7, #2]
 800a046:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a04a:	68fb      	ldr	r3, [r7, #12]
 800a04c:	68db      	ldr	r3, [r3, #12]
 800a04e:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800a052:	d906      	bls.n	800a062 <HAL_SPI_TransmitReceive_IT+0xc2>
 800a054:	68fb      	ldr	r3, [r7, #12]
 800a056:	4a23      	ldr	r2, [pc, #140]	@ (800a0e4 <HAL_SPI_TransmitReceive_IT+0x144>)
 800a058:	64da      	str	r2, [r3, #76]	@ 0x4c
 800a05a:	68fb      	ldr	r3, [r7, #12]
 800a05c:	4a22      	ldr	r2, [pc, #136]	@ (800a0e8 <HAL_SPI_TransmitReceive_IT+0x148>)
 800a05e:	651a      	str	r2, [r3, #80]	@ 0x50
 800a060:	e005      	b.n	800a06e <HAL_SPI_TransmitReceive_IT+0xce>
 800a062:	68fb      	ldr	r3, [r7, #12]
 800a064:	4a21      	ldr	r2, [pc, #132]	@ (800a0ec <HAL_SPI_TransmitReceive_IT+0x14c>)
 800a066:	64da      	str	r2, [r3, #76]	@ 0x4c
 800a068:	68fb      	ldr	r3, [r7, #12]
 800a06a:	4a21      	ldr	r2, [pc, #132]	@ (800a0f0 <HAL_SPI_TransmitReceive_IT+0x150>)
 800a06c:	651a      	str	r2, [r3, #80]	@ 0x50
 800a06e:	68fb      	ldr	r3, [r7, #12]
 800a070:	68db      	ldr	r3, [r3, #12]
 800a072:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800a076:	d802      	bhi.n	800a07e <HAL_SPI_TransmitReceive_IT+0xde>
 800a078:	887b      	ldrh	r3, [r7, #2]
 800a07a:	2b01      	cmp	r3, #1
 800a07c:	d908      	bls.n	800a090 <HAL_SPI_TransmitReceive_IT+0xf0>
 800a07e:	68fb      	ldr	r3, [r7, #12]
 800a080:	681b      	ldr	r3, [r3, #0]
 800a082:	685a      	ldr	r2, [r3, #4]
 800a084:	68fb      	ldr	r3, [r7, #12]
 800a086:	681b      	ldr	r3, [r3, #0]
 800a088:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800a08c:	605a      	str	r2, [r3, #4]
 800a08e:	e007      	b.n	800a0a0 <HAL_SPI_TransmitReceive_IT+0x100>
 800a090:	68fb      	ldr	r3, [r7, #12]
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	685a      	ldr	r2, [r3, #4]
 800a096:	68fb      	ldr	r3, [r7, #12]
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a09e:	605a      	str	r2, [r3, #4]
 800a0a0:	68fb      	ldr	r3, [r7, #12]
 800a0a2:	681b      	ldr	r3, [r3, #0]
 800a0a4:	681b      	ldr	r3, [r3, #0]
 800a0a6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a0aa:	2b40      	cmp	r3, #64	@ 0x40
 800a0ac:	d007      	beq.n	800a0be <HAL_SPI_TransmitReceive_IT+0x11e>
 800a0ae:	68fb      	ldr	r3, [r7, #12]
 800a0b0:	681b      	ldr	r3, [r3, #0]
 800a0b2:	681a      	ldr	r2, [r3, #0]
 800a0b4:	68fb      	ldr	r3, [r7, #12]
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800a0bc:	601a      	str	r2, [r3, #0]
 800a0be:	68fb      	ldr	r3, [r7, #12]
 800a0c0:	2200      	movs	r2, #0
 800a0c2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800a0c6:	68fb      	ldr	r3, [r7, #12]
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	685a      	ldr	r2, [r3, #4]
 800a0cc:	68fb      	ldr	r3, [r7, #12]
 800a0ce:	681b      	ldr	r3, [r3, #0]
 800a0d0:	f042 02e0 	orr.w	r2, r2, #224	@ 0xe0
 800a0d4:	605a      	str	r2, [r3, #4]
 800a0d6:	2300      	movs	r3, #0
 800a0d8:	4618      	mov	r0, r3
 800a0da:	371c      	adds	r7, #28
 800a0dc:	46bd      	mov	sp, r7
 800a0de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e2:	4770      	bx	lr
 800a0e4:	0800a47f 	.word	0x0800a47f
 800a0e8:	0800a4e5 	.word	0x0800a4e5
 800a0ec:	0800a32f 	.word	0x0800a32f
 800a0f0:	0800a3ed 	.word	0x0800a3ed

0800a0f4 <HAL_SPI_IRQHandler>:
 800a0f4:	b580      	push	{r7, lr}
 800a0f6:	b088      	sub	sp, #32
 800a0f8:	af00      	add	r7, sp, #0
 800a0fa:	6078      	str	r0, [r7, #4]
 800a0fc:	687b      	ldr	r3, [r7, #4]
 800a0fe:	681b      	ldr	r3, [r3, #0]
 800a100:	685b      	ldr	r3, [r3, #4]
 800a102:	61fb      	str	r3, [r7, #28]
 800a104:	687b      	ldr	r3, [r7, #4]
 800a106:	681b      	ldr	r3, [r3, #0]
 800a108:	689b      	ldr	r3, [r3, #8]
 800a10a:	61bb      	str	r3, [r7, #24]
 800a10c:	69bb      	ldr	r3, [r7, #24]
 800a10e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a112:	2b00      	cmp	r3, #0
 800a114:	d10e      	bne.n	800a134 <HAL_SPI_IRQHandler+0x40>
 800a116:	69bb      	ldr	r3, [r7, #24]
 800a118:	f003 0301 	and.w	r3, r3, #1
 800a11c:	2b00      	cmp	r3, #0
 800a11e:	d009      	beq.n	800a134 <HAL_SPI_IRQHandler+0x40>
 800a120:	69fb      	ldr	r3, [r7, #28]
 800a122:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a126:	2b00      	cmp	r3, #0
 800a128:	d004      	beq.n	800a134 <HAL_SPI_IRQHandler+0x40>
 800a12a:	687b      	ldr	r3, [r7, #4]
 800a12c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a12e:	6878      	ldr	r0, [r7, #4]
 800a130:	4798      	blx	r3
 800a132:	e0ce      	b.n	800a2d2 <HAL_SPI_IRQHandler+0x1de>
 800a134:	69bb      	ldr	r3, [r7, #24]
 800a136:	f003 0302 	and.w	r3, r3, #2
 800a13a:	2b00      	cmp	r3, #0
 800a13c:	d009      	beq.n	800a152 <HAL_SPI_IRQHandler+0x5e>
 800a13e:	69fb      	ldr	r3, [r7, #28]
 800a140:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a144:	2b00      	cmp	r3, #0
 800a146:	d004      	beq.n	800a152 <HAL_SPI_IRQHandler+0x5e>
 800a148:	687b      	ldr	r3, [r7, #4]
 800a14a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a14c:	6878      	ldr	r0, [r7, #4]
 800a14e:	4798      	blx	r3
 800a150:	e0bf      	b.n	800a2d2 <HAL_SPI_IRQHandler+0x1de>
 800a152:	69bb      	ldr	r3, [r7, #24]
 800a154:	f003 0320 	and.w	r3, r3, #32
 800a158:	2b00      	cmp	r3, #0
 800a15a:	d10a      	bne.n	800a172 <HAL_SPI_IRQHandler+0x7e>
 800a15c:	69bb      	ldr	r3, [r7, #24]
 800a15e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a162:	2b00      	cmp	r3, #0
 800a164:	d105      	bne.n	800a172 <HAL_SPI_IRQHandler+0x7e>
 800a166:	69bb      	ldr	r3, [r7, #24]
 800a168:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800a16c:	2b00      	cmp	r3, #0
 800a16e:	f000 80b0 	beq.w	800a2d2 <HAL_SPI_IRQHandler+0x1de>
 800a172:	69fb      	ldr	r3, [r7, #28]
 800a174:	f003 0320 	and.w	r3, r3, #32
 800a178:	2b00      	cmp	r3, #0
 800a17a:	f000 80aa 	beq.w	800a2d2 <HAL_SPI_IRQHandler+0x1de>
 800a17e:	69bb      	ldr	r3, [r7, #24]
 800a180:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a184:	2b00      	cmp	r3, #0
 800a186:	d023      	beq.n	800a1d0 <HAL_SPI_IRQHandler+0xdc>
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800a18e:	b2db      	uxtb	r3, r3
 800a190:	2b03      	cmp	r3, #3
 800a192:	d011      	beq.n	800a1b8 <HAL_SPI_IRQHandler+0xc4>
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a198:	f043 0204 	orr.w	r2, r3, #4
 800a19c:	687b      	ldr	r3, [r7, #4]
 800a19e:	661a      	str	r2, [r3, #96]	@ 0x60
 800a1a0:	2300      	movs	r3, #0
 800a1a2:	617b      	str	r3, [r7, #20]
 800a1a4:	687b      	ldr	r3, [r7, #4]
 800a1a6:	681b      	ldr	r3, [r3, #0]
 800a1a8:	68db      	ldr	r3, [r3, #12]
 800a1aa:	617b      	str	r3, [r7, #20]
 800a1ac:	687b      	ldr	r3, [r7, #4]
 800a1ae:	681b      	ldr	r3, [r3, #0]
 800a1b0:	689b      	ldr	r3, [r3, #8]
 800a1b2:	617b      	str	r3, [r7, #20]
 800a1b4:	697b      	ldr	r3, [r7, #20]
 800a1b6:	e00b      	b.n	800a1d0 <HAL_SPI_IRQHandler+0xdc>
 800a1b8:	2300      	movs	r3, #0
 800a1ba:	613b      	str	r3, [r7, #16]
 800a1bc:	687b      	ldr	r3, [r7, #4]
 800a1be:	681b      	ldr	r3, [r3, #0]
 800a1c0:	68db      	ldr	r3, [r3, #12]
 800a1c2:	613b      	str	r3, [r7, #16]
 800a1c4:	687b      	ldr	r3, [r7, #4]
 800a1c6:	681b      	ldr	r3, [r3, #0]
 800a1c8:	689b      	ldr	r3, [r3, #8]
 800a1ca:	613b      	str	r3, [r7, #16]
 800a1cc:	693b      	ldr	r3, [r7, #16]
 800a1ce:	e080      	b.n	800a2d2 <HAL_SPI_IRQHandler+0x1de>
 800a1d0:	69bb      	ldr	r3, [r7, #24]
 800a1d2:	f003 0320 	and.w	r3, r3, #32
 800a1d6:	2b00      	cmp	r3, #0
 800a1d8:	d014      	beq.n	800a204 <HAL_SPI_IRQHandler+0x110>
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a1de:	f043 0201 	orr.w	r2, r3, #1
 800a1e2:	687b      	ldr	r3, [r7, #4]
 800a1e4:	661a      	str	r2, [r3, #96]	@ 0x60
 800a1e6:	2300      	movs	r3, #0
 800a1e8:	60fb      	str	r3, [r7, #12]
 800a1ea:	687b      	ldr	r3, [r7, #4]
 800a1ec:	681b      	ldr	r3, [r3, #0]
 800a1ee:	689b      	ldr	r3, [r3, #8]
 800a1f0:	60fb      	str	r3, [r7, #12]
 800a1f2:	687b      	ldr	r3, [r7, #4]
 800a1f4:	681b      	ldr	r3, [r3, #0]
 800a1f6:	681a      	ldr	r2, [r3, #0]
 800a1f8:	687b      	ldr	r3, [r7, #4]
 800a1fa:	681b      	ldr	r3, [r3, #0]
 800a1fc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a200:	601a      	str	r2, [r3, #0]
 800a202:	68fb      	ldr	r3, [r7, #12]
 800a204:	69bb      	ldr	r3, [r7, #24]
 800a206:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800a20a:	2b00      	cmp	r3, #0
 800a20c:	d00c      	beq.n	800a228 <HAL_SPI_IRQHandler+0x134>
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a212:	f043 0208 	orr.w	r2, r3, #8
 800a216:	687b      	ldr	r3, [r7, #4]
 800a218:	661a      	str	r2, [r3, #96]	@ 0x60
 800a21a:	2300      	movs	r3, #0
 800a21c:	60bb      	str	r3, [r7, #8]
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	681b      	ldr	r3, [r3, #0]
 800a222:	689b      	ldr	r3, [r3, #8]
 800a224:	60bb      	str	r3, [r7, #8]
 800a226:	68bb      	ldr	r3, [r7, #8]
 800a228:	687b      	ldr	r3, [r7, #4]
 800a22a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a22c:	2b00      	cmp	r3, #0
 800a22e:	d04f      	beq.n	800a2d0 <HAL_SPI_IRQHandler+0x1dc>
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	681b      	ldr	r3, [r3, #0]
 800a234:	685a      	ldr	r2, [r3, #4]
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	681b      	ldr	r3, [r3, #0]
 800a23a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a23e:	605a      	str	r2, [r3, #4]
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	2201      	movs	r2, #1
 800a244:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800a248:	69fb      	ldr	r3, [r7, #28]
 800a24a:	f003 0302 	and.w	r3, r3, #2
 800a24e:	2b00      	cmp	r3, #0
 800a250:	d104      	bne.n	800a25c <HAL_SPI_IRQHandler+0x168>
 800a252:	69fb      	ldr	r3, [r7, #28]
 800a254:	f003 0301 	and.w	r3, r3, #1
 800a258:	2b00      	cmp	r3, #0
 800a25a:	d034      	beq.n	800a2c6 <HAL_SPI_IRQHandler+0x1d2>
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	685a      	ldr	r2, [r3, #4]
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	f022 0203 	bic.w	r2, r2, #3
 800a26a:	605a      	str	r2, [r3, #4]
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a270:	2b00      	cmp	r3, #0
 800a272:	d011      	beq.n	800a298 <HAL_SPI_IRQHandler+0x1a4>
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a278:	4a17      	ldr	r2, [pc, #92]	@ (800a2d8 <HAL_SPI_IRQHandler+0x1e4>)
 800a27a:	639a      	str	r2, [r3, #56]	@ 0x38
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a280:	4618      	mov	r0, r3
 800a282:	f7fb fe19 	bl	8005eb8 <HAL_DMA_Abort_IT>
 800a286:	4603      	mov	r3, r0
 800a288:	2b00      	cmp	r3, #0
 800a28a:	d005      	beq.n	800a298 <HAL_SPI_IRQHandler+0x1a4>
 800a28c:	687b      	ldr	r3, [r7, #4]
 800a28e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a290:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	661a      	str	r2, [r3, #96]	@ 0x60
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a29c:	2b00      	cmp	r3, #0
 800a29e:	d016      	beq.n	800a2ce <HAL_SPI_IRQHandler+0x1da>
 800a2a0:	687b      	ldr	r3, [r7, #4]
 800a2a2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a2a4:	4a0c      	ldr	r2, [pc, #48]	@ (800a2d8 <HAL_SPI_IRQHandler+0x1e4>)
 800a2a6:	639a      	str	r2, [r3, #56]	@ 0x38
 800a2a8:	687b      	ldr	r3, [r7, #4]
 800a2aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a2ac:	4618      	mov	r0, r3
 800a2ae:	f7fb fe03 	bl	8005eb8 <HAL_DMA_Abort_IT>
 800a2b2:	4603      	mov	r3, r0
 800a2b4:	2b00      	cmp	r3, #0
 800a2b6:	d00a      	beq.n	800a2ce <HAL_SPI_IRQHandler+0x1da>
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a2bc:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	661a      	str	r2, [r3, #96]	@ 0x60
 800a2c4:	e003      	b.n	800a2ce <HAL_SPI_IRQHandler+0x1da>
 800a2c6:	6878      	ldr	r0, [r7, #4]
 800a2c8:	f000 f812 	bl	800a2f0 <HAL_SPI_ErrorCallback>
 800a2cc:	e000      	b.n	800a2d0 <HAL_SPI_IRQHandler+0x1dc>
 800a2ce:	bf00      	nop
 800a2d0:	bf00      	nop
 800a2d2:	3720      	adds	r7, #32
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}
 800a2d8:	0800a305 	.word	0x0800a305

0800a2dc <HAL_SPI_TxRxCpltCallback>:
 800a2dc:	b480      	push	{r7}
 800a2de:	b083      	sub	sp, #12
 800a2e0:	af00      	add	r7, sp, #0
 800a2e2:	6078      	str	r0, [r7, #4]
 800a2e4:	bf00      	nop
 800a2e6:	370c      	adds	r7, #12
 800a2e8:	46bd      	mov	sp, r7
 800a2ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ee:	4770      	bx	lr

0800a2f0 <HAL_SPI_ErrorCallback>:
 800a2f0:	b480      	push	{r7}
 800a2f2:	b083      	sub	sp, #12
 800a2f4:	af00      	add	r7, sp, #0
 800a2f6:	6078      	str	r0, [r7, #4]
 800a2f8:	bf00      	nop
 800a2fa:	370c      	adds	r7, #12
 800a2fc:	46bd      	mov	sp, r7
 800a2fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a302:	4770      	bx	lr

0800a304 <SPI_DMAAbortOnError>:
 800a304:	b580      	push	{r7, lr}
 800a306:	b084      	sub	sp, #16
 800a308:	af00      	add	r7, sp, #0
 800a30a:	6078      	str	r0, [r7, #4]
 800a30c:	687b      	ldr	r3, [r7, #4]
 800a30e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a310:	60fb      	str	r3, [r7, #12]
 800a312:	68fb      	ldr	r3, [r7, #12]
 800a314:	2200      	movs	r2, #0
 800a316:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a31a:	68fb      	ldr	r3, [r7, #12]
 800a31c:	2200      	movs	r2, #0
 800a31e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a320:	68f8      	ldr	r0, [r7, #12]
 800a322:	f7ff ffe5 	bl	800a2f0 <HAL_SPI_ErrorCallback>
 800a326:	bf00      	nop
 800a328:	3710      	adds	r7, #16
 800a32a:	46bd      	mov	sp, r7
 800a32c:	bd80      	pop	{r7, pc}

0800a32e <SPI_2linesRxISR_8BIT>:
 800a32e:	b580      	push	{r7, lr}
 800a330:	b082      	sub	sp, #8
 800a332:	af00      	add	r7, sp, #0
 800a334:	6078      	str	r0, [r7, #4]
 800a336:	687b      	ldr	r3, [r7, #4]
 800a338:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a33c:	b29b      	uxth	r3, r3
 800a33e:	2b01      	cmp	r3, #1
 800a340:	d923      	bls.n	800a38a <SPI_2linesRxISR_8BIT+0x5c>
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	68da      	ldr	r2, [r3, #12]
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a34c:	b292      	uxth	r2, r2
 800a34e:	801a      	strh	r2, [r3, #0]
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a354:	1c9a      	adds	r2, r3, #2
 800a356:	687b      	ldr	r3, [r7, #4]
 800a358:	641a      	str	r2, [r3, #64]	@ 0x40
 800a35a:	687b      	ldr	r3, [r7, #4]
 800a35c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a360:	b29b      	uxth	r3, r3
 800a362:	3b02      	subs	r3, #2
 800a364:	b29a      	uxth	r2, r3
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a372:	b29b      	uxth	r3, r3
 800a374:	2b01      	cmp	r3, #1
 800a376:	d11f      	bne.n	800a3b8 <SPI_2linesRxISR_8BIT+0x8a>
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	681b      	ldr	r3, [r3, #0]
 800a37c:	685a      	ldr	r2, [r3, #4]
 800a37e:	687b      	ldr	r3, [r7, #4]
 800a380:	681b      	ldr	r3, [r3, #0]
 800a382:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a386:	605a      	str	r2, [r3, #4]
 800a388:	e016      	b.n	800a3b8 <SPI_2linesRxISR_8BIT+0x8a>
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	681b      	ldr	r3, [r3, #0]
 800a38e:	f103 020c 	add.w	r2, r3, #12
 800a392:	687b      	ldr	r3, [r7, #4]
 800a394:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a396:	7812      	ldrb	r2, [r2, #0]
 800a398:	b2d2      	uxtb	r2, r2
 800a39a:	701a      	strb	r2, [r3, #0]
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a3a0:	1c5a      	adds	r2, r3, #1
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	641a      	str	r2, [r3, #64]	@ 0x40
 800a3a6:	687b      	ldr	r3, [r7, #4]
 800a3a8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a3ac:	b29b      	uxth	r3, r3
 800a3ae:	3b01      	subs	r3, #1
 800a3b0:	b29a      	uxth	r2, r3
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a3b8:	687b      	ldr	r3, [r7, #4]
 800a3ba:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a3be:	b29b      	uxth	r3, r3
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	d10f      	bne.n	800a3e4 <SPI_2linesRxISR_8BIT+0xb6>
 800a3c4:	687b      	ldr	r3, [r7, #4]
 800a3c6:	681b      	ldr	r3, [r3, #0]
 800a3c8:	685a      	ldr	r2, [r3, #4]
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	681b      	ldr	r3, [r3, #0]
 800a3ce:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800a3d2:	605a      	str	r2, [r3, #4]
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a3d8:	b29b      	uxth	r3, r3
 800a3da:	2b00      	cmp	r3, #0
 800a3dc:	d102      	bne.n	800a3e4 <SPI_2linesRxISR_8BIT+0xb6>
 800a3de:	6878      	ldr	r0, [r7, #4]
 800a3e0:	f000 fb00 	bl	800a9e4 <SPI_CloseRxTx_ISR>
 800a3e4:	bf00      	nop
 800a3e6:	3708      	adds	r7, #8
 800a3e8:	46bd      	mov	sp, r7
 800a3ea:	bd80      	pop	{r7, pc}

0800a3ec <SPI_2linesTxISR_8BIT>:
 800a3ec:	b580      	push	{r7, lr}
 800a3ee:	b082      	sub	sp, #8
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
 800a3f4:	687b      	ldr	r3, [r7, #4]
 800a3f6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a3f8:	b29b      	uxth	r3, r3
 800a3fa:	2b01      	cmp	r3, #1
 800a3fc:	d912      	bls.n	800a424 <SPI_2linesTxISR_8BIT+0x38>
 800a3fe:	687b      	ldr	r3, [r7, #4]
 800a400:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a402:	881a      	ldrh	r2, [r3, #0]
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	60da      	str	r2, [r3, #12]
 800a40a:	687b      	ldr	r3, [r7, #4]
 800a40c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a40e:	1c9a      	adds	r2, r3, #2
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	639a      	str	r2, [r3, #56]	@ 0x38
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a418:	b29b      	uxth	r3, r3
 800a41a:	3b02      	subs	r3, #2
 800a41c:	b29a      	uxth	r2, r3
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a422:	e012      	b.n	800a44a <SPI_2linesTxISR_8BIT+0x5e>
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	681b      	ldr	r3, [r3, #0]
 800a42c:	330c      	adds	r3, #12
 800a42e:	7812      	ldrb	r2, [r2, #0]
 800a430:	701a      	strb	r2, [r3, #0]
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a436:	1c5a      	adds	r2, r3, #1
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	639a      	str	r2, [r3, #56]	@ 0x38
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a440:	b29b      	uxth	r3, r3
 800a442:	3b01      	subs	r3, #1
 800a444:	b29a      	uxth	r2, r3
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a44e:	b29b      	uxth	r3, r3
 800a450:	2b00      	cmp	r3, #0
 800a452:	d110      	bne.n	800a476 <SPI_2linesTxISR_8BIT+0x8a>
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	685a      	ldr	r2, [r3, #4]
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800a462:	605a      	str	r2, [r3, #4]
 800a464:	687b      	ldr	r3, [r7, #4]
 800a466:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a46a:	b29b      	uxth	r3, r3
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d102      	bne.n	800a476 <SPI_2linesTxISR_8BIT+0x8a>
 800a470:	6878      	ldr	r0, [r7, #4]
 800a472:	f000 fab7 	bl	800a9e4 <SPI_CloseRxTx_ISR>
 800a476:	bf00      	nop
 800a478:	3708      	adds	r7, #8
 800a47a:	46bd      	mov	sp, r7
 800a47c:	bd80      	pop	{r7, pc}

0800a47e <SPI_2linesRxISR_16BIT>:
 800a47e:	b580      	push	{r7, lr}
 800a480:	b082      	sub	sp, #8
 800a482:	af00      	add	r7, sp, #0
 800a484:	6078      	str	r0, [r7, #4]
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	68da      	ldr	r2, [r3, #12]
 800a48c:	687b      	ldr	r3, [r7, #4]
 800a48e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a490:	b292      	uxth	r2, r2
 800a492:	801a      	strh	r2, [r3, #0]
 800a494:	687b      	ldr	r3, [r7, #4]
 800a496:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a498:	1c9a      	adds	r2, r3, #2
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	641a      	str	r2, [r3, #64]	@ 0x40
 800a49e:	687b      	ldr	r3, [r7, #4]
 800a4a0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a4a4:	b29b      	uxth	r3, r3
 800a4a6:	3b01      	subs	r3, #1
 800a4a8:	b29a      	uxth	r2, r3
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a4b6:	b29b      	uxth	r3, r3
 800a4b8:	2b00      	cmp	r3, #0
 800a4ba:	d10f      	bne.n	800a4dc <SPI_2linesRxISR_16BIT+0x5e>
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	681b      	ldr	r3, [r3, #0]
 800a4c0:	685a      	ldr	r2, [r3, #4]
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	681b      	ldr	r3, [r3, #0]
 800a4c6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a4ca:	605a      	str	r2, [r3, #4]
 800a4cc:	687b      	ldr	r3, [r7, #4]
 800a4ce:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a4d0:	b29b      	uxth	r3, r3
 800a4d2:	2b00      	cmp	r3, #0
 800a4d4:	d102      	bne.n	800a4dc <SPI_2linesRxISR_16BIT+0x5e>
 800a4d6:	6878      	ldr	r0, [r7, #4]
 800a4d8:	f000 fa84 	bl	800a9e4 <SPI_CloseRxTx_ISR>
 800a4dc:	bf00      	nop
 800a4de:	3708      	adds	r7, #8
 800a4e0:	46bd      	mov	sp, r7
 800a4e2:	bd80      	pop	{r7, pc}

0800a4e4 <SPI_2linesTxISR_16BIT>:
 800a4e4:	b580      	push	{r7, lr}
 800a4e6:	b082      	sub	sp, #8
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
 800a4ec:	687b      	ldr	r3, [r7, #4]
 800a4ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a4f0:	881a      	ldrh	r2, [r3, #0]
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	681b      	ldr	r3, [r3, #0]
 800a4f6:	60da      	str	r2, [r3, #12]
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a4fc:	1c9a      	adds	r2, r3, #2
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	639a      	str	r2, [r3, #56]	@ 0x38
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a506:	b29b      	uxth	r3, r3
 800a508:	3b01      	subs	r3, #1
 800a50a:	b29a      	uxth	r2, r3
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a514:	b29b      	uxth	r3, r3
 800a516:	2b00      	cmp	r3, #0
 800a518:	d110      	bne.n	800a53c <SPI_2linesTxISR_16BIT+0x58>
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	685a      	ldr	r2, [r3, #4]
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	681b      	ldr	r3, [r3, #0]
 800a524:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800a528:	605a      	str	r2, [r3, #4]
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a530:	b29b      	uxth	r3, r3
 800a532:	2b00      	cmp	r3, #0
 800a534:	d102      	bne.n	800a53c <SPI_2linesTxISR_16BIT+0x58>
 800a536:	6878      	ldr	r0, [r7, #4]
 800a538:	f000 fa54 	bl	800a9e4 <SPI_CloseRxTx_ISR>
 800a53c:	bf00      	nop
 800a53e:	3708      	adds	r7, #8
 800a540:	46bd      	mov	sp, r7
 800a542:	bd80      	pop	{r7, pc}

0800a544 <SPI_RxISR_8BIT>:
 800a544:	b580      	push	{r7, lr}
 800a546:	b082      	sub	sp, #8
 800a548:	af00      	add	r7, sp, #0
 800a54a:	6078      	str	r0, [r7, #4]
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	f103 020c 	add.w	r2, r3, #12
 800a554:	687b      	ldr	r3, [r7, #4]
 800a556:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a558:	7812      	ldrb	r2, [r2, #0]
 800a55a:	b2d2      	uxtb	r2, r2
 800a55c:	701a      	strb	r2, [r3, #0]
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a562:	1c5a      	adds	r2, r3, #1
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	641a      	str	r2, [r3, #64]	@ 0x40
 800a568:	687b      	ldr	r3, [r7, #4]
 800a56a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a56e:	b29b      	uxth	r3, r3
 800a570:	3b01      	subs	r3, #1
 800a572:	b29a      	uxth	r2, r3
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a580:	b29b      	uxth	r3, r3
 800a582:	2b00      	cmp	r3, #0
 800a584:	d102      	bne.n	800a58c <SPI_RxISR_8BIT+0x48>
 800a586:	6878      	ldr	r0, [r7, #4]
 800a588:	f000 fa6e 	bl	800aa68 <SPI_CloseRx_ISR>
 800a58c:	bf00      	nop
 800a58e:	3708      	adds	r7, #8
 800a590:	46bd      	mov	sp, r7
 800a592:	bd80      	pop	{r7, pc}

0800a594 <SPI_RxISR_16BIT>:
 800a594:	b580      	push	{r7, lr}
 800a596:	b082      	sub	sp, #8
 800a598:	af00      	add	r7, sp, #0
 800a59a:	6078      	str	r0, [r7, #4]
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	681b      	ldr	r3, [r3, #0]
 800a5a0:	68da      	ldr	r2, [r3, #12]
 800a5a2:	687b      	ldr	r3, [r7, #4]
 800a5a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a5a6:	b292      	uxth	r2, r2
 800a5a8:	801a      	strh	r2, [r3, #0]
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a5ae:	1c9a      	adds	r2, r3, #2
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	641a      	str	r2, [r3, #64]	@ 0x40
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a5ba:	b29b      	uxth	r3, r3
 800a5bc:	3b01      	subs	r3, #1
 800a5be:	b29a      	uxth	r2, r3
 800a5c0:	687b      	ldr	r3, [r7, #4]
 800a5c2:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800a5cc:	b29b      	uxth	r3, r3
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	d102      	bne.n	800a5d8 <SPI_RxISR_16BIT+0x44>
 800a5d2:	6878      	ldr	r0, [r7, #4]
 800a5d4:	f000 fa48 	bl	800aa68 <SPI_CloseRx_ISR>
 800a5d8:	bf00      	nop
 800a5da:	3708      	adds	r7, #8
 800a5dc:	46bd      	mov	sp, r7
 800a5de:	bd80      	pop	{r7, pc}

0800a5e0 <SPI_TxISR_8BIT>:
 800a5e0:	b580      	push	{r7, lr}
 800a5e2:	b082      	sub	sp, #8
 800a5e4:	af00      	add	r7, sp, #0
 800a5e6:	6078      	str	r0, [r7, #4]
 800a5e8:	687b      	ldr	r3, [r7, #4]
 800a5ea:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a5ec:	687b      	ldr	r3, [r7, #4]
 800a5ee:	681b      	ldr	r3, [r3, #0]
 800a5f0:	330c      	adds	r3, #12
 800a5f2:	7812      	ldrb	r2, [r2, #0]
 800a5f4:	701a      	strb	r2, [r3, #0]
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a5fa:	1c5a      	adds	r2, r3, #1
 800a5fc:	687b      	ldr	r3, [r7, #4]
 800a5fe:	639a      	str	r2, [r3, #56]	@ 0x38
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a604:	b29b      	uxth	r3, r3
 800a606:	3b01      	subs	r3, #1
 800a608:	b29a      	uxth	r2, r3
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a60e:	687b      	ldr	r3, [r7, #4]
 800a610:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a612:	b29b      	uxth	r3, r3
 800a614:	2b00      	cmp	r3, #0
 800a616:	d102      	bne.n	800a61e <SPI_TxISR_8BIT+0x3e>
 800a618:	6878      	ldr	r0, [r7, #4]
 800a61a:	f000 fa55 	bl	800aac8 <SPI_CloseTx_ISR>
 800a61e:	bf00      	nop
 800a620:	3708      	adds	r7, #8
 800a622:	46bd      	mov	sp, r7
 800a624:	bd80      	pop	{r7, pc}

0800a626 <SPI_TxISR_16BIT>:
 800a626:	b580      	push	{r7, lr}
 800a628:	b082      	sub	sp, #8
 800a62a:	af00      	add	r7, sp, #0
 800a62c:	6078      	str	r0, [r7, #4]
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a632:	881a      	ldrh	r2, [r3, #0]
 800a634:	687b      	ldr	r3, [r7, #4]
 800a636:	681b      	ldr	r3, [r3, #0]
 800a638:	60da      	str	r2, [r3, #12]
 800a63a:	687b      	ldr	r3, [r7, #4]
 800a63c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a63e:	1c9a      	adds	r2, r3, #2
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	639a      	str	r2, [r3, #56]	@ 0x38
 800a644:	687b      	ldr	r3, [r7, #4]
 800a646:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a648:	b29b      	uxth	r3, r3
 800a64a:	3b01      	subs	r3, #1
 800a64c:	b29a      	uxth	r2, r3
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800a656:	b29b      	uxth	r3, r3
 800a658:	2b00      	cmp	r3, #0
 800a65a:	d102      	bne.n	800a662 <SPI_TxISR_16BIT+0x3c>
 800a65c:	6878      	ldr	r0, [r7, #4]
 800a65e:	f000 fa33 	bl	800aac8 <SPI_CloseTx_ISR>
 800a662:	bf00      	nop
 800a664:	3708      	adds	r7, #8
 800a666:	46bd      	mov	sp, r7
 800a668:	bd80      	pop	{r7, pc}
	...

0800a66c <SPI_WaitFlagStateUntilTimeout>:
 800a66c:	b580      	push	{r7, lr}
 800a66e:	b088      	sub	sp, #32
 800a670:	af00      	add	r7, sp, #0
 800a672:	60f8      	str	r0, [r7, #12]
 800a674:	60b9      	str	r1, [r7, #8]
 800a676:	603b      	str	r3, [r7, #0]
 800a678:	4613      	mov	r3, r2
 800a67a:	71fb      	strb	r3, [r7, #7]
 800a67c:	f7fb f9fe 	bl	8005a7c <HAL_GetTick>
 800a680:	4602      	mov	r2, r0
 800a682:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a684:	1a9b      	subs	r3, r3, r2
 800a686:	683a      	ldr	r2, [r7, #0]
 800a688:	4413      	add	r3, r2
 800a68a:	61fb      	str	r3, [r7, #28]
 800a68c:	f7fb f9f6 	bl	8005a7c <HAL_GetTick>
 800a690:	61b8      	str	r0, [r7, #24]
 800a692:	4b39      	ldr	r3, [pc, #228]	@ (800a778 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800a694:	681b      	ldr	r3, [r3, #0]
 800a696:	015b      	lsls	r3, r3, #5
 800a698:	0d1b      	lsrs	r3, r3, #20
 800a69a:	69fa      	ldr	r2, [r7, #28]
 800a69c:	fb02 f303 	mul.w	r3, r2, r3
 800a6a0:	617b      	str	r3, [r7, #20]
 800a6a2:	e054      	b.n	800a74e <SPI_WaitFlagStateUntilTimeout+0xe2>
 800a6a4:	683b      	ldr	r3, [r7, #0]
 800a6a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6aa:	d050      	beq.n	800a74e <SPI_WaitFlagStateUntilTimeout+0xe2>
 800a6ac:	f7fb f9e6 	bl	8005a7c <HAL_GetTick>
 800a6b0:	4602      	mov	r2, r0
 800a6b2:	69bb      	ldr	r3, [r7, #24]
 800a6b4:	1ad3      	subs	r3, r2, r3
 800a6b6:	69fa      	ldr	r2, [r7, #28]
 800a6b8:	429a      	cmp	r2, r3
 800a6ba:	d902      	bls.n	800a6c2 <SPI_WaitFlagStateUntilTimeout+0x56>
 800a6bc:	69fb      	ldr	r3, [r7, #28]
 800a6be:	2b00      	cmp	r3, #0
 800a6c0:	d13d      	bne.n	800a73e <SPI_WaitFlagStateUntilTimeout+0xd2>
 800a6c2:	68fb      	ldr	r3, [r7, #12]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	685a      	ldr	r2, [r3, #4]
 800a6c8:	68fb      	ldr	r3, [r7, #12]
 800a6ca:	681b      	ldr	r3, [r3, #0]
 800a6cc:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a6d0:	605a      	str	r2, [r3, #4]
 800a6d2:	68fb      	ldr	r3, [r7, #12]
 800a6d4:	685b      	ldr	r3, [r3, #4]
 800a6d6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a6da:	d111      	bne.n	800a700 <SPI_WaitFlagStateUntilTimeout+0x94>
 800a6dc:	68fb      	ldr	r3, [r7, #12]
 800a6de:	689b      	ldr	r3, [r3, #8]
 800a6e0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a6e4:	d004      	beq.n	800a6f0 <SPI_WaitFlagStateUntilTimeout+0x84>
 800a6e6:	68fb      	ldr	r3, [r7, #12]
 800a6e8:	689b      	ldr	r3, [r3, #8]
 800a6ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a6ee:	d107      	bne.n	800a700 <SPI_WaitFlagStateUntilTimeout+0x94>
 800a6f0:	68fb      	ldr	r3, [r7, #12]
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	681a      	ldr	r2, [r3, #0]
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a6fe:	601a      	str	r2, [r3, #0]
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a704:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a708:	d10f      	bne.n	800a72a <SPI_WaitFlagStateUntilTimeout+0xbe>
 800a70a:	68fb      	ldr	r3, [r7, #12]
 800a70c:	681b      	ldr	r3, [r3, #0]
 800a70e:	681a      	ldr	r2, [r3, #0]
 800a710:	68fb      	ldr	r3, [r7, #12]
 800a712:	681b      	ldr	r3, [r3, #0]
 800a714:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a718:	601a      	str	r2, [r3, #0]
 800a71a:	68fb      	ldr	r3, [r7, #12]
 800a71c:	681b      	ldr	r3, [r3, #0]
 800a71e:	681a      	ldr	r2, [r3, #0]
 800a720:	68fb      	ldr	r3, [r7, #12]
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800a728:	601a      	str	r2, [r3, #0]
 800a72a:	68fb      	ldr	r3, [r7, #12]
 800a72c:	2201      	movs	r2, #1
 800a72e:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800a732:	68fb      	ldr	r3, [r7, #12]
 800a734:	2200      	movs	r2, #0
 800a736:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800a73a:	2303      	movs	r3, #3
 800a73c:	e017      	b.n	800a76e <SPI_WaitFlagStateUntilTimeout+0x102>
 800a73e:	697b      	ldr	r3, [r7, #20]
 800a740:	2b00      	cmp	r3, #0
 800a742:	d101      	bne.n	800a748 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800a744:	2300      	movs	r3, #0
 800a746:	61fb      	str	r3, [r7, #28]
 800a748:	697b      	ldr	r3, [r7, #20]
 800a74a:	3b01      	subs	r3, #1
 800a74c:	617b      	str	r3, [r7, #20]
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	681b      	ldr	r3, [r3, #0]
 800a752:	689a      	ldr	r2, [r3, #8]
 800a754:	68bb      	ldr	r3, [r7, #8]
 800a756:	4013      	ands	r3, r2
 800a758:	68ba      	ldr	r2, [r7, #8]
 800a75a:	429a      	cmp	r2, r3
 800a75c:	bf0c      	ite	eq
 800a75e:	2301      	moveq	r3, #1
 800a760:	2300      	movne	r3, #0
 800a762:	b2db      	uxtb	r3, r3
 800a764:	461a      	mov	r2, r3
 800a766:	79fb      	ldrb	r3, [r7, #7]
 800a768:	429a      	cmp	r2, r3
 800a76a:	d19b      	bne.n	800a6a4 <SPI_WaitFlagStateUntilTimeout+0x38>
 800a76c:	2300      	movs	r3, #0
 800a76e:	4618      	mov	r0, r3
 800a770:	3720      	adds	r7, #32
 800a772:	46bd      	mov	sp, r7
 800a774:	bd80      	pop	{r7, pc}
 800a776:	bf00      	nop
 800a778:	20000000 	.word	0x20000000

0800a77c <SPI_WaitFifoStateUntilTimeout>:
 800a77c:	b580      	push	{r7, lr}
 800a77e:	b08a      	sub	sp, #40	@ 0x28
 800a780:	af00      	add	r7, sp, #0
 800a782:	60f8      	str	r0, [r7, #12]
 800a784:	60b9      	str	r1, [r7, #8]
 800a786:	607a      	str	r2, [r7, #4]
 800a788:	603b      	str	r3, [r7, #0]
 800a78a:	2300      	movs	r3, #0
 800a78c:	75fb      	strb	r3, [r7, #23]
 800a78e:	f7fb f975 	bl	8005a7c <HAL_GetTick>
 800a792:	4602      	mov	r2, r0
 800a794:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a796:	1a9b      	subs	r3, r3, r2
 800a798:	683a      	ldr	r2, [r7, #0]
 800a79a:	4413      	add	r3, r2
 800a79c:	627b      	str	r3, [r7, #36]	@ 0x24
 800a79e:	f7fb f96d 	bl	8005a7c <HAL_GetTick>
 800a7a2:	6238      	str	r0, [r7, #32]
 800a7a4:	68fb      	ldr	r3, [r7, #12]
 800a7a6:	681b      	ldr	r3, [r3, #0]
 800a7a8:	330c      	adds	r3, #12
 800a7aa:	61fb      	str	r3, [r7, #28]
 800a7ac:	4b3d      	ldr	r3, [pc, #244]	@ (800a8a4 <SPI_WaitFifoStateUntilTimeout+0x128>)
 800a7ae:	681a      	ldr	r2, [r3, #0]
 800a7b0:	4613      	mov	r3, r2
 800a7b2:	009b      	lsls	r3, r3, #2
 800a7b4:	4413      	add	r3, r2
 800a7b6:	00da      	lsls	r2, r3, #3
 800a7b8:	1ad3      	subs	r3, r2, r3
 800a7ba:	0d1b      	lsrs	r3, r3, #20
 800a7bc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a7be:	fb02 f303 	mul.w	r3, r2, r3
 800a7c2:	61bb      	str	r3, [r7, #24]
 800a7c4:	e060      	b.n	800a888 <SPI_WaitFifoStateUntilTimeout+0x10c>
 800a7c6:	68bb      	ldr	r3, [r7, #8]
 800a7c8:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 800a7cc:	d107      	bne.n	800a7de <SPI_WaitFifoStateUntilTimeout+0x62>
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	2b00      	cmp	r3, #0
 800a7d2:	d104      	bne.n	800a7de <SPI_WaitFifoStateUntilTimeout+0x62>
 800a7d4:	69fb      	ldr	r3, [r7, #28]
 800a7d6:	781b      	ldrb	r3, [r3, #0]
 800a7d8:	b2db      	uxtb	r3, r3
 800a7da:	75fb      	strb	r3, [r7, #23]
 800a7dc:	7dfb      	ldrb	r3, [r7, #23]
 800a7de:	683b      	ldr	r3, [r7, #0]
 800a7e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a7e4:	d050      	beq.n	800a888 <SPI_WaitFifoStateUntilTimeout+0x10c>
 800a7e6:	f7fb f949 	bl	8005a7c <HAL_GetTick>
 800a7ea:	4602      	mov	r2, r0
 800a7ec:	6a3b      	ldr	r3, [r7, #32]
 800a7ee:	1ad3      	subs	r3, r2, r3
 800a7f0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a7f2:	429a      	cmp	r2, r3
 800a7f4:	d902      	bls.n	800a7fc <SPI_WaitFifoStateUntilTimeout+0x80>
 800a7f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d13d      	bne.n	800a878 <SPI_WaitFifoStateUntilTimeout+0xfc>
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	681b      	ldr	r3, [r3, #0]
 800a800:	685a      	ldr	r2, [r3, #4]
 800a802:	68fb      	ldr	r3, [r7, #12]
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800a80a:	605a      	str	r2, [r3, #4]
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	685b      	ldr	r3, [r3, #4]
 800a810:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a814:	d111      	bne.n	800a83a <SPI_WaitFifoStateUntilTimeout+0xbe>
 800a816:	68fb      	ldr	r3, [r7, #12]
 800a818:	689b      	ldr	r3, [r3, #8]
 800a81a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a81e:	d004      	beq.n	800a82a <SPI_WaitFifoStateUntilTimeout+0xae>
 800a820:	68fb      	ldr	r3, [r7, #12]
 800a822:	689b      	ldr	r3, [r3, #8]
 800a824:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a828:	d107      	bne.n	800a83a <SPI_WaitFifoStateUntilTimeout+0xbe>
 800a82a:	68fb      	ldr	r3, [r7, #12]
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	681a      	ldr	r2, [r3, #0]
 800a830:	68fb      	ldr	r3, [r7, #12]
 800a832:	681b      	ldr	r3, [r3, #0]
 800a834:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a838:	601a      	str	r2, [r3, #0]
 800a83a:	68fb      	ldr	r3, [r7, #12]
 800a83c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a83e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a842:	d10f      	bne.n	800a864 <SPI_WaitFifoStateUntilTimeout+0xe8>
 800a844:	68fb      	ldr	r3, [r7, #12]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	681a      	ldr	r2, [r3, #0]
 800a84a:	68fb      	ldr	r3, [r7, #12]
 800a84c:	681b      	ldr	r3, [r3, #0]
 800a84e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800a852:	601a      	str	r2, [r3, #0]
 800a854:	68fb      	ldr	r3, [r7, #12]
 800a856:	681b      	ldr	r3, [r3, #0]
 800a858:	681a      	ldr	r2, [r3, #0]
 800a85a:	68fb      	ldr	r3, [r7, #12]
 800a85c:	681b      	ldr	r3, [r3, #0]
 800a85e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800a862:	601a      	str	r2, [r3, #0]
 800a864:	68fb      	ldr	r3, [r7, #12]
 800a866:	2201      	movs	r2, #1
 800a868:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	2200      	movs	r2, #0
 800a870:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800a874:	2303      	movs	r3, #3
 800a876:	e010      	b.n	800a89a <SPI_WaitFifoStateUntilTimeout+0x11e>
 800a878:	69bb      	ldr	r3, [r7, #24]
 800a87a:	2b00      	cmp	r3, #0
 800a87c:	d101      	bne.n	800a882 <SPI_WaitFifoStateUntilTimeout+0x106>
 800a87e:	2300      	movs	r3, #0
 800a880:	627b      	str	r3, [r7, #36]	@ 0x24
 800a882:	69bb      	ldr	r3, [r7, #24]
 800a884:	3b01      	subs	r3, #1
 800a886:	61bb      	str	r3, [r7, #24]
 800a888:	68fb      	ldr	r3, [r7, #12]
 800a88a:	681b      	ldr	r3, [r3, #0]
 800a88c:	689a      	ldr	r2, [r3, #8]
 800a88e:	68bb      	ldr	r3, [r7, #8]
 800a890:	4013      	ands	r3, r2
 800a892:	687a      	ldr	r2, [r7, #4]
 800a894:	429a      	cmp	r2, r3
 800a896:	d196      	bne.n	800a7c6 <SPI_WaitFifoStateUntilTimeout+0x4a>
 800a898:	2300      	movs	r3, #0
 800a89a:	4618      	mov	r0, r3
 800a89c:	3728      	adds	r7, #40	@ 0x28
 800a89e:	46bd      	mov	sp, r7
 800a8a0:	bd80      	pop	{r7, pc}
 800a8a2:	bf00      	nop
 800a8a4:	20000000 	.word	0x20000000

0800a8a8 <SPI_EndRxTransaction>:
 800a8a8:	b580      	push	{r7, lr}
 800a8aa:	b086      	sub	sp, #24
 800a8ac:	af02      	add	r7, sp, #8
 800a8ae:	60f8      	str	r0, [r7, #12]
 800a8b0:	60b9      	str	r1, [r7, #8]
 800a8b2:	607a      	str	r2, [r7, #4]
 800a8b4:	68fb      	ldr	r3, [r7, #12]
 800a8b6:	685b      	ldr	r3, [r3, #4]
 800a8b8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a8bc:	d111      	bne.n	800a8e2 <SPI_EndRxTransaction+0x3a>
 800a8be:	68fb      	ldr	r3, [r7, #12]
 800a8c0:	689b      	ldr	r3, [r3, #8]
 800a8c2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a8c6:	d004      	beq.n	800a8d2 <SPI_EndRxTransaction+0x2a>
 800a8c8:	68fb      	ldr	r3, [r7, #12]
 800a8ca:	689b      	ldr	r3, [r3, #8]
 800a8cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a8d0:	d107      	bne.n	800a8e2 <SPI_EndRxTransaction+0x3a>
 800a8d2:	68fb      	ldr	r3, [r7, #12]
 800a8d4:	681b      	ldr	r3, [r3, #0]
 800a8d6:	681a      	ldr	r2, [r3, #0]
 800a8d8:	68fb      	ldr	r3, [r7, #12]
 800a8da:	681b      	ldr	r3, [r3, #0]
 800a8dc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800a8e0:	601a      	str	r2, [r3, #0]
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	9300      	str	r3, [sp, #0]
 800a8e6:	68bb      	ldr	r3, [r7, #8]
 800a8e8:	2200      	movs	r2, #0
 800a8ea:	2180      	movs	r1, #128	@ 0x80
 800a8ec:	68f8      	ldr	r0, [r7, #12]
 800a8ee:	f7ff febd 	bl	800a66c <SPI_WaitFlagStateUntilTimeout>
 800a8f2:	4603      	mov	r3, r0
 800a8f4:	2b00      	cmp	r3, #0
 800a8f6:	d007      	beq.n	800a908 <SPI_EndRxTransaction+0x60>
 800a8f8:	68fb      	ldr	r3, [r7, #12]
 800a8fa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a8fc:	f043 0220 	orr.w	r2, r3, #32
 800a900:	68fb      	ldr	r3, [r7, #12]
 800a902:	661a      	str	r2, [r3, #96]	@ 0x60
 800a904:	2303      	movs	r3, #3
 800a906:	e023      	b.n	800a950 <SPI_EndRxTransaction+0xa8>
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	685b      	ldr	r3, [r3, #4]
 800a90c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800a910:	d11d      	bne.n	800a94e <SPI_EndRxTransaction+0xa6>
 800a912:	68fb      	ldr	r3, [r7, #12]
 800a914:	689b      	ldr	r3, [r3, #8]
 800a916:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a91a:	d004      	beq.n	800a926 <SPI_EndRxTransaction+0x7e>
 800a91c:	68fb      	ldr	r3, [r7, #12]
 800a91e:	689b      	ldr	r3, [r3, #8]
 800a920:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a924:	d113      	bne.n	800a94e <SPI_EndRxTransaction+0xa6>
 800a926:	687b      	ldr	r3, [r7, #4]
 800a928:	9300      	str	r3, [sp, #0]
 800a92a:	68bb      	ldr	r3, [r7, #8]
 800a92c:	2200      	movs	r2, #0
 800a92e:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 800a932:	68f8      	ldr	r0, [r7, #12]
 800a934:	f7ff ff22 	bl	800a77c <SPI_WaitFifoStateUntilTimeout>
 800a938:	4603      	mov	r3, r0
 800a93a:	2b00      	cmp	r3, #0
 800a93c:	d007      	beq.n	800a94e <SPI_EndRxTransaction+0xa6>
 800a93e:	68fb      	ldr	r3, [r7, #12]
 800a940:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a942:	f043 0220 	orr.w	r2, r3, #32
 800a946:	68fb      	ldr	r3, [r7, #12]
 800a948:	661a      	str	r2, [r3, #96]	@ 0x60
 800a94a:	2303      	movs	r3, #3
 800a94c:	e000      	b.n	800a950 <SPI_EndRxTransaction+0xa8>
 800a94e:	2300      	movs	r3, #0
 800a950:	4618      	mov	r0, r3
 800a952:	3710      	adds	r7, #16
 800a954:	46bd      	mov	sp, r7
 800a956:	bd80      	pop	{r7, pc}

0800a958 <SPI_EndRxTxTransaction>:
 800a958:	b580      	push	{r7, lr}
 800a95a:	b086      	sub	sp, #24
 800a95c:	af02      	add	r7, sp, #8
 800a95e:	60f8      	str	r0, [r7, #12]
 800a960:	60b9      	str	r1, [r7, #8]
 800a962:	607a      	str	r2, [r7, #4]
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	9300      	str	r3, [sp, #0]
 800a968:	68bb      	ldr	r3, [r7, #8]
 800a96a:	2200      	movs	r2, #0
 800a96c:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 800a970:	68f8      	ldr	r0, [r7, #12]
 800a972:	f7ff ff03 	bl	800a77c <SPI_WaitFifoStateUntilTimeout>
 800a976:	4603      	mov	r3, r0
 800a978:	2b00      	cmp	r3, #0
 800a97a:	d007      	beq.n	800a98c <SPI_EndRxTxTransaction+0x34>
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a980:	f043 0220 	orr.w	r2, r3, #32
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	661a      	str	r2, [r3, #96]	@ 0x60
 800a988:	2303      	movs	r3, #3
 800a98a:	e027      	b.n	800a9dc <SPI_EndRxTxTransaction+0x84>
 800a98c:	687b      	ldr	r3, [r7, #4]
 800a98e:	9300      	str	r3, [sp, #0]
 800a990:	68bb      	ldr	r3, [r7, #8]
 800a992:	2200      	movs	r2, #0
 800a994:	2180      	movs	r1, #128	@ 0x80
 800a996:	68f8      	ldr	r0, [r7, #12]
 800a998:	f7ff fe68 	bl	800a66c <SPI_WaitFlagStateUntilTimeout>
 800a99c:	4603      	mov	r3, r0
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d007      	beq.n	800a9b2 <SPI_EndRxTxTransaction+0x5a>
 800a9a2:	68fb      	ldr	r3, [r7, #12]
 800a9a4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a9a6:	f043 0220 	orr.w	r2, r3, #32
 800a9aa:	68fb      	ldr	r3, [r7, #12]
 800a9ac:	661a      	str	r2, [r3, #96]	@ 0x60
 800a9ae:	2303      	movs	r3, #3
 800a9b0:	e014      	b.n	800a9dc <SPI_EndRxTxTransaction+0x84>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	9300      	str	r3, [sp, #0]
 800a9b6:	68bb      	ldr	r3, [r7, #8]
 800a9b8:	2200      	movs	r2, #0
 800a9ba:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 800a9be:	68f8      	ldr	r0, [r7, #12]
 800a9c0:	f7ff fedc 	bl	800a77c <SPI_WaitFifoStateUntilTimeout>
 800a9c4:	4603      	mov	r3, r0
 800a9c6:	2b00      	cmp	r3, #0
 800a9c8:	d007      	beq.n	800a9da <SPI_EndRxTxTransaction+0x82>
 800a9ca:	68fb      	ldr	r3, [r7, #12]
 800a9cc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a9ce:	f043 0220 	orr.w	r2, r3, #32
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	661a      	str	r2, [r3, #96]	@ 0x60
 800a9d6:	2303      	movs	r3, #3
 800a9d8:	e000      	b.n	800a9dc <SPI_EndRxTxTransaction+0x84>
 800a9da:	2300      	movs	r3, #0
 800a9dc:	4618      	mov	r0, r3
 800a9de:	3710      	adds	r7, #16
 800a9e0:	46bd      	mov	sp, r7
 800a9e2:	bd80      	pop	{r7, pc}

0800a9e4 <SPI_CloseRxTx_ISR>:
 800a9e4:	b580      	push	{r7, lr}
 800a9e6:	b084      	sub	sp, #16
 800a9e8:	af00      	add	r7, sp, #0
 800a9ea:	6078      	str	r0, [r7, #4]
 800a9ec:	f7fb f846 	bl	8005a7c <HAL_GetTick>
 800a9f0:	60f8      	str	r0, [r7, #12]
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	681b      	ldr	r3, [r3, #0]
 800a9f6:	685a      	ldr	r2, [r3, #4]
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	f022 0220 	bic.w	r2, r2, #32
 800aa00:	605a      	str	r2, [r3, #4]
 800aa02:	68fa      	ldr	r2, [r7, #12]
 800aa04:	2164      	movs	r1, #100	@ 0x64
 800aa06:	6878      	ldr	r0, [r7, #4]
 800aa08:	f7ff ffa6 	bl	800a958 <SPI_EndRxTxTransaction>
 800aa0c:	4603      	mov	r3, r0
 800aa0e:	2b00      	cmp	r3, #0
 800aa10:	d005      	beq.n	800aa1e <SPI_CloseRxTx_ISR+0x3a>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa16:	f043 0220 	orr.w	r2, r3, #32
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	661a      	str	r2, [r3, #96]	@ 0x60
 800aa1e:	687b      	ldr	r3, [r7, #4]
 800aa20:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d115      	bne.n	800aa52 <SPI_CloseRxTx_ISR+0x6e>
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800aa2c:	b2db      	uxtb	r3, r3
 800aa2e:	2b04      	cmp	r3, #4
 800aa30:	d107      	bne.n	800aa42 <SPI_CloseRxTx_ISR+0x5e>
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	2201      	movs	r2, #1
 800aa36:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800aa3a:	6878      	ldr	r0, [r7, #4]
 800aa3c:	f005 fd22 	bl	8010484 <HAL_SPI_RxCpltCallback>
 800aa40:	e00e      	b.n	800aa60 <SPI_CloseRxTx_ISR+0x7c>
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	2201      	movs	r2, #1
 800aa46:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800aa4a:	6878      	ldr	r0, [r7, #4]
 800aa4c:	f7ff fc46 	bl	800a2dc <HAL_SPI_TxRxCpltCallback>
 800aa50:	e006      	b.n	800aa60 <SPI_CloseRxTx_ISR+0x7c>
 800aa52:	687b      	ldr	r3, [r7, #4]
 800aa54:	2201      	movs	r2, #1
 800aa56:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800aa5a:	6878      	ldr	r0, [r7, #4]
 800aa5c:	f7ff fc48 	bl	800a2f0 <HAL_SPI_ErrorCallback>
 800aa60:	bf00      	nop
 800aa62:	3710      	adds	r7, #16
 800aa64:	46bd      	mov	sp, r7
 800aa66:	bd80      	pop	{r7, pc}

0800aa68 <SPI_CloseRx_ISR>:
 800aa68:	b580      	push	{r7, lr}
 800aa6a:	b082      	sub	sp, #8
 800aa6c:	af00      	add	r7, sp, #0
 800aa6e:	6078      	str	r0, [r7, #4]
 800aa70:	687b      	ldr	r3, [r7, #4]
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	685a      	ldr	r2, [r3, #4]
 800aa76:	687b      	ldr	r3, [r7, #4]
 800aa78:	681b      	ldr	r3, [r3, #0]
 800aa7a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800aa7e:	605a      	str	r2, [r3, #4]
 800aa80:	f7fa fffc 	bl	8005a7c <HAL_GetTick>
 800aa84:	4603      	mov	r3, r0
 800aa86:	461a      	mov	r2, r3
 800aa88:	2164      	movs	r1, #100	@ 0x64
 800aa8a:	6878      	ldr	r0, [r7, #4]
 800aa8c:	f7ff ff0c 	bl	800a8a8 <SPI_EndRxTransaction>
 800aa90:	4603      	mov	r3, r0
 800aa92:	2b00      	cmp	r3, #0
 800aa94:	d005      	beq.n	800aaa2 <SPI_CloseRx_ISR+0x3a>
 800aa96:	687b      	ldr	r3, [r7, #4]
 800aa98:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa9a:	f043 0220 	orr.w	r2, r3, #32
 800aa9e:	687b      	ldr	r3, [r7, #4]
 800aaa0:	661a      	str	r2, [r3, #96]	@ 0x60
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	2201      	movs	r2, #1
 800aaa6:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aaae:	2b00      	cmp	r3, #0
 800aab0:	d103      	bne.n	800aaba <SPI_CloseRx_ISR+0x52>
 800aab2:	6878      	ldr	r0, [r7, #4]
 800aab4:	f005 fce6 	bl	8010484 <HAL_SPI_RxCpltCallback>
 800aab8:	e002      	b.n	800aac0 <SPI_CloseRx_ISR+0x58>
 800aaba:	6878      	ldr	r0, [r7, #4]
 800aabc:	f7ff fc18 	bl	800a2f0 <HAL_SPI_ErrorCallback>
 800aac0:	bf00      	nop
 800aac2:	3708      	adds	r7, #8
 800aac4:	46bd      	mov	sp, r7
 800aac6:	bd80      	pop	{r7, pc}

0800aac8 <SPI_CloseTx_ISR>:
 800aac8:	b580      	push	{r7, lr}
 800aaca:	b084      	sub	sp, #16
 800aacc:	af00      	add	r7, sp, #0
 800aace:	6078      	str	r0, [r7, #4]
 800aad0:	f7fa ffd4 	bl	8005a7c <HAL_GetTick>
 800aad4:	60f8      	str	r0, [r7, #12]
 800aad6:	687b      	ldr	r3, [r7, #4]
 800aad8:	681b      	ldr	r3, [r3, #0]
 800aada:	685a      	ldr	r2, [r3, #4]
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	681b      	ldr	r3, [r3, #0]
 800aae0:	f022 02a0 	bic.w	r2, r2, #160	@ 0xa0
 800aae4:	605a      	str	r2, [r3, #4]
 800aae6:	68fa      	ldr	r2, [r7, #12]
 800aae8:	2164      	movs	r1, #100	@ 0x64
 800aaea:	6878      	ldr	r0, [r7, #4]
 800aaec:	f7ff ff34 	bl	800a958 <SPI_EndRxTxTransaction>
 800aaf0:	4603      	mov	r3, r0
 800aaf2:	2b00      	cmp	r3, #0
 800aaf4:	d005      	beq.n	800ab02 <SPI_CloseTx_ISR+0x3a>
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aafa:	f043 0220 	orr.w	r2, r3, #32
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	661a      	str	r2, [r3, #96]	@ 0x60
 800ab02:	687b      	ldr	r3, [r7, #4]
 800ab04:	689b      	ldr	r3, [r3, #8]
 800ab06:	2b00      	cmp	r3, #0
 800ab08:	d10a      	bne.n	800ab20 <SPI_CloseTx_ISR+0x58>
 800ab0a:	2300      	movs	r3, #0
 800ab0c:	60bb      	str	r3, [r7, #8]
 800ab0e:	687b      	ldr	r3, [r7, #4]
 800ab10:	681b      	ldr	r3, [r3, #0]
 800ab12:	68db      	ldr	r3, [r3, #12]
 800ab14:	60bb      	str	r3, [r7, #8]
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	681b      	ldr	r3, [r3, #0]
 800ab1a:	689b      	ldr	r3, [r3, #8]
 800ab1c:	60bb      	str	r3, [r7, #8]
 800ab1e:	68bb      	ldr	r3, [r7, #8]
 800ab20:	687b      	ldr	r3, [r7, #4]
 800ab22:	2201      	movs	r2, #1
 800ab24:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800ab2c:	2b00      	cmp	r3, #0
 800ab2e:	d003      	beq.n	800ab38 <SPI_CloseTx_ISR+0x70>
 800ab30:	6878      	ldr	r0, [r7, #4]
 800ab32:	f7ff fbdd 	bl	800a2f0 <HAL_SPI_ErrorCallback>
 800ab36:	e002      	b.n	800ab3e <SPI_CloseTx_ISR+0x76>
 800ab38:	6878      	ldr	r0, [r7, #4]
 800ab3a:	f005 fcb7 	bl	80104ac <HAL_SPI_TxCpltCallback>
 800ab3e:	bf00      	nop
 800ab40:	3710      	adds	r7, #16
 800ab42:	46bd      	mov	sp, r7
 800ab44:	bd80      	pop	{r7, pc}

0800ab46 <HAL_TIM_Base_Init>:
 800ab46:	b580      	push	{r7, lr}
 800ab48:	b082      	sub	sp, #8
 800ab4a:	af00      	add	r7, sp, #0
 800ab4c:	6078      	str	r0, [r7, #4]
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	2b00      	cmp	r3, #0
 800ab52:	d101      	bne.n	800ab58 <HAL_TIM_Base_Init+0x12>
 800ab54:	2301      	movs	r3, #1
 800ab56:	e049      	b.n	800abec <HAL_TIM_Base_Init+0xa6>
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ab5e:	b2db      	uxtb	r3, r3
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	d106      	bne.n	800ab72 <HAL_TIM_Base_Init+0x2c>
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	2200      	movs	r2, #0
 800ab68:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ab6c:	6878      	ldr	r0, [r7, #4]
 800ab6e:	f7f8 fbb3 	bl	80032d8 <HAL_TIM_Base_MspInit>
 800ab72:	687b      	ldr	r3, [r7, #4]
 800ab74:	2202      	movs	r2, #2
 800ab76:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	681a      	ldr	r2, [r3, #0]
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	3304      	adds	r3, #4
 800ab82:	4619      	mov	r1, r3
 800ab84:	4610      	mov	r0, r2
 800ab86:	f000 f9d5 	bl	800af34 <TIM_Base_SetConfig>
 800ab8a:	687b      	ldr	r3, [r7, #4]
 800ab8c:	2201      	movs	r2, #1
 800ab8e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800ab92:	687b      	ldr	r3, [r7, #4]
 800ab94:	2201      	movs	r2, #1
 800ab96:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	2201      	movs	r2, #1
 800ab9e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800aba2:	687b      	ldr	r3, [r7, #4]
 800aba4:	2201      	movs	r2, #1
 800aba6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800abaa:	687b      	ldr	r3, [r7, #4]
 800abac:	2201      	movs	r2, #1
 800abae:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	2201      	movs	r2, #1
 800abb6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	2201      	movs	r2, #1
 800abbe:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	2201      	movs	r2, #1
 800abc6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800abca:	687b      	ldr	r3, [r7, #4]
 800abcc:	2201      	movs	r2, #1
 800abce:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	2201      	movs	r2, #1
 800abd6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800abda:	687b      	ldr	r3, [r7, #4]
 800abdc:	2201      	movs	r2, #1
 800abde:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	2201      	movs	r2, #1
 800abe6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800abea:	2300      	movs	r3, #0
 800abec:	4618      	mov	r0, r3
 800abee:	3708      	adds	r7, #8
 800abf0:	46bd      	mov	sp, r7
 800abf2:	bd80      	pop	{r7, pc}

0800abf4 <HAL_TIM_Base_Start_IT>:
 800abf4:	b480      	push	{r7}
 800abf6:	b085      	sub	sp, #20
 800abf8:	af00      	add	r7, sp, #0
 800abfa:	6078      	str	r0, [r7, #4]
 800abfc:	687b      	ldr	r3, [r7, #4]
 800abfe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ac02:	b2db      	uxtb	r3, r3
 800ac04:	2b01      	cmp	r3, #1
 800ac06:	d001      	beq.n	800ac0c <HAL_TIM_Base_Start_IT+0x18>
 800ac08:	2301      	movs	r3, #1
 800ac0a:	e04f      	b.n	800acac <HAL_TIM_Base_Start_IT+0xb8>
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	2202      	movs	r2, #2
 800ac10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	68da      	ldr	r2, [r3, #12]
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	f042 0201 	orr.w	r2, r2, #1
 800ac22:	60da      	str	r2, [r3, #12]
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	4a23      	ldr	r2, [pc, #140]	@ (800acb8 <HAL_TIM_Base_Start_IT+0xc4>)
 800ac2a:	4293      	cmp	r3, r2
 800ac2c:	d01d      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	681b      	ldr	r3, [r3, #0]
 800ac32:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800ac36:	d018      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	681b      	ldr	r3, [r3, #0]
 800ac3c:	4a1f      	ldr	r2, [pc, #124]	@ (800acbc <HAL_TIM_Base_Start_IT+0xc8>)
 800ac3e:	4293      	cmp	r3, r2
 800ac40:	d013      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac42:	687b      	ldr	r3, [r7, #4]
 800ac44:	681b      	ldr	r3, [r3, #0]
 800ac46:	4a1e      	ldr	r2, [pc, #120]	@ (800acc0 <HAL_TIM_Base_Start_IT+0xcc>)
 800ac48:	4293      	cmp	r3, r2
 800ac4a:	d00e      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	681b      	ldr	r3, [r3, #0]
 800ac50:	4a1c      	ldr	r2, [pc, #112]	@ (800acc4 <HAL_TIM_Base_Start_IT+0xd0>)
 800ac52:	4293      	cmp	r3, r2
 800ac54:	d009      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	681b      	ldr	r3, [r3, #0]
 800ac5a:	4a1b      	ldr	r2, [pc, #108]	@ (800acc8 <HAL_TIM_Base_Start_IT+0xd4>)
 800ac5c:	4293      	cmp	r3, r2
 800ac5e:	d004      	beq.n	800ac6a <HAL_TIM_Base_Start_IT+0x76>
 800ac60:	687b      	ldr	r3, [r7, #4]
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	4a19      	ldr	r2, [pc, #100]	@ (800accc <HAL_TIM_Base_Start_IT+0xd8>)
 800ac66:	4293      	cmp	r3, r2
 800ac68:	d115      	bne.n	800ac96 <HAL_TIM_Base_Start_IT+0xa2>
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	681b      	ldr	r3, [r3, #0]
 800ac6e:	689a      	ldr	r2, [r3, #8]
 800ac70:	4b17      	ldr	r3, [pc, #92]	@ (800acd0 <HAL_TIM_Base_Start_IT+0xdc>)
 800ac72:	4013      	ands	r3, r2
 800ac74:	60fb      	str	r3, [r7, #12]
 800ac76:	68fb      	ldr	r3, [r7, #12]
 800ac78:	2b06      	cmp	r3, #6
 800ac7a:	d015      	beq.n	800aca8 <HAL_TIM_Base_Start_IT+0xb4>
 800ac7c:	68fb      	ldr	r3, [r7, #12]
 800ac7e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ac82:	d011      	beq.n	800aca8 <HAL_TIM_Base_Start_IT+0xb4>
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	681a      	ldr	r2, [r3, #0]
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	f042 0201 	orr.w	r2, r2, #1
 800ac92:	601a      	str	r2, [r3, #0]
 800ac94:	e008      	b.n	800aca8 <HAL_TIM_Base_Start_IT+0xb4>
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	681a      	ldr	r2, [r3, #0]
 800ac9c:	687b      	ldr	r3, [r7, #4]
 800ac9e:	681b      	ldr	r3, [r3, #0]
 800aca0:	f042 0201 	orr.w	r2, r2, #1
 800aca4:	601a      	str	r2, [r3, #0]
 800aca6:	e000      	b.n	800acaa <HAL_TIM_Base_Start_IT+0xb6>
 800aca8:	bf00      	nop
 800acaa:	2300      	movs	r3, #0
 800acac:	4618      	mov	r0, r3
 800acae:	3714      	adds	r7, #20
 800acb0:	46bd      	mov	sp, r7
 800acb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acb6:	4770      	bx	lr
 800acb8:	40012c00 	.word	0x40012c00
 800acbc:	40000400 	.word	0x40000400
 800acc0:	40000800 	.word	0x40000800
 800acc4:	40000c00 	.word	0x40000c00
 800acc8:	40013400 	.word	0x40013400
 800accc:	40014000 	.word	0x40014000
 800acd0:	00010007 	.word	0x00010007

0800acd4 <HAL_TIM_IRQHandler>:
 800acd4:	b580      	push	{r7, lr}
 800acd6:	b084      	sub	sp, #16
 800acd8:	af00      	add	r7, sp, #0
 800acda:	6078      	str	r0, [r7, #4]
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	681b      	ldr	r3, [r3, #0]
 800ace0:	68db      	ldr	r3, [r3, #12]
 800ace2:	60fb      	str	r3, [r7, #12]
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	681b      	ldr	r3, [r3, #0]
 800ace8:	691b      	ldr	r3, [r3, #16]
 800acea:	60bb      	str	r3, [r7, #8]
 800acec:	68bb      	ldr	r3, [r7, #8]
 800acee:	f003 0302 	and.w	r3, r3, #2
 800acf2:	2b00      	cmp	r3, #0
 800acf4:	d020      	beq.n	800ad38 <HAL_TIM_IRQHandler+0x64>
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	f003 0302 	and.w	r3, r3, #2
 800acfc:	2b00      	cmp	r3, #0
 800acfe:	d01b      	beq.n	800ad38 <HAL_TIM_IRQHandler+0x64>
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	681b      	ldr	r3, [r3, #0]
 800ad04:	f06f 0202 	mvn.w	r2, #2
 800ad08:	611a      	str	r2, [r3, #16]
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	2201      	movs	r2, #1
 800ad0e:	771a      	strb	r2, [r3, #28]
 800ad10:	687b      	ldr	r3, [r7, #4]
 800ad12:	681b      	ldr	r3, [r3, #0]
 800ad14:	699b      	ldr	r3, [r3, #24]
 800ad16:	f003 0303 	and.w	r3, r3, #3
 800ad1a:	2b00      	cmp	r3, #0
 800ad1c:	d003      	beq.n	800ad26 <HAL_TIM_IRQHandler+0x52>
 800ad1e:	6878      	ldr	r0, [r7, #4]
 800ad20:	f000 f8e9 	bl	800aef6 <HAL_TIM_IC_CaptureCallback>
 800ad24:	e005      	b.n	800ad32 <HAL_TIM_IRQHandler+0x5e>
 800ad26:	6878      	ldr	r0, [r7, #4]
 800ad28:	f000 f8db 	bl	800aee2 <HAL_TIM_OC_DelayElapsedCallback>
 800ad2c:	6878      	ldr	r0, [r7, #4]
 800ad2e:	f000 f8ec 	bl	800af0a <HAL_TIM_PWM_PulseFinishedCallback>
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	2200      	movs	r2, #0
 800ad36:	771a      	strb	r2, [r3, #28]
 800ad38:	68bb      	ldr	r3, [r7, #8]
 800ad3a:	f003 0304 	and.w	r3, r3, #4
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d020      	beq.n	800ad84 <HAL_TIM_IRQHandler+0xb0>
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	f003 0304 	and.w	r3, r3, #4
 800ad48:	2b00      	cmp	r3, #0
 800ad4a:	d01b      	beq.n	800ad84 <HAL_TIM_IRQHandler+0xb0>
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	f06f 0204 	mvn.w	r2, #4
 800ad54:	611a      	str	r2, [r3, #16]
 800ad56:	687b      	ldr	r3, [r7, #4]
 800ad58:	2202      	movs	r2, #2
 800ad5a:	771a      	strb	r2, [r3, #28]
 800ad5c:	687b      	ldr	r3, [r7, #4]
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	699b      	ldr	r3, [r3, #24]
 800ad62:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800ad66:	2b00      	cmp	r3, #0
 800ad68:	d003      	beq.n	800ad72 <HAL_TIM_IRQHandler+0x9e>
 800ad6a:	6878      	ldr	r0, [r7, #4]
 800ad6c:	f000 f8c3 	bl	800aef6 <HAL_TIM_IC_CaptureCallback>
 800ad70:	e005      	b.n	800ad7e <HAL_TIM_IRQHandler+0xaa>
 800ad72:	6878      	ldr	r0, [r7, #4]
 800ad74:	f000 f8b5 	bl	800aee2 <HAL_TIM_OC_DelayElapsedCallback>
 800ad78:	6878      	ldr	r0, [r7, #4]
 800ad7a:	f000 f8c6 	bl	800af0a <HAL_TIM_PWM_PulseFinishedCallback>
 800ad7e:	687b      	ldr	r3, [r7, #4]
 800ad80:	2200      	movs	r2, #0
 800ad82:	771a      	strb	r2, [r3, #28]
 800ad84:	68bb      	ldr	r3, [r7, #8]
 800ad86:	f003 0308 	and.w	r3, r3, #8
 800ad8a:	2b00      	cmp	r3, #0
 800ad8c:	d020      	beq.n	800add0 <HAL_TIM_IRQHandler+0xfc>
 800ad8e:	68fb      	ldr	r3, [r7, #12]
 800ad90:	f003 0308 	and.w	r3, r3, #8
 800ad94:	2b00      	cmp	r3, #0
 800ad96:	d01b      	beq.n	800add0 <HAL_TIM_IRQHandler+0xfc>
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	f06f 0208 	mvn.w	r2, #8
 800ada0:	611a      	str	r2, [r3, #16]
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	2204      	movs	r2, #4
 800ada6:	771a      	strb	r2, [r3, #28]
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	681b      	ldr	r3, [r3, #0]
 800adac:	69db      	ldr	r3, [r3, #28]
 800adae:	f003 0303 	and.w	r3, r3, #3
 800adb2:	2b00      	cmp	r3, #0
 800adb4:	d003      	beq.n	800adbe <HAL_TIM_IRQHandler+0xea>
 800adb6:	6878      	ldr	r0, [r7, #4]
 800adb8:	f000 f89d 	bl	800aef6 <HAL_TIM_IC_CaptureCallback>
 800adbc:	e005      	b.n	800adca <HAL_TIM_IRQHandler+0xf6>
 800adbe:	6878      	ldr	r0, [r7, #4]
 800adc0:	f000 f88f 	bl	800aee2 <HAL_TIM_OC_DelayElapsedCallback>
 800adc4:	6878      	ldr	r0, [r7, #4]
 800adc6:	f000 f8a0 	bl	800af0a <HAL_TIM_PWM_PulseFinishedCallback>
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	2200      	movs	r2, #0
 800adce:	771a      	strb	r2, [r3, #28]
 800add0:	68bb      	ldr	r3, [r7, #8]
 800add2:	f003 0310 	and.w	r3, r3, #16
 800add6:	2b00      	cmp	r3, #0
 800add8:	d020      	beq.n	800ae1c <HAL_TIM_IRQHandler+0x148>
 800adda:	68fb      	ldr	r3, [r7, #12]
 800addc:	f003 0310 	and.w	r3, r3, #16
 800ade0:	2b00      	cmp	r3, #0
 800ade2:	d01b      	beq.n	800ae1c <HAL_TIM_IRQHandler+0x148>
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	681b      	ldr	r3, [r3, #0]
 800ade8:	f06f 0210 	mvn.w	r2, #16
 800adec:	611a      	str	r2, [r3, #16]
 800adee:	687b      	ldr	r3, [r7, #4]
 800adf0:	2208      	movs	r2, #8
 800adf2:	771a      	strb	r2, [r3, #28]
 800adf4:	687b      	ldr	r3, [r7, #4]
 800adf6:	681b      	ldr	r3, [r3, #0]
 800adf8:	69db      	ldr	r3, [r3, #28]
 800adfa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800adfe:	2b00      	cmp	r3, #0
 800ae00:	d003      	beq.n	800ae0a <HAL_TIM_IRQHandler+0x136>
 800ae02:	6878      	ldr	r0, [r7, #4]
 800ae04:	f000 f877 	bl	800aef6 <HAL_TIM_IC_CaptureCallback>
 800ae08:	e005      	b.n	800ae16 <HAL_TIM_IRQHandler+0x142>
 800ae0a:	6878      	ldr	r0, [r7, #4]
 800ae0c:	f000 f869 	bl	800aee2 <HAL_TIM_OC_DelayElapsedCallback>
 800ae10:	6878      	ldr	r0, [r7, #4]
 800ae12:	f000 f87a 	bl	800af0a <HAL_TIM_PWM_PulseFinishedCallback>
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	2200      	movs	r2, #0
 800ae1a:	771a      	strb	r2, [r3, #28]
 800ae1c:	68bb      	ldr	r3, [r7, #8]
 800ae1e:	f003 0301 	and.w	r3, r3, #1
 800ae22:	2b00      	cmp	r3, #0
 800ae24:	d00c      	beq.n	800ae40 <HAL_TIM_IRQHandler+0x16c>
 800ae26:	68fb      	ldr	r3, [r7, #12]
 800ae28:	f003 0301 	and.w	r3, r3, #1
 800ae2c:	2b00      	cmp	r3, #0
 800ae2e:	d007      	beq.n	800ae40 <HAL_TIM_IRQHandler+0x16c>
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	681b      	ldr	r3, [r3, #0]
 800ae34:	f06f 0201 	mvn.w	r2, #1
 800ae38:	611a      	str	r2, [r3, #16]
 800ae3a:	6878      	ldr	r0, [r7, #4]
 800ae3c:	f7f8 f818 	bl	8002e70 <HAL_TIM_PeriodElapsedCallback>
 800ae40:	68bb      	ldr	r3, [r7, #8]
 800ae42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ae46:	2b00      	cmp	r3, #0
 800ae48:	d104      	bne.n	800ae54 <HAL_TIM_IRQHandler+0x180>
 800ae4a:	68bb      	ldr	r3, [r7, #8]
 800ae4c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800ae50:	2b00      	cmp	r3, #0
 800ae52:	d00c      	beq.n	800ae6e <HAL_TIM_IRQHandler+0x19a>
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ae5a:	2b00      	cmp	r3, #0
 800ae5c:	d007      	beq.n	800ae6e <HAL_TIM_IRQHandler+0x19a>
 800ae5e:	687b      	ldr	r3, [r7, #4]
 800ae60:	681b      	ldr	r3, [r3, #0]
 800ae62:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800ae66:	611a      	str	r2, [r3, #16]
 800ae68:	6878      	ldr	r0, [r7, #4]
 800ae6a:	f000 f99b 	bl	800b1a4 <HAL_TIMEx_BreakCallback>
 800ae6e:	68bb      	ldr	r3, [r7, #8]
 800ae70:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ae74:	2b00      	cmp	r3, #0
 800ae76:	d00c      	beq.n	800ae92 <HAL_TIM_IRQHandler+0x1be>
 800ae78:	68fb      	ldr	r3, [r7, #12]
 800ae7a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ae7e:	2b00      	cmp	r3, #0
 800ae80:	d007      	beq.n	800ae92 <HAL_TIM_IRQHandler+0x1be>
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	681b      	ldr	r3, [r3, #0]
 800ae86:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800ae8a:	611a      	str	r2, [r3, #16]
 800ae8c:	6878      	ldr	r0, [r7, #4]
 800ae8e:	f000 f993 	bl	800b1b8 <HAL_TIMEx_Break2Callback>
 800ae92:	68bb      	ldr	r3, [r7, #8]
 800ae94:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ae98:	2b00      	cmp	r3, #0
 800ae9a:	d00c      	beq.n	800aeb6 <HAL_TIM_IRQHandler+0x1e2>
 800ae9c:	68fb      	ldr	r3, [r7, #12]
 800ae9e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800aea2:	2b00      	cmp	r3, #0
 800aea4:	d007      	beq.n	800aeb6 <HAL_TIM_IRQHandler+0x1e2>
 800aea6:	687b      	ldr	r3, [r7, #4]
 800aea8:	681b      	ldr	r3, [r3, #0]
 800aeaa:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800aeae:	611a      	str	r2, [r3, #16]
 800aeb0:	6878      	ldr	r0, [r7, #4]
 800aeb2:	f000 f834 	bl	800af1e <HAL_TIM_TriggerCallback>
 800aeb6:	68bb      	ldr	r3, [r7, #8]
 800aeb8:	f003 0320 	and.w	r3, r3, #32
 800aebc:	2b00      	cmp	r3, #0
 800aebe:	d00c      	beq.n	800aeda <HAL_TIM_IRQHandler+0x206>
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	f003 0320 	and.w	r3, r3, #32
 800aec6:	2b00      	cmp	r3, #0
 800aec8:	d007      	beq.n	800aeda <HAL_TIM_IRQHandler+0x206>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	f06f 0220 	mvn.w	r2, #32
 800aed2:	611a      	str	r2, [r3, #16]
 800aed4:	6878      	ldr	r0, [r7, #4]
 800aed6:	f000 f95b 	bl	800b190 <HAL_TIMEx_CommutCallback>
 800aeda:	bf00      	nop
 800aedc:	3710      	adds	r7, #16
 800aede:	46bd      	mov	sp, r7
 800aee0:	bd80      	pop	{r7, pc}

0800aee2 <HAL_TIM_OC_DelayElapsedCallback>:
 800aee2:	b480      	push	{r7}
 800aee4:	b083      	sub	sp, #12
 800aee6:	af00      	add	r7, sp, #0
 800aee8:	6078      	str	r0, [r7, #4]
 800aeea:	bf00      	nop
 800aeec:	370c      	adds	r7, #12
 800aeee:	46bd      	mov	sp, r7
 800aef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aef4:	4770      	bx	lr

0800aef6 <HAL_TIM_IC_CaptureCallback>:
 800aef6:	b480      	push	{r7}
 800aef8:	b083      	sub	sp, #12
 800aefa:	af00      	add	r7, sp, #0
 800aefc:	6078      	str	r0, [r7, #4]
 800aefe:	bf00      	nop
 800af00:	370c      	adds	r7, #12
 800af02:	46bd      	mov	sp, r7
 800af04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af08:	4770      	bx	lr

0800af0a <HAL_TIM_PWM_PulseFinishedCallback>:
 800af0a:	b480      	push	{r7}
 800af0c:	b083      	sub	sp, #12
 800af0e:	af00      	add	r7, sp, #0
 800af10:	6078      	str	r0, [r7, #4]
 800af12:	bf00      	nop
 800af14:	370c      	adds	r7, #12
 800af16:	46bd      	mov	sp, r7
 800af18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af1c:	4770      	bx	lr

0800af1e <HAL_TIM_TriggerCallback>:
 800af1e:	b480      	push	{r7}
 800af20:	b083      	sub	sp, #12
 800af22:	af00      	add	r7, sp, #0
 800af24:	6078      	str	r0, [r7, #4]
 800af26:	bf00      	nop
 800af28:	370c      	adds	r7, #12
 800af2a:	46bd      	mov	sp, r7
 800af2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af30:	4770      	bx	lr
	...

0800af34 <TIM_Base_SetConfig>:
 800af34:	b480      	push	{r7}
 800af36:	b085      	sub	sp, #20
 800af38:	af00      	add	r7, sp, #0
 800af3a:	6078      	str	r0, [r7, #4]
 800af3c:	6039      	str	r1, [r7, #0]
 800af3e:	687b      	ldr	r3, [r7, #4]
 800af40:	681b      	ldr	r3, [r3, #0]
 800af42:	60fb      	str	r3, [r7, #12]
 800af44:	687b      	ldr	r3, [r7, #4]
 800af46:	4a46      	ldr	r2, [pc, #280]	@ (800b060 <TIM_Base_SetConfig+0x12c>)
 800af48:	4293      	cmp	r3, r2
 800af4a:	d013      	beq.n	800af74 <TIM_Base_SetConfig+0x40>
 800af4c:	687b      	ldr	r3, [r7, #4]
 800af4e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800af52:	d00f      	beq.n	800af74 <TIM_Base_SetConfig+0x40>
 800af54:	687b      	ldr	r3, [r7, #4]
 800af56:	4a43      	ldr	r2, [pc, #268]	@ (800b064 <TIM_Base_SetConfig+0x130>)
 800af58:	4293      	cmp	r3, r2
 800af5a:	d00b      	beq.n	800af74 <TIM_Base_SetConfig+0x40>
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	4a42      	ldr	r2, [pc, #264]	@ (800b068 <TIM_Base_SetConfig+0x134>)
 800af60:	4293      	cmp	r3, r2
 800af62:	d007      	beq.n	800af74 <TIM_Base_SetConfig+0x40>
 800af64:	687b      	ldr	r3, [r7, #4]
 800af66:	4a41      	ldr	r2, [pc, #260]	@ (800b06c <TIM_Base_SetConfig+0x138>)
 800af68:	4293      	cmp	r3, r2
 800af6a:	d003      	beq.n	800af74 <TIM_Base_SetConfig+0x40>
 800af6c:	687b      	ldr	r3, [r7, #4]
 800af6e:	4a40      	ldr	r2, [pc, #256]	@ (800b070 <TIM_Base_SetConfig+0x13c>)
 800af70:	4293      	cmp	r3, r2
 800af72:	d108      	bne.n	800af86 <TIM_Base_SetConfig+0x52>
 800af74:	68fb      	ldr	r3, [r7, #12]
 800af76:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800af7a:	60fb      	str	r3, [r7, #12]
 800af7c:	683b      	ldr	r3, [r7, #0]
 800af7e:	685b      	ldr	r3, [r3, #4]
 800af80:	68fa      	ldr	r2, [r7, #12]
 800af82:	4313      	orrs	r3, r2
 800af84:	60fb      	str	r3, [r7, #12]
 800af86:	687b      	ldr	r3, [r7, #4]
 800af88:	4a35      	ldr	r2, [pc, #212]	@ (800b060 <TIM_Base_SetConfig+0x12c>)
 800af8a:	4293      	cmp	r3, r2
 800af8c:	d01f      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800af94:	d01b      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800af96:	687b      	ldr	r3, [r7, #4]
 800af98:	4a32      	ldr	r2, [pc, #200]	@ (800b064 <TIM_Base_SetConfig+0x130>)
 800af9a:	4293      	cmp	r3, r2
 800af9c:	d017      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800af9e:	687b      	ldr	r3, [r7, #4]
 800afa0:	4a31      	ldr	r2, [pc, #196]	@ (800b068 <TIM_Base_SetConfig+0x134>)
 800afa2:	4293      	cmp	r3, r2
 800afa4:	d013      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	4a30      	ldr	r2, [pc, #192]	@ (800b06c <TIM_Base_SetConfig+0x138>)
 800afaa:	4293      	cmp	r3, r2
 800afac:	d00f      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800afae:	687b      	ldr	r3, [r7, #4]
 800afb0:	4a2f      	ldr	r2, [pc, #188]	@ (800b070 <TIM_Base_SetConfig+0x13c>)
 800afb2:	4293      	cmp	r3, r2
 800afb4:	d00b      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800afb6:	687b      	ldr	r3, [r7, #4]
 800afb8:	4a2e      	ldr	r2, [pc, #184]	@ (800b074 <TIM_Base_SetConfig+0x140>)
 800afba:	4293      	cmp	r3, r2
 800afbc:	d007      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	4a2d      	ldr	r2, [pc, #180]	@ (800b078 <TIM_Base_SetConfig+0x144>)
 800afc2:	4293      	cmp	r3, r2
 800afc4:	d003      	beq.n	800afce <TIM_Base_SetConfig+0x9a>
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	4a2c      	ldr	r2, [pc, #176]	@ (800b07c <TIM_Base_SetConfig+0x148>)
 800afca:	4293      	cmp	r3, r2
 800afcc:	d108      	bne.n	800afe0 <TIM_Base_SetConfig+0xac>
 800afce:	68fb      	ldr	r3, [r7, #12]
 800afd0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800afd4:	60fb      	str	r3, [r7, #12]
 800afd6:	683b      	ldr	r3, [r7, #0]
 800afd8:	68db      	ldr	r3, [r3, #12]
 800afda:	68fa      	ldr	r2, [r7, #12]
 800afdc:	4313      	orrs	r3, r2
 800afde:	60fb      	str	r3, [r7, #12]
 800afe0:	68fb      	ldr	r3, [r7, #12]
 800afe2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800afe6:	683b      	ldr	r3, [r7, #0]
 800afe8:	695b      	ldr	r3, [r3, #20]
 800afea:	4313      	orrs	r3, r2
 800afec:	60fb      	str	r3, [r7, #12]
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	68fa      	ldr	r2, [r7, #12]
 800aff2:	601a      	str	r2, [r3, #0]
 800aff4:	683b      	ldr	r3, [r7, #0]
 800aff6:	689a      	ldr	r2, [r3, #8]
 800aff8:	687b      	ldr	r3, [r7, #4]
 800affa:	62da      	str	r2, [r3, #44]	@ 0x2c
 800affc:	683b      	ldr	r3, [r7, #0]
 800affe:	681a      	ldr	r2, [r3, #0]
 800b000:	687b      	ldr	r3, [r7, #4]
 800b002:	629a      	str	r2, [r3, #40]	@ 0x28
 800b004:	687b      	ldr	r3, [r7, #4]
 800b006:	4a16      	ldr	r2, [pc, #88]	@ (800b060 <TIM_Base_SetConfig+0x12c>)
 800b008:	4293      	cmp	r3, r2
 800b00a:	d00f      	beq.n	800b02c <TIM_Base_SetConfig+0xf8>
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	4a18      	ldr	r2, [pc, #96]	@ (800b070 <TIM_Base_SetConfig+0x13c>)
 800b010:	4293      	cmp	r3, r2
 800b012:	d00b      	beq.n	800b02c <TIM_Base_SetConfig+0xf8>
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	4a17      	ldr	r2, [pc, #92]	@ (800b074 <TIM_Base_SetConfig+0x140>)
 800b018:	4293      	cmp	r3, r2
 800b01a:	d007      	beq.n	800b02c <TIM_Base_SetConfig+0xf8>
 800b01c:	687b      	ldr	r3, [r7, #4]
 800b01e:	4a16      	ldr	r2, [pc, #88]	@ (800b078 <TIM_Base_SetConfig+0x144>)
 800b020:	4293      	cmp	r3, r2
 800b022:	d003      	beq.n	800b02c <TIM_Base_SetConfig+0xf8>
 800b024:	687b      	ldr	r3, [r7, #4]
 800b026:	4a15      	ldr	r2, [pc, #84]	@ (800b07c <TIM_Base_SetConfig+0x148>)
 800b028:	4293      	cmp	r3, r2
 800b02a:	d103      	bne.n	800b034 <TIM_Base_SetConfig+0x100>
 800b02c:	683b      	ldr	r3, [r7, #0]
 800b02e:	691a      	ldr	r2, [r3, #16]
 800b030:	687b      	ldr	r3, [r7, #4]
 800b032:	631a      	str	r2, [r3, #48]	@ 0x30
 800b034:	687b      	ldr	r3, [r7, #4]
 800b036:	2201      	movs	r2, #1
 800b038:	615a      	str	r2, [r3, #20]
 800b03a:	687b      	ldr	r3, [r7, #4]
 800b03c:	691b      	ldr	r3, [r3, #16]
 800b03e:	f003 0301 	and.w	r3, r3, #1
 800b042:	2b01      	cmp	r3, #1
 800b044:	d105      	bne.n	800b052 <TIM_Base_SetConfig+0x11e>
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	691b      	ldr	r3, [r3, #16]
 800b04a:	f023 0201 	bic.w	r2, r3, #1
 800b04e:	687b      	ldr	r3, [r7, #4]
 800b050:	611a      	str	r2, [r3, #16]
 800b052:	bf00      	nop
 800b054:	3714      	adds	r7, #20
 800b056:	46bd      	mov	sp, r7
 800b058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b05c:	4770      	bx	lr
 800b05e:	bf00      	nop
 800b060:	40012c00 	.word	0x40012c00
 800b064:	40000400 	.word	0x40000400
 800b068:	40000800 	.word	0x40000800
 800b06c:	40000c00 	.word	0x40000c00
 800b070:	40013400 	.word	0x40013400
 800b074:	40014000 	.word	0x40014000
 800b078:	40014400 	.word	0x40014400
 800b07c:	40014800 	.word	0x40014800

0800b080 <HAL_TIMEx_MasterConfigSynchronization>:
 800b080:	b480      	push	{r7}
 800b082:	b085      	sub	sp, #20
 800b084:	af00      	add	r7, sp, #0
 800b086:	6078      	str	r0, [r7, #4]
 800b088:	6039      	str	r1, [r7, #0]
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800b090:	2b01      	cmp	r3, #1
 800b092:	d101      	bne.n	800b098 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800b094:	2302      	movs	r3, #2
 800b096:	e068      	b.n	800b16a <HAL_TIMEx_MasterConfigSynchronization+0xea>
 800b098:	687b      	ldr	r3, [r7, #4]
 800b09a:	2201      	movs	r2, #1
 800b09c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b0a0:	687b      	ldr	r3, [r7, #4]
 800b0a2:	2202      	movs	r2, #2
 800b0a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b0a8:	687b      	ldr	r3, [r7, #4]
 800b0aa:	681b      	ldr	r3, [r3, #0]
 800b0ac:	685b      	ldr	r3, [r3, #4]
 800b0ae:	60fb      	str	r3, [r7, #12]
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	681b      	ldr	r3, [r3, #0]
 800b0b4:	689b      	ldr	r3, [r3, #8]
 800b0b6:	60bb      	str	r3, [r7, #8]
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	681b      	ldr	r3, [r3, #0]
 800b0bc:	4a2e      	ldr	r2, [pc, #184]	@ (800b178 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800b0be:	4293      	cmp	r3, r2
 800b0c0:	d004      	beq.n	800b0cc <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	681b      	ldr	r3, [r3, #0]
 800b0c6:	4a2d      	ldr	r2, [pc, #180]	@ (800b17c <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800b0c8:	4293      	cmp	r3, r2
 800b0ca:	d108      	bne.n	800b0de <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800b0cc:	68fb      	ldr	r3, [r7, #12]
 800b0ce:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800b0d2:	60fb      	str	r3, [r7, #12]
 800b0d4:	683b      	ldr	r3, [r7, #0]
 800b0d6:	685b      	ldr	r3, [r3, #4]
 800b0d8:	68fa      	ldr	r2, [r7, #12]
 800b0da:	4313      	orrs	r3, r2
 800b0dc:	60fb      	str	r3, [r7, #12]
 800b0de:	68fb      	ldr	r3, [r7, #12]
 800b0e0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800b0e4:	60fb      	str	r3, [r7, #12]
 800b0e6:	683b      	ldr	r3, [r7, #0]
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	68fa      	ldr	r2, [r7, #12]
 800b0ec:	4313      	orrs	r3, r2
 800b0ee:	60fb      	str	r3, [r7, #12]
 800b0f0:	687b      	ldr	r3, [r7, #4]
 800b0f2:	681b      	ldr	r3, [r3, #0]
 800b0f4:	68fa      	ldr	r2, [r7, #12]
 800b0f6:	605a      	str	r2, [r3, #4]
 800b0f8:	687b      	ldr	r3, [r7, #4]
 800b0fa:	681b      	ldr	r3, [r3, #0]
 800b0fc:	4a1e      	ldr	r2, [pc, #120]	@ (800b178 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800b0fe:	4293      	cmp	r3, r2
 800b100:	d01d      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b102:	687b      	ldr	r3, [r7, #4]
 800b104:	681b      	ldr	r3, [r3, #0]
 800b106:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800b10a:	d018      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b10c:	687b      	ldr	r3, [r7, #4]
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	4a1b      	ldr	r2, [pc, #108]	@ (800b180 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800b112:	4293      	cmp	r3, r2
 800b114:	d013      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	4a1a      	ldr	r2, [pc, #104]	@ (800b184 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800b11c:	4293      	cmp	r3, r2
 800b11e:	d00e      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	681b      	ldr	r3, [r3, #0]
 800b124:	4a18      	ldr	r2, [pc, #96]	@ (800b188 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800b126:	4293      	cmp	r3, r2
 800b128:	d009      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	681b      	ldr	r3, [r3, #0]
 800b12e:	4a13      	ldr	r2, [pc, #76]	@ (800b17c <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800b130:	4293      	cmp	r3, r2
 800b132:	d004      	beq.n	800b13e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	681b      	ldr	r3, [r3, #0]
 800b138:	4a14      	ldr	r2, [pc, #80]	@ (800b18c <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800b13a:	4293      	cmp	r3, r2
 800b13c:	d10c      	bne.n	800b158 <HAL_TIMEx_MasterConfigSynchronization+0xd8>
 800b13e:	68bb      	ldr	r3, [r7, #8]
 800b140:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b144:	60bb      	str	r3, [r7, #8]
 800b146:	683b      	ldr	r3, [r7, #0]
 800b148:	689b      	ldr	r3, [r3, #8]
 800b14a:	68ba      	ldr	r2, [r7, #8]
 800b14c:	4313      	orrs	r3, r2
 800b14e:	60bb      	str	r3, [r7, #8]
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	681b      	ldr	r3, [r3, #0]
 800b154:	68ba      	ldr	r2, [r7, #8]
 800b156:	609a      	str	r2, [r3, #8]
 800b158:	687b      	ldr	r3, [r7, #4]
 800b15a:	2201      	movs	r2, #1
 800b15c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	2200      	movs	r2, #0
 800b164:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b168:	2300      	movs	r3, #0
 800b16a:	4618      	mov	r0, r3
 800b16c:	3714      	adds	r7, #20
 800b16e:	46bd      	mov	sp, r7
 800b170:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b174:	4770      	bx	lr
 800b176:	bf00      	nop
 800b178:	40012c00 	.word	0x40012c00
 800b17c:	40013400 	.word	0x40013400
 800b180:	40000400 	.word	0x40000400
 800b184:	40000800 	.word	0x40000800
 800b188:	40000c00 	.word	0x40000c00
 800b18c:	40014000 	.word	0x40014000

0800b190 <HAL_TIMEx_CommutCallback>:
 800b190:	b480      	push	{r7}
 800b192:	b083      	sub	sp, #12
 800b194:	af00      	add	r7, sp, #0
 800b196:	6078      	str	r0, [r7, #4]
 800b198:	bf00      	nop
 800b19a:	370c      	adds	r7, #12
 800b19c:	46bd      	mov	sp, r7
 800b19e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1a2:	4770      	bx	lr

0800b1a4 <HAL_TIMEx_BreakCallback>:
 800b1a4:	b480      	push	{r7}
 800b1a6:	b083      	sub	sp, #12
 800b1a8:	af00      	add	r7, sp, #0
 800b1aa:	6078      	str	r0, [r7, #4]
 800b1ac:	bf00      	nop
 800b1ae:	370c      	adds	r7, #12
 800b1b0:	46bd      	mov	sp, r7
 800b1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b6:	4770      	bx	lr

0800b1b8 <HAL_TIMEx_Break2Callback>:
 800b1b8:	b480      	push	{r7}
 800b1ba:	b083      	sub	sp, #12
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	bf00      	nop
 800b1c2:	370c      	adds	r7, #12
 800b1c4:	46bd      	mov	sp, r7
 800b1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1ca:	4770      	bx	lr

0800b1cc <HAL_UART_Init>:
 800b1cc:	b580      	push	{r7, lr}
 800b1ce:	b082      	sub	sp, #8
 800b1d0:	af00      	add	r7, sp, #0
 800b1d2:	6078      	str	r0, [r7, #4]
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	2b00      	cmp	r3, #0
 800b1d8:	d101      	bne.n	800b1de <HAL_UART_Init+0x12>
 800b1da:	2301      	movs	r3, #1
 800b1dc:	e040      	b.n	800b260 <HAL_UART_Init+0x94>
 800b1de:	687b      	ldr	r3, [r7, #4]
 800b1e0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b1e2:	2b00      	cmp	r3, #0
 800b1e4:	d106      	bne.n	800b1f4 <HAL_UART_Init+0x28>
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	2200      	movs	r2, #0
 800b1ea:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800b1ee:	6878      	ldr	r0, [r7, #4]
 800b1f0:	f7f8 f898 	bl	8003324 <HAL_UART_MspInit>
 800b1f4:	687b      	ldr	r3, [r7, #4]
 800b1f6:	2224      	movs	r2, #36	@ 0x24
 800b1f8:	67da      	str	r2, [r3, #124]	@ 0x7c
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	681b      	ldr	r3, [r3, #0]
 800b1fe:	681a      	ldr	r2, [r3, #0]
 800b200:	687b      	ldr	r3, [r7, #4]
 800b202:	681b      	ldr	r3, [r3, #0]
 800b204:	f022 0201 	bic.w	r2, r2, #1
 800b208:	601a      	str	r2, [r3, #0]
 800b20a:	687b      	ldr	r3, [r7, #4]
 800b20c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b20e:	2b00      	cmp	r3, #0
 800b210:	d002      	beq.n	800b218 <HAL_UART_Init+0x4c>
 800b212:	6878      	ldr	r0, [r7, #4]
 800b214:	f000 fb6a 	bl	800b8ec <UART_AdvFeatureConfig>
 800b218:	6878      	ldr	r0, [r7, #4]
 800b21a:	f000 f8af 	bl	800b37c <UART_SetConfig>
 800b21e:	4603      	mov	r3, r0
 800b220:	2b01      	cmp	r3, #1
 800b222:	d101      	bne.n	800b228 <HAL_UART_Init+0x5c>
 800b224:	2301      	movs	r3, #1
 800b226:	e01b      	b.n	800b260 <HAL_UART_Init+0x94>
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	685a      	ldr	r2, [r3, #4]
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	681b      	ldr	r3, [r3, #0]
 800b232:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800b236:	605a      	str	r2, [r3, #4]
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	689a      	ldr	r2, [r3, #8]
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	681b      	ldr	r3, [r3, #0]
 800b242:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800b246:	609a      	str	r2, [r3, #8]
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	681a      	ldr	r2, [r3, #0]
 800b24e:	687b      	ldr	r3, [r7, #4]
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	f042 0201 	orr.w	r2, r2, #1
 800b256:	601a      	str	r2, [r3, #0]
 800b258:	6878      	ldr	r0, [r7, #4]
 800b25a:	f000 fbe9 	bl	800ba30 <UART_CheckIdleState>
 800b25e:	4603      	mov	r3, r0
 800b260:	4618      	mov	r0, r3
 800b262:	3708      	adds	r7, #8
 800b264:	46bd      	mov	sp, r7
 800b266:	bd80      	pop	{r7, pc}

0800b268 <HAL_UART_Transmit>:
 800b268:	b580      	push	{r7, lr}
 800b26a:	b08a      	sub	sp, #40	@ 0x28
 800b26c:	af02      	add	r7, sp, #8
 800b26e:	60f8      	str	r0, [r7, #12]
 800b270:	60b9      	str	r1, [r7, #8]
 800b272:	603b      	str	r3, [r7, #0]
 800b274:	4613      	mov	r3, r2
 800b276:	80fb      	strh	r3, [r7, #6]
 800b278:	68fb      	ldr	r3, [r7, #12]
 800b27a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b27c:	2b20      	cmp	r3, #32
 800b27e:	d177      	bne.n	800b370 <HAL_UART_Transmit+0x108>
 800b280:	68bb      	ldr	r3, [r7, #8]
 800b282:	2b00      	cmp	r3, #0
 800b284:	d002      	beq.n	800b28c <HAL_UART_Transmit+0x24>
 800b286:	88fb      	ldrh	r3, [r7, #6]
 800b288:	2b00      	cmp	r3, #0
 800b28a:	d101      	bne.n	800b290 <HAL_UART_Transmit+0x28>
 800b28c:	2301      	movs	r3, #1
 800b28e:	e070      	b.n	800b372 <HAL_UART_Transmit+0x10a>
 800b290:	68fb      	ldr	r3, [r7, #12]
 800b292:	2200      	movs	r2, #0
 800b294:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b298:	68fb      	ldr	r3, [r7, #12]
 800b29a:	2221      	movs	r2, #33	@ 0x21
 800b29c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800b29e:	f7fa fbed 	bl	8005a7c <HAL_GetTick>
 800b2a2:	6178      	str	r0, [r7, #20]
 800b2a4:	68fb      	ldr	r3, [r7, #12]
 800b2a6:	88fa      	ldrh	r2, [r7, #6]
 800b2a8:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 800b2ac:	68fb      	ldr	r3, [r7, #12]
 800b2ae:	88fa      	ldrh	r2, [r7, #6]
 800b2b0:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800b2b4:	68fb      	ldr	r3, [r7, #12]
 800b2b6:	689b      	ldr	r3, [r3, #8]
 800b2b8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800b2bc:	d108      	bne.n	800b2d0 <HAL_UART_Transmit+0x68>
 800b2be:	68fb      	ldr	r3, [r7, #12]
 800b2c0:	691b      	ldr	r3, [r3, #16]
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	d104      	bne.n	800b2d0 <HAL_UART_Transmit+0x68>
 800b2c6:	2300      	movs	r3, #0
 800b2c8:	61fb      	str	r3, [r7, #28]
 800b2ca:	68bb      	ldr	r3, [r7, #8]
 800b2cc:	61bb      	str	r3, [r7, #24]
 800b2ce:	e003      	b.n	800b2d8 <HAL_UART_Transmit+0x70>
 800b2d0:	68bb      	ldr	r3, [r7, #8]
 800b2d2:	61fb      	str	r3, [r7, #28]
 800b2d4:	2300      	movs	r3, #0
 800b2d6:	61bb      	str	r3, [r7, #24]
 800b2d8:	e02f      	b.n	800b33a <HAL_UART_Transmit+0xd2>
 800b2da:	683b      	ldr	r3, [r7, #0]
 800b2dc:	9300      	str	r3, [sp, #0]
 800b2de:	697b      	ldr	r3, [r7, #20]
 800b2e0:	2200      	movs	r2, #0
 800b2e2:	2180      	movs	r1, #128	@ 0x80
 800b2e4:	68f8      	ldr	r0, [r7, #12]
 800b2e6:	f000 fc4b 	bl	800bb80 <UART_WaitOnFlagUntilTimeout>
 800b2ea:	4603      	mov	r3, r0
 800b2ec:	2b00      	cmp	r3, #0
 800b2ee:	d004      	beq.n	800b2fa <HAL_UART_Transmit+0x92>
 800b2f0:	68fb      	ldr	r3, [r7, #12]
 800b2f2:	2220      	movs	r2, #32
 800b2f4:	67da      	str	r2, [r3, #124]	@ 0x7c
 800b2f6:	2303      	movs	r3, #3
 800b2f8:	e03b      	b.n	800b372 <HAL_UART_Transmit+0x10a>
 800b2fa:	69fb      	ldr	r3, [r7, #28]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d10b      	bne.n	800b318 <HAL_UART_Transmit+0xb0>
 800b300:	69bb      	ldr	r3, [r7, #24]
 800b302:	881a      	ldrh	r2, [r3, #0]
 800b304:	68fb      	ldr	r3, [r7, #12]
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b30c:	b292      	uxth	r2, r2
 800b30e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800b310:	69bb      	ldr	r3, [r7, #24]
 800b312:	3302      	adds	r3, #2
 800b314:	61bb      	str	r3, [r7, #24]
 800b316:	e007      	b.n	800b328 <HAL_UART_Transmit+0xc0>
 800b318:	69fb      	ldr	r3, [r7, #28]
 800b31a:	781a      	ldrb	r2, [r3, #0]
 800b31c:	68fb      	ldr	r3, [r7, #12]
 800b31e:	681b      	ldr	r3, [r3, #0]
 800b320:	851a      	strh	r2, [r3, #40]	@ 0x28
 800b322:	69fb      	ldr	r3, [r7, #28]
 800b324:	3301      	adds	r3, #1
 800b326:	61fb      	str	r3, [r7, #28]
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800b32e:	b29b      	uxth	r3, r3
 800b330:	3b01      	subs	r3, #1
 800b332:	b29a      	uxth	r2, r3
 800b334:	68fb      	ldr	r3, [r7, #12]
 800b336:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800b33a:	68fb      	ldr	r3, [r7, #12]
 800b33c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800b340:	b29b      	uxth	r3, r3
 800b342:	2b00      	cmp	r3, #0
 800b344:	d1c9      	bne.n	800b2da <HAL_UART_Transmit+0x72>
 800b346:	683b      	ldr	r3, [r7, #0]
 800b348:	9300      	str	r3, [sp, #0]
 800b34a:	697b      	ldr	r3, [r7, #20]
 800b34c:	2200      	movs	r2, #0
 800b34e:	2140      	movs	r1, #64	@ 0x40
 800b350:	68f8      	ldr	r0, [r7, #12]
 800b352:	f000 fc15 	bl	800bb80 <UART_WaitOnFlagUntilTimeout>
 800b356:	4603      	mov	r3, r0
 800b358:	2b00      	cmp	r3, #0
 800b35a:	d004      	beq.n	800b366 <HAL_UART_Transmit+0xfe>
 800b35c:	68fb      	ldr	r3, [r7, #12]
 800b35e:	2220      	movs	r2, #32
 800b360:	67da      	str	r2, [r3, #124]	@ 0x7c
 800b362:	2303      	movs	r3, #3
 800b364:	e005      	b.n	800b372 <HAL_UART_Transmit+0x10a>
 800b366:	68fb      	ldr	r3, [r7, #12]
 800b368:	2220      	movs	r2, #32
 800b36a:	67da      	str	r2, [r3, #124]	@ 0x7c
 800b36c:	2300      	movs	r3, #0
 800b36e:	e000      	b.n	800b372 <HAL_UART_Transmit+0x10a>
 800b370:	2302      	movs	r3, #2
 800b372:	4618      	mov	r0, r3
 800b374:	3720      	adds	r7, #32
 800b376:	46bd      	mov	sp, r7
 800b378:	bd80      	pop	{r7, pc}
	...

0800b37c <UART_SetConfig>:
 800b37c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b380:	b08a      	sub	sp, #40	@ 0x28
 800b382:	af00      	add	r7, sp, #0
 800b384:	60f8      	str	r0, [r7, #12]
 800b386:	2300      	movs	r3, #0
 800b388:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b38c:	68fb      	ldr	r3, [r7, #12]
 800b38e:	689a      	ldr	r2, [r3, #8]
 800b390:	68fb      	ldr	r3, [r7, #12]
 800b392:	691b      	ldr	r3, [r3, #16]
 800b394:	431a      	orrs	r2, r3
 800b396:	68fb      	ldr	r3, [r7, #12]
 800b398:	695b      	ldr	r3, [r3, #20]
 800b39a:	431a      	orrs	r2, r3
 800b39c:	68fb      	ldr	r3, [r7, #12]
 800b39e:	69db      	ldr	r3, [r3, #28]
 800b3a0:	4313      	orrs	r3, r2
 800b3a2:	627b      	str	r3, [r7, #36]	@ 0x24
 800b3a4:	68fb      	ldr	r3, [r7, #12]
 800b3a6:	681b      	ldr	r3, [r3, #0]
 800b3a8:	681a      	ldr	r2, [r3, #0]
 800b3aa:	4ba4      	ldr	r3, [pc, #656]	@ (800b63c <UART_SetConfig+0x2c0>)
 800b3ac:	4013      	ands	r3, r2
 800b3ae:	68fa      	ldr	r2, [r7, #12]
 800b3b0:	6812      	ldr	r2, [r2, #0]
 800b3b2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800b3b4:	430b      	orrs	r3, r1
 800b3b6:	6013      	str	r3, [r2, #0]
 800b3b8:	68fb      	ldr	r3, [r7, #12]
 800b3ba:	681b      	ldr	r3, [r3, #0]
 800b3bc:	685b      	ldr	r3, [r3, #4]
 800b3be:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800b3c2:	68fb      	ldr	r3, [r7, #12]
 800b3c4:	68da      	ldr	r2, [r3, #12]
 800b3c6:	68fb      	ldr	r3, [r7, #12]
 800b3c8:	681b      	ldr	r3, [r3, #0]
 800b3ca:	430a      	orrs	r2, r1
 800b3cc:	605a      	str	r2, [r3, #4]
 800b3ce:	68fb      	ldr	r3, [r7, #12]
 800b3d0:	699b      	ldr	r3, [r3, #24]
 800b3d2:	627b      	str	r3, [r7, #36]	@ 0x24
 800b3d4:	68fb      	ldr	r3, [r7, #12]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	4a99      	ldr	r2, [pc, #612]	@ (800b640 <UART_SetConfig+0x2c4>)
 800b3da:	4293      	cmp	r3, r2
 800b3dc:	d004      	beq.n	800b3e8 <UART_SetConfig+0x6c>
 800b3de:	68fb      	ldr	r3, [r7, #12]
 800b3e0:	6a1b      	ldr	r3, [r3, #32]
 800b3e2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800b3e4:	4313      	orrs	r3, r2
 800b3e6:	627b      	str	r3, [r7, #36]	@ 0x24
 800b3e8:	68fb      	ldr	r3, [r7, #12]
 800b3ea:	681b      	ldr	r3, [r3, #0]
 800b3ec:	689b      	ldr	r3, [r3, #8]
 800b3ee:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 800b3f2:	68fb      	ldr	r3, [r7, #12]
 800b3f4:	681b      	ldr	r3, [r3, #0]
 800b3f6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800b3f8:	430a      	orrs	r2, r1
 800b3fa:	609a      	str	r2, [r3, #8]
 800b3fc:	68fb      	ldr	r3, [r7, #12]
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	4a90      	ldr	r2, [pc, #576]	@ (800b644 <UART_SetConfig+0x2c8>)
 800b402:	4293      	cmp	r3, r2
 800b404:	d126      	bne.n	800b454 <UART_SetConfig+0xd8>
 800b406:	4b90      	ldr	r3, [pc, #576]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b408:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b40c:	f003 0303 	and.w	r3, r3, #3
 800b410:	2b03      	cmp	r3, #3
 800b412:	d81b      	bhi.n	800b44c <UART_SetConfig+0xd0>
 800b414:	a201      	add	r2, pc, #4	@ (adr r2, 800b41c <UART_SetConfig+0xa0>)
 800b416:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b41a:	bf00      	nop
 800b41c:	0800b42d 	.word	0x0800b42d
 800b420:	0800b43d 	.word	0x0800b43d
 800b424:	0800b435 	.word	0x0800b435
 800b428:	0800b445 	.word	0x0800b445
 800b42c:	2301      	movs	r3, #1
 800b42e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b432:	e116      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b434:	2302      	movs	r3, #2
 800b436:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b43a:	e112      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b43c:	2304      	movs	r3, #4
 800b43e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b442:	e10e      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b444:	2308      	movs	r3, #8
 800b446:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b44a:	e10a      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b44c:	2310      	movs	r3, #16
 800b44e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b452:	e106      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b454:	68fb      	ldr	r3, [r7, #12]
 800b456:	681b      	ldr	r3, [r3, #0]
 800b458:	4a7c      	ldr	r2, [pc, #496]	@ (800b64c <UART_SetConfig+0x2d0>)
 800b45a:	4293      	cmp	r3, r2
 800b45c:	d138      	bne.n	800b4d0 <UART_SetConfig+0x154>
 800b45e:	4b7a      	ldr	r3, [pc, #488]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b460:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b464:	f003 030c 	and.w	r3, r3, #12
 800b468:	2b0c      	cmp	r3, #12
 800b46a:	d82d      	bhi.n	800b4c8 <UART_SetConfig+0x14c>
 800b46c:	a201      	add	r2, pc, #4	@ (adr r2, 800b474 <UART_SetConfig+0xf8>)
 800b46e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b472:	bf00      	nop
 800b474:	0800b4a9 	.word	0x0800b4a9
 800b478:	0800b4c9 	.word	0x0800b4c9
 800b47c:	0800b4c9 	.word	0x0800b4c9
 800b480:	0800b4c9 	.word	0x0800b4c9
 800b484:	0800b4b9 	.word	0x0800b4b9
 800b488:	0800b4c9 	.word	0x0800b4c9
 800b48c:	0800b4c9 	.word	0x0800b4c9
 800b490:	0800b4c9 	.word	0x0800b4c9
 800b494:	0800b4b1 	.word	0x0800b4b1
 800b498:	0800b4c9 	.word	0x0800b4c9
 800b49c:	0800b4c9 	.word	0x0800b4c9
 800b4a0:	0800b4c9 	.word	0x0800b4c9
 800b4a4:	0800b4c1 	.word	0x0800b4c1
 800b4a8:	2300      	movs	r3, #0
 800b4aa:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b4ae:	e0d8      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b4b0:	2302      	movs	r3, #2
 800b4b2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b4b6:	e0d4      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b4b8:	2304      	movs	r3, #4
 800b4ba:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b4be:	e0d0      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b4c0:	2308      	movs	r3, #8
 800b4c2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b4c6:	e0cc      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b4c8:	2310      	movs	r3, #16
 800b4ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b4ce:	e0c8      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b4d0:	68fb      	ldr	r3, [r7, #12]
 800b4d2:	681b      	ldr	r3, [r3, #0]
 800b4d4:	4a5e      	ldr	r2, [pc, #376]	@ (800b650 <UART_SetConfig+0x2d4>)
 800b4d6:	4293      	cmp	r3, r2
 800b4d8:	d125      	bne.n	800b526 <UART_SetConfig+0x1aa>
 800b4da:	4b5b      	ldr	r3, [pc, #364]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b4dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b4e0:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800b4e4:	2b30      	cmp	r3, #48	@ 0x30
 800b4e6:	d016      	beq.n	800b516 <UART_SetConfig+0x19a>
 800b4e8:	2b30      	cmp	r3, #48	@ 0x30
 800b4ea:	d818      	bhi.n	800b51e <UART_SetConfig+0x1a2>
 800b4ec:	2b20      	cmp	r3, #32
 800b4ee:	d00a      	beq.n	800b506 <UART_SetConfig+0x18a>
 800b4f0:	2b20      	cmp	r3, #32
 800b4f2:	d814      	bhi.n	800b51e <UART_SetConfig+0x1a2>
 800b4f4:	2b00      	cmp	r3, #0
 800b4f6:	d002      	beq.n	800b4fe <UART_SetConfig+0x182>
 800b4f8:	2b10      	cmp	r3, #16
 800b4fa:	d008      	beq.n	800b50e <UART_SetConfig+0x192>
 800b4fc:	e00f      	b.n	800b51e <UART_SetConfig+0x1a2>
 800b4fe:	2300      	movs	r3, #0
 800b500:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b504:	e0ad      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b506:	2302      	movs	r3, #2
 800b508:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b50c:	e0a9      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b50e:	2304      	movs	r3, #4
 800b510:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b514:	e0a5      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b516:	2308      	movs	r3, #8
 800b518:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b51c:	e0a1      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b51e:	2310      	movs	r3, #16
 800b520:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b524:	e09d      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b526:	68fb      	ldr	r3, [r7, #12]
 800b528:	681b      	ldr	r3, [r3, #0]
 800b52a:	4a4a      	ldr	r2, [pc, #296]	@ (800b654 <UART_SetConfig+0x2d8>)
 800b52c:	4293      	cmp	r3, r2
 800b52e:	d125      	bne.n	800b57c <UART_SetConfig+0x200>
 800b530:	4b45      	ldr	r3, [pc, #276]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b532:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b536:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800b53a:	2bc0      	cmp	r3, #192	@ 0xc0
 800b53c:	d016      	beq.n	800b56c <UART_SetConfig+0x1f0>
 800b53e:	2bc0      	cmp	r3, #192	@ 0xc0
 800b540:	d818      	bhi.n	800b574 <UART_SetConfig+0x1f8>
 800b542:	2b80      	cmp	r3, #128	@ 0x80
 800b544:	d00a      	beq.n	800b55c <UART_SetConfig+0x1e0>
 800b546:	2b80      	cmp	r3, #128	@ 0x80
 800b548:	d814      	bhi.n	800b574 <UART_SetConfig+0x1f8>
 800b54a:	2b00      	cmp	r3, #0
 800b54c:	d002      	beq.n	800b554 <UART_SetConfig+0x1d8>
 800b54e:	2b40      	cmp	r3, #64	@ 0x40
 800b550:	d008      	beq.n	800b564 <UART_SetConfig+0x1e8>
 800b552:	e00f      	b.n	800b574 <UART_SetConfig+0x1f8>
 800b554:	2300      	movs	r3, #0
 800b556:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b55a:	e082      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b55c:	2302      	movs	r3, #2
 800b55e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b562:	e07e      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b564:	2304      	movs	r3, #4
 800b566:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b56a:	e07a      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b56c:	2308      	movs	r3, #8
 800b56e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b572:	e076      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b574:	2310      	movs	r3, #16
 800b576:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b57a:	e072      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b57c:	68fb      	ldr	r3, [r7, #12]
 800b57e:	681b      	ldr	r3, [r3, #0]
 800b580:	4a35      	ldr	r2, [pc, #212]	@ (800b658 <UART_SetConfig+0x2dc>)
 800b582:	4293      	cmp	r3, r2
 800b584:	d12a      	bne.n	800b5dc <UART_SetConfig+0x260>
 800b586:	4b30      	ldr	r3, [pc, #192]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b588:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b58c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800b590:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b594:	d01a      	beq.n	800b5cc <UART_SetConfig+0x250>
 800b596:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b59a:	d81b      	bhi.n	800b5d4 <UART_SetConfig+0x258>
 800b59c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b5a0:	d00c      	beq.n	800b5bc <UART_SetConfig+0x240>
 800b5a2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b5a6:	d815      	bhi.n	800b5d4 <UART_SetConfig+0x258>
 800b5a8:	2b00      	cmp	r3, #0
 800b5aa:	d003      	beq.n	800b5b4 <UART_SetConfig+0x238>
 800b5ac:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b5b0:	d008      	beq.n	800b5c4 <UART_SetConfig+0x248>
 800b5b2:	e00f      	b.n	800b5d4 <UART_SetConfig+0x258>
 800b5b4:	2300      	movs	r3, #0
 800b5b6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b5ba:	e052      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b5bc:	2302      	movs	r3, #2
 800b5be:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b5c2:	e04e      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b5c4:	2304      	movs	r3, #4
 800b5c6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b5ca:	e04a      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b5cc:	2308      	movs	r3, #8
 800b5ce:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b5d2:	e046      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b5d4:	2310      	movs	r3, #16
 800b5d6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b5da:	e042      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	681b      	ldr	r3, [r3, #0]
 800b5e0:	4a17      	ldr	r2, [pc, #92]	@ (800b640 <UART_SetConfig+0x2c4>)
 800b5e2:	4293      	cmp	r3, r2
 800b5e4:	d13a      	bne.n	800b65c <UART_SetConfig+0x2e0>
 800b5e6:	4b18      	ldr	r3, [pc, #96]	@ (800b648 <UART_SetConfig+0x2cc>)
 800b5e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b5ec:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800b5f0:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800b5f4:	d01a      	beq.n	800b62c <UART_SetConfig+0x2b0>
 800b5f6:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800b5fa:	d81b      	bhi.n	800b634 <UART_SetConfig+0x2b8>
 800b5fc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b600:	d00c      	beq.n	800b61c <UART_SetConfig+0x2a0>
 800b602:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b606:	d815      	bhi.n	800b634 <UART_SetConfig+0x2b8>
 800b608:	2b00      	cmp	r3, #0
 800b60a:	d003      	beq.n	800b614 <UART_SetConfig+0x298>
 800b60c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b610:	d008      	beq.n	800b624 <UART_SetConfig+0x2a8>
 800b612:	e00f      	b.n	800b634 <UART_SetConfig+0x2b8>
 800b614:	2300      	movs	r3, #0
 800b616:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b61a:	e022      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b61c:	2302      	movs	r3, #2
 800b61e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b622:	e01e      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b624:	2304      	movs	r3, #4
 800b626:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b62a:	e01a      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b62c:	2308      	movs	r3, #8
 800b62e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b632:	e016      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b634:	2310      	movs	r3, #16
 800b636:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b63a:	e012      	b.n	800b662 <UART_SetConfig+0x2e6>
 800b63c:	efff69f3 	.word	0xefff69f3
 800b640:	40008000 	.word	0x40008000
 800b644:	40013800 	.word	0x40013800
 800b648:	40021000 	.word	0x40021000
 800b64c:	40004400 	.word	0x40004400
 800b650:	40004800 	.word	0x40004800
 800b654:	40004c00 	.word	0x40004c00
 800b658:	40005000 	.word	0x40005000
 800b65c:	2310      	movs	r3, #16
 800b65e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800b662:	68fb      	ldr	r3, [r7, #12]
 800b664:	681b      	ldr	r3, [r3, #0]
 800b666:	4a9f      	ldr	r2, [pc, #636]	@ (800b8e4 <UART_SetConfig+0x568>)
 800b668:	4293      	cmp	r3, r2
 800b66a:	d17a      	bne.n	800b762 <UART_SetConfig+0x3e6>
 800b66c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b670:	2b08      	cmp	r3, #8
 800b672:	d824      	bhi.n	800b6be <UART_SetConfig+0x342>
 800b674:	a201      	add	r2, pc, #4	@ (adr r2, 800b67c <UART_SetConfig+0x300>)
 800b676:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b67a:	bf00      	nop
 800b67c:	0800b6a1 	.word	0x0800b6a1
 800b680:	0800b6bf 	.word	0x0800b6bf
 800b684:	0800b6a9 	.word	0x0800b6a9
 800b688:	0800b6bf 	.word	0x0800b6bf
 800b68c:	0800b6af 	.word	0x0800b6af
 800b690:	0800b6bf 	.word	0x0800b6bf
 800b694:	0800b6bf 	.word	0x0800b6bf
 800b698:	0800b6bf 	.word	0x0800b6bf
 800b69c:	0800b6b7 	.word	0x0800b6b7
 800b6a0:	f7fc fd6a 	bl	8008178 <HAL_RCC_GetPCLK1Freq>
 800b6a4:	61f8      	str	r0, [r7, #28]
 800b6a6:	e010      	b.n	800b6ca <UART_SetConfig+0x34e>
 800b6a8:	4b8f      	ldr	r3, [pc, #572]	@ (800b8e8 <UART_SetConfig+0x56c>)
 800b6aa:	61fb      	str	r3, [r7, #28]
 800b6ac:	e00d      	b.n	800b6ca <UART_SetConfig+0x34e>
 800b6ae:	f7fc fccb 	bl	8008048 <HAL_RCC_GetSysClockFreq>
 800b6b2:	61f8      	str	r0, [r7, #28]
 800b6b4:	e009      	b.n	800b6ca <UART_SetConfig+0x34e>
 800b6b6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b6ba:	61fb      	str	r3, [r7, #28]
 800b6bc:	e005      	b.n	800b6ca <UART_SetConfig+0x34e>
 800b6be:	2300      	movs	r3, #0
 800b6c0:	61fb      	str	r3, [r7, #28]
 800b6c2:	2301      	movs	r3, #1
 800b6c4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b6c8:	bf00      	nop
 800b6ca:	69fb      	ldr	r3, [r7, #28]
 800b6cc:	2b00      	cmp	r3, #0
 800b6ce:	f000 80fb 	beq.w	800b8c8 <UART_SetConfig+0x54c>
 800b6d2:	68fb      	ldr	r3, [r7, #12]
 800b6d4:	685a      	ldr	r2, [r3, #4]
 800b6d6:	4613      	mov	r3, r2
 800b6d8:	005b      	lsls	r3, r3, #1
 800b6da:	4413      	add	r3, r2
 800b6dc:	69fa      	ldr	r2, [r7, #28]
 800b6de:	429a      	cmp	r2, r3
 800b6e0:	d305      	bcc.n	800b6ee <UART_SetConfig+0x372>
 800b6e2:	68fb      	ldr	r3, [r7, #12]
 800b6e4:	685b      	ldr	r3, [r3, #4]
 800b6e6:	031b      	lsls	r3, r3, #12
 800b6e8:	69fa      	ldr	r2, [r7, #28]
 800b6ea:	429a      	cmp	r2, r3
 800b6ec:	d903      	bls.n	800b6f6 <UART_SetConfig+0x37a>
 800b6ee:	2301      	movs	r3, #1
 800b6f0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b6f4:	e0e8      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b6f6:	69fb      	ldr	r3, [r7, #28]
 800b6f8:	2200      	movs	r2, #0
 800b6fa:	461c      	mov	r4, r3
 800b6fc:	4615      	mov	r5, r2
 800b6fe:	f04f 0200 	mov.w	r2, #0
 800b702:	f04f 0300 	mov.w	r3, #0
 800b706:	022b      	lsls	r3, r5, #8
 800b708:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 800b70c:	0222      	lsls	r2, r4, #8
 800b70e:	68f9      	ldr	r1, [r7, #12]
 800b710:	6849      	ldr	r1, [r1, #4]
 800b712:	0849      	lsrs	r1, r1, #1
 800b714:	2000      	movs	r0, #0
 800b716:	4688      	mov	r8, r1
 800b718:	4681      	mov	r9, r0
 800b71a:	eb12 0a08 	adds.w	sl, r2, r8
 800b71e:	eb43 0b09 	adc.w	fp, r3, r9
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	685b      	ldr	r3, [r3, #4]
 800b726:	2200      	movs	r2, #0
 800b728:	603b      	str	r3, [r7, #0]
 800b72a:	607a      	str	r2, [r7, #4]
 800b72c:	e9d7 2300 	ldrd	r2, r3, [r7]
 800b730:	4650      	mov	r0, sl
 800b732:	4659      	mov	r1, fp
 800b734:	f7f5 fa48 	bl	8000bc8 <__aeabi_uldivmod>
 800b738:	4602      	mov	r2, r0
 800b73a:	460b      	mov	r3, r1
 800b73c:	4613      	mov	r3, r2
 800b73e:	61bb      	str	r3, [r7, #24]
 800b740:	69bb      	ldr	r3, [r7, #24]
 800b742:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b746:	d308      	bcc.n	800b75a <UART_SetConfig+0x3de>
 800b748:	69bb      	ldr	r3, [r7, #24]
 800b74a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800b74e:	d204      	bcs.n	800b75a <UART_SetConfig+0x3de>
 800b750:	68fb      	ldr	r3, [r7, #12]
 800b752:	681b      	ldr	r3, [r3, #0]
 800b754:	69ba      	ldr	r2, [r7, #24]
 800b756:	60da      	str	r2, [r3, #12]
 800b758:	e0b6      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b75a:	2301      	movs	r3, #1
 800b75c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b760:	e0b2      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	69db      	ldr	r3, [r3, #28]
 800b766:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800b76a:	d15e      	bne.n	800b82a <UART_SetConfig+0x4ae>
 800b76c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b770:	2b08      	cmp	r3, #8
 800b772:	d828      	bhi.n	800b7c6 <UART_SetConfig+0x44a>
 800b774:	a201      	add	r2, pc, #4	@ (adr r2, 800b77c <UART_SetConfig+0x400>)
 800b776:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b77a:	bf00      	nop
 800b77c:	0800b7a1 	.word	0x0800b7a1
 800b780:	0800b7a9 	.word	0x0800b7a9
 800b784:	0800b7b1 	.word	0x0800b7b1
 800b788:	0800b7c7 	.word	0x0800b7c7
 800b78c:	0800b7b7 	.word	0x0800b7b7
 800b790:	0800b7c7 	.word	0x0800b7c7
 800b794:	0800b7c7 	.word	0x0800b7c7
 800b798:	0800b7c7 	.word	0x0800b7c7
 800b79c:	0800b7bf 	.word	0x0800b7bf
 800b7a0:	f7fc fcea 	bl	8008178 <HAL_RCC_GetPCLK1Freq>
 800b7a4:	61f8      	str	r0, [r7, #28]
 800b7a6:	e014      	b.n	800b7d2 <UART_SetConfig+0x456>
 800b7a8:	f7fc fcfc 	bl	80081a4 <HAL_RCC_GetPCLK2Freq>
 800b7ac:	61f8      	str	r0, [r7, #28]
 800b7ae:	e010      	b.n	800b7d2 <UART_SetConfig+0x456>
 800b7b0:	4b4d      	ldr	r3, [pc, #308]	@ (800b8e8 <UART_SetConfig+0x56c>)
 800b7b2:	61fb      	str	r3, [r7, #28]
 800b7b4:	e00d      	b.n	800b7d2 <UART_SetConfig+0x456>
 800b7b6:	f7fc fc47 	bl	8008048 <HAL_RCC_GetSysClockFreq>
 800b7ba:	61f8      	str	r0, [r7, #28]
 800b7bc:	e009      	b.n	800b7d2 <UART_SetConfig+0x456>
 800b7be:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b7c2:	61fb      	str	r3, [r7, #28]
 800b7c4:	e005      	b.n	800b7d2 <UART_SetConfig+0x456>
 800b7c6:	2300      	movs	r3, #0
 800b7c8:	61fb      	str	r3, [r7, #28]
 800b7ca:	2301      	movs	r3, #1
 800b7cc:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b7d0:	bf00      	nop
 800b7d2:	69fb      	ldr	r3, [r7, #28]
 800b7d4:	2b00      	cmp	r3, #0
 800b7d6:	d077      	beq.n	800b8c8 <UART_SetConfig+0x54c>
 800b7d8:	69fb      	ldr	r3, [r7, #28]
 800b7da:	005a      	lsls	r2, r3, #1
 800b7dc:	68fb      	ldr	r3, [r7, #12]
 800b7de:	685b      	ldr	r3, [r3, #4]
 800b7e0:	085b      	lsrs	r3, r3, #1
 800b7e2:	441a      	add	r2, r3
 800b7e4:	68fb      	ldr	r3, [r7, #12]
 800b7e6:	685b      	ldr	r3, [r3, #4]
 800b7e8:	fbb2 f3f3 	udiv	r3, r2, r3
 800b7ec:	61bb      	str	r3, [r7, #24]
 800b7ee:	69bb      	ldr	r3, [r7, #24]
 800b7f0:	2b0f      	cmp	r3, #15
 800b7f2:	d916      	bls.n	800b822 <UART_SetConfig+0x4a6>
 800b7f4:	69bb      	ldr	r3, [r7, #24]
 800b7f6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b7fa:	d212      	bcs.n	800b822 <UART_SetConfig+0x4a6>
 800b7fc:	69bb      	ldr	r3, [r7, #24]
 800b7fe:	b29b      	uxth	r3, r3
 800b800:	f023 030f 	bic.w	r3, r3, #15
 800b804:	82fb      	strh	r3, [r7, #22]
 800b806:	69bb      	ldr	r3, [r7, #24]
 800b808:	085b      	lsrs	r3, r3, #1
 800b80a:	b29b      	uxth	r3, r3
 800b80c:	f003 0307 	and.w	r3, r3, #7
 800b810:	b29a      	uxth	r2, r3
 800b812:	8afb      	ldrh	r3, [r7, #22]
 800b814:	4313      	orrs	r3, r2
 800b816:	82fb      	strh	r3, [r7, #22]
 800b818:	68fb      	ldr	r3, [r7, #12]
 800b81a:	681b      	ldr	r3, [r3, #0]
 800b81c:	8afa      	ldrh	r2, [r7, #22]
 800b81e:	60da      	str	r2, [r3, #12]
 800b820:	e052      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b822:	2301      	movs	r3, #1
 800b824:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b828:	e04e      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b82a:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b82e:	2b08      	cmp	r3, #8
 800b830:	d827      	bhi.n	800b882 <UART_SetConfig+0x506>
 800b832:	a201      	add	r2, pc, #4	@ (adr r2, 800b838 <UART_SetConfig+0x4bc>)
 800b834:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b838:	0800b85d 	.word	0x0800b85d
 800b83c:	0800b865 	.word	0x0800b865
 800b840:	0800b86d 	.word	0x0800b86d
 800b844:	0800b883 	.word	0x0800b883
 800b848:	0800b873 	.word	0x0800b873
 800b84c:	0800b883 	.word	0x0800b883
 800b850:	0800b883 	.word	0x0800b883
 800b854:	0800b883 	.word	0x0800b883
 800b858:	0800b87b 	.word	0x0800b87b
 800b85c:	f7fc fc8c 	bl	8008178 <HAL_RCC_GetPCLK1Freq>
 800b860:	61f8      	str	r0, [r7, #28]
 800b862:	e014      	b.n	800b88e <UART_SetConfig+0x512>
 800b864:	f7fc fc9e 	bl	80081a4 <HAL_RCC_GetPCLK2Freq>
 800b868:	61f8      	str	r0, [r7, #28]
 800b86a:	e010      	b.n	800b88e <UART_SetConfig+0x512>
 800b86c:	4b1e      	ldr	r3, [pc, #120]	@ (800b8e8 <UART_SetConfig+0x56c>)
 800b86e:	61fb      	str	r3, [r7, #28]
 800b870:	e00d      	b.n	800b88e <UART_SetConfig+0x512>
 800b872:	f7fc fbe9 	bl	8008048 <HAL_RCC_GetSysClockFreq>
 800b876:	61f8      	str	r0, [r7, #28]
 800b878:	e009      	b.n	800b88e <UART_SetConfig+0x512>
 800b87a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b87e:	61fb      	str	r3, [r7, #28]
 800b880:	e005      	b.n	800b88e <UART_SetConfig+0x512>
 800b882:	2300      	movs	r3, #0
 800b884:	61fb      	str	r3, [r7, #28]
 800b886:	2301      	movs	r3, #1
 800b888:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b88c:	bf00      	nop
 800b88e:	69fb      	ldr	r3, [r7, #28]
 800b890:	2b00      	cmp	r3, #0
 800b892:	d019      	beq.n	800b8c8 <UART_SetConfig+0x54c>
 800b894:	68fb      	ldr	r3, [r7, #12]
 800b896:	685b      	ldr	r3, [r3, #4]
 800b898:	085a      	lsrs	r2, r3, #1
 800b89a:	69fb      	ldr	r3, [r7, #28]
 800b89c:	441a      	add	r2, r3
 800b89e:	68fb      	ldr	r3, [r7, #12]
 800b8a0:	685b      	ldr	r3, [r3, #4]
 800b8a2:	fbb2 f3f3 	udiv	r3, r2, r3
 800b8a6:	61bb      	str	r3, [r7, #24]
 800b8a8:	69bb      	ldr	r3, [r7, #24]
 800b8aa:	2b0f      	cmp	r3, #15
 800b8ac:	d909      	bls.n	800b8c2 <UART_SetConfig+0x546>
 800b8ae:	69bb      	ldr	r3, [r7, #24]
 800b8b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b8b4:	d205      	bcs.n	800b8c2 <UART_SetConfig+0x546>
 800b8b6:	69bb      	ldr	r3, [r7, #24]
 800b8b8:	b29a      	uxth	r2, r3
 800b8ba:	68fb      	ldr	r3, [r7, #12]
 800b8bc:	681b      	ldr	r3, [r3, #0]
 800b8be:	60da      	str	r2, [r3, #12]
 800b8c0:	e002      	b.n	800b8c8 <UART_SetConfig+0x54c>
 800b8c2:	2301      	movs	r3, #1
 800b8c4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b8c8:	68fb      	ldr	r3, [r7, #12]
 800b8ca:	2200      	movs	r2, #0
 800b8cc:	669a      	str	r2, [r3, #104]	@ 0x68
 800b8ce:	68fb      	ldr	r3, [r7, #12]
 800b8d0:	2200      	movs	r2, #0
 800b8d2:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b8d4:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800b8d8:	4618      	mov	r0, r3
 800b8da:	3728      	adds	r7, #40	@ 0x28
 800b8dc:	46bd      	mov	sp, r7
 800b8de:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800b8e2:	bf00      	nop
 800b8e4:	40008000 	.word	0x40008000
 800b8e8:	00f42400 	.word	0x00f42400

0800b8ec <UART_AdvFeatureConfig>:
 800b8ec:	b480      	push	{r7}
 800b8ee:	b083      	sub	sp, #12
 800b8f0:	af00      	add	r7, sp, #0
 800b8f2:	6078      	str	r0, [r7, #4]
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b8f8:	f003 0308 	and.w	r3, r3, #8
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	d00a      	beq.n	800b916 <UART_AdvFeatureConfig+0x2a>
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	681b      	ldr	r3, [r3, #0]
 800b904:	685b      	ldr	r3, [r3, #4]
 800b906:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	681b      	ldr	r3, [r3, #0]
 800b912:	430a      	orrs	r2, r1
 800b914:	605a      	str	r2, [r3, #4]
 800b916:	687b      	ldr	r3, [r7, #4]
 800b918:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b91a:	f003 0301 	and.w	r3, r3, #1
 800b91e:	2b00      	cmp	r3, #0
 800b920:	d00a      	beq.n	800b938 <UART_AdvFeatureConfig+0x4c>
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	681b      	ldr	r3, [r3, #0]
 800b926:	685b      	ldr	r3, [r3, #4]
 800b928:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800b92c:	687b      	ldr	r3, [r7, #4]
 800b92e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b930:	687b      	ldr	r3, [r7, #4]
 800b932:	681b      	ldr	r3, [r3, #0]
 800b934:	430a      	orrs	r2, r1
 800b936:	605a      	str	r2, [r3, #4]
 800b938:	687b      	ldr	r3, [r7, #4]
 800b93a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b93c:	f003 0302 	and.w	r3, r3, #2
 800b940:	2b00      	cmp	r3, #0
 800b942:	d00a      	beq.n	800b95a <UART_AdvFeatureConfig+0x6e>
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	681b      	ldr	r3, [r3, #0]
 800b948:	685b      	ldr	r3, [r3, #4]
 800b94a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	681b      	ldr	r3, [r3, #0]
 800b956:	430a      	orrs	r2, r1
 800b958:	605a      	str	r2, [r3, #4]
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b95e:	f003 0304 	and.w	r3, r3, #4
 800b962:	2b00      	cmp	r3, #0
 800b964:	d00a      	beq.n	800b97c <UART_AdvFeatureConfig+0x90>
 800b966:	687b      	ldr	r3, [r7, #4]
 800b968:	681b      	ldr	r3, [r3, #0]
 800b96a:	685b      	ldr	r3, [r3, #4]
 800b96c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800b970:	687b      	ldr	r3, [r7, #4]
 800b972:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b974:	687b      	ldr	r3, [r7, #4]
 800b976:	681b      	ldr	r3, [r3, #0]
 800b978:	430a      	orrs	r2, r1
 800b97a:	605a      	str	r2, [r3, #4]
 800b97c:	687b      	ldr	r3, [r7, #4]
 800b97e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b980:	f003 0310 	and.w	r3, r3, #16
 800b984:	2b00      	cmp	r3, #0
 800b986:	d00a      	beq.n	800b99e <UART_AdvFeatureConfig+0xb2>
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	681b      	ldr	r3, [r3, #0]
 800b98c:	689b      	ldr	r3, [r3, #8]
 800b98e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800b992:	687b      	ldr	r3, [r7, #4]
 800b994:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b996:	687b      	ldr	r3, [r7, #4]
 800b998:	681b      	ldr	r3, [r3, #0]
 800b99a:	430a      	orrs	r2, r1
 800b99c:	609a      	str	r2, [r3, #8]
 800b99e:	687b      	ldr	r3, [r7, #4]
 800b9a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9a2:	f003 0320 	and.w	r3, r3, #32
 800b9a6:	2b00      	cmp	r3, #0
 800b9a8:	d00a      	beq.n	800b9c0 <UART_AdvFeatureConfig+0xd4>
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	681b      	ldr	r3, [r3, #0]
 800b9ae:	689b      	ldr	r3, [r3, #8]
 800b9b0:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800b9b4:	687b      	ldr	r3, [r7, #4]
 800b9b6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800b9b8:	687b      	ldr	r3, [r7, #4]
 800b9ba:	681b      	ldr	r3, [r3, #0]
 800b9bc:	430a      	orrs	r2, r1
 800b9be:	609a      	str	r2, [r3, #8]
 800b9c0:	687b      	ldr	r3, [r7, #4]
 800b9c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9c4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b9c8:	2b00      	cmp	r3, #0
 800b9ca:	d01a      	beq.n	800ba02 <UART_AdvFeatureConfig+0x116>
 800b9cc:	687b      	ldr	r3, [r7, #4]
 800b9ce:	681b      	ldr	r3, [r3, #0]
 800b9d0:	685b      	ldr	r3, [r3, #4]
 800b9d2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	681b      	ldr	r3, [r3, #0]
 800b9de:	430a      	orrs	r2, r1
 800b9e0:	605a      	str	r2, [r3, #4]
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b9e6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800b9ea:	d10a      	bne.n	800ba02 <UART_AdvFeatureConfig+0x116>
 800b9ec:	687b      	ldr	r3, [r7, #4]
 800b9ee:	681b      	ldr	r3, [r3, #0]
 800b9f0:	685b      	ldr	r3, [r3, #4]
 800b9f2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800b9f6:	687b      	ldr	r3, [r7, #4]
 800b9f8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	681b      	ldr	r3, [r3, #0]
 800b9fe:	430a      	orrs	r2, r1
 800ba00:	605a      	str	r2, [r3, #4]
 800ba02:	687b      	ldr	r3, [r7, #4]
 800ba04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ba06:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ba0a:	2b00      	cmp	r3, #0
 800ba0c:	d00a      	beq.n	800ba24 <UART_AdvFeatureConfig+0x138>
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	681b      	ldr	r3, [r3, #0]
 800ba12:	685b      	ldr	r3, [r3, #4]
 800ba14:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800ba18:	687b      	ldr	r3, [r7, #4]
 800ba1a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800ba1c:	687b      	ldr	r3, [r7, #4]
 800ba1e:	681b      	ldr	r3, [r3, #0]
 800ba20:	430a      	orrs	r2, r1
 800ba22:	605a      	str	r2, [r3, #4]
 800ba24:	bf00      	nop
 800ba26:	370c      	adds	r7, #12
 800ba28:	46bd      	mov	sp, r7
 800ba2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba2e:	4770      	bx	lr

0800ba30 <UART_CheckIdleState>:
 800ba30:	b580      	push	{r7, lr}
 800ba32:	b098      	sub	sp, #96	@ 0x60
 800ba34:	af02      	add	r7, sp, #8
 800ba36:	6078      	str	r0, [r7, #4]
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	2200      	movs	r2, #0
 800ba3c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800ba40:	f7fa f81c 	bl	8005a7c <HAL_GetTick>
 800ba44:	6578      	str	r0, [r7, #84]	@ 0x54
 800ba46:	687b      	ldr	r3, [r7, #4]
 800ba48:	681b      	ldr	r3, [r3, #0]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	f003 0308 	and.w	r3, r3, #8
 800ba50:	2b08      	cmp	r3, #8
 800ba52:	d12e      	bne.n	800bab2 <UART_CheckIdleState+0x82>
 800ba54:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800ba58:	9300      	str	r3, [sp, #0]
 800ba5a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800ba5c:	2200      	movs	r2, #0
 800ba5e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800ba62:	6878      	ldr	r0, [r7, #4]
 800ba64:	f000 f88c 	bl	800bb80 <UART_WaitOnFlagUntilTimeout>
 800ba68:	4603      	mov	r3, r0
 800ba6a:	2b00      	cmp	r3, #0
 800ba6c:	d021      	beq.n	800bab2 <UART_CheckIdleState+0x82>
 800ba6e:	687b      	ldr	r3, [r7, #4]
 800ba70:	681b      	ldr	r3, [r3, #0]
 800ba72:	63bb      	str	r3, [r7, #56]	@ 0x38
 800ba74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ba76:	e853 3f00 	ldrex	r3, [r3]
 800ba7a:	637b      	str	r3, [r7, #52]	@ 0x34
 800ba7c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ba7e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ba82:	653b      	str	r3, [r7, #80]	@ 0x50
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	461a      	mov	r2, r3
 800ba8a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800ba8c:	647b      	str	r3, [r7, #68]	@ 0x44
 800ba8e:	643a      	str	r2, [r7, #64]	@ 0x40
 800ba90:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800ba92:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800ba94:	e841 2300 	strex	r3, r2, [r1]
 800ba98:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800ba9a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800ba9c:	2b00      	cmp	r3, #0
 800ba9e:	d1e6      	bne.n	800ba6e <UART_CheckIdleState+0x3e>
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	2220      	movs	r2, #32
 800baa4:	67da      	str	r2, [r3, #124]	@ 0x7c
 800baa6:	687b      	ldr	r3, [r7, #4]
 800baa8:	2200      	movs	r2, #0
 800baaa:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800baae:	2303      	movs	r3, #3
 800bab0:	e062      	b.n	800bb78 <UART_CheckIdleState+0x148>
 800bab2:	687b      	ldr	r3, [r7, #4]
 800bab4:	681b      	ldr	r3, [r3, #0]
 800bab6:	681b      	ldr	r3, [r3, #0]
 800bab8:	f003 0304 	and.w	r3, r3, #4
 800babc:	2b04      	cmp	r3, #4
 800babe:	d149      	bne.n	800bb54 <UART_CheckIdleState+0x124>
 800bac0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800bac4:	9300      	str	r3, [sp, #0]
 800bac6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800bac8:	2200      	movs	r2, #0
 800baca:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800bace:	6878      	ldr	r0, [r7, #4]
 800bad0:	f000 f856 	bl	800bb80 <UART_WaitOnFlagUntilTimeout>
 800bad4:	4603      	mov	r3, r0
 800bad6:	2b00      	cmp	r3, #0
 800bad8:	d03c      	beq.n	800bb54 <UART_CheckIdleState+0x124>
 800bada:	687b      	ldr	r3, [r7, #4]
 800badc:	681b      	ldr	r3, [r3, #0]
 800bade:	627b      	str	r3, [r7, #36]	@ 0x24
 800bae0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bae2:	e853 3f00 	ldrex	r3, [r3]
 800bae6:	623b      	str	r3, [r7, #32]
 800bae8:	6a3b      	ldr	r3, [r7, #32]
 800baea:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800baee:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800baf0:	687b      	ldr	r3, [r7, #4]
 800baf2:	681b      	ldr	r3, [r3, #0]
 800baf4:	461a      	mov	r2, r3
 800baf6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800baf8:	633b      	str	r3, [r7, #48]	@ 0x30
 800bafa:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800bafc:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800bafe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800bb00:	e841 2300 	strex	r3, r2, [r1]
 800bb04:	62bb      	str	r3, [r7, #40]	@ 0x28
 800bb06:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bb08:	2b00      	cmp	r3, #0
 800bb0a:	d1e6      	bne.n	800bada <UART_CheckIdleState+0xaa>
 800bb0c:	687b      	ldr	r3, [r7, #4]
 800bb0e:	681b      	ldr	r3, [r3, #0]
 800bb10:	3308      	adds	r3, #8
 800bb12:	613b      	str	r3, [r7, #16]
 800bb14:	693b      	ldr	r3, [r7, #16]
 800bb16:	e853 3f00 	ldrex	r3, [r3]
 800bb1a:	60fb      	str	r3, [r7, #12]
 800bb1c:	68fb      	ldr	r3, [r7, #12]
 800bb1e:	f023 0301 	bic.w	r3, r3, #1
 800bb22:	64bb      	str	r3, [r7, #72]	@ 0x48
 800bb24:	687b      	ldr	r3, [r7, #4]
 800bb26:	681b      	ldr	r3, [r3, #0]
 800bb28:	3308      	adds	r3, #8
 800bb2a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800bb2c:	61fa      	str	r2, [r7, #28]
 800bb2e:	61bb      	str	r3, [r7, #24]
 800bb30:	69b9      	ldr	r1, [r7, #24]
 800bb32:	69fa      	ldr	r2, [r7, #28]
 800bb34:	e841 2300 	strex	r3, r2, [r1]
 800bb38:	617b      	str	r3, [r7, #20]
 800bb3a:	697b      	ldr	r3, [r7, #20]
 800bb3c:	2b00      	cmp	r3, #0
 800bb3e:	d1e5      	bne.n	800bb0c <UART_CheckIdleState+0xdc>
 800bb40:	687b      	ldr	r3, [r7, #4]
 800bb42:	2220      	movs	r2, #32
 800bb44:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	2200      	movs	r2, #0
 800bb4c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800bb50:	2303      	movs	r3, #3
 800bb52:	e011      	b.n	800bb78 <UART_CheckIdleState+0x148>
 800bb54:	687b      	ldr	r3, [r7, #4]
 800bb56:	2220      	movs	r2, #32
 800bb58:	67da      	str	r2, [r3, #124]	@ 0x7c
 800bb5a:	687b      	ldr	r3, [r7, #4]
 800bb5c:	2220      	movs	r2, #32
 800bb5e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	2200      	movs	r2, #0
 800bb66:	661a      	str	r2, [r3, #96]	@ 0x60
 800bb68:	687b      	ldr	r3, [r7, #4]
 800bb6a:	2200      	movs	r2, #0
 800bb6c:	665a      	str	r2, [r3, #100]	@ 0x64
 800bb6e:	687b      	ldr	r3, [r7, #4]
 800bb70:	2200      	movs	r2, #0
 800bb72:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800bb76:	2300      	movs	r3, #0
 800bb78:	4618      	mov	r0, r3
 800bb7a:	3758      	adds	r7, #88	@ 0x58
 800bb7c:	46bd      	mov	sp, r7
 800bb7e:	bd80      	pop	{r7, pc}

0800bb80 <UART_WaitOnFlagUntilTimeout>:
 800bb80:	b580      	push	{r7, lr}
 800bb82:	b084      	sub	sp, #16
 800bb84:	af00      	add	r7, sp, #0
 800bb86:	60f8      	str	r0, [r7, #12]
 800bb88:	60b9      	str	r1, [r7, #8]
 800bb8a:	603b      	str	r3, [r7, #0]
 800bb8c:	4613      	mov	r3, r2
 800bb8e:	71fb      	strb	r3, [r7, #7]
 800bb90:	e04f      	b.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bb92:	69bb      	ldr	r3, [r7, #24]
 800bb94:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bb98:	d04b      	beq.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bb9a:	f7f9 ff6f 	bl	8005a7c <HAL_GetTick>
 800bb9e:	4602      	mov	r2, r0
 800bba0:	683b      	ldr	r3, [r7, #0]
 800bba2:	1ad3      	subs	r3, r2, r3
 800bba4:	69ba      	ldr	r2, [r7, #24]
 800bba6:	429a      	cmp	r2, r3
 800bba8:	d302      	bcc.n	800bbb0 <UART_WaitOnFlagUntilTimeout+0x30>
 800bbaa:	69bb      	ldr	r3, [r7, #24]
 800bbac:	2b00      	cmp	r3, #0
 800bbae:	d101      	bne.n	800bbb4 <UART_WaitOnFlagUntilTimeout+0x34>
 800bbb0:	2303      	movs	r3, #3
 800bbb2:	e04e      	b.n	800bc52 <UART_WaitOnFlagUntilTimeout+0xd2>
 800bbb4:	68fb      	ldr	r3, [r7, #12]
 800bbb6:	681b      	ldr	r3, [r3, #0]
 800bbb8:	681b      	ldr	r3, [r3, #0]
 800bbba:	f003 0304 	and.w	r3, r3, #4
 800bbbe:	2b00      	cmp	r3, #0
 800bbc0:	d037      	beq.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bbc2:	68bb      	ldr	r3, [r7, #8]
 800bbc4:	2b80      	cmp	r3, #128	@ 0x80
 800bbc6:	d034      	beq.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bbc8:	68bb      	ldr	r3, [r7, #8]
 800bbca:	2b40      	cmp	r3, #64	@ 0x40
 800bbcc:	d031      	beq.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bbce:	68fb      	ldr	r3, [r7, #12]
 800bbd0:	681b      	ldr	r3, [r3, #0]
 800bbd2:	69db      	ldr	r3, [r3, #28]
 800bbd4:	f003 0308 	and.w	r3, r3, #8
 800bbd8:	2b08      	cmp	r3, #8
 800bbda:	d110      	bne.n	800bbfe <UART_WaitOnFlagUntilTimeout+0x7e>
 800bbdc:	68fb      	ldr	r3, [r7, #12]
 800bbde:	681b      	ldr	r3, [r3, #0]
 800bbe0:	2208      	movs	r2, #8
 800bbe2:	621a      	str	r2, [r3, #32]
 800bbe4:	68f8      	ldr	r0, [r7, #12]
 800bbe6:	f000 f838 	bl	800bc5a <UART_EndRxTransfer>
 800bbea:	68fb      	ldr	r3, [r7, #12]
 800bbec:	2208      	movs	r2, #8
 800bbee:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800bbf2:	68fb      	ldr	r3, [r7, #12]
 800bbf4:	2200      	movs	r2, #0
 800bbf6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800bbfa:	2301      	movs	r3, #1
 800bbfc:	e029      	b.n	800bc52 <UART_WaitOnFlagUntilTimeout+0xd2>
 800bbfe:	68fb      	ldr	r3, [r7, #12]
 800bc00:	681b      	ldr	r3, [r3, #0]
 800bc02:	69db      	ldr	r3, [r3, #28]
 800bc04:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800bc08:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bc0c:	d111      	bne.n	800bc32 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bc0e:	68fb      	ldr	r3, [r7, #12]
 800bc10:	681b      	ldr	r3, [r3, #0]
 800bc12:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800bc16:	621a      	str	r2, [r3, #32]
 800bc18:	68f8      	ldr	r0, [r7, #12]
 800bc1a:	f000 f81e 	bl	800bc5a <UART_EndRxTransfer>
 800bc1e:	68fb      	ldr	r3, [r7, #12]
 800bc20:	2220      	movs	r2, #32
 800bc22:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800bc26:	68fb      	ldr	r3, [r7, #12]
 800bc28:	2200      	movs	r2, #0
 800bc2a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800bc2e:	2303      	movs	r3, #3
 800bc30:	e00f      	b.n	800bc52 <UART_WaitOnFlagUntilTimeout+0xd2>
 800bc32:	68fb      	ldr	r3, [r7, #12]
 800bc34:	681b      	ldr	r3, [r3, #0]
 800bc36:	69da      	ldr	r2, [r3, #28]
 800bc38:	68bb      	ldr	r3, [r7, #8]
 800bc3a:	4013      	ands	r3, r2
 800bc3c:	68ba      	ldr	r2, [r7, #8]
 800bc3e:	429a      	cmp	r2, r3
 800bc40:	bf0c      	ite	eq
 800bc42:	2301      	moveq	r3, #1
 800bc44:	2300      	movne	r3, #0
 800bc46:	b2db      	uxtb	r3, r3
 800bc48:	461a      	mov	r2, r3
 800bc4a:	79fb      	ldrb	r3, [r7, #7]
 800bc4c:	429a      	cmp	r2, r3
 800bc4e:	d0a0      	beq.n	800bb92 <UART_WaitOnFlagUntilTimeout+0x12>
 800bc50:	2300      	movs	r3, #0
 800bc52:	4618      	mov	r0, r3
 800bc54:	3710      	adds	r7, #16
 800bc56:	46bd      	mov	sp, r7
 800bc58:	bd80      	pop	{r7, pc}

0800bc5a <UART_EndRxTransfer>:
 800bc5a:	b480      	push	{r7}
 800bc5c:	b095      	sub	sp, #84	@ 0x54
 800bc5e:	af00      	add	r7, sp, #0
 800bc60:	6078      	str	r0, [r7, #4]
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	681b      	ldr	r3, [r3, #0]
 800bc66:	637b      	str	r3, [r7, #52]	@ 0x34
 800bc68:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800bc6a:	e853 3f00 	ldrex	r3, [r3]
 800bc6e:	633b      	str	r3, [r7, #48]	@ 0x30
 800bc70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800bc72:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800bc76:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	681b      	ldr	r3, [r3, #0]
 800bc7c:	461a      	mov	r2, r3
 800bc7e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bc80:	643b      	str	r3, [r7, #64]	@ 0x40
 800bc82:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800bc84:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800bc86:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800bc88:	e841 2300 	strex	r3, r2, [r1]
 800bc8c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800bc8e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bc90:	2b00      	cmp	r3, #0
 800bc92:	d1e6      	bne.n	800bc62 <UART_EndRxTransfer+0x8>
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	681b      	ldr	r3, [r3, #0]
 800bc98:	3308      	adds	r3, #8
 800bc9a:	623b      	str	r3, [r7, #32]
 800bc9c:	6a3b      	ldr	r3, [r7, #32]
 800bc9e:	e853 3f00 	ldrex	r3, [r3]
 800bca2:	61fb      	str	r3, [r7, #28]
 800bca4:	69fb      	ldr	r3, [r7, #28]
 800bca6:	f023 0301 	bic.w	r3, r3, #1
 800bcaa:	64bb      	str	r3, [r7, #72]	@ 0x48
 800bcac:	687b      	ldr	r3, [r7, #4]
 800bcae:	681b      	ldr	r3, [r3, #0]
 800bcb0:	3308      	adds	r3, #8
 800bcb2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800bcb4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800bcb6:	62bb      	str	r3, [r7, #40]	@ 0x28
 800bcb8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800bcba:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bcbc:	e841 2300 	strex	r3, r2, [r1]
 800bcc0:	627b      	str	r3, [r7, #36]	@ 0x24
 800bcc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	d1e5      	bne.n	800bc94 <UART_EndRxTransfer+0x3a>
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800bccc:	2b01      	cmp	r3, #1
 800bcce:	d118      	bne.n	800bd02 <UART_EndRxTransfer+0xa8>
 800bcd0:	687b      	ldr	r3, [r7, #4]
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	60fb      	str	r3, [r7, #12]
 800bcd6:	68fb      	ldr	r3, [r7, #12]
 800bcd8:	e853 3f00 	ldrex	r3, [r3]
 800bcdc:	60bb      	str	r3, [r7, #8]
 800bcde:	68bb      	ldr	r3, [r7, #8]
 800bce0:	f023 0310 	bic.w	r3, r3, #16
 800bce4:	647b      	str	r3, [r7, #68]	@ 0x44
 800bce6:	687b      	ldr	r3, [r7, #4]
 800bce8:	681b      	ldr	r3, [r3, #0]
 800bcea:	461a      	mov	r2, r3
 800bcec:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800bcee:	61bb      	str	r3, [r7, #24]
 800bcf0:	617a      	str	r2, [r7, #20]
 800bcf2:	6979      	ldr	r1, [r7, #20]
 800bcf4:	69ba      	ldr	r2, [r7, #24]
 800bcf6:	e841 2300 	strex	r3, r2, [r1]
 800bcfa:	613b      	str	r3, [r7, #16]
 800bcfc:	693b      	ldr	r3, [r7, #16]
 800bcfe:	2b00      	cmp	r3, #0
 800bd00:	d1e6      	bne.n	800bcd0 <UART_EndRxTransfer+0x76>
 800bd02:	687b      	ldr	r3, [r7, #4]
 800bd04:	2220      	movs	r2, #32
 800bd06:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	2200      	movs	r2, #0
 800bd0e:	661a      	str	r2, [r3, #96]	@ 0x60
 800bd10:	687b      	ldr	r3, [r7, #4]
 800bd12:	2200      	movs	r2, #0
 800bd14:	669a      	str	r2, [r3, #104]	@ 0x68
 800bd16:	bf00      	nop
 800bd18:	3754      	adds	r7, #84	@ 0x54
 800bd1a:	46bd      	mov	sp, r7
 800bd1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd20:	4770      	bx	lr

0800bd22 <USB_CoreInit>:
 800bd22:	b084      	sub	sp, #16
 800bd24:	b580      	push	{r7, lr}
 800bd26:	b084      	sub	sp, #16
 800bd28:	af00      	add	r7, sp, #0
 800bd2a:	6078      	str	r0, [r7, #4]
 800bd2c:	f107 001c 	add.w	r0, r7, #28
 800bd30:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	68db      	ldr	r3, [r3, #12]
 800bd38:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800bd3c:	687b      	ldr	r3, [r7, #4]
 800bd3e:	60da      	str	r2, [r3, #12]
 800bd40:	6878      	ldr	r0, [r7, #4]
 800bd42:	f000 fa69 	bl	800c218 <USB_CoreReset>
 800bd46:	4603      	mov	r3, r0
 800bd48:	73fb      	strb	r3, [r7, #15]
 800bd4a:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 800bd4e:	2b00      	cmp	r3, #0
 800bd50:	d106      	bne.n	800bd60 <USB_CoreInit+0x3e>
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bd56:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800bd5a:	687b      	ldr	r3, [r7, #4]
 800bd5c:	639a      	str	r2, [r3, #56]	@ 0x38
 800bd5e:	e005      	b.n	800bd6c <USB_CoreInit+0x4a>
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bd64:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800bd68:	687b      	ldr	r3, [r7, #4]
 800bd6a:	639a      	str	r2, [r3, #56]	@ 0x38
 800bd6c:	7bfb      	ldrb	r3, [r7, #15]
 800bd6e:	4618      	mov	r0, r3
 800bd70:	3710      	adds	r7, #16
 800bd72:	46bd      	mov	sp, r7
 800bd74:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800bd78:	b004      	add	sp, #16
 800bd7a:	4770      	bx	lr

0800bd7c <USB_DisableGlobalInt>:
 800bd7c:	b480      	push	{r7}
 800bd7e:	b083      	sub	sp, #12
 800bd80:	af00      	add	r7, sp, #0
 800bd82:	6078      	str	r0, [r7, #4]
 800bd84:	687b      	ldr	r3, [r7, #4]
 800bd86:	689b      	ldr	r3, [r3, #8]
 800bd88:	f023 0201 	bic.w	r2, r3, #1
 800bd8c:	687b      	ldr	r3, [r7, #4]
 800bd8e:	609a      	str	r2, [r3, #8]
 800bd90:	2300      	movs	r3, #0
 800bd92:	4618      	mov	r0, r3
 800bd94:	370c      	adds	r7, #12
 800bd96:	46bd      	mov	sp, r7
 800bd98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd9c:	4770      	bx	lr

0800bd9e <USB_SetCurrentMode>:
 800bd9e:	b580      	push	{r7, lr}
 800bda0:	b084      	sub	sp, #16
 800bda2:	af00      	add	r7, sp, #0
 800bda4:	6078      	str	r0, [r7, #4]
 800bda6:	460b      	mov	r3, r1
 800bda8:	70fb      	strb	r3, [r7, #3]
 800bdaa:	2300      	movs	r3, #0
 800bdac:	60fb      	str	r3, [r7, #12]
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	68db      	ldr	r3, [r3, #12]
 800bdb2:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	60da      	str	r2, [r3, #12]
 800bdba:	78fb      	ldrb	r3, [r7, #3]
 800bdbc:	2b01      	cmp	r3, #1
 800bdbe:	d115      	bne.n	800bdec <USB_SetCurrentMode+0x4e>
 800bdc0:	687b      	ldr	r3, [r7, #4]
 800bdc2:	68db      	ldr	r3, [r3, #12]
 800bdc4:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 800bdc8:	687b      	ldr	r3, [r7, #4]
 800bdca:	60da      	str	r2, [r3, #12]
 800bdcc:	200a      	movs	r0, #10
 800bdce:	f7f9 fe61 	bl	8005a94 <HAL_Delay>
 800bdd2:	68fb      	ldr	r3, [r7, #12]
 800bdd4:	330a      	adds	r3, #10
 800bdd6:	60fb      	str	r3, [r7, #12]
 800bdd8:	6878      	ldr	r0, [r7, #4]
 800bdda:	f000 fa0f 	bl	800c1fc <USB_GetMode>
 800bdde:	4603      	mov	r3, r0
 800bde0:	2b01      	cmp	r3, #1
 800bde2:	d01e      	beq.n	800be22 <USB_SetCurrentMode+0x84>
 800bde4:	68fb      	ldr	r3, [r7, #12]
 800bde6:	2bc7      	cmp	r3, #199	@ 0xc7
 800bde8:	d9f0      	bls.n	800bdcc <USB_SetCurrentMode+0x2e>
 800bdea:	e01a      	b.n	800be22 <USB_SetCurrentMode+0x84>
 800bdec:	78fb      	ldrb	r3, [r7, #3]
 800bdee:	2b00      	cmp	r3, #0
 800bdf0:	d115      	bne.n	800be1e <USB_SetCurrentMode+0x80>
 800bdf2:	687b      	ldr	r3, [r7, #4]
 800bdf4:	68db      	ldr	r3, [r3, #12]
 800bdf6:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800bdfa:	687b      	ldr	r3, [r7, #4]
 800bdfc:	60da      	str	r2, [r3, #12]
 800bdfe:	200a      	movs	r0, #10
 800be00:	f7f9 fe48 	bl	8005a94 <HAL_Delay>
 800be04:	68fb      	ldr	r3, [r7, #12]
 800be06:	330a      	adds	r3, #10
 800be08:	60fb      	str	r3, [r7, #12]
 800be0a:	6878      	ldr	r0, [r7, #4]
 800be0c:	f000 f9f6 	bl	800c1fc <USB_GetMode>
 800be10:	4603      	mov	r3, r0
 800be12:	2b00      	cmp	r3, #0
 800be14:	d005      	beq.n	800be22 <USB_SetCurrentMode+0x84>
 800be16:	68fb      	ldr	r3, [r7, #12]
 800be18:	2bc7      	cmp	r3, #199	@ 0xc7
 800be1a:	d9f0      	bls.n	800bdfe <USB_SetCurrentMode+0x60>
 800be1c:	e001      	b.n	800be22 <USB_SetCurrentMode+0x84>
 800be1e:	2301      	movs	r3, #1
 800be20:	e005      	b.n	800be2e <USB_SetCurrentMode+0x90>
 800be22:	68fb      	ldr	r3, [r7, #12]
 800be24:	2bc8      	cmp	r3, #200	@ 0xc8
 800be26:	d101      	bne.n	800be2c <USB_SetCurrentMode+0x8e>
 800be28:	2301      	movs	r3, #1
 800be2a:	e000      	b.n	800be2e <USB_SetCurrentMode+0x90>
 800be2c:	2300      	movs	r3, #0
 800be2e:	4618      	mov	r0, r3
 800be30:	3710      	adds	r7, #16
 800be32:	46bd      	mov	sp, r7
 800be34:	bd80      	pop	{r7, pc}
	...

0800be38 <USB_DevInit>:
 800be38:	b084      	sub	sp, #16
 800be3a:	b580      	push	{r7, lr}
 800be3c:	b086      	sub	sp, #24
 800be3e:	af00      	add	r7, sp, #0
 800be40:	6078      	str	r0, [r7, #4]
 800be42:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 800be46:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800be4a:	2300      	movs	r3, #0
 800be4c:	75fb      	strb	r3, [r7, #23]
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	60fb      	str	r3, [r7, #12]
 800be52:	2300      	movs	r3, #0
 800be54:	613b      	str	r3, [r7, #16]
 800be56:	e009      	b.n	800be6c <USB_DevInit+0x34>
 800be58:	687a      	ldr	r2, [r7, #4]
 800be5a:	693b      	ldr	r3, [r7, #16]
 800be5c:	3340      	adds	r3, #64	@ 0x40
 800be5e:	009b      	lsls	r3, r3, #2
 800be60:	4413      	add	r3, r2
 800be62:	2200      	movs	r2, #0
 800be64:	605a      	str	r2, [r3, #4]
 800be66:	693b      	ldr	r3, [r7, #16]
 800be68:	3301      	adds	r3, #1
 800be6a:	613b      	str	r3, [r7, #16]
 800be6c:	693b      	ldr	r3, [r7, #16]
 800be6e:	2b0e      	cmp	r3, #14
 800be70:	d9f2      	bls.n	800be58 <USB_DevInit+0x20>
 800be72:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800be76:	2b00      	cmp	r3, #0
 800be78:	d11c      	bne.n	800beb4 <USB_DevInit+0x7c>
 800be7a:	68fb      	ldr	r3, [r7, #12]
 800be7c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800be80:	685b      	ldr	r3, [r3, #4]
 800be82:	68fa      	ldr	r2, [r7, #12]
 800be84:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800be88:	f043 0302 	orr.w	r3, r3, #2
 800be8c:	6053      	str	r3, [r2, #4]
 800be8e:	687b      	ldr	r3, [r7, #4]
 800be90:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800be92:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 800be96:	687b      	ldr	r3, [r7, #4]
 800be98:	639a      	str	r2, [r3, #56]	@ 0x38
 800be9a:	687b      	ldr	r3, [r7, #4]
 800be9c:	681b      	ldr	r3, [r3, #0]
 800be9e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	601a      	str	r2, [r3, #0]
 800bea6:	687b      	ldr	r3, [r7, #4]
 800bea8:	681b      	ldr	r3, [r3, #0]
 800beaa:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800beae:	687b      	ldr	r3, [r7, #4]
 800beb0:	601a      	str	r2, [r3, #0]
 800beb2:	e005      	b.n	800bec0 <USB_DevInit+0x88>
 800beb4:	687b      	ldr	r3, [r7, #4]
 800beb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800beb8:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	639a      	str	r2, [r3, #56]	@ 0x38
 800bec0:	68fb      	ldr	r3, [r7, #12]
 800bec2:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800bec6:	461a      	mov	r2, r3
 800bec8:	2300      	movs	r3, #0
 800beca:	6013      	str	r3, [r2, #0]
 800becc:	2103      	movs	r1, #3
 800bece:	6878      	ldr	r0, [r7, #4]
 800bed0:	f000 f95a 	bl	800c188 <USB_SetDevSpeed>
 800bed4:	2110      	movs	r1, #16
 800bed6:	6878      	ldr	r0, [r7, #4]
 800bed8:	f000 f8f6 	bl	800c0c8 <USB_FlushTxFifo>
 800bedc:	4603      	mov	r3, r0
 800bede:	2b00      	cmp	r3, #0
 800bee0:	d001      	beq.n	800bee6 <USB_DevInit+0xae>
 800bee2:	2301      	movs	r3, #1
 800bee4:	75fb      	strb	r3, [r7, #23]
 800bee6:	6878      	ldr	r0, [r7, #4]
 800bee8:	f000 f920 	bl	800c12c <USB_FlushRxFifo>
 800beec:	4603      	mov	r3, r0
 800beee:	2b00      	cmp	r3, #0
 800bef0:	d001      	beq.n	800bef6 <USB_DevInit+0xbe>
 800bef2:	2301      	movs	r3, #1
 800bef4:	75fb      	strb	r3, [r7, #23]
 800bef6:	68fb      	ldr	r3, [r7, #12]
 800bef8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800befc:	461a      	mov	r2, r3
 800befe:	2300      	movs	r3, #0
 800bf00:	6113      	str	r3, [r2, #16]
 800bf02:	68fb      	ldr	r3, [r7, #12]
 800bf04:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800bf08:	461a      	mov	r2, r3
 800bf0a:	2300      	movs	r3, #0
 800bf0c:	6153      	str	r3, [r2, #20]
 800bf0e:	68fb      	ldr	r3, [r7, #12]
 800bf10:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800bf14:	461a      	mov	r2, r3
 800bf16:	2300      	movs	r3, #0
 800bf18:	61d3      	str	r3, [r2, #28]
 800bf1a:	2300      	movs	r3, #0
 800bf1c:	613b      	str	r3, [r7, #16]
 800bf1e:	e043      	b.n	800bfa8 <USB_DevInit+0x170>
 800bf20:	693b      	ldr	r3, [r7, #16]
 800bf22:	015a      	lsls	r2, r3, #5
 800bf24:	68fb      	ldr	r3, [r7, #12]
 800bf26:	4413      	add	r3, r2
 800bf28:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf2c:	681b      	ldr	r3, [r3, #0]
 800bf2e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800bf32:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800bf36:	d118      	bne.n	800bf6a <USB_DevInit+0x132>
 800bf38:	693b      	ldr	r3, [r7, #16]
 800bf3a:	2b00      	cmp	r3, #0
 800bf3c:	d10a      	bne.n	800bf54 <USB_DevInit+0x11c>
 800bf3e:	693b      	ldr	r3, [r7, #16]
 800bf40:	015a      	lsls	r2, r3, #5
 800bf42:	68fb      	ldr	r3, [r7, #12]
 800bf44:	4413      	add	r3, r2
 800bf46:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf4a:	461a      	mov	r2, r3
 800bf4c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800bf50:	6013      	str	r3, [r2, #0]
 800bf52:	e013      	b.n	800bf7c <USB_DevInit+0x144>
 800bf54:	693b      	ldr	r3, [r7, #16]
 800bf56:	015a      	lsls	r2, r3, #5
 800bf58:	68fb      	ldr	r3, [r7, #12]
 800bf5a:	4413      	add	r3, r2
 800bf5c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf60:	461a      	mov	r2, r3
 800bf62:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800bf66:	6013      	str	r3, [r2, #0]
 800bf68:	e008      	b.n	800bf7c <USB_DevInit+0x144>
 800bf6a:	693b      	ldr	r3, [r7, #16]
 800bf6c:	015a      	lsls	r2, r3, #5
 800bf6e:	68fb      	ldr	r3, [r7, #12]
 800bf70:	4413      	add	r3, r2
 800bf72:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf76:	461a      	mov	r2, r3
 800bf78:	2300      	movs	r3, #0
 800bf7a:	6013      	str	r3, [r2, #0]
 800bf7c:	693b      	ldr	r3, [r7, #16]
 800bf7e:	015a      	lsls	r2, r3, #5
 800bf80:	68fb      	ldr	r3, [r7, #12]
 800bf82:	4413      	add	r3, r2
 800bf84:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf88:	461a      	mov	r2, r3
 800bf8a:	2300      	movs	r3, #0
 800bf8c:	6113      	str	r3, [r2, #16]
 800bf8e:	693b      	ldr	r3, [r7, #16]
 800bf90:	015a      	lsls	r2, r3, #5
 800bf92:	68fb      	ldr	r3, [r7, #12]
 800bf94:	4413      	add	r3, r2
 800bf96:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800bf9a:	461a      	mov	r2, r3
 800bf9c:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800bfa0:	6093      	str	r3, [r2, #8]
 800bfa2:	693b      	ldr	r3, [r7, #16]
 800bfa4:	3301      	adds	r3, #1
 800bfa6:	613b      	str	r3, [r7, #16]
 800bfa8:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800bfac:	461a      	mov	r2, r3
 800bfae:	693b      	ldr	r3, [r7, #16]
 800bfb0:	4293      	cmp	r3, r2
 800bfb2:	d3b5      	bcc.n	800bf20 <USB_DevInit+0xe8>
 800bfb4:	2300      	movs	r3, #0
 800bfb6:	613b      	str	r3, [r7, #16]
 800bfb8:	e043      	b.n	800c042 <USB_DevInit+0x20a>
 800bfba:	693b      	ldr	r3, [r7, #16]
 800bfbc:	015a      	lsls	r2, r3, #5
 800bfbe:	68fb      	ldr	r3, [r7, #12]
 800bfc0:	4413      	add	r3, r2
 800bfc2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800bfc6:	681b      	ldr	r3, [r3, #0]
 800bfc8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800bfcc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800bfd0:	d118      	bne.n	800c004 <USB_DevInit+0x1cc>
 800bfd2:	693b      	ldr	r3, [r7, #16]
 800bfd4:	2b00      	cmp	r3, #0
 800bfd6:	d10a      	bne.n	800bfee <USB_DevInit+0x1b6>
 800bfd8:	693b      	ldr	r3, [r7, #16]
 800bfda:	015a      	lsls	r2, r3, #5
 800bfdc:	68fb      	ldr	r3, [r7, #12]
 800bfde:	4413      	add	r3, r2
 800bfe0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800bfe4:	461a      	mov	r2, r3
 800bfe6:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800bfea:	6013      	str	r3, [r2, #0]
 800bfec:	e013      	b.n	800c016 <USB_DevInit+0x1de>
 800bfee:	693b      	ldr	r3, [r7, #16]
 800bff0:	015a      	lsls	r2, r3, #5
 800bff2:	68fb      	ldr	r3, [r7, #12]
 800bff4:	4413      	add	r3, r2
 800bff6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800bffa:	461a      	mov	r2, r3
 800bffc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800c000:	6013      	str	r3, [r2, #0]
 800c002:	e008      	b.n	800c016 <USB_DevInit+0x1de>
 800c004:	693b      	ldr	r3, [r7, #16]
 800c006:	015a      	lsls	r2, r3, #5
 800c008:	68fb      	ldr	r3, [r7, #12]
 800c00a:	4413      	add	r3, r2
 800c00c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800c010:	461a      	mov	r2, r3
 800c012:	2300      	movs	r3, #0
 800c014:	6013      	str	r3, [r2, #0]
 800c016:	693b      	ldr	r3, [r7, #16]
 800c018:	015a      	lsls	r2, r3, #5
 800c01a:	68fb      	ldr	r3, [r7, #12]
 800c01c:	4413      	add	r3, r2
 800c01e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800c022:	461a      	mov	r2, r3
 800c024:	2300      	movs	r3, #0
 800c026:	6113      	str	r3, [r2, #16]
 800c028:	693b      	ldr	r3, [r7, #16]
 800c02a:	015a      	lsls	r2, r3, #5
 800c02c:	68fb      	ldr	r3, [r7, #12]
 800c02e:	4413      	add	r3, r2
 800c030:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800c034:	461a      	mov	r2, r3
 800c036:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800c03a:	6093      	str	r3, [r2, #8]
 800c03c:	693b      	ldr	r3, [r7, #16]
 800c03e:	3301      	adds	r3, #1
 800c040:	613b      	str	r3, [r7, #16]
 800c042:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800c046:	461a      	mov	r2, r3
 800c048:	693b      	ldr	r3, [r7, #16]
 800c04a:	4293      	cmp	r3, r2
 800c04c:	d3b5      	bcc.n	800bfba <USB_DevInit+0x182>
 800c04e:	68fb      	ldr	r3, [r7, #12]
 800c050:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800c054:	691b      	ldr	r3, [r3, #16]
 800c056:	68fa      	ldr	r2, [r7, #12]
 800c058:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800c05c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800c060:	6113      	str	r3, [r2, #16]
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	2200      	movs	r2, #0
 800c066:	619a      	str	r2, [r3, #24]
 800c068:	687b      	ldr	r3, [r7, #4]
 800c06a:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 800c06e:	615a      	str	r2, [r3, #20]
 800c070:	687b      	ldr	r3, [r7, #4]
 800c072:	699b      	ldr	r3, [r3, #24]
 800c074:	f043 0210 	orr.w	r2, r3, #16
 800c078:	687b      	ldr	r3, [r7, #4]
 800c07a:	619a      	str	r2, [r3, #24]
 800c07c:	687b      	ldr	r3, [r7, #4]
 800c07e:	699a      	ldr	r2, [r3, #24]
 800c080:	4b10      	ldr	r3, [pc, #64]	@ (800c0c4 <USB_DevInit+0x28c>)
 800c082:	4313      	orrs	r3, r2
 800c084:	687a      	ldr	r2, [r7, #4]
 800c086:	6193      	str	r3, [r2, #24]
 800c088:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 800c08c:	2b00      	cmp	r3, #0
 800c08e:	d005      	beq.n	800c09c <USB_DevInit+0x264>
 800c090:	687b      	ldr	r3, [r7, #4]
 800c092:	699b      	ldr	r3, [r3, #24]
 800c094:	f043 0208 	orr.w	r2, r3, #8
 800c098:	687b      	ldr	r3, [r7, #4]
 800c09a:	619a      	str	r2, [r3, #24]
 800c09c:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800c0a0:	2b01      	cmp	r3, #1
 800c0a2:	d107      	bne.n	800c0b4 <USB_DevInit+0x27c>
 800c0a4:	687b      	ldr	r3, [r7, #4]
 800c0a6:	699b      	ldr	r3, [r3, #24]
 800c0a8:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800c0ac:	f043 0304 	orr.w	r3, r3, #4
 800c0b0:	687a      	ldr	r2, [r7, #4]
 800c0b2:	6193      	str	r3, [r2, #24]
 800c0b4:	7dfb      	ldrb	r3, [r7, #23]
 800c0b6:	4618      	mov	r0, r3
 800c0b8:	3718      	adds	r7, #24
 800c0ba:	46bd      	mov	sp, r7
 800c0bc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800c0c0:	b004      	add	sp, #16
 800c0c2:	4770      	bx	lr
 800c0c4:	803c3800 	.word	0x803c3800

0800c0c8 <USB_FlushTxFifo>:
 800c0c8:	b480      	push	{r7}
 800c0ca:	b085      	sub	sp, #20
 800c0cc:	af00      	add	r7, sp, #0
 800c0ce:	6078      	str	r0, [r7, #4]
 800c0d0:	6039      	str	r1, [r7, #0]
 800c0d2:	2300      	movs	r3, #0
 800c0d4:	60fb      	str	r3, [r7, #12]
 800c0d6:	68fb      	ldr	r3, [r7, #12]
 800c0d8:	3301      	adds	r3, #1
 800c0da:	60fb      	str	r3, [r7, #12]
 800c0dc:	68fb      	ldr	r3, [r7, #12]
 800c0de:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c0e2:	d901      	bls.n	800c0e8 <USB_FlushTxFifo+0x20>
 800c0e4:	2303      	movs	r3, #3
 800c0e6:	e01b      	b.n	800c120 <USB_FlushTxFifo+0x58>
 800c0e8:	687b      	ldr	r3, [r7, #4]
 800c0ea:	691b      	ldr	r3, [r3, #16]
 800c0ec:	2b00      	cmp	r3, #0
 800c0ee:	daf2      	bge.n	800c0d6 <USB_FlushTxFifo+0xe>
 800c0f0:	2300      	movs	r3, #0
 800c0f2:	60fb      	str	r3, [r7, #12]
 800c0f4:	683b      	ldr	r3, [r7, #0]
 800c0f6:	019b      	lsls	r3, r3, #6
 800c0f8:	f043 0220 	orr.w	r2, r3, #32
 800c0fc:	687b      	ldr	r3, [r7, #4]
 800c0fe:	611a      	str	r2, [r3, #16]
 800c100:	68fb      	ldr	r3, [r7, #12]
 800c102:	3301      	adds	r3, #1
 800c104:	60fb      	str	r3, [r7, #12]
 800c106:	68fb      	ldr	r3, [r7, #12]
 800c108:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c10c:	d901      	bls.n	800c112 <USB_FlushTxFifo+0x4a>
 800c10e:	2303      	movs	r3, #3
 800c110:	e006      	b.n	800c120 <USB_FlushTxFifo+0x58>
 800c112:	687b      	ldr	r3, [r7, #4]
 800c114:	691b      	ldr	r3, [r3, #16]
 800c116:	f003 0320 	and.w	r3, r3, #32
 800c11a:	2b20      	cmp	r3, #32
 800c11c:	d0f0      	beq.n	800c100 <USB_FlushTxFifo+0x38>
 800c11e:	2300      	movs	r3, #0
 800c120:	4618      	mov	r0, r3
 800c122:	3714      	adds	r7, #20
 800c124:	46bd      	mov	sp, r7
 800c126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c12a:	4770      	bx	lr

0800c12c <USB_FlushRxFifo>:
 800c12c:	b480      	push	{r7}
 800c12e:	b085      	sub	sp, #20
 800c130:	af00      	add	r7, sp, #0
 800c132:	6078      	str	r0, [r7, #4]
 800c134:	2300      	movs	r3, #0
 800c136:	60fb      	str	r3, [r7, #12]
 800c138:	68fb      	ldr	r3, [r7, #12]
 800c13a:	3301      	adds	r3, #1
 800c13c:	60fb      	str	r3, [r7, #12]
 800c13e:	68fb      	ldr	r3, [r7, #12]
 800c140:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c144:	d901      	bls.n	800c14a <USB_FlushRxFifo+0x1e>
 800c146:	2303      	movs	r3, #3
 800c148:	e018      	b.n	800c17c <USB_FlushRxFifo+0x50>
 800c14a:	687b      	ldr	r3, [r7, #4]
 800c14c:	691b      	ldr	r3, [r3, #16]
 800c14e:	2b00      	cmp	r3, #0
 800c150:	daf2      	bge.n	800c138 <USB_FlushRxFifo+0xc>
 800c152:	2300      	movs	r3, #0
 800c154:	60fb      	str	r3, [r7, #12]
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	2210      	movs	r2, #16
 800c15a:	611a      	str	r2, [r3, #16]
 800c15c:	68fb      	ldr	r3, [r7, #12]
 800c15e:	3301      	adds	r3, #1
 800c160:	60fb      	str	r3, [r7, #12]
 800c162:	68fb      	ldr	r3, [r7, #12]
 800c164:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c168:	d901      	bls.n	800c16e <USB_FlushRxFifo+0x42>
 800c16a:	2303      	movs	r3, #3
 800c16c:	e006      	b.n	800c17c <USB_FlushRxFifo+0x50>
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	691b      	ldr	r3, [r3, #16]
 800c172:	f003 0310 	and.w	r3, r3, #16
 800c176:	2b10      	cmp	r3, #16
 800c178:	d0f0      	beq.n	800c15c <USB_FlushRxFifo+0x30>
 800c17a:	2300      	movs	r3, #0
 800c17c:	4618      	mov	r0, r3
 800c17e:	3714      	adds	r7, #20
 800c180:	46bd      	mov	sp, r7
 800c182:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c186:	4770      	bx	lr

0800c188 <USB_SetDevSpeed>:
 800c188:	b480      	push	{r7}
 800c18a:	b085      	sub	sp, #20
 800c18c:	af00      	add	r7, sp, #0
 800c18e:	6078      	str	r0, [r7, #4]
 800c190:	460b      	mov	r3, r1
 800c192:	70fb      	strb	r3, [r7, #3]
 800c194:	687b      	ldr	r3, [r7, #4]
 800c196:	60fb      	str	r3, [r7, #12]
 800c198:	68fb      	ldr	r3, [r7, #12]
 800c19a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800c19e:	681a      	ldr	r2, [r3, #0]
 800c1a0:	78fb      	ldrb	r3, [r7, #3]
 800c1a2:	68f9      	ldr	r1, [r7, #12]
 800c1a4:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800c1a8:	4313      	orrs	r3, r2
 800c1aa:	600b      	str	r3, [r1, #0]
 800c1ac:	2300      	movs	r3, #0
 800c1ae:	4618      	mov	r0, r3
 800c1b0:	3714      	adds	r7, #20
 800c1b2:	46bd      	mov	sp, r7
 800c1b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b8:	4770      	bx	lr

0800c1ba <USB_DevDisconnect>:
 800c1ba:	b480      	push	{r7}
 800c1bc:	b085      	sub	sp, #20
 800c1be:	af00      	add	r7, sp, #0
 800c1c0:	6078      	str	r0, [r7, #4]
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	60fb      	str	r3, [r7, #12]
 800c1c6:	68fb      	ldr	r3, [r7, #12]
 800c1c8:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800c1cc:	681b      	ldr	r3, [r3, #0]
 800c1ce:	68fa      	ldr	r2, [r7, #12]
 800c1d0:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 800c1d4:	f023 0303 	bic.w	r3, r3, #3
 800c1d8:	6013      	str	r3, [r2, #0]
 800c1da:	68fb      	ldr	r3, [r7, #12]
 800c1dc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800c1e0:	685b      	ldr	r3, [r3, #4]
 800c1e2:	68fa      	ldr	r2, [r7, #12]
 800c1e4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800c1e8:	f043 0302 	orr.w	r3, r3, #2
 800c1ec:	6053      	str	r3, [r2, #4]
 800c1ee:	2300      	movs	r3, #0
 800c1f0:	4618      	mov	r0, r3
 800c1f2:	3714      	adds	r7, #20
 800c1f4:	46bd      	mov	sp, r7
 800c1f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1fa:	4770      	bx	lr

0800c1fc <USB_GetMode>:
 800c1fc:	b480      	push	{r7}
 800c1fe:	b083      	sub	sp, #12
 800c200:	af00      	add	r7, sp, #0
 800c202:	6078      	str	r0, [r7, #4]
 800c204:	687b      	ldr	r3, [r7, #4]
 800c206:	695b      	ldr	r3, [r3, #20]
 800c208:	f003 0301 	and.w	r3, r3, #1
 800c20c:	4618      	mov	r0, r3
 800c20e:	370c      	adds	r7, #12
 800c210:	46bd      	mov	sp, r7
 800c212:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c216:	4770      	bx	lr

0800c218 <USB_CoreReset>:
 800c218:	b480      	push	{r7}
 800c21a:	b085      	sub	sp, #20
 800c21c:	af00      	add	r7, sp, #0
 800c21e:	6078      	str	r0, [r7, #4]
 800c220:	2300      	movs	r3, #0
 800c222:	60fb      	str	r3, [r7, #12]
 800c224:	68fb      	ldr	r3, [r7, #12]
 800c226:	3301      	adds	r3, #1
 800c228:	60fb      	str	r3, [r7, #12]
 800c22a:	68fb      	ldr	r3, [r7, #12]
 800c22c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c230:	d901      	bls.n	800c236 <USB_CoreReset+0x1e>
 800c232:	2303      	movs	r3, #3
 800c234:	e01b      	b.n	800c26e <USB_CoreReset+0x56>
 800c236:	687b      	ldr	r3, [r7, #4]
 800c238:	691b      	ldr	r3, [r3, #16]
 800c23a:	2b00      	cmp	r3, #0
 800c23c:	daf2      	bge.n	800c224 <USB_CoreReset+0xc>
 800c23e:	2300      	movs	r3, #0
 800c240:	60fb      	str	r3, [r7, #12]
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	691b      	ldr	r3, [r3, #16]
 800c246:	f043 0201 	orr.w	r2, r3, #1
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	611a      	str	r2, [r3, #16]
 800c24e:	68fb      	ldr	r3, [r7, #12]
 800c250:	3301      	adds	r3, #1
 800c252:	60fb      	str	r3, [r7, #12]
 800c254:	68fb      	ldr	r3, [r7, #12]
 800c256:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800c25a:	d901      	bls.n	800c260 <USB_CoreReset+0x48>
 800c25c:	2303      	movs	r3, #3
 800c25e:	e006      	b.n	800c26e <USB_CoreReset+0x56>
 800c260:	687b      	ldr	r3, [r7, #4]
 800c262:	691b      	ldr	r3, [r3, #16]
 800c264:	f003 0301 	and.w	r3, r3, #1
 800c268:	2b01      	cmp	r3, #1
 800c26a:	d0f0      	beq.n	800c24e <USB_CoreReset+0x36>
 800c26c:	2300      	movs	r3, #0
 800c26e:	4618      	mov	r0, r3
 800c270:	3714      	adds	r7, #20
 800c272:	46bd      	mov	sp, r7
 800c274:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c278:	4770      	bx	lr

0800c27a <NewMessageData>:
 800c27a:	b480      	push	{r7}
 800c27c:	b085      	sub	sp, #20
 800c27e:	af00      	add	r7, sp, #0
 800c280:	60f8      	str	r0, [r7, #12]
 800c282:	60b9      	str	r1, [r7, #8]
 800c284:	607a      	str	r2, [r7, #4]
 800c286:	68fb      	ldr	r3, [r7, #12]
 800c288:	68ba      	ldr	r2, [r7, #8]
 800c28a:	605a      	str	r2, [r3, #4]
 800c28c:	68fb      	ldr	r3, [r7, #12]
 800c28e:	687a      	ldr	r2, [r7, #4]
 800c290:	601a      	str	r2, [r3, #0]
 800c292:	bf00      	nop
 800c294:	3714      	adds	r7, #20
 800c296:	46bd      	mov	sp, r7
 800c298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c29c:	4770      	bx	lr

0800c29e <getNextPacketId>:
 800c29e:	b480      	push	{r7}
 800c2a0:	b083      	sub	sp, #12
 800c2a2:	af00      	add	r7, sp, #0
 800c2a4:	6078      	str	r0, [r7, #4]
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	681b      	ldr	r3, [r3, #0]
 800c2aa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c2ae:	4293      	cmp	r3, r2
 800c2b0:	d003      	beq.n	800c2ba <getNextPacketId+0x1c>
 800c2b2:	687b      	ldr	r3, [r7, #4]
 800c2b4:	681b      	ldr	r3, [r3, #0]
 800c2b6:	3301      	adds	r3, #1
 800c2b8:	e000      	b.n	800c2bc <getNextPacketId+0x1e>
 800c2ba:	2301      	movs	r3, #1
 800c2bc:	687a      	ldr	r2, [r7, #4]
 800c2be:	6013      	str	r3, [r2, #0]
 800c2c0:	687b      	ldr	r3, [r7, #4]
 800c2c2:	681b      	ldr	r3, [r3, #0]
 800c2c4:	4618      	mov	r0, r3
 800c2c6:	370c      	adds	r7, #12
 800c2c8:	46bd      	mov	sp, r7
 800c2ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2ce:	4770      	bx	lr

0800c2d0 <sendPacket>:
 800c2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c2d4:	b086      	sub	sp, #24
 800c2d6:	af00      	add	r7, sp, #0
 800c2d8:	60f8      	str	r0, [r7, #12]
 800c2da:	60b9      	str	r1, [r7, #8]
 800c2dc:	607a      	str	r2, [r7, #4]
 800c2de:	f04f 33ff 	mov.w	r3, #4294967295
 800c2e2:	617b      	str	r3, [r7, #20]
 800c2e4:	2300      	movs	r3, #0
 800c2e6:	613b      	str	r3, [r7, #16]
 800c2e8:	e01c      	b.n	800c324 <sendPacket+0x54>
 800c2ea:	68fb      	ldr	r3, [r7, #12]
 800c2ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c2ee:	689c      	ldr	r4, [r3, #8]
 800c2f0:	68fb      	ldr	r3, [r7, #12]
 800c2f2:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
 800c2f4:	68fb      	ldr	r3, [r7, #12]
 800c2f6:	691a      	ldr	r2, [r3, #16]
 800c2f8:	693b      	ldr	r3, [r7, #16]
 800c2fa:	18d6      	adds	r6, r2, r3
 800c2fc:	68ba      	ldr	r2, [r7, #8]
 800c2fe:	693b      	ldr	r3, [r7, #16]
 800c300:	eba2 0803 	sub.w	r8, r2, r3
 800c304:	6878      	ldr	r0, [r7, #4]
 800c306:	f7f5 fc49 	bl	8001b9c <TimerLeftMS>
 800c30a:	4603      	mov	r3, r0
 800c30c:	4642      	mov	r2, r8
 800c30e:	4631      	mov	r1, r6
 800c310:	4628      	mov	r0, r5
 800c312:	47a0      	blx	r4
 800c314:	6178      	str	r0, [r7, #20]
 800c316:	697b      	ldr	r3, [r7, #20]
 800c318:	2b00      	cmp	r3, #0
 800c31a:	db0e      	blt.n	800c33a <sendPacket+0x6a>
 800c31c:	693a      	ldr	r2, [r7, #16]
 800c31e:	697b      	ldr	r3, [r7, #20]
 800c320:	4413      	add	r3, r2
 800c322:	613b      	str	r3, [r7, #16]
 800c324:	693a      	ldr	r2, [r7, #16]
 800c326:	68bb      	ldr	r3, [r7, #8]
 800c328:	429a      	cmp	r2, r3
 800c32a:	da07      	bge.n	800c33c <sendPacket+0x6c>
 800c32c:	6878      	ldr	r0, [r7, #4]
 800c32e:	f7f5 fc5d 	bl	8001bec <TimerIsExpired>
 800c332:	4603      	mov	r3, r0
 800c334:	2b00      	cmp	r3, #0
 800c336:	d0d8      	beq.n	800c2ea <sendPacket+0x1a>
 800c338:	e000      	b.n	800c33c <sendPacket+0x6c>
 800c33a:	bf00      	nop
 800c33c:	693a      	ldr	r2, [r7, #16]
 800c33e:	68bb      	ldr	r3, [r7, #8]
 800c340:	429a      	cmp	r2, r3
 800c342:	d10b      	bne.n	800c35c <sendPacket+0x8c>
 800c344:	68fb      	ldr	r3, [r7, #12]
 800c346:	f103 0258 	add.w	r2, r3, #88	@ 0x58
 800c34a:	68fb      	ldr	r3, [r7, #12]
 800c34c:	699b      	ldr	r3, [r3, #24]
 800c34e:	4619      	mov	r1, r3
 800c350:	4610      	mov	r0, r2
 800c352:	f7f5 fc11 	bl	8001b78 <TimerCountdown>
 800c356:	2300      	movs	r3, #0
 800c358:	617b      	str	r3, [r7, #20]
 800c35a:	e002      	b.n	800c362 <sendPacket+0x92>
 800c35c:	f04f 33ff 	mov.w	r3, #4294967295
 800c360:	617b      	str	r3, [r7, #20]
 800c362:	697b      	ldr	r3, [r7, #20]
 800c364:	4618      	mov	r0, r3
 800c366:	3718      	adds	r7, #24
 800c368:	46bd      	mov	sp, r7
 800c36a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c36e <MQTTClientInit>:
 800c36e:	b580      	push	{r7, lr}
 800c370:	b086      	sub	sp, #24
 800c372:	af00      	add	r7, sp, #0
 800c374:	60f8      	str	r0, [r7, #12]
 800c376:	60b9      	str	r1, [r7, #8]
 800c378:	607a      	str	r2, [r7, #4]
 800c37a:	603b      	str	r3, [r7, #0]
 800c37c:	68fb      	ldr	r3, [r7, #12]
 800c37e:	68ba      	ldr	r2, [r7, #8]
 800c380:	655a      	str	r2, [r3, #84]	@ 0x54
 800c382:	2300      	movs	r3, #0
 800c384:	617b      	str	r3, [r7, #20]
 800c386:	e008      	b.n	800c39a <MQTTClientInit+0x2c>
 800c388:	68fb      	ldr	r3, [r7, #12]
 800c38a:	697a      	ldr	r2, [r7, #20]
 800c38c:	3205      	adds	r2, #5
 800c38e:	2100      	movs	r1, #0
 800c390:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800c394:	697b      	ldr	r3, [r7, #20]
 800c396:	3301      	adds	r3, #1
 800c398:	617b      	str	r3, [r7, #20]
 800c39a:	697b      	ldr	r3, [r7, #20]
 800c39c:	2b04      	cmp	r3, #4
 800c39e:	ddf3      	ble.n	800c388 <MQTTClientInit+0x1a>
 800c3a0:	68fb      	ldr	r3, [r7, #12]
 800c3a2:	687a      	ldr	r2, [r7, #4]
 800c3a4:	605a      	str	r2, [r3, #4]
 800c3a6:	68fb      	ldr	r3, [r7, #12]
 800c3a8:	683a      	ldr	r2, [r7, #0]
 800c3aa:	611a      	str	r2, [r3, #16]
 800c3ac:	68fb      	ldr	r3, [r7, #12]
 800c3ae:	6a3a      	ldr	r2, [r7, #32]
 800c3b0:	609a      	str	r2, [r3, #8]
 800c3b2:	68fb      	ldr	r3, [r7, #12]
 800c3b4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c3b6:	615a      	str	r2, [r3, #20]
 800c3b8:	68fb      	ldr	r3, [r7, #12]
 800c3ba:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800c3bc:	60da      	str	r2, [r3, #12]
 800c3be:	68fb      	ldr	r3, [r7, #12]
 800c3c0:	2200      	movs	r2, #0
 800c3c2:	621a      	str	r2, [r3, #32]
 800c3c4:	68fb      	ldr	r3, [r7, #12]
 800c3c6:	2200      	movs	r2, #0
 800c3c8:	625a      	str	r2, [r3, #36]	@ 0x24
 800c3ca:	68fb      	ldr	r3, [r7, #12]
 800c3cc:	2200      	movs	r2, #0
 800c3ce:	771a      	strb	r2, [r3, #28]
 800c3d0:	68fb      	ldr	r3, [r7, #12]
 800c3d2:	2200      	movs	r2, #0
 800c3d4:	651a      	str	r2, [r3, #80]	@ 0x50
 800c3d6:	68fb      	ldr	r3, [r7, #12]
 800c3d8:	2201      	movs	r2, #1
 800c3da:	601a      	str	r2, [r3, #0]
 800c3dc:	68fb      	ldr	r3, [r7, #12]
 800c3de:	3358      	adds	r3, #88	@ 0x58
 800c3e0:	4618      	mov	r0, r3
 800c3e2:	f7f5 fc14 	bl	8001c0e <TimerInit>
 800c3e6:	68fb      	ldr	r3, [r7, #12]
 800c3e8:	3360      	adds	r3, #96	@ 0x60
 800c3ea:	4618      	mov	r0, r3
 800c3ec:	f7f5 fc0f 	bl	8001c0e <TimerInit>
 800c3f0:	bf00      	nop
 800c3f2:	3718      	adds	r7, #24
 800c3f4:	46bd      	mov	sp, r7
 800c3f6:	bd80      	pop	{r7, pc}

0800c3f8 <decodePacket>:
 800c3f8:	b590      	push	{r4, r7, lr}
 800c3fa:	b08b      	sub	sp, #44	@ 0x2c
 800c3fc:	af00      	add	r7, sp, #0
 800c3fe:	60f8      	str	r0, [r7, #12]
 800c400:	60b9      	str	r1, [r7, #8]
 800c402:	607a      	str	r2, [r7, #4]
 800c404:	2301      	movs	r3, #1
 800c406:	627b      	str	r3, [r7, #36]	@ 0x24
 800c408:	2300      	movs	r3, #0
 800c40a:	623b      	str	r3, [r7, #32]
 800c40c:	2304      	movs	r3, #4
 800c40e:	61fb      	str	r3, [r7, #28]
 800c410:	68bb      	ldr	r3, [r7, #8]
 800c412:	2200      	movs	r2, #0
 800c414:	601a      	str	r2, [r3, #0]
 800c416:	f04f 33ff 	mov.w	r3, #4294967295
 800c41a:	61bb      	str	r3, [r7, #24]
 800c41c:	6a3b      	ldr	r3, [r7, #32]
 800c41e:	3301      	adds	r3, #1
 800c420:	623b      	str	r3, [r7, #32]
 800c422:	6a3a      	ldr	r2, [r7, #32]
 800c424:	69fb      	ldr	r3, [r7, #28]
 800c426:	429a      	cmp	r2, r3
 800c428:	dd03      	ble.n	800c432 <decodePacket+0x3a>
 800c42a:	f04f 33ff 	mov.w	r3, #4294967295
 800c42e:	61bb      	str	r3, [r7, #24]
 800c430:	e021      	b.n	800c476 <decodePacket+0x7e>
 800c432:	68fb      	ldr	r3, [r7, #12]
 800c434:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c436:	685c      	ldr	r4, [r3, #4]
 800c438:	68fb      	ldr	r3, [r7, #12]
 800c43a:	6d58      	ldr	r0, [r3, #84]	@ 0x54
 800c43c:	f107 0117 	add.w	r1, r7, #23
 800c440:	687b      	ldr	r3, [r7, #4]
 800c442:	2201      	movs	r2, #1
 800c444:	47a0      	blx	r4
 800c446:	61b8      	str	r0, [r7, #24]
 800c448:	69bb      	ldr	r3, [r7, #24]
 800c44a:	2b01      	cmp	r3, #1
 800c44c:	d112      	bne.n	800c474 <decodePacket+0x7c>
 800c44e:	68bb      	ldr	r3, [r7, #8]
 800c450:	681a      	ldr	r2, [r3, #0]
 800c452:	7dfb      	ldrb	r3, [r7, #23]
 800c454:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800c458:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800c45a:	fb01 f303 	mul.w	r3, r1, r3
 800c45e:	441a      	add	r2, r3
 800c460:	68bb      	ldr	r3, [r7, #8]
 800c462:	601a      	str	r2, [r3, #0]
 800c464:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c466:	01db      	lsls	r3, r3, #7
 800c468:	627b      	str	r3, [r7, #36]	@ 0x24
 800c46a:	7dfb      	ldrb	r3, [r7, #23]
 800c46c:	b25b      	sxtb	r3, r3
 800c46e:	2b00      	cmp	r3, #0
 800c470:	dbd1      	blt.n	800c416 <decodePacket+0x1e>
 800c472:	e000      	b.n	800c476 <decodePacket+0x7e>
 800c474:	bf00      	nop
 800c476:	6a3b      	ldr	r3, [r7, #32]
 800c478:	4618      	mov	r0, r3
 800c47a:	372c      	adds	r7, #44	@ 0x2c
 800c47c:	46bd      	mov	sp, r7
 800c47e:	bd90      	pop	{r4, r7, pc}

0800c480 <readPacket>:
 800c480:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c482:	b089      	sub	sp, #36	@ 0x24
 800c484:	af00      	add	r7, sp, #0
 800c486:	60f8      	str	r0, [r7, #12]
 800c488:	60b9      	str	r1, [r7, #8]
 800c48a:	2300      	movs	r3, #0
 800c48c:	617b      	str	r3, [r7, #20]
 800c48e:	2300      	movs	r3, #0
 800c490:	61bb      	str	r3, [r7, #24]
 800c492:	2300      	movs	r3, #0
 800c494:	613b      	str	r3, [r7, #16]
 800c496:	68fb      	ldr	r3, [r7, #12]
 800c498:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c49a:	685c      	ldr	r4, [r3, #4]
 800c49c:	68fb      	ldr	r3, [r7, #12]
 800c49e:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
 800c4a0:	68fb      	ldr	r3, [r7, #12]
 800c4a2:	695e      	ldr	r6, [r3, #20]
 800c4a4:	68b8      	ldr	r0, [r7, #8]
 800c4a6:	f7f5 fb79 	bl	8001b9c <TimerLeftMS>
 800c4aa:	4603      	mov	r3, r0
 800c4ac:	2201      	movs	r2, #1
 800c4ae:	4631      	mov	r1, r6
 800c4b0:	4628      	mov	r0, r5
 800c4b2:	47a0      	blx	r4
 800c4b4:	61f8      	str	r0, [r7, #28]
 800c4b6:	69fb      	ldr	r3, [r7, #28]
 800c4b8:	2b01      	cmp	r3, #1
 800c4ba:	d157      	bne.n	800c56c <readPacket+0xec>
 800c4bc:	2301      	movs	r3, #1
 800c4be:	61bb      	str	r3, [r7, #24]
 800c4c0:	68b8      	ldr	r0, [r7, #8]
 800c4c2:	f7f5 fb6b 	bl	8001b9c <TimerLeftMS>
 800c4c6:	4602      	mov	r2, r0
 800c4c8:	f107 0310 	add.w	r3, r7, #16
 800c4cc:	4619      	mov	r1, r3
 800c4ce:	68f8      	ldr	r0, [r7, #12]
 800c4d0:	f7ff ff92 	bl	800c3f8 <decodePacket>
 800c4d4:	68fb      	ldr	r3, [r7, #12]
 800c4d6:	695b      	ldr	r3, [r3, #20]
 800c4d8:	3301      	adds	r3, #1
 800c4da:	693a      	ldr	r2, [r7, #16]
 800c4dc:	4611      	mov	r1, r2
 800c4de:	4618      	mov	r0, r3
 800c4e0:	f001 f813 	bl	800d50a <MQTTPacket_encode>
 800c4e4:	4602      	mov	r2, r0
 800c4e6:	69bb      	ldr	r3, [r7, #24]
 800c4e8:	4413      	add	r3, r2
 800c4ea:	61bb      	str	r3, [r7, #24]
 800c4ec:	68fb      	ldr	r3, [r7, #12]
 800c4ee:	68da      	ldr	r2, [r3, #12]
 800c4f0:	69bb      	ldr	r3, [r7, #24]
 800c4f2:	1ad3      	subs	r3, r2, r3
 800c4f4:	693a      	ldr	r2, [r7, #16]
 800c4f6:	4293      	cmp	r3, r2
 800c4f8:	d203      	bcs.n	800c502 <readPacket+0x82>
 800c4fa:	f06f 0301 	mvn.w	r3, #1
 800c4fe:	61fb      	str	r3, [r7, #28]
 800c500:	e037      	b.n	800c572 <readPacket+0xf2>
 800c502:	693b      	ldr	r3, [r7, #16]
 800c504:	2b00      	cmp	r3, #0
 800c506:	dd1a      	ble.n	800c53e <readPacket+0xbe>
 800c508:	68fb      	ldr	r3, [r7, #12]
 800c50a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c50c:	685c      	ldr	r4, [r3, #4]
 800c50e:	68fb      	ldr	r3, [r7, #12]
 800c510:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
 800c512:	68fb      	ldr	r3, [r7, #12]
 800c514:	695a      	ldr	r2, [r3, #20]
 800c516:	69bb      	ldr	r3, [r7, #24]
 800c518:	18d6      	adds	r6, r2, r3
 800c51a:	693b      	ldr	r3, [r7, #16]
 800c51c:	607b      	str	r3, [r7, #4]
 800c51e:	68b8      	ldr	r0, [r7, #8]
 800c520:	f7f5 fb3c 	bl	8001b9c <TimerLeftMS>
 800c524:	4603      	mov	r3, r0
 800c526:	687a      	ldr	r2, [r7, #4]
 800c528:	4631      	mov	r1, r6
 800c52a:	4628      	mov	r0, r5
 800c52c:	47a0      	blx	r4
 800c52e:	61f8      	str	r0, [r7, #28]
 800c530:	693b      	ldr	r3, [r7, #16]
 800c532:	69fa      	ldr	r2, [r7, #28]
 800c534:	429a      	cmp	r2, r3
 800c536:	d002      	beq.n	800c53e <readPacket+0xbe>
 800c538:	2300      	movs	r3, #0
 800c53a:	61fb      	str	r3, [r7, #28]
 800c53c:	e019      	b.n	800c572 <readPacket+0xf2>
 800c53e:	68fb      	ldr	r3, [r7, #12]
 800c540:	695b      	ldr	r3, [r3, #20]
 800c542:	781b      	ldrb	r3, [r3, #0]
 800c544:	753b      	strb	r3, [r7, #20]
 800c546:	7d3b      	ldrb	r3, [r7, #20]
 800c548:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800c54c:	b2db      	uxtb	r3, r3
 800c54e:	61fb      	str	r3, [r7, #28]
 800c550:	68fb      	ldr	r3, [r7, #12]
 800c552:	699b      	ldr	r3, [r3, #24]
 800c554:	2b00      	cmp	r3, #0
 800c556:	d00b      	beq.n	800c570 <readPacket+0xf0>
 800c558:	68fb      	ldr	r3, [r7, #12]
 800c55a:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800c55e:	68fb      	ldr	r3, [r7, #12]
 800c560:	699b      	ldr	r3, [r3, #24]
 800c562:	4619      	mov	r1, r3
 800c564:	4610      	mov	r0, r2
 800c566:	f7f5 fb07 	bl	8001b78 <TimerCountdown>
 800c56a:	e002      	b.n	800c572 <readPacket+0xf2>
 800c56c:	bf00      	nop
 800c56e:	e000      	b.n	800c572 <readPacket+0xf2>
 800c570:	bf00      	nop
 800c572:	69fb      	ldr	r3, [r7, #28]
 800c574:	4618      	mov	r0, r3
 800c576:	3724      	adds	r7, #36	@ 0x24
 800c578:	46bd      	mov	sp, r7
 800c57a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c57c <isTopicMatched>:
 800c57c:	b480      	push	{r7}
 800c57e:	b087      	sub	sp, #28
 800c580:	af00      	add	r7, sp, #0
 800c582:	6078      	str	r0, [r7, #4]
 800c584:	6039      	str	r1, [r7, #0]
 800c586:	687b      	ldr	r3, [r7, #4]
 800c588:	617b      	str	r3, [r7, #20]
 800c58a:	683b      	ldr	r3, [r7, #0]
 800c58c:	689b      	ldr	r3, [r3, #8]
 800c58e:	613b      	str	r3, [r7, #16]
 800c590:	683b      	ldr	r3, [r7, #0]
 800c592:	685b      	ldr	r3, [r3, #4]
 800c594:	461a      	mov	r2, r3
 800c596:	693b      	ldr	r3, [r7, #16]
 800c598:	4413      	add	r3, r2
 800c59a:	60bb      	str	r3, [r7, #8]
 800c59c:	e039      	b.n	800c612 <isTopicMatched+0x96>
 800c59e:	693b      	ldr	r3, [r7, #16]
 800c5a0:	781b      	ldrb	r3, [r3, #0]
 800c5a2:	2b2f      	cmp	r3, #47	@ 0x2f
 800c5a4:	d103      	bne.n	800c5ae <isTopicMatched+0x32>
 800c5a6:	697b      	ldr	r3, [r7, #20]
 800c5a8:	781b      	ldrb	r3, [r3, #0]
 800c5aa:	2b2f      	cmp	r3, #47	@ 0x2f
 800c5ac:	d13a      	bne.n	800c624 <isTopicMatched+0xa8>
 800c5ae:	697b      	ldr	r3, [r7, #20]
 800c5b0:	781b      	ldrb	r3, [r3, #0]
 800c5b2:	2b2b      	cmp	r3, #43	@ 0x2b
 800c5b4:	d009      	beq.n	800c5ca <isTopicMatched+0x4e>
 800c5b6:	697b      	ldr	r3, [r7, #20]
 800c5b8:	781b      	ldrb	r3, [r3, #0]
 800c5ba:	2b23      	cmp	r3, #35	@ 0x23
 800c5bc:	d005      	beq.n	800c5ca <isTopicMatched+0x4e>
 800c5be:	697b      	ldr	r3, [r7, #20]
 800c5c0:	781a      	ldrb	r2, [r3, #0]
 800c5c2:	693b      	ldr	r3, [r7, #16]
 800c5c4:	781b      	ldrb	r3, [r3, #0]
 800c5c6:	429a      	cmp	r2, r3
 800c5c8:	d12e      	bne.n	800c628 <isTopicMatched+0xac>
 800c5ca:	697b      	ldr	r3, [r7, #20]
 800c5cc:	781b      	ldrb	r3, [r3, #0]
 800c5ce:	2b2b      	cmp	r3, #43	@ 0x2b
 800c5d0:	d112      	bne.n	800c5f8 <isTopicMatched+0x7c>
 800c5d2:	693b      	ldr	r3, [r7, #16]
 800c5d4:	3301      	adds	r3, #1
 800c5d6:	60fb      	str	r3, [r7, #12]
 800c5d8:	e005      	b.n	800c5e6 <isTopicMatched+0x6a>
 800c5da:	693b      	ldr	r3, [r7, #16]
 800c5dc:	3301      	adds	r3, #1
 800c5de:	613b      	str	r3, [r7, #16]
 800c5e0:	693b      	ldr	r3, [r7, #16]
 800c5e2:	3301      	adds	r3, #1
 800c5e4:	60fb      	str	r3, [r7, #12]
 800c5e6:	68fa      	ldr	r2, [r7, #12]
 800c5e8:	68bb      	ldr	r3, [r7, #8]
 800c5ea:	429a      	cmp	r2, r3
 800c5ec:	d20b      	bcs.n	800c606 <isTopicMatched+0x8a>
 800c5ee:	68fb      	ldr	r3, [r7, #12]
 800c5f0:	781b      	ldrb	r3, [r3, #0]
 800c5f2:	2b2f      	cmp	r3, #47	@ 0x2f
 800c5f4:	d1f1      	bne.n	800c5da <isTopicMatched+0x5e>
 800c5f6:	e006      	b.n	800c606 <isTopicMatched+0x8a>
 800c5f8:	697b      	ldr	r3, [r7, #20]
 800c5fa:	781b      	ldrb	r3, [r3, #0]
 800c5fc:	2b23      	cmp	r3, #35	@ 0x23
 800c5fe:	d102      	bne.n	800c606 <isTopicMatched+0x8a>
 800c600:	68bb      	ldr	r3, [r7, #8]
 800c602:	3b01      	subs	r3, #1
 800c604:	613b      	str	r3, [r7, #16]
 800c606:	697b      	ldr	r3, [r7, #20]
 800c608:	3301      	adds	r3, #1
 800c60a:	617b      	str	r3, [r7, #20]
 800c60c:	693b      	ldr	r3, [r7, #16]
 800c60e:	3301      	adds	r3, #1
 800c610:	613b      	str	r3, [r7, #16]
 800c612:	697b      	ldr	r3, [r7, #20]
 800c614:	781b      	ldrb	r3, [r3, #0]
 800c616:	2b00      	cmp	r3, #0
 800c618:	d007      	beq.n	800c62a <isTopicMatched+0xae>
 800c61a:	693a      	ldr	r2, [r7, #16]
 800c61c:	68bb      	ldr	r3, [r7, #8]
 800c61e:	429a      	cmp	r2, r3
 800c620:	d3bd      	bcc.n	800c59e <isTopicMatched+0x22>
 800c622:	e002      	b.n	800c62a <isTopicMatched+0xae>
 800c624:	bf00      	nop
 800c626:	e000      	b.n	800c62a <isTopicMatched+0xae>
 800c628:	bf00      	nop
 800c62a:	693a      	ldr	r2, [r7, #16]
 800c62c:	68bb      	ldr	r3, [r7, #8]
 800c62e:	429a      	cmp	r2, r3
 800c630:	d105      	bne.n	800c63e <isTopicMatched+0xc2>
 800c632:	697b      	ldr	r3, [r7, #20]
 800c634:	781b      	ldrb	r3, [r3, #0]
 800c636:	2b00      	cmp	r3, #0
 800c638:	d101      	bne.n	800c63e <isTopicMatched+0xc2>
 800c63a:	2301      	movs	r3, #1
 800c63c:	e000      	b.n	800c640 <isTopicMatched+0xc4>
 800c63e:	2300      	movs	r3, #0
 800c640:	b2db      	uxtb	r3, r3
 800c642:	4618      	mov	r0, r3
 800c644:	371c      	adds	r7, #28
 800c646:	46bd      	mov	sp, r7
 800c648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c64c:	4770      	bx	lr

0800c64e <deliverMessage>:
 800c64e:	b580      	push	{r7, lr}
 800c650:	b08a      	sub	sp, #40	@ 0x28
 800c652:	af00      	add	r7, sp, #0
 800c654:	60f8      	str	r0, [r7, #12]
 800c656:	60b9      	str	r1, [r7, #8]
 800c658:	607a      	str	r2, [r7, #4]
 800c65a:	f04f 33ff 	mov.w	r3, #4294967295
 800c65e:	623b      	str	r3, [r7, #32]
 800c660:	2300      	movs	r3, #0
 800c662:	627b      	str	r3, [r7, #36]	@ 0x24
 800c664:	e03c      	b.n	800c6e0 <deliverMessage+0x92>
 800c666:	68fb      	ldr	r3, [r7, #12]
 800c668:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c66a:	3205      	adds	r2, #5
 800c66c:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800c670:	2b00      	cmp	r3, #0
 800c672:	d032      	beq.n	800c6da <deliverMessage+0x8c>
 800c674:	68fb      	ldr	r3, [r7, #12]
 800c676:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c678:	3205      	adds	r2, #5
 800c67a:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800c67e:	4619      	mov	r1, r3
 800c680:	68b8      	ldr	r0, [r7, #8]
 800c682:	f001 f911 	bl	800d8a8 <MQTTPacket_equals>
 800c686:	4603      	mov	r3, r0
 800c688:	2b00      	cmp	r3, #0
 800c68a:	d10b      	bne.n	800c6a4 <deliverMessage+0x56>
 800c68c:	68fb      	ldr	r3, [r7, #12]
 800c68e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c690:	3205      	adds	r2, #5
 800c692:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800c696:	68b9      	ldr	r1, [r7, #8]
 800c698:	4618      	mov	r0, r3
 800c69a:	f7ff ff6f 	bl	800c57c <isTopicMatched>
 800c69e:	4603      	mov	r3, r0
 800c6a0:	2b00      	cmp	r3, #0
 800c6a2:	d01a      	beq.n	800c6da <deliverMessage+0x8c>
 800c6a4:	68fa      	ldr	r2, [r7, #12]
 800c6a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c6a8:	3305      	adds	r3, #5
 800c6aa:	00db      	lsls	r3, r3, #3
 800c6ac:	4413      	add	r3, r2
 800c6ae:	685b      	ldr	r3, [r3, #4]
 800c6b0:	2b00      	cmp	r3, #0
 800c6b2:	d012      	beq.n	800c6da <deliverMessage+0x8c>
 800c6b4:	f107 0318 	add.w	r3, r7, #24
 800c6b8:	687a      	ldr	r2, [r7, #4]
 800c6ba:	68b9      	ldr	r1, [r7, #8]
 800c6bc:	4618      	mov	r0, r3
 800c6be:	f7ff fddc 	bl	800c27a <NewMessageData>
 800c6c2:	68fa      	ldr	r2, [r7, #12]
 800c6c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c6c6:	3305      	adds	r3, #5
 800c6c8:	00db      	lsls	r3, r3, #3
 800c6ca:	4413      	add	r3, r2
 800c6cc:	685b      	ldr	r3, [r3, #4]
 800c6ce:	f107 0218 	add.w	r2, r7, #24
 800c6d2:	4610      	mov	r0, r2
 800c6d4:	4798      	blx	r3
 800c6d6:	2300      	movs	r3, #0
 800c6d8:	623b      	str	r3, [r7, #32]
 800c6da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c6dc:	3301      	adds	r3, #1
 800c6de:	627b      	str	r3, [r7, #36]	@ 0x24
 800c6e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c6e2:	2b04      	cmp	r3, #4
 800c6e4:	ddbf      	ble.n	800c666 <deliverMessage+0x18>
 800c6e6:	6a3b      	ldr	r3, [r7, #32]
 800c6e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c6ec:	d112      	bne.n	800c714 <deliverMessage+0xc6>
 800c6ee:	68fb      	ldr	r3, [r7, #12]
 800c6f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c6f2:	2b00      	cmp	r3, #0
 800c6f4:	d00e      	beq.n	800c714 <deliverMessage+0xc6>
 800c6f6:	f107 0310 	add.w	r3, r7, #16
 800c6fa:	687a      	ldr	r2, [r7, #4]
 800c6fc:	68b9      	ldr	r1, [r7, #8]
 800c6fe:	4618      	mov	r0, r3
 800c700:	f7ff fdbb 	bl	800c27a <NewMessageData>
 800c704:	68fb      	ldr	r3, [r7, #12]
 800c706:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c708:	f107 0210 	add.w	r2, r7, #16
 800c70c:	4610      	mov	r0, r2
 800c70e:	4798      	blx	r3
 800c710:	2300      	movs	r3, #0
 800c712:	623b      	str	r3, [r7, #32]
 800c714:	6a3b      	ldr	r3, [r7, #32]
 800c716:	4618      	mov	r0, r3
 800c718:	3728      	adds	r7, #40	@ 0x28
 800c71a:	46bd      	mov	sp, r7
 800c71c:	bd80      	pop	{r7, pc}

0800c71e <keepalive>:
 800c71e:	b580      	push	{r7, lr}
 800c720:	b086      	sub	sp, #24
 800c722:	af00      	add	r7, sp, #0
 800c724:	6078      	str	r0, [r7, #4]
 800c726:	2300      	movs	r3, #0
 800c728:	617b      	str	r3, [r7, #20]
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	699b      	ldr	r3, [r3, #24]
 800c72e:	2b00      	cmp	r3, #0
 800c730:	d045      	beq.n	800c7be <keepalive+0xa0>
 800c732:	687b      	ldr	r3, [r7, #4]
 800c734:	3358      	adds	r3, #88	@ 0x58
 800c736:	4618      	mov	r0, r3
 800c738:	f7f5 fa58 	bl	8001bec <TimerIsExpired>
 800c73c:	4603      	mov	r3, r0
 800c73e:	2b00      	cmp	r3, #0
 800c740:	d107      	bne.n	800c752 <keepalive+0x34>
 800c742:	687b      	ldr	r3, [r7, #4]
 800c744:	3360      	adds	r3, #96	@ 0x60
 800c746:	4618      	mov	r0, r3
 800c748:	f7f5 fa50 	bl	8001bec <TimerIsExpired>
 800c74c:	4603      	mov	r3, r0
 800c74e:	2b00      	cmp	r3, #0
 800c750:	d037      	beq.n	800c7c2 <keepalive+0xa4>
 800c752:	687b      	ldr	r3, [r7, #4]
 800c754:	7f1b      	ldrb	r3, [r3, #28]
 800c756:	2b00      	cmp	r3, #0
 800c758:	d003      	beq.n	800c762 <keepalive+0x44>
 800c75a:	f04f 33ff 	mov.w	r3, #4294967295
 800c75e:	617b      	str	r3, [r7, #20]
 800c760:	e030      	b.n	800c7c4 <keepalive+0xa6>
 800c762:	f107 0308 	add.w	r3, r7, #8
 800c766:	4618      	mov	r0, r3
 800c768:	f7f5 fa51 	bl	8001c0e <TimerInit>
 800c76c:	f107 0308 	add.w	r3, r7, #8
 800c770:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800c774:	4618      	mov	r0, r3
 800c776:	f7f5 f9ee 	bl	8001b56 <TimerCountdownMS>
 800c77a:	687b      	ldr	r3, [r7, #4]
 800c77c:	691a      	ldr	r2, [r3, #16]
 800c77e:	687b      	ldr	r3, [r7, #4]
 800c780:	689b      	ldr	r3, [r3, #8]
 800c782:	4619      	mov	r1, r3
 800c784:	4610      	mov	r0, r2
 800c786:	f000 fdf4 	bl	800d372 <MQTTSerialize_pingreq>
 800c78a:	6138      	str	r0, [r7, #16]
 800c78c:	693b      	ldr	r3, [r7, #16]
 800c78e:	2b00      	cmp	r3, #0
 800c790:	dd18      	ble.n	800c7c4 <keepalive+0xa6>
 800c792:	f107 0308 	add.w	r3, r7, #8
 800c796:	461a      	mov	r2, r3
 800c798:	6939      	ldr	r1, [r7, #16]
 800c79a:	6878      	ldr	r0, [r7, #4]
 800c79c:	f7ff fd98 	bl	800c2d0 <sendPacket>
 800c7a0:	6178      	str	r0, [r7, #20]
 800c7a2:	697b      	ldr	r3, [r7, #20]
 800c7a4:	2b00      	cmp	r3, #0
 800c7a6:	d10d      	bne.n	800c7c4 <keepalive+0xa6>
 800c7a8:	687b      	ldr	r3, [r7, #4]
 800c7aa:	2201      	movs	r2, #1
 800c7ac:	771a      	strb	r2, [r3, #28]
 800c7ae:	687b      	ldr	r3, [r7, #4]
 800c7b0:	3360      	adds	r3, #96	@ 0x60
 800c7b2:	f241 3188 	movw	r1, #5000	@ 0x1388
 800c7b6:	4618      	mov	r0, r3
 800c7b8:	f7f5 f9cd 	bl	8001b56 <TimerCountdownMS>
 800c7bc:	e002      	b.n	800c7c4 <keepalive+0xa6>
 800c7be:	bf00      	nop
 800c7c0:	e000      	b.n	800c7c4 <keepalive+0xa6>
 800c7c2:	bf00      	nop
 800c7c4:	697b      	ldr	r3, [r7, #20]
 800c7c6:	4618      	mov	r0, r3
 800c7c8:	3718      	adds	r7, #24
 800c7ca:	46bd      	mov	sp, r7
 800c7cc:	bd80      	pop	{r7, pc}

0800c7ce <MQTTCleanSession>:
 800c7ce:	b480      	push	{r7}
 800c7d0:	b085      	sub	sp, #20
 800c7d2:	af00      	add	r7, sp, #0
 800c7d4:	6078      	str	r0, [r7, #4]
 800c7d6:	2300      	movs	r3, #0
 800c7d8:	60fb      	str	r3, [r7, #12]
 800c7da:	2300      	movs	r3, #0
 800c7dc:	60fb      	str	r3, [r7, #12]
 800c7de:	e008      	b.n	800c7f2 <MQTTCleanSession+0x24>
 800c7e0:	687b      	ldr	r3, [r7, #4]
 800c7e2:	68fa      	ldr	r2, [r7, #12]
 800c7e4:	3205      	adds	r2, #5
 800c7e6:	2100      	movs	r1, #0
 800c7e8:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800c7ec:	68fb      	ldr	r3, [r7, #12]
 800c7ee:	3301      	adds	r3, #1
 800c7f0:	60fb      	str	r3, [r7, #12]
 800c7f2:	68fb      	ldr	r3, [r7, #12]
 800c7f4:	2b04      	cmp	r3, #4
 800c7f6:	ddf3      	ble.n	800c7e0 <MQTTCleanSession+0x12>
 800c7f8:	bf00      	nop
 800c7fa:	bf00      	nop
 800c7fc:	3714      	adds	r7, #20
 800c7fe:	46bd      	mov	sp, r7
 800c800:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c804:	4770      	bx	lr

0800c806 <MQTTCloseSession>:
 800c806:	b580      	push	{r7, lr}
 800c808:	b082      	sub	sp, #8
 800c80a:	af00      	add	r7, sp, #0
 800c80c:	6078      	str	r0, [r7, #4]
 800c80e:	687b      	ldr	r3, [r7, #4]
 800c810:	2200      	movs	r2, #0
 800c812:	771a      	strb	r2, [r3, #28]
 800c814:	687b      	ldr	r3, [r7, #4]
 800c816:	2200      	movs	r2, #0
 800c818:	621a      	str	r2, [r3, #32]
 800c81a:	687b      	ldr	r3, [r7, #4]
 800c81c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c81e:	2b00      	cmp	r3, #0
 800c820:	d002      	beq.n	800c828 <MQTTCloseSession+0x22>
 800c822:	6878      	ldr	r0, [r7, #4]
 800c824:	f7ff ffd3 	bl	800c7ce <MQTTCleanSession>
 800c828:	bf00      	nop
 800c82a:	3708      	adds	r7, #8
 800c82c:	46bd      	mov	sp, r7
 800c82e:	bd80      	pop	{r7, pc}

0800c830 <cycle>:
 800c830:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c832:	b095      	sub	sp, #84	@ 0x54
 800c834:	af06      	add	r7, sp, #24
 800c836:	6078      	str	r0, [r7, #4]
 800c838:	6039      	str	r1, [r7, #0]
 800c83a:	2300      	movs	r3, #0
 800c83c:	637b      	str	r3, [r7, #52]	@ 0x34
 800c83e:	2300      	movs	r3, #0
 800c840:	633b      	str	r3, [r7, #48]	@ 0x30
 800c842:	6839      	ldr	r1, [r7, #0]
 800c844:	6878      	ldr	r0, [r7, #4]
 800c846:	f7ff fe1b 	bl	800c480 <readPacket>
 800c84a:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800c84c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c84e:	2b0d      	cmp	r3, #13
 800c850:	d81e      	bhi.n	800c890 <cycle+0x60>
 800c852:	a201      	add	r2, pc, #4	@ (adr r2, 800c858 <cycle+0x28>)
 800c854:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c858:	0800c9e7 	.word	0x0800c9e7
 800c85c:	0800c891 	.word	0x0800c891
 800c860:	0800c9e7 	.word	0x0800c9e7
 800c864:	0800c897 	.word	0x0800c897
 800c868:	0800c9e7 	.word	0x0800c9e7
 800c86c:	0800c963 	.word	0x0800c963
 800c870:	0800c963 	.word	0x0800c963
 800c874:	0800c9e7 	.word	0x0800c9e7
 800c878:	0800c891 	.word	0x0800c891
 800c87c:	0800c9e7 	.word	0x0800c9e7
 800c880:	0800c891 	.word	0x0800c891
 800c884:	0800c891 	.word	0x0800c891
 800c888:	0800c891 	.word	0x0800c891
 800c88c:	0800c9df 	.word	0x0800c9df
 800c890:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c892:	633b      	str	r3, [r7, #48]	@ 0x30
 800c894:	e0b9      	b.n	800ca0a <cycle+0x1da>
 800c896:	2300      	movs	r3, #0
 800c898:	61fb      	str	r3, [r7, #28]
 800c89a:	687b      	ldr	r3, [r7, #4]
 800c89c:	695b      	ldr	r3, [r3, #20]
 800c89e:	687a      	ldr	r2, [r7, #4]
 800c8a0:	68d2      	ldr	r2, [r2, #12]
 800c8a2:	4616      	mov	r6, r2
 800c8a4:	f107 0210 	add.w	r2, r7, #16
 800c8a8:	1d15      	adds	r5, r2, #4
 800c8aa:	f107 0210 	add.w	r2, r7, #16
 800c8ae:	1c54      	adds	r4, r2, #1
 800c8b0:	f107 010c 	add.w	r1, r7, #12
 800c8b4:	f107 0210 	add.w	r2, r7, #16
 800c8b8:	1c90      	adds	r0, r2, #2
 800c8ba:	9604      	str	r6, [sp, #16]
 800c8bc:	9303      	str	r3, [sp, #12]
 800c8be:	f107 0310 	add.w	r3, r7, #16
 800c8c2:	330c      	adds	r3, #12
 800c8c4:	9302      	str	r3, [sp, #8]
 800c8c6:	f107 0310 	add.w	r3, r7, #16
 800c8ca:	3308      	adds	r3, #8
 800c8cc:	9301      	str	r3, [sp, #4]
 800c8ce:	f107 0320 	add.w	r3, r7, #32
 800c8d2:	9300      	str	r3, [sp, #0]
 800c8d4:	462b      	mov	r3, r5
 800c8d6:	4622      	mov	r2, r4
 800c8d8:	f000 fd5a 	bl	800d390 <MQTTDeserialize_publish>
 800c8dc:	4603      	mov	r3, r0
 800c8de:	2b01      	cmp	r3, #1
 800c8e0:	f040 8090 	bne.w	800ca04 <cycle+0x1d4>
 800c8e4:	68fb      	ldr	r3, [r7, #12]
 800c8e6:	b2db      	uxtb	r3, r3
 800c8e8:	743b      	strb	r3, [r7, #16]
 800c8ea:	f107 0210 	add.w	r2, r7, #16
 800c8ee:	f107 0320 	add.w	r3, r7, #32
 800c8f2:	4619      	mov	r1, r3
 800c8f4:	6878      	ldr	r0, [r7, #4]
 800c8f6:	f7ff feaa 	bl	800c64e <deliverMessage>
 800c8fa:	7c3b      	ldrb	r3, [r7, #16]
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	d074      	beq.n	800c9ea <cycle+0x1ba>
 800c900:	7c3b      	ldrb	r3, [r7, #16]
 800c902:	2b01      	cmp	r3, #1
 800c904:	d10c      	bne.n	800c920 <cycle+0xf0>
 800c906:	687b      	ldr	r3, [r7, #4]
 800c908:	6918      	ldr	r0, [r3, #16]
 800c90a:	687b      	ldr	r3, [r7, #4]
 800c90c:	689b      	ldr	r3, [r3, #8]
 800c90e:	4619      	mov	r1, r3
 800c910:	8abb      	ldrh	r3, [r7, #20]
 800c912:	9300      	str	r3, [sp, #0]
 800c914:	2300      	movs	r3, #0
 800c916:	2204      	movs	r2, #4
 800c918:	f001 f893 	bl	800da42 <MQTTSerialize_ack>
 800c91c:	6378      	str	r0, [r7, #52]	@ 0x34
 800c91e:	e00e      	b.n	800c93e <cycle+0x10e>
 800c920:	7c3b      	ldrb	r3, [r7, #16]
 800c922:	2b02      	cmp	r3, #2
 800c924:	d10b      	bne.n	800c93e <cycle+0x10e>
 800c926:	687b      	ldr	r3, [r7, #4]
 800c928:	6918      	ldr	r0, [r3, #16]
 800c92a:	687b      	ldr	r3, [r7, #4]
 800c92c:	689b      	ldr	r3, [r3, #8]
 800c92e:	4619      	mov	r1, r3
 800c930:	8abb      	ldrh	r3, [r7, #20]
 800c932:	9300      	str	r3, [sp, #0]
 800c934:	2300      	movs	r3, #0
 800c936:	2205      	movs	r2, #5
 800c938:	f001 f883 	bl	800da42 <MQTTSerialize_ack>
 800c93c:	6378      	str	r0, [r7, #52]	@ 0x34
 800c93e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c940:	2b00      	cmp	r3, #0
 800c942:	dc03      	bgt.n	800c94c <cycle+0x11c>
 800c944:	f04f 33ff 	mov.w	r3, #4294967295
 800c948:	633b      	str	r3, [r7, #48]	@ 0x30
 800c94a:	e005      	b.n	800c958 <cycle+0x128>
 800c94c:	683a      	ldr	r2, [r7, #0]
 800c94e:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800c950:	6878      	ldr	r0, [r7, #4]
 800c952:	f7ff fcbd 	bl	800c2d0 <sendPacket>
 800c956:	6338      	str	r0, [r7, #48]	@ 0x30
 800c958:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c95a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c95e:	d144      	bne.n	800c9ea <cycle+0x1ba>
 800c960:	e053      	b.n	800ca0a <cycle+0x1da>
 800c962:	687b      	ldr	r3, [r7, #4]
 800c964:	695c      	ldr	r4, [r3, #20]
 800c966:	687b      	ldr	r3, [r7, #4]
 800c968:	68db      	ldr	r3, [r3, #12]
 800c96a:	f107 020a 	add.w	r2, r7, #10
 800c96e:	f107 0109 	add.w	r1, r7, #9
 800c972:	f107 0008 	add.w	r0, r7, #8
 800c976:	9300      	str	r3, [sp, #0]
 800c978:	4623      	mov	r3, r4
 800c97a:	f000 fd7b 	bl	800d474 <MQTTDeserialize_ack>
 800c97e:	4603      	mov	r3, r0
 800c980:	2b01      	cmp	r3, #1
 800c982:	d003      	beq.n	800c98c <cycle+0x15c>
 800c984:	f04f 33ff 	mov.w	r3, #4294967295
 800c988:	633b      	str	r3, [r7, #48]	@ 0x30
 800c98a:	e023      	b.n	800c9d4 <cycle+0x1a4>
 800c98c:	687b      	ldr	r3, [r7, #4]
 800c98e:	6918      	ldr	r0, [r3, #16]
 800c990:	687b      	ldr	r3, [r7, #4]
 800c992:	689b      	ldr	r3, [r3, #8]
 800c994:	4619      	mov	r1, r3
 800c996:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c998:	2b05      	cmp	r3, #5
 800c99a:	d101      	bne.n	800c9a0 <cycle+0x170>
 800c99c:	2206      	movs	r2, #6
 800c99e:	e000      	b.n	800c9a2 <cycle+0x172>
 800c9a0:	2207      	movs	r2, #7
 800c9a2:	897b      	ldrh	r3, [r7, #10]
 800c9a4:	9300      	str	r3, [sp, #0]
 800c9a6:	2300      	movs	r3, #0
 800c9a8:	f001 f84b 	bl	800da42 <MQTTSerialize_ack>
 800c9ac:	6378      	str	r0, [r7, #52]	@ 0x34
 800c9ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c9b0:	2b00      	cmp	r3, #0
 800c9b2:	dc03      	bgt.n	800c9bc <cycle+0x18c>
 800c9b4:	f04f 33ff 	mov.w	r3, #4294967295
 800c9b8:	633b      	str	r3, [r7, #48]	@ 0x30
 800c9ba:	e00b      	b.n	800c9d4 <cycle+0x1a4>
 800c9bc:	683a      	ldr	r2, [r7, #0]
 800c9be:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800c9c0:	6878      	ldr	r0, [r7, #4]
 800c9c2:	f7ff fc85 	bl	800c2d0 <sendPacket>
 800c9c6:	6338      	str	r0, [r7, #48]	@ 0x30
 800c9c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c9ca:	2b00      	cmp	r3, #0
 800c9cc:	d002      	beq.n	800c9d4 <cycle+0x1a4>
 800c9ce:	f04f 33ff 	mov.w	r3, #4294967295
 800c9d2:	633b      	str	r3, [r7, #48]	@ 0x30
 800c9d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c9d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c9da:	d108      	bne.n	800c9ee <cycle+0x1be>
 800c9dc:	e015      	b.n	800ca0a <cycle+0x1da>
 800c9de:	687b      	ldr	r3, [r7, #4]
 800c9e0:	2200      	movs	r2, #0
 800c9e2:	771a      	strb	r2, [r3, #28]
 800c9e4:	e004      	b.n	800c9f0 <cycle+0x1c0>
 800c9e6:	bf00      	nop
 800c9e8:	e002      	b.n	800c9f0 <cycle+0x1c0>
 800c9ea:	bf00      	nop
 800c9ec:	e000      	b.n	800c9f0 <cycle+0x1c0>
 800c9ee:	bf00      	nop
 800c9f0:	6878      	ldr	r0, [r7, #4]
 800c9f2:	f7ff fe94 	bl	800c71e <keepalive>
 800c9f6:	4603      	mov	r3, r0
 800c9f8:	2b00      	cmp	r3, #0
 800c9fa:	d005      	beq.n	800ca08 <cycle+0x1d8>
 800c9fc:	f04f 33ff 	mov.w	r3, #4294967295
 800ca00:	633b      	str	r3, [r7, #48]	@ 0x30
 800ca02:	e002      	b.n	800ca0a <cycle+0x1da>
 800ca04:	bf00      	nop
 800ca06:	e000      	b.n	800ca0a <cycle+0x1da>
 800ca08:	bf00      	nop
 800ca0a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d102      	bne.n	800ca16 <cycle+0x1e6>
 800ca10:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800ca12:	633b      	str	r3, [r7, #48]	@ 0x30
 800ca14:	e006      	b.n	800ca24 <cycle+0x1f4>
 800ca16:	687b      	ldr	r3, [r7, #4]
 800ca18:	6a1b      	ldr	r3, [r3, #32]
 800ca1a:	2b00      	cmp	r3, #0
 800ca1c:	d002      	beq.n	800ca24 <cycle+0x1f4>
 800ca1e:	6878      	ldr	r0, [r7, #4]
 800ca20:	f7ff fef1 	bl	800c806 <MQTTCloseSession>
 800ca24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ca26:	4618      	mov	r0, r3
 800ca28:	373c      	adds	r7, #60	@ 0x3c
 800ca2a:	46bd      	mov	sp, r7
 800ca2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca2e:	bf00      	nop

0800ca30 <MQTTYield>:
 800ca30:	b580      	push	{r7, lr}
 800ca32:	b086      	sub	sp, #24
 800ca34:	af00      	add	r7, sp, #0
 800ca36:	6078      	str	r0, [r7, #4]
 800ca38:	6039      	str	r1, [r7, #0]
 800ca3a:	2300      	movs	r3, #0
 800ca3c:	617b      	str	r3, [r7, #20]
 800ca3e:	f107 030c 	add.w	r3, r7, #12
 800ca42:	4618      	mov	r0, r3
 800ca44:	f7f5 f8e3 	bl	8001c0e <TimerInit>
 800ca48:	683a      	ldr	r2, [r7, #0]
 800ca4a:	f107 030c 	add.w	r3, r7, #12
 800ca4e:	4611      	mov	r1, r2
 800ca50:	4618      	mov	r0, r3
 800ca52:	f7f5 f880 	bl	8001b56 <TimerCountdownMS>
 800ca56:	f107 030c 	add.w	r3, r7, #12
 800ca5a:	4619      	mov	r1, r3
 800ca5c:	6878      	ldr	r0, [r7, #4]
 800ca5e:	f7ff fee7 	bl	800c830 <cycle>
 800ca62:	4603      	mov	r3, r0
 800ca64:	2b00      	cmp	r3, #0
 800ca66:	da03      	bge.n	800ca70 <MQTTYield+0x40>
 800ca68:	f04f 33ff 	mov.w	r3, #4294967295
 800ca6c:	617b      	str	r3, [r7, #20]
 800ca6e:	e007      	b.n	800ca80 <MQTTYield+0x50>
 800ca70:	f107 030c 	add.w	r3, r7, #12
 800ca74:	4618      	mov	r0, r3
 800ca76:	f7f5 f8b9 	bl	8001bec <TimerIsExpired>
 800ca7a:	4603      	mov	r3, r0
 800ca7c:	2b00      	cmp	r3, #0
 800ca7e:	d0ea      	beq.n	800ca56 <MQTTYield+0x26>
 800ca80:	697b      	ldr	r3, [r7, #20]
 800ca82:	4618      	mov	r0, r3
 800ca84:	3718      	adds	r7, #24
 800ca86:	46bd      	mov	sp, r7
 800ca88:	bd80      	pop	{r7, pc}

0800ca8a <waitfor>:
 800ca8a:	b580      	push	{r7, lr}
 800ca8c:	b086      	sub	sp, #24
 800ca8e:	af00      	add	r7, sp, #0
 800ca90:	60f8      	str	r0, [r7, #12]
 800ca92:	60b9      	str	r1, [r7, #8]
 800ca94:	607a      	str	r2, [r7, #4]
 800ca96:	f04f 33ff 	mov.w	r3, #4294967295
 800ca9a:	617b      	str	r3, [r7, #20]
 800ca9c:	6878      	ldr	r0, [r7, #4]
 800ca9e:	f7f5 f8a5 	bl	8001bec <TimerIsExpired>
 800caa2:	4603      	mov	r3, r0
 800caa4:	2b00      	cmp	r3, #0
 800caa6:	d10c      	bne.n	800cac2 <waitfor+0x38>
 800caa8:	6879      	ldr	r1, [r7, #4]
 800caaa:	68f8      	ldr	r0, [r7, #12]
 800caac:	f7ff fec0 	bl	800c830 <cycle>
 800cab0:	6178      	str	r0, [r7, #20]
 800cab2:	697a      	ldr	r2, [r7, #20]
 800cab4:	68bb      	ldr	r3, [r7, #8]
 800cab6:	429a      	cmp	r2, r3
 800cab8:	d004      	beq.n	800cac4 <waitfor+0x3a>
 800caba:	697b      	ldr	r3, [r7, #20]
 800cabc:	2b00      	cmp	r3, #0
 800cabe:	daed      	bge.n	800ca9c <waitfor+0x12>
 800cac0:	e000      	b.n	800cac4 <waitfor+0x3a>
 800cac2:	bf00      	nop
 800cac4:	697b      	ldr	r3, [r7, #20]
 800cac6:	4618      	mov	r0, r3
 800cac8:	3718      	adds	r7, #24
 800caca:	46bd      	mov	sp, r7
 800cacc:	bd80      	pop	{r7, pc}
	...

0800cad0 <MQTTConnectWithResults>:
 800cad0:	b580      	push	{r7, lr}
 800cad2:	b09e      	sub	sp, #120	@ 0x78
 800cad4:	af00      	add	r7, sp, #0
 800cad6:	60f8      	str	r0, [r7, #12]
 800cad8:	60b9      	str	r1, [r7, #8]
 800cada:	607a      	str	r2, [r7, #4]
 800cadc:	f04f 33ff 	mov.w	r3, #4294967295
 800cae0:	677b      	str	r3, [r7, #116]	@ 0x74
 800cae2:	4a43      	ldr	r2, [pc, #268]	@ (800cbf0 <MQTTConnectWithResults+0x120>)
 800cae4:	f107 0310 	add.w	r3, r7, #16
 800cae8:	4611      	mov	r1, r2
 800caea:	2258      	movs	r2, #88	@ 0x58
 800caec:	4618      	mov	r0, r3
 800caee:	f005 f8d3 	bl	8011c98 <memcpy>
 800caf2:	2300      	movs	r3, #0
 800caf4:	673b      	str	r3, [r7, #112]	@ 0x70
 800caf6:	68fb      	ldr	r3, [r7, #12]
 800caf8:	6a1b      	ldr	r3, [r3, #32]
 800cafa:	2b00      	cmp	r3, #0
 800cafc:	d164      	bne.n	800cbc8 <MQTTConnectWithResults+0xf8>
 800cafe:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800cb02:	4618      	mov	r0, r3
 800cb04:	f7f5 f883 	bl	8001c0e <TimerInit>
 800cb08:	68fb      	ldr	r3, [r7, #12]
 800cb0a:	685a      	ldr	r2, [r3, #4]
 800cb0c:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800cb10:	4611      	mov	r1, r2
 800cb12:	4618      	mov	r0, r3
 800cb14:	f7f5 f81f 	bl	8001b56 <TimerCountdownMS>
 800cb18:	68bb      	ldr	r3, [r7, #8]
 800cb1a:	2b00      	cmp	r3, #0
 800cb1c:	d102      	bne.n	800cb24 <MQTTConnectWithResults+0x54>
 800cb1e:	f107 0310 	add.w	r3, r7, #16
 800cb22:	60bb      	str	r3, [r7, #8]
 800cb24:	68bb      	ldr	r3, [r7, #8]
 800cb26:	8b1b      	ldrh	r3, [r3, #24]
 800cb28:	461a      	mov	r2, r3
 800cb2a:	68fb      	ldr	r3, [r7, #12]
 800cb2c:	619a      	str	r2, [r3, #24]
 800cb2e:	68bb      	ldr	r3, [r7, #8]
 800cb30:	7e9b      	ldrb	r3, [r3, #26]
 800cb32:	461a      	mov	r2, r3
 800cb34:	68fb      	ldr	r3, [r7, #12]
 800cb36:	625a      	str	r2, [r3, #36]	@ 0x24
 800cb38:	68fb      	ldr	r3, [r7, #12]
 800cb3a:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800cb3e:	68fb      	ldr	r3, [r7, #12]
 800cb40:	699b      	ldr	r3, [r3, #24]
 800cb42:	4619      	mov	r1, r3
 800cb44:	4610      	mov	r0, r2
 800cb46:	f7f5 f817 	bl	8001b78 <TimerCountdown>
 800cb4a:	68fb      	ldr	r3, [r7, #12]
 800cb4c:	6918      	ldr	r0, [r3, #16]
 800cb4e:	68fb      	ldr	r3, [r7, #12]
 800cb50:	689b      	ldr	r3, [r3, #8]
 800cb52:	68ba      	ldr	r2, [r7, #8]
 800cb54:	4619      	mov	r1, r3
 800cb56:	f000 fa93 	bl	800d080 <MQTTSerialize_connect>
 800cb5a:	6738      	str	r0, [r7, #112]	@ 0x70
 800cb5c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800cb5e:	2b00      	cmp	r3, #0
 800cb60:	dd34      	ble.n	800cbcc <MQTTConnectWithResults+0xfc>
 800cb62:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800cb66:	461a      	mov	r2, r3
 800cb68:	6f39      	ldr	r1, [r7, #112]	@ 0x70
 800cb6a:	68f8      	ldr	r0, [r7, #12]
 800cb6c:	f7ff fbb0 	bl	800c2d0 <sendPacket>
 800cb70:	6778      	str	r0, [r7, #116]	@ 0x74
 800cb72:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800cb74:	2b00      	cmp	r3, #0
 800cb76:	d12b      	bne.n	800cbd0 <MQTTConnectWithResults+0x100>
 800cb78:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800cb7c:	461a      	mov	r2, r3
 800cb7e:	2102      	movs	r1, #2
 800cb80:	68f8      	ldr	r0, [r7, #12]
 800cb82:	f7ff ff82 	bl	800ca8a <waitfor>
 800cb86:	4603      	mov	r3, r0
 800cb88:	2b02      	cmp	r3, #2
 800cb8a:	d119      	bne.n	800cbc0 <MQTTConnectWithResults+0xf0>
 800cb8c:	687b      	ldr	r3, [r7, #4]
 800cb8e:	2200      	movs	r2, #0
 800cb90:	701a      	strb	r2, [r3, #0]
 800cb92:	687b      	ldr	r3, [r7, #4]
 800cb94:	2200      	movs	r2, #0
 800cb96:	705a      	strb	r2, [r3, #1]
 800cb98:	687b      	ldr	r3, [r7, #4]
 800cb9a:	1c58      	adds	r0, r3, #1
 800cb9c:	6879      	ldr	r1, [r7, #4]
 800cb9e:	68fb      	ldr	r3, [r7, #12]
 800cba0:	695a      	ldr	r2, [r3, #20]
 800cba2:	68fb      	ldr	r3, [r7, #12]
 800cba4:	68db      	ldr	r3, [r3, #12]
 800cba6:	f000 fb57 	bl	800d258 <MQTTDeserialize_connack>
 800cbaa:	4603      	mov	r3, r0
 800cbac:	2b01      	cmp	r3, #1
 800cbae:	d103      	bne.n	800cbb8 <MQTTConnectWithResults+0xe8>
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	781b      	ldrb	r3, [r3, #0]
 800cbb4:	677b      	str	r3, [r7, #116]	@ 0x74
 800cbb6:	e00c      	b.n	800cbd2 <MQTTConnectWithResults+0x102>
 800cbb8:	f04f 33ff 	mov.w	r3, #4294967295
 800cbbc:	677b      	str	r3, [r7, #116]	@ 0x74
 800cbbe:	e008      	b.n	800cbd2 <MQTTConnectWithResults+0x102>
 800cbc0:	f04f 33ff 	mov.w	r3, #4294967295
 800cbc4:	677b      	str	r3, [r7, #116]	@ 0x74
 800cbc6:	e004      	b.n	800cbd2 <MQTTConnectWithResults+0x102>
 800cbc8:	bf00      	nop
 800cbca:	e002      	b.n	800cbd2 <MQTTConnectWithResults+0x102>
 800cbcc:	bf00      	nop
 800cbce:	e000      	b.n	800cbd2 <MQTTConnectWithResults+0x102>
 800cbd0:	bf00      	nop
 800cbd2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800cbd4:	2b00      	cmp	r3, #0
 800cbd6:	d105      	bne.n	800cbe4 <MQTTConnectWithResults+0x114>
 800cbd8:	68fb      	ldr	r3, [r7, #12]
 800cbda:	2201      	movs	r2, #1
 800cbdc:	621a      	str	r2, [r3, #32]
 800cbde:	68fb      	ldr	r3, [r7, #12]
 800cbe0:	2200      	movs	r2, #0
 800cbe2:	771a      	strb	r2, [r3, #28]
 800cbe4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800cbe6:	4618      	mov	r0, r3
 800cbe8:	3778      	adds	r7, #120	@ 0x78
 800cbea:	46bd      	mov	sp, r7
 800cbec:	bd80      	pop	{r7, pc}
 800cbee:	bf00      	nop
 800cbf0:	0801546c 	.word	0x0801546c

0800cbf4 <MQTTConnect>:
 800cbf4:	b580      	push	{r7, lr}
 800cbf6:	b084      	sub	sp, #16
 800cbf8:	af00      	add	r7, sp, #0
 800cbfa:	6078      	str	r0, [r7, #4]
 800cbfc:	6039      	str	r1, [r7, #0]
 800cbfe:	f107 030c 	add.w	r3, r7, #12
 800cc02:	461a      	mov	r2, r3
 800cc04:	6839      	ldr	r1, [r7, #0]
 800cc06:	6878      	ldr	r0, [r7, #4]
 800cc08:	f7ff ff62 	bl	800cad0 <MQTTConnectWithResults>
 800cc0c:	4603      	mov	r3, r0
 800cc0e:	4618      	mov	r0, r3
 800cc10:	3710      	adds	r7, #16
 800cc12:	46bd      	mov	sp, r7
 800cc14:	bd80      	pop	{r7, pc}

0800cc16 <MQTTSetMessageHandler>:
 800cc16:	b580      	push	{r7, lr}
 800cc18:	b086      	sub	sp, #24
 800cc1a:	af00      	add	r7, sp, #0
 800cc1c:	60f8      	str	r0, [r7, #12]
 800cc1e:	60b9      	str	r1, [r7, #8]
 800cc20:	607a      	str	r2, [r7, #4]
 800cc22:	f04f 33ff 	mov.w	r3, #4294967295
 800cc26:	617b      	str	r3, [r7, #20]
 800cc28:	f04f 33ff 	mov.w	r3, #4294967295
 800cc2c:	613b      	str	r3, [r7, #16]
 800cc2e:	2300      	movs	r3, #0
 800cc30:	613b      	str	r3, [r7, #16]
 800cc32:	e028      	b.n	800cc86 <MQTTSetMessageHandler+0x70>
 800cc34:	68fb      	ldr	r3, [r7, #12]
 800cc36:	693a      	ldr	r2, [r7, #16]
 800cc38:	3205      	adds	r2, #5
 800cc3a:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800cc3e:	2b00      	cmp	r3, #0
 800cc40:	d01e      	beq.n	800cc80 <MQTTSetMessageHandler+0x6a>
 800cc42:	68fb      	ldr	r3, [r7, #12]
 800cc44:	693a      	ldr	r2, [r7, #16]
 800cc46:	3205      	adds	r2, #5
 800cc48:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800cc4c:	68b9      	ldr	r1, [r7, #8]
 800cc4e:	4618      	mov	r0, r3
 800cc50:	f7f3 fabe 	bl	80001d0 <strcmp>
 800cc54:	4603      	mov	r3, r0
 800cc56:	2b00      	cmp	r3, #0
 800cc58:	d112      	bne.n	800cc80 <MQTTSetMessageHandler+0x6a>
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	2b00      	cmp	r3, #0
 800cc5e:	d10c      	bne.n	800cc7a <MQTTSetMessageHandler+0x64>
 800cc60:	68fb      	ldr	r3, [r7, #12]
 800cc62:	693a      	ldr	r2, [r7, #16]
 800cc64:	3205      	adds	r2, #5
 800cc66:	2100      	movs	r1, #0
 800cc68:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800cc6c:	68fa      	ldr	r2, [r7, #12]
 800cc6e:	693b      	ldr	r3, [r7, #16]
 800cc70:	3305      	adds	r3, #5
 800cc72:	00db      	lsls	r3, r3, #3
 800cc74:	4413      	add	r3, r2
 800cc76:	2200      	movs	r2, #0
 800cc78:	605a      	str	r2, [r3, #4]
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	617b      	str	r3, [r7, #20]
 800cc7e:	e005      	b.n	800cc8c <MQTTSetMessageHandler+0x76>
 800cc80:	693b      	ldr	r3, [r7, #16]
 800cc82:	3301      	adds	r3, #1
 800cc84:	613b      	str	r3, [r7, #16]
 800cc86:	693b      	ldr	r3, [r7, #16]
 800cc88:	2b04      	cmp	r3, #4
 800cc8a:	ddd3      	ble.n	800cc34 <MQTTSetMessageHandler+0x1e>
 800cc8c:	687b      	ldr	r3, [r7, #4]
 800cc8e:	2b00      	cmp	r3, #0
 800cc90:	d026      	beq.n	800cce0 <MQTTSetMessageHandler+0xca>
 800cc92:	697b      	ldr	r3, [r7, #20]
 800cc94:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cc98:	d112      	bne.n	800ccc0 <MQTTSetMessageHandler+0xaa>
 800cc9a:	2300      	movs	r3, #0
 800cc9c:	613b      	str	r3, [r7, #16]
 800cc9e:	e00c      	b.n	800ccba <MQTTSetMessageHandler+0xa4>
 800cca0:	68fb      	ldr	r3, [r7, #12]
 800cca2:	693a      	ldr	r2, [r7, #16]
 800cca4:	3205      	adds	r2, #5
 800cca6:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	d102      	bne.n	800ccb4 <MQTTSetMessageHandler+0x9e>
 800ccae:	2300      	movs	r3, #0
 800ccb0:	617b      	str	r3, [r7, #20]
 800ccb2:	e005      	b.n	800ccc0 <MQTTSetMessageHandler+0xaa>
 800ccb4:	693b      	ldr	r3, [r7, #16]
 800ccb6:	3301      	adds	r3, #1
 800ccb8:	613b      	str	r3, [r7, #16]
 800ccba:	693b      	ldr	r3, [r7, #16]
 800ccbc:	2b04      	cmp	r3, #4
 800ccbe:	ddef      	ble.n	800cca0 <MQTTSetMessageHandler+0x8a>
 800ccc0:	693b      	ldr	r3, [r7, #16]
 800ccc2:	2b04      	cmp	r3, #4
 800ccc4:	dc0c      	bgt.n	800cce0 <MQTTSetMessageHandler+0xca>
 800ccc6:	68fb      	ldr	r3, [r7, #12]
 800ccc8:	693a      	ldr	r2, [r7, #16]
 800ccca:	3205      	adds	r2, #5
 800cccc:	68b9      	ldr	r1, [r7, #8]
 800ccce:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800ccd2:	68fa      	ldr	r2, [r7, #12]
 800ccd4:	693b      	ldr	r3, [r7, #16]
 800ccd6:	3305      	adds	r3, #5
 800ccd8:	00db      	lsls	r3, r3, #3
 800ccda:	4413      	add	r3, r2
 800ccdc:	687a      	ldr	r2, [r7, #4]
 800ccde:	605a      	str	r2, [r3, #4]
 800cce0:	697b      	ldr	r3, [r7, #20]
 800cce2:	4618      	mov	r0, r3
 800cce4:	3718      	adds	r7, #24
 800cce6:	46bd      	mov	sp, r7
 800cce8:	bd80      	pop	{r7, pc}

0800ccea <MQTTSubscribeWithResults>:
 800ccea:	b5b0      	push	{r4, r5, r7, lr}
 800ccec:	b092      	sub	sp, #72	@ 0x48
 800ccee:	af04      	add	r7, sp, #16
 800ccf0:	60f8      	str	r0, [r7, #12]
 800ccf2:	60b9      	str	r1, [r7, #8]
 800ccf4:	603b      	str	r3, [r7, #0]
 800ccf6:	4613      	mov	r3, r2
 800ccf8:	71fb      	strb	r3, [r7, #7]
 800ccfa:	f04f 33ff 	mov.w	r3, #4294967295
 800ccfe:	637b      	str	r3, [r7, #52]	@ 0x34
 800cd00:	2300      	movs	r3, #0
 800cd02:	633b      	str	r3, [r7, #48]	@ 0x30
 800cd04:	2300      	movs	r3, #0
 800cd06:	61fb      	str	r3, [r7, #28]
 800cd08:	2300      	movs	r3, #0
 800cd0a:	623b      	str	r3, [r7, #32]
 800cd0c:	2300      	movs	r3, #0
 800cd0e:	627b      	str	r3, [r7, #36]	@ 0x24
 800cd10:	68bb      	ldr	r3, [r7, #8]
 800cd12:	61fb      	str	r3, [r7, #28]
 800cd14:	68fb      	ldr	r3, [r7, #12]
 800cd16:	6a1b      	ldr	r3, [r3, #32]
 800cd18:	2b00      	cmp	r3, #0
 800cd1a:	d063      	beq.n	800cde4 <MQTTSubscribeWithResults+0xfa>
 800cd1c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cd20:	4618      	mov	r0, r3
 800cd22:	f7f4 ff74 	bl	8001c0e <TimerInit>
 800cd26:	68fb      	ldr	r3, [r7, #12]
 800cd28:	685a      	ldr	r2, [r3, #4]
 800cd2a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cd2e:	4611      	mov	r1, r2
 800cd30:	4618      	mov	r0, r3
 800cd32:	f7f4 ff10 	bl	8001b56 <TimerCountdownMS>
 800cd36:	68fb      	ldr	r3, [r7, #12]
 800cd38:	691c      	ldr	r4, [r3, #16]
 800cd3a:	68fb      	ldr	r3, [r7, #12]
 800cd3c:	689b      	ldr	r3, [r3, #8]
 800cd3e:	461d      	mov	r5, r3
 800cd40:	68f8      	ldr	r0, [r7, #12]
 800cd42:	f7ff faac 	bl	800c29e <getNextPacketId>
 800cd46:	4603      	mov	r3, r0
 800cd48:	b29a      	uxth	r2, r3
 800cd4a:	1dfb      	adds	r3, r7, #7
 800cd4c:	9302      	str	r3, [sp, #8]
 800cd4e:	f107 031c 	add.w	r3, r7, #28
 800cd52:	9301      	str	r3, [sp, #4]
 800cd54:	2301      	movs	r3, #1
 800cd56:	9300      	str	r3, [sp, #0]
 800cd58:	4613      	mov	r3, r2
 800cd5a:	2200      	movs	r2, #0
 800cd5c:	4629      	mov	r1, r5
 800cd5e:	4620      	mov	r0, r4
 800cd60:	f000 feeb 	bl	800db3a <MQTTSerialize_subscribe>
 800cd64:	6338      	str	r0, [r7, #48]	@ 0x30
 800cd66:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cd68:	2b00      	cmp	r3, #0
 800cd6a:	dd3d      	ble.n	800cde8 <MQTTSubscribeWithResults+0xfe>
 800cd6c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cd70:	461a      	mov	r2, r3
 800cd72:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800cd74:	68f8      	ldr	r0, [r7, #12]
 800cd76:	f7ff faab 	bl	800c2d0 <sendPacket>
 800cd7a:	6378      	str	r0, [r7, #52]	@ 0x34
 800cd7c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cd7e:	2b00      	cmp	r3, #0
 800cd80:	d134      	bne.n	800cdec <MQTTSubscribeWithResults+0x102>
 800cd82:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cd86:	461a      	mov	r2, r3
 800cd88:	2109      	movs	r1, #9
 800cd8a:	68f8      	ldr	r0, [r7, #12]
 800cd8c:	f7ff fe7d 	bl	800ca8a <waitfor>
 800cd90:	4603      	mov	r3, r0
 800cd92:	2b09      	cmp	r3, #9
 800cd94:	d122      	bne.n	800cddc <MQTTSubscribeWithResults+0xf2>
 800cd96:	2300      	movs	r3, #0
 800cd98:	61bb      	str	r3, [r7, #24]
 800cd9a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800cd9c:	2200      	movs	r2, #0
 800cd9e:	701a      	strb	r2, [r3, #0]
 800cda0:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800cda2:	68fb      	ldr	r3, [r7, #12]
 800cda4:	695b      	ldr	r3, [r3, #20]
 800cda6:	68fa      	ldr	r2, [r7, #12]
 800cda8:	68d2      	ldr	r2, [r2, #12]
 800cdaa:	4614      	mov	r4, r2
 800cdac:	f107 0218 	add.w	r2, r7, #24
 800cdb0:	f107 0016 	add.w	r0, r7, #22
 800cdb4:	9401      	str	r4, [sp, #4]
 800cdb6:	9300      	str	r3, [sp, #0]
 800cdb8:	460b      	mov	r3, r1
 800cdba:	2101      	movs	r1, #1
 800cdbc:	f000 ff39 	bl	800dc32 <MQTTDeserialize_suback>
 800cdc0:	4603      	mov	r3, r0
 800cdc2:	2b01      	cmp	r3, #1
 800cdc4:	d113      	bne.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cdc6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800cdc8:	781b      	ldrb	r3, [r3, #0]
 800cdca:	2b80      	cmp	r3, #128	@ 0x80
 800cdcc:	d00f      	beq.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cdce:	683a      	ldr	r2, [r7, #0]
 800cdd0:	68b9      	ldr	r1, [r7, #8]
 800cdd2:	68f8      	ldr	r0, [r7, #12]
 800cdd4:	f7ff ff1f 	bl	800cc16 <MQTTSetMessageHandler>
 800cdd8:	6378      	str	r0, [r7, #52]	@ 0x34
 800cdda:	e008      	b.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cddc:	f04f 33ff 	mov.w	r3, #4294967295
 800cde0:	637b      	str	r3, [r7, #52]	@ 0x34
 800cde2:	e004      	b.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cde4:	bf00      	nop
 800cde6:	e002      	b.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cde8:	bf00      	nop
 800cdea:	e000      	b.n	800cdee <MQTTSubscribeWithResults+0x104>
 800cdec:	bf00      	nop
 800cdee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cdf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cdf4:	d102      	bne.n	800cdfc <MQTTSubscribeWithResults+0x112>
 800cdf6:	68f8      	ldr	r0, [r7, #12]
 800cdf8:	f7ff fd05 	bl	800c806 <MQTTCloseSession>
 800cdfc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cdfe:	4618      	mov	r0, r3
 800ce00:	3738      	adds	r7, #56	@ 0x38
 800ce02:	46bd      	mov	sp, r7
 800ce04:	bdb0      	pop	{r4, r5, r7, pc}

0800ce06 <MQTTSubscribe>:
 800ce06:	b580      	push	{r7, lr}
 800ce08:	b088      	sub	sp, #32
 800ce0a:	af02      	add	r7, sp, #8
 800ce0c:	60f8      	str	r0, [r7, #12]
 800ce0e:	60b9      	str	r1, [r7, #8]
 800ce10:	603b      	str	r3, [r7, #0]
 800ce12:	4613      	mov	r3, r2
 800ce14:	71fb      	strb	r3, [r7, #7]
 800ce16:	79fa      	ldrb	r2, [r7, #7]
 800ce18:	f107 0314 	add.w	r3, r7, #20
 800ce1c:	9300      	str	r3, [sp, #0]
 800ce1e:	683b      	ldr	r3, [r7, #0]
 800ce20:	68b9      	ldr	r1, [r7, #8]
 800ce22:	68f8      	ldr	r0, [r7, #12]
 800ce24:	f7ff ff61 	bl	800ccea <MQTTSubscribeWithResults>
 800ce28:	4603      	mov	r3, r0
 800ce2a:	4618      	mov	r0, r3
 800ce2c:	3718      	adds	r7, #24
 800ce2e:	46bd      	mov	sp, r7
 800ce30:	bd80      	pop	{r7, pc}

0800ce32 <MQTTPublish>:
 800ce32:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce34:	b097      	sub	sp, #92	@ 0x5c
 800ce36:	af08      	add	r7, sp, #32
 800ce38:	60f8      	str	r0, [r7, #12]
 800ce3a:	60b9      	str	r1, [r7, #8]
 800ce3c:	607a      	str	r2, [r7, #4]
 800ce3e:	f04f 33ff 	mov.w	r3, #4294967295
 800ce42:	637b      	str	r3, [r7, #52]	@ 0x34
 800ce44:	2300      	movs	r3, #0
 800ce46:	61fb      	str	r3, [r7, #28]
 800ce48:	2300      	movs	r3, #0
 800ce4a:	623b      	str	r3, [r7, #32]
 800ce4c:	2300      	movs	r3, #0
 800ce4e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ce50:	68bb      	ldr	r3, [r7, #8]
 800ce52:	61fb      	str	r3, [r7, #28]
 800ce54:	2300      	movs	r3, #0
 800ce56:	633b      	str	r3, [r7, #48]	@ 0x30
 800ce58:	68fb      	ldr	r3, [r7, #12]
 800ce5a:	6a1b      	ldr	r3, [r3, #32]
 800ce5c:	2b00      	cmp	r3, #0
 800ce5e:	f000 809b 	beq.w	800cf98 <MQTTPublish+0x166>
 800ce62:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800ce66:	4618      	mov	r0, r3
 800ce68:	f7f4 fed1 	bl	8001c0e <TimerInit>
 800ce6c:	68fb      	ldr	r3, [r7, #12]
 800ce6e:	685a      	ldr	r2, [r3, #4]
 800ce70:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800ce74:	4611      	mov	r1, r2
 800ce76:	4618      	mov	r0, r3
 800ce78:	f7f4 fe6d 	bl	8001b56 <TimerCountdownMS>
 800ce7c:	687b      	ldr	r3, [r7, #4]
 800ce7e:	781b      	ldrb	r3, [r3, #0]
 800ce80:	2b01      	cmp	r3, #1
 800ce82:	d003      	beq.n	800ce8c <MQTTPublish+0x5a>
 800ce84:	687b      	ldr	r3, [r7, #4]
 800ce86:	781b      	ldrb	r3, [r3, #0]
 800ce88:	2b02      	cmp	r3, #2
 800ce8a:	d106      	bne.n	800ce9a <MQTTPublish+0x68>
 800ce8c:	68f8      	ldr	r0, [r7, #12]
 800ce8e:	f7ff fa06 	bl	800c29e <getNextPacketId>
 800ce92:	4603      	mov	r3, r0
 800ce94:	b29a      	uxth	r2, r3
 800ce96:	687b      	ldr	r3, [r7, #4]
 800ce98:	809a      	strh	r2, [r3, #4]
 800ce9a:	68fb      	ldr	r3, [r7, #12]
 800ce9c:	691b      	ldr	r3, [r3, #16]
 800ce9e:	603b      	str	r3, [r7, #0]
 800cea0:	68fb      	ldr	r3, [r7, #12]
 800cea2:	689b      	ldr	r3, [r3, #8]
 800cea4:	469c      	mov	ip, r3
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	781b      	ldrb	r3, [r3, #0]
 800ceaa:	469e      	mov	lr, r3
 800ceac:	687b      	ldr	r3, [r7, #4]
 800ceae:	785d      	ldrb	r5, [r3, #1]
 800ceb0:	687b      	ldr	r3, [r7, #4]
 800ceb2:	889e      	ldrh	r6, [r3, #4]
 800ceb4:	687b      	ldr	r3, [r7, #4]
 800ceb6:	689b      	ldr	r3, [r3, #8]
 800ceb8:	687a      	ldr	r2, [r7, #4]
 800ceba:	68d2      	ldr	r2, [r2, #12]
 800cebc:	9206      	str	r2, [sp, #24]
 800cebe:	9305      	str	r3, [sp, #20]
 800cec0:	ac02      	add	r4, sp, #8
 800cec2:	f107 031c 	add.w	r3, r7, #28
 800cec6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800ceca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800cece:	9601      	str	r6, [sp, #4]
 800ced0:	9500      	str	r5, [sp, #0]
 800ced2:	4673      	mov	r3, lr
 800ced4:	2200      	movs	r2, #0
 800ced6:	4661      	mov	r1, ip
 800ced8:	6838      	ldr	r0, [r7, #0]
 800ceda:	f000 fd3c 	bl	800d956 <MQTTSerialize_publish>
 800cede:	6338      	str	r0, [r7, #48]	@ 0x30
 800cee0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800cee2:	2b00      	cmp	r3, #0
 800cee4:	dd5a      	ble.n	800cf9c <MQTTPublish+0x16a>
 800cee6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800ceea:	461a      	mov	r2, r3
 800ceec:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800ceee:	68f8      	ldr	r0, [r7, #12]
 800cef0:	f7ff f9ee 	bl	800c2d0 <sendPacket>
 800cef4:	6378      	str	r0, [r7, #52]	@ 0x34
 800cef6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cef8:	2b00      	cmp	r3, #0
 800cefa:	d151      	bne.n	800cfa0 <MQTTPublish+0x16e>
 800cefc:	687b      	ldr	r3, [r7, #4]
 800cefe:	781b      	ldrb	r3, [r3, #0]
 800cf00:	2b01      	cmp	r3, #1
 800cf02:	d122      	bne.n	800cf4a <MQTTPublish+0x118>
 800cf04:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cf08:	461a      	mov	r2, r3
 800cf0a:	2104      	movs	r1, #4
 800cf0c:	68f8      	ldr	r0, [r7, #12]
 800cf0e:	f7ff fdbc 	bl	800ca8a <waitfor>
 800cf12:	4603      	mov	r3, r0
 800cf14:	2b04      	cmp	r3, #4
 800cf16:	d114      	bne.n	800cf42 <MQTTPublish+0x110>
 800cf18:	68fb      	ldr	r3, [r7, #12]
 800cf1a:	695c      	ldr	r4, [r3, #20]
 800cf1c:	68fb      	ldr	r3, [r7, #12]
 800cf1e:	68db      	ldr	r3, [r3, #12]
 800cf20:	f107 021a 	add.w	r2, r7, #26
 800cf24:	f107 0119 	add.w	r1, r7, #25
 800cf28:	f107 0018 	add.w	r0, r7, #24
 800cf2c:	9300      	str	r3, [sp, #0]
 800cf2e:	4623      	mov	r3, r4
 800cf30:	f000 faa0 	bl	800d474 <MQTTDeserialize_ack>
 800cf34:	4603      	mov	r3, r0
 800cf36:	2b01      	cmp	r3, #1
 800cf38:	d035      	beq.n	800cfa6 <MQTTPublish+0x174>
 800cf3a:	f04f 33ff 	mov.w	r3, #4294967295
 800cf3e:	637b      	str	r3, [r7, #52]	@ 0x34
 800cf40:	e031      	b.n	800cfa6 <MQTTPublish+0x174>
 800cf42:	f04f 33ff 	mov.w	r3, #4294967295
 800cf46:	637b      	str	r3, [r7, #52]	@ 0x34
 800cf48:	e02d      	b.n	800cfa6 <MQTTPublish+0x174>
 800cf4a:	687b      	ldr	r3, [r7, #4]
 800cf4c:	781b      	ldrb	r3, [r3, #0]
 800cf4e:	2b02      	cmp	r3, #2
 800cf50:	d128      	bne.n	800cfa4 <MQTTPublish+0x172>
 800cf52:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800cf56:	461a      	mov	r2, r3
 800cf58:	2107      	movs	r1, #7
 800cf5a:	68f8      	ldr	r0, [r7, #12]
 800cf5c:	f7ff fd95 	bl	800ca8a <waitfor>
 800cf60:	4603      	mov	r3, r0
 800cf62:	2b07      	cmp	r3, #7
 800cf64:	d114      	bne.n	800cf90 <MQTTPublish+0x15e>
 800cf66:	68fb      	ldr	r3, [r7, #12]
 800cf68:	695c      	ldr	r4, [r3, #20]
 800cf6a:	68fb      	ldr	r3, [r7, #12]
 800cf6c:	68db      	ldr	r3, [r3, #12]
 800cf6e:	f107 0216 	add.w	r2, r7, #22
 800cf72:	f107 0115 	add.w	r1, r7, #21
 800cf76:	f107 0014 	add.w	r0, r7, #20
 800cf7a:	9300      	str	r3, [sp, #0]
 800cf7c:	4623      	mov	r3, r4
 800cf7e:	f000 fa79 	bl	800d474 <MQTTDeserialize_ack>
 800cf82:	4603      	mov	r3, r0
 800cf84:	2b01      	cmp	r3, #1
 800cf86:	d00e      	beq.n	800cfa6 <MQTTPublish+0x174>
 800cf88:	f04f 33ff 	mov.w	r3, #4294967295
 800cf8c:	637b      	str	r3, [r7, #52]	@ 0x34
 800cf8e:	e00a      	b.n	800cfa6 <MQTTPublish+0x174>
 800cf90:	f04f 33ff 	mov.w	r3, #4294967295
 800cf94:	637b      	str	r3, [r7, #52]	@ 0x34
 800cf96:	e006      	b.n	800cfa6 <MQTTPublish+0x174>
 800cf98:	bf00      	nop
 800cf9a:	e004      	b.n	800cfa6 <MQTTPublish+0x174>
 800cf9c:	bf00      	nop
 800cf9e:	e002      	b.n	800cfa6 <MQTTPublish+0x174>
 800cfa0:	bf00      	nop
 800cfa2:	e000      	b.n	800cfa6 <MQTTPublish+0x174>
 800cfa4:	bf00      	nop
 800cfa6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cfa8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cfac:	d102      	bne.n	800cfb4 <MQTTPublish+0x182>
 800cfae:	68f8      	ldr	r0, [r7, #12]
 800cfb0:	f7ff fc29 	bl	800c806 <MQTTCloseSession>
 800cfb4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800cfb6:	4618      	mov	r0, r3
 800cfb8:	373c      	adds	r7, #60	@ 0x3c
 800cfba:	46bd      	mov	sp, r7
 800cfbc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cfbe <MQTTSerialize_connectLength>:
 800cfbe:	b590      	push	{r4, r7, lr}
 800cfc0:	b085      	sub	sp, #20
 800cfc2:	af00      	add	r7, sp, #0
 800cfc4:	6078      	str	r0, [r7, #4]
 800cfc6:	2300      	movs	r3, #0
 800cfc8:	60fb      	str	r3, [r7, #12]
 800cfca:	687b      	ldr	r3, [r7, #4]
 800cfcc:	7a1b      	ldrb	r3, [r3, #8]
 800cfce:	2b03      	cmp	r3, #3
 800cfd0:	d102      	bne.n	800cfd8 <MQTTSerialize_connectLength+0x1a>
 800cfd2:	230c      	movs	r3, #12
 800cfd4:	60fb      	str	r3, [r7, #12]
 800cfd6:	e005      	b.n	800cfe4 <MQTTSerialize_connectLength+0x26>
 800cfd8:	687b      	ldr	r3, [r7, #4]
 800cfda:	7a1b      	ldrb	r3, [r3, #8]
 800cfdc:	2b04      	cmp	r3, #4
 800cfde:	d101      	bne.n	800cfe4 <MQTTSerialize_connectLength+0x26>
 800cfe0:	230a      	movs	r3, #10
 800cfe2:	60fb      	str	r3, [r7, #12]
 800cfe4:	687b      	ldr	r3, [r7, #4]
 800cfe6:	330c      	adds	r3, #12
 800cfe8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800cfec:	f000 fc43 	bl	800d876 <MQTTstrlen>
 800cff0:	4603      	mov	r3, r0
 800cff2:	3302      	adds	r3, #2
 800cff4:	68fa      	ldr	r2, [r7, #12]
 800cff6:	4413      	add	r3, r2
 800cff8:	60fb      	str	r3, [r7, #12]
 800cffa:	687b      	ldr	r3, [r7, #4]
 800cffc:	7edb      	ldrb	r3, [r3, #27]
 800cffe:	2b00      	cmp	r3, #0
 800d000:	d013      	beq.n	800d02a <MQTTSerialize_connectLength+0x6c>
 800d002:	687b      	ldr	r3, [r7, #4]
 800d004:	3324      	adds	r3, #36	@ 0x24
 800d006:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d00a:	f000 fc34 	bl	800d876 <MQTTstrlen>
 800d00e:	4603      	mov	r3, r0
 800d010:	1c9c      	adds	r4, r3, #2
 800d012:	687b      	ldr	r3, [r7, #4]
 800d014:	3330      	adds	r3, #48	@ 0x30
 800d016:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d01a:	f000 fc2c 	bl	800d876 <MQTTstrlen>
 800d01e:	4603      	mov	r3, r0
 800d020:	4423      	add	r3, r4
 800d022:	3302      	adds	r3, #2
 800d024:	68fa      	ldr	r2, [r7, #12]
 800d026:	4413      	add	r3, r2
 800d028:	60fb      	str	r3, [r7, #12]
 800d02a:	687b      	ldr	r3, [r7, #4]
 800d02c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d02e:	2b00      	cmp	r3, #0
 800d030:	d103      	bne.n	800d03a <MQTTSerialize_connectLength+0x7c>
 800d032:	687b      	ldr	r3, [r7, #4]
 800d034:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d036:	2b00      	cmp	r3, #0
 800d038:	d00a      	beq.n	800d050 <MQTTSerialize_connectLength+0x92>
 800d03a:	687b      	ldr	r3, [r7, #4]
 800d03c:	3340      	adds	r3, #64	@ 0x40
 800d03e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d042:	f000 fc18 	bl	800d876 <MQTTstrlen>
 800d046:	4603      	mov	r3, r0
 800d048:	3302      	adds	r3, #2
 800d04a:	68fa      	ldr	r2, [r7, #12]
 800d04c:	4413      	add	r3, r2
 800d04e:	60fb      	str	r3, [r7, #12]
 800d050:	687b      	ldr	r3, [r7, #4]
 800d052:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d054:	2b00      	cmp	r3, #0
 800d056:	d103      	bne.n	800d060 <MQTTSerialize_connectLength+0xa2>
 800d058:	687b      	ldr	r3, [r7, #4]
 800d05a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d05c:	2b00      	cmp	r3, #0
 800d05e:	d00a      	beq.n	800d076 <MQTTSerialize_connectLength+0xb8>
 800d060:	687b      	ldr	r3, [r7, #4]
 800d062:	334c      	adds	r3, #76	@ 0x4c
 800d064:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d068:	f000 fc05 	bl	800d876 <MQTTstrlen>
 800d06c:	4603      	mov	r3, r0
 800d06e:	3302      	adds	r3, #2
 800d070:	68fa      	ldr	r2, [r7, #12]
 800d072:	4413      	add	r3, r2
 800d074:	60fb      	str	r3, [r7, #12]
 800d076:	68fb      	ldr	r3, [r7, #12]
 800d078:	4618      	mov	r0, r3
 800d07a:	3714      	adds	r7, #20
 800d07c:	46bd      	mov	sp, r7
 800d07e:	bd90      	pop	{r4, r7, pc}

0800d080 <MQTTSerialize_connect>:
 800d080:	b580      	push	{r7, lr}
 800d082:	b08a      	sub	sp, #40	@ 0x28
 800d084:	af00      	add	r7, sp, #0
 800d086:	60f8      	str	r0, [r7, #12]
 800d088:	60b9      	str	r1, [r7, #8]
 800d08a:	607a      	str	r2, [r7, #4]
 800d08c:	68fb      	ldr	r3, [r7, #12]
 800d08e:	61fb      	str	r3, [r7, #28]
 800d090:	2300      	movs	r3, #0
 800d092:	61bb      	str	r3, [r7, #24]
 800d094:	2300      	movs	r3, #0
 800d096:	617b      	str	r3, [r7, #20]
 800d098:	2300      	movs	r3, #0
 800d09a:	623b      	str	r3, [r7, #32]
 800d09c:	f04f 33ff 	mov.w	r3, #4294967295
 800d0a0:	627b      	str	r3, [r7, #36]	@ 0x24
 800d0a2:	6878      	ldr	r0, [r7, #4]
 800d0a4:	f7ff ff8b 	bl	800cfbe <MQTTSerialize_connectLength>
 800d0a8:	6238      	str	r0, [r7, #32]
 800d0aa:	6a38      	ldr	r0, [r7, #32]
 800d0ac:	f000 fa98 	bl	800d5e0 <MQTTPacket_len>
 800d0b0:	4602      	mov	r2, r0
 800d0b2:	68bb      	ldr	r3, [r7, #8]
 800d0b4:	4293      	cmp	r3, r2
 800d0b6:	da03      	bge.n	800d0c0 <MQTTSerialize_connect+0x40>
 800d0b8:	f06f 0301 	mvn.w	r3, #1
 800d0bc:	627b      	str	r3, [r7, #36]	@ 0x24
 800d0be:	e0c2      	b.n	800d246 <MQTTSerialize_connect+0x1c6>
 800d0c0:	2300      	movs	r3, #0
 800d0c2:	763b      	strb	r3, [r7, #24]
 800d0c4:	7e3b      	ldrb	r3, [r7, #24]
 800d0c6:	2201      	movs	r2, #1
 800d0c8:	f362 1307 	bfi	r3, r2, #4, #4
 800d0cc:	763b      	strb	r3, [r7, #24]
 800d0ce:	7e3a      	ldrb	r2, [r7, #24]
 800d0d0:	f107 031c 	add.w	r3, r7, #28
 800d0d4:	4611      	mov	r1, r2
 800d0d6:	4618      	mov	r0, r3
 800d0d8:	f000 fb11 	bl	800d6fe <writeChar>
 800d0dc:	69fb      	ldr	r3, [r7, #28]
 800d0de:	6a39      	ldr	r1, [r7, #32]
 800d0e0:	4618      	mov	r0, r3
 800d0e2:	f000 fa12 	bl	800d50a <MQTTPacket_encode>
 800d0e6:	4602      	mov	r2, r0
 800d0e8:	69fb      	ldr	r3, [r7, #28]
 800d0ea:	4413      	add	r3, r2
 800d0ec:	61fb      	str	r3, [r7, #28]
 800d0ee:	687b      	ldr	r3, [r7, #4]
 800d0f0:	7a1b      	ldrb	r3, [r3, #8]
 800d0f2:	2b04      	cmp	r3, #4
 800d0f4:	d10c      	bne.n	800d110 <MQTTSerialize_connect+0x90>
 800d0f6:	f107 031c 	add.w	r3, r7, #28
 800d0fa:	4955      	ldr	r1, [pc, #340]	@ (800d250 <MQTTSerialize_connect+0x1d0>)
 800d0fc:	4618      	mov	r0, r3
 800d0fe:	f000 fb3c 	bl	800d77a <writeCString>
 800d102:	f107 031c 	add.w	r3, r7, #28
 800d106:	2104      	movs	r1, #4
 800d108:	4618      	mov	r0, r3
 800d10a:	f000 faf8 	bl	800d6fe <writeChar>
 800d10e:	e00b      	b.n	800d128 <MQTTSerialize_connect+0xa8>
 800d110:	f107 031c 	add.w	r3, r7, #28
 800d114:	494f      	ldr	r1, [pc, #316]	@ (800d254 <MQTTSerialize_connect+0x1d4>)
 800d116:	4618      	mov	r0, r3
 800d118:	f000 fb2f 	bl	800d77a <writeCString>
 800d11c:	f107 031c 	add.w	r3, r7, #28
 800d120:	2103      	movs	r1, #3
 800d122:	4618      	mov	r0, r3
 800d124:	f000 faeb 	bl	800d6fe <writeChar>
 800d128:	2300      	movs	r3, #0
 800d12a:	753b      	strb	r3, [r7, #20]
 800d12c:	687b      	ldr	r3, [r7, #4]
 800d12e:	7e9b      	ldrb	r3, [r3, #26]
 800d130:	f003 0301 	and.w	r3, r3, #1
 800d134:	b2da      	uxtb	r2, r3
 800d136:	7d3b      	ldrb	r3, [r7, #20]
 800d138:	f362 0341 	bfi	r3, r2, #1, #1
 800d13c:	753b      	strb	r3, [r7, #20]
 800d13e:	687b      	ldr	r3, [r7, #4]
 800d140:	7edb      	ldrb	r3, [r3, #27]
 800d142:	2b00      	cmp	r3, #0
 800d144:	bf14      	ite	ne
 800d146:	2301      	movne	r3, #1
 800d148:	2300      	moveq	r3, #0
 800d14a:	b2da      	uxtb	r2, r3
 800d14c:	7d3b      	ldrb	r3, [r7, #20]
 800d14e:	f362 0382 	bfi	r3, r2, #2, #1
 800d152:	753b      	strb	r3, [r7, #20]
 800d154:	7d3b      	ldrb	r3, [r7, #20]
 800d156:	f003 0304 	and.w	r3, r3, #4
 800d15a:	b2db      	uxtb	r3, r3
 800d15c:	2b00      	cmp	r3, #0
 800d15e:	d013      	beq.n	800d188 <MQTTSerialize_connect+0x108>
 800d160:	687b      	ldr	r3, [r7, #4]
 800d162:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d166:	f003 0303 	and.w	r3, r3, #3
 800d16a:	b2da      	uxtb	r2, r3
 800d16c:	7d3b      	ldrb	r3, [r7, #20]
 800d16e:	f362 03c4 	bfi	r3, r2, #3, #2
 800d172:	753b      	strb	r3, [r7, #20]
 800d174:	687b      	ldr	r3, [r7, #4]
 800d176:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d17a:	f003 0301 	and.w	r3, r3, #1
 800d17e:	b2da      	uxtb	r2, r3
 800d180:	7d3b      	ldrb	r3, [r7, #20]
 800d182:	f362 1345 	bfi	r3, r2, #5, #1
 800d186:	753b      	strb	r3, [r7, #20]
 800d188:	687b      	ldr	r3, [r7, #4]
 800d18a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d18c:	2b00      	cmp	r3, #0
 800d18e:	d103      	bne.n	800d198 <MQTTSerialize_connect+0x118>
 800d190:	687b      	ldr	r3, [r7, #4]
 800d192:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d194:	2b00      	cmp	r3, #0
 800d196:	d003      	beq.n	800d1a0 <MQTTSerialize_connect+0x120>
 800d198:	7d3b      	ldrb	r3, [r7, #20]
 800d19a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800d19e:	753b      	strb	r3, [r7, #20]
 800d1a0:	687b      	ldr	r3, [r7, #4]
 800d1a2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d1a4:	2b00      	cmp	r3, #0
 800d1a6:	d103      	bne.n	800d1b0 <MQTTSerialize_connect+0x130>
 800d1a8:	687b      	ldr	r3, [r7, #4]
 800d1aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d1ac:	2b00      	cmp	r3, #0
 800d1ae:	d003      	beq.n	800d1b8 <MQTTSerialize_connect+0x138>
 800d1b0:	7d3b      	ldrb	r3, [r7, #20]
 800d1b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d1b6:	753b      	strb	r3, [r7, #20]
 800d1b8:	7d3a      	ldrb	r2, [r7, #20]
 800d1ba:	f107 031c 	add.w	r3, r7, #28
 800d1be:	4611      	mov	r1, r2
 800d1c0:	4618      	mov	r0, r3
 800d1c2:	f000 fa9c 	bl	800d6fe <writeChar>
 800d1c6:	687b      	ldr	r3, [r7, #4]
 800d1c8:	8b1b      	ldrh	r3, [r3, #24]
 800d1ca:	461a      	mov	r2, r3
 800d1cc:	f107 031c 	add.w	r3, r7, #28
 800d1d0:	4611      	mov	r1, r2
 800d1d2:	4618      	mov	r0, r3
 800d1d4:	f000 faa8 	bl	800d728 <writeInt>
 800d1d8:	687b      	ldr	r3, [r7, #4]
 800d1da:	f107 001c 	add.w	r0, r7, #28
 800d1de:	330c      	adds	r3, #12
 800d1e0:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d1e2:	f000 fae9 	bl	800d7b8 <writeMQTTString>
 800d1e6:	687b      	ldr	r3, [r7, #4]
 800d1e8:	7edb      	ldrb	r3, [r3, #27]
 800d1ea:	2b00      	cmp	r3, #0
 800d1ec:	d00d      	beq.n	800d20a <MQTTSerialize_connect+0x18a>
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	f107 001c 	add.w	r0, r7, #28
 800d1f4:	3324      	adds	r3, #36	@ 0x24
 800d1f6:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d1f8:	f000 fade 	bl	800d7b8 <writeMQTTString>
 800d1fc:	687b      	ldr	r3, [r7, #4]
 800d1fe:	f107 001c 	add.w	r0, r7, #28
 800d202:	3330      	adds	r3, #48	@ 0x30
 800d204:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d206:	f000 fad7 	bl	800d7b8 <writeMQTTString>
 800d20a:	7d3b      	ldrb	r3, [r7, #20]
 800d20c:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800d210:	b2db      	uxtb	r3, r3
 800d212:	2b00      	cmp	r3, #0
 800d214:	d006      	beq.n	800d224 <MQTTSerialize_connect+0x1a4>
 800d216:	687b      	ldr	r3, [r7, #4]
 800d218:	f107 001c 	add.w	r0, r7, #28
 800d21c:	3340      	adds	r3, #64	@ 0x40
 800d21e:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d220:	f000 faca 	bl	800d7b8 <writeMQTTString>
 800d224:	7d3b      	ldrb	r3, [r7, #20]
 800d226:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800d22a:	b2db      	uxtb	r3, r3
 800d22c:	2b00      	cmp	r3, #0
 800d22e:	d006      	beq.n	800d23e <MQTTSerialize_connect+0x1be>
 800d230:	687b      	ldr	r3, [r7, #4]
 800d232:	f107 001c 	add.w	r0, r7, #28
 800d236:	334c      	adds	r3, #76	@ 0x4c
 800d238:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d23a:	f000 fabd 	bl	800d7b8 <writeMQTTString>
 800d23e:	69fa      	ldr	r2, [r7, #28]
 800d240:	68fb      	ldr	r3, [r7, #12]
 800d242:	1ad3      	subs	r3, r2, r3
 800d244:	627b      	str	r3, [r7, #36]	@ 0x24
 800d246:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d248:	4618      	mov	r0, r3
 800d24a:	3728      	adds	r7, #40	@ 0x28
 800d24c:	46bd      	mov	sp, r7
 800d24e:	bd80      	pop	{r7, pc}
 800d250:	080154c4 	.word	0x080154c4
 800d254:	080154cc 	.word	0x080154cc

0800d258 <MQTTDeserialize_connack>:
 800d258:	b580      	push	{r7, lr}
 800d25a:	b08a      	sub	sp, #40	@ 0x28
 800d25c:	af00      	add	r7, sp, #0
 800d25e:	60f8      	str	r0, [r7, #12]
 800d260:	60b9      	str	r1, [r7, #8]
 800d262:	607a      	str	r2, [r7, #4]
 800d264:	603b      	str	r3, [r7, #0]
 800d266:	2300      	movs	r3, #0
 800d268:	61fb      	str	r3, [r7, #28]
 800d26a:	687b      	ldr	r3, [r7, #4]
 800d26c:	61bb      	str	r3, [r7, #24]
 800d26e:	2300      	movs	r3, #0
 800d270:	623b      	str	r3, [r7, #32]
 800d272:	2300      	movs	r3, #0
 800d274:	627b      	str	r3, [r7, #36]	@ 0x24
 800d276:	2300      	movs	r3, #0
 800d278:	613b      	str	r3, [r7, #16]
 800d27a:	f107 0318 	add.w	r3, r7, #24
 800d27e:	4618      	mov	r0, r3
 800d280:	f000 fa29 	bl	800d6d6 <readChar>
 800d284:	4603      	mov	r3, r0
 800d286:	773b      	strb	r3, [r7, #28]
 800d288:	7f3b      	ldrb	r3, [r7, #28]
 800d28a:	f023 030f 	bic.w	r3, r3, #15
 800d28e:	b2db      	uxtb	r3, r3
 800d290:	2b20      	cmp	r3, #32
 800d292:	d12e      	bne.n	800d2f2 <MQTTDeserialize_connack+0x9a>
 800d294:	69bb      	ldr	r3, [r7, #24]
 800d296:	f107 0214 	add.w	r2, r7, #20
 800d29a:	4611      	mov	r1, r2
 800d29c:	4618      	mov	r0, r3
 800d29e:	f000 f9e9 	bl	800d674 <MQTTPacket_decodeBuf>
 800d2a2:	6278      	str	r0, [r7, #36]	@ 0x24
 800d2a4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d2a6:	69bb      	ldr	r3, [r7, #24]
 800d2a8:	4413      	add	r3, r2
 800d2aa:	61bb      	str	r3, [r7, #24]
 800d2ac:	69bb      	ldr	r3, [r7, #24]
 800d2ae:	697a      	ldr	r2, [r7, #20]
 800d2b0:	4413      	add	r3, r2
 800d2b2:	623b      	str	r3, [r7, #32]
 800d2b4:	69bb      	ldr	r3, [r7, #24]
 800d2b6:	6a3a      	ldr	r2, [r7, #32]
 800d2b8:	1ad3      	subs	r3, r2, r3
 800d2ba:	2b01      	cmp	r3, #1
 800d2bc:	dd1b      	ble.n	800d2f6 <MQTTDeserialize_connack+0x9e>
 800d2be:	f107 0318 	add.w	r3, r7, #24
 800d2c2:	4618      	mov	r0, r3
 800d2c4:	f000 fa07 	bl	800d6d6 <readChar>
 800d2c8:	4603      	mov	r3, r0
 800d2ca:	743b      	strb	r3, [r7, #16]
 800d2cc:	7c3b      	ldrb	r3, [r7, #16]
 800d2ce:	f3c3 0300 	ubfx	r3, r3, #0, #1
 800d2d2:	b2db      	uxtb	r3, r3
 800d2d4:	461a      	mov	r2, r3
 800d2d6:	68fb      	ldr	r3, [r7, #12]
 800d2d8:	701a      	strb	r2, [r3, #0]
 800d2da:	f107 0318 	add.w	r3, r7, #24
 800d2de:	4618      	mov	r0, r3
 800d2e0:	f000 f9f9 	bl	800d6d6 <readChar>
 800d2e4:	4603      	mov	r3, r0
 800d2e6:	461a      	mov	r2, r3
 800d2e8:	68bb      	ldr	r3, [r7, #8]
 800d2ea:	701a      	strb	r2, [r3, #0]
 800d2ec:	2301      	movs	r3, #1
 800d2ee:	627b      	str	r3, [r7, #36]	@ 0x24
 800d2f0:	e002      	b.n	800d2f8 <MQTTDeserialize_connack+0xa0>
 800d2f2:	bf00      	nop
 800d2f4:	e000      	b.n	800d2f8 <MQTTDeserialize_connack+0xa0>
 800d2f6:	bf00      	nop
 800d2f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d2fa:	4618      	mov	r0, r3
 800d2fc:	3728      	adds	r7, #40	@ 0x28
 800d2fe:	46bd      	mov	sp, r7
 800d300:	bd80      	pop	{r7, pc}

0800d302 <MQTTSerialize_zero>:
 800d302:	b580      	push	{r7, lr}
 800d304:	b088      	sub	sp, #32
 800d306:	af00      	add	r7, sp, #0
 800d308:	60f8      	str	r0, [r7, #12]
 800d30a:	60b9      	str	r1, [r7, #8]
 800d30c:	4613      	mov	r3, r2
 800d30e:	71fb      	strb	r3, [r7, #7]
 800d310:	2300      	movs	r3, #0
 800d312:	61bb      	str	r3, [r7, #24]
 800d314:	f04f 33ff 	mov.w	r3, #4294967295
 800d318:	61fb      	str	r3, [r7, #28]
 800d31a:	68fb      	ldr	r3, [r7, #12]
 800d31c:	617b      	str	r3, [r7, #20]
 800d31e:	68bb      	ldr	r3, [r7, #8]
 800d320:	2b01      	cmp	r3, #1
 800d322:	dc03      	bgt.n	800d32c <MQTTSerialize_zero+0x2a>
 800d324:	f06f 0301 	mvn.w	r3, #1
 800d328:	61fb      	str	r3, [r7, #28]
 800d32a:	e01d      	b.n	800d368 <MQTTSerialize_zero+0x66>
 800d32c:	2300      	movs	r3, #0
 800d32e:	763b      	strb	r3, [r7, #24]
 800d330:	79fb      	ldrb	r3, [r7, #7]
 800d332:	f003 030f 	and.w	r3, r3, #15
 800d336:	b2da      	uxtb	r2, r3
 800d338:	7e3b      	ldrb	r3, [r7, #24]
 800d33a:	f362 1307 	bfi	r3, r2, #4, #4
 800d33e:	763b      	strb	r3, [r7, #24]
 800d340:	7e3a      	ldrb	r2, [r7, #24]
 800d342:	f107 0314 	add.w	r3, r7, #20
 800d346:	4611      	mov	r1, r2
 800d348:	4618      	mov	r0, r3
 800d34a:	f000 f9d8 	bl	800d6fe <writeChar>
 800d34e:	697b      	ldr	r3, [r7, #20]
 800d350:	2100      	movs	r1, #0
 800d352:	4618      	mov	r0, r3
 800d354:	f000 f8d9 	bl	800d50a <MQTTPacket_encode>
 800d358:	4602      	mov	r2, r0
 800d35a:	697b      	ldr	r3, [r7, #20]
 800d35c:	4413      	add	r3, r2
 800d35e:	617b      	str	r3, [r7, #20]
 800d360:	697a      	ldr	r2, [r7, #20]
 800d362:	68fb      	ldr	r3, [r7, #12]
 800d364:	1ad3      	subs	r3, r2, r3
 800d366:	61fb      	str	r3, [r7, #28]
 800d368:	69fb      	ldr	r3, [r7, #28]
 800d36a:	4618      	mov	r0, r3
 800d36c:	3720      	adds	r7, #32
 800d36e:	46bd      	mov	sp, r7
 800d370:	bd80      	pop	{r7, pc}

0800d372 <MQTTSerialize_pingreq>:
 800d372:	b580      	push	{r7, lr}
 800d374:	b082      	sub	sp, #8
 800d376:	af00      	add	r7, sp, #0
 800d378:	6078      	str	r0, [r7, #4]
 800d37a:	6039      	str	r1, [r7, #0]
 800d37c:	220c      	movs	r2, #12
 800d37e:	6839      	ldr	r1, [r7, #0]
 800d380:	6878      	ldr	r0, [r7, #4]
 800d382:	f7ff ffbe 	bl	800d302 <MQTTSerialize_zero>
 800d386:	4603      	mov	r3, r0
 800d388:	4618      	mov	r0, r3
 800d38a:	3708      	adds	r7, #8
 800d38c:	46bd      	mov	sp, r7
 800d38e:	bd80      	pop	{r7, pc}

0800d390 <MQTTDeserialize_publish>:
 800d390:	b580      	push	{r7, lr}
 800d392:	b08a      	sub	sp, #40	@ 0x28
 800d394:	af00      	add	r7, sp, #0
 800d396:	60f8      	str	r0, [r7, #12]
 800d398:	60b9      	str	r1, [r7, #8]
 800d39a:	607a      	str	r2, [r7, #4]
 800d39c:	603b      	str	r3, [r7, #0]
 800d39e:	2300      	movs	r3, #0
 800d3a0:	61fb      	str	r3, [r7, #28]
 800d3a2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800d3a4:	61bb      	str	r3, [r7, #24]
 800d3a6:	2300      	movs	r3, #0
 800d3a8:	623b      	str	r3, [r7, #32]
 800d3aa:	2300      	movs	r3, #0
 800d3ac:	627b      	str	r3, [r7, #36]	@ 0x24
 800d3ae:	2300      	movs	r3, #0
 800d3b0:	617b      	str	r3, [r7, #20]
 800d3b2:	f107 0318 	add.w	r3, r7, #24
 800d3b6:	4618      	mov	r0, r3
 800d3b8:	f000 f98d 	bl	800d6d6 <readChar>
 800d3bc:	4603      	mov	r3, r0
 800d3be:	773b      	strb	r3, [r7, #28]
 800d3c0:	7f3b      	ldrb	r3, [r7, #28]
 800d3c2:	f023 030f 	bic.w	r3, r3, #15
 800d3c6:	b2db      	uxtb	r3, r3
 800d3c8:	2b30      	cmp	r3, #48	@ 0x30
 800d3ca:	d14b      	bne.n	800d464 <MQTTDeserialize_publish+0xd4>
 800d3cc:	7f3b      	ldrb	r3, [r7, #28]
 800d3ce:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d3d2:	b2db      	uxtb	r3, r3
 800d3d4:	461a      	mov	r2, r3
 800d3d6:	68fb      	ldr	r3, [r7, #12]
 800d3d8:	701a      	strb	r2, [r3, #0]
 800d3da:	7f3b      	ldrb	r3, [r7, #28]
 800d3dc:	f3c3 0341 	ubfx	r3, r3, #1, #2
 800d3e0:	b2db      	uxtb	r3, r3
 800d3e2:	461a      	mov	r2, r3
 800d3e4:	68bb      	ldr	r3, [r7, #8]
 800d3e6:	601a      	str	r2, [r3, #0]
 800d3e8:	7f3b      	ldrb	r3, [r7, #28]
 800d3ea:	f3c3 0300 	ubfx	r3, r3, #0, #1
 800d3ee:	b2db      	uxtb	r3, r3
 800d3f0:	461a      	mov	r2, r3
 800d3f2:	687b      	ldr	r3, [r7, #4]
 800d3f4:	701a      	strb	r2, [r3, #0]
 800d3f6:	69bb      	ldr	r3, [r7, #24]
 800d3f8:	f107 0214 	add.w	r2, r7, #20
 800d3fc:	4611      	mov	r1, r2
 800d3fe:	4618      	mov	r0, r3
 800d400:	f000 f938 	bl	800d674 <MQTTPacket_decodeBuf>
 800d404:	6278      	str	r0, [r7, #36]	@ 0x24
 800d406:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d408:	69bb      	ldr	r3, [r7, #24]
 800d40a:	4413      	add	r3, r2
 800d40c:	61bb      	str	r3, [r7, #24]
 800d40e:	69bb      	ldr	r3, [r7, #24]
 800d410:	697a      	ldr	r2, [r7, #20]
 800d412:	4413      	add	r3, r2
 800d414:	623b      	str	r3, [r7, #32]
 800d416:	f107 0318 	add.w	r3, r7, #24
 800d41a:	6a3a      	ldr	r2, [r7, #32]
 800d41c:	4619      	mov	r1, r3
 800d41e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800d420:	f000 f9f8 	bl	800d814 <readMQTTLenString>
 800d424:	4603      	mov	r3, r0
 800d426:	2b00      	cmp	r3, #0
 800d428:	d01e      	beq.n	800d468 <MQTTDeserialize_publish+0xd8>
 800d42a:	69bb      	ldr	r3, [r7, #24]
 800d42c:	6a3a      	ldr	r2, [r7, #32]
 800d42e:	1ad3      	subs	r3, r2, r3
 800d430:	2b00      	cmp	r3, #0
 800d432:	db19      	blt.n	800d468 <MQTTDeserialize_publish+0xd8>
 800d434:	68bb      	ldr	r3, [r7, #8]
 800d436:	681b      	ldr	r3, [r3, #0]
 800d438:	2b00      	cmp	r3, #0
 800d43a:	dd08      	ble.n	800d44e <MQTTDeserialize_publish+0xbe>
 800d43c:	f107 0318 	add.w	r3, r7, #24
 800d440:	4618      	mov	r0, r3
 800d442:	f000 f92d 	bl	800d6a0 <readInt>
 800d446:	4603      	mov	r3, r0
 800d448:	b29a      	uxth	r2, r3
 800d44a:	683b      	ldr	r3, [r7, #0]
 800d44c:	801a      	strh	r2, [r3, #0]
 800d44e:	69bb      	ldr	r3, [r7, #24]
 800d450:	6a3a      	ldr	r2, [r7, #32]
 800d452:	1ad2      	subs	r2, r2, r3
 800d454:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d456:	601a      	str	r2, [r3, #0]
 800d458:	69ba      	ldr	r2, [r7, #24]
 800d45a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d45c:	601a      	str	r2, [r3, #0]
 800d45e:	2301      	movs	r3, #1
 800d460:	627b      	str	r3, [r7, #36]	@ 0x24
 800d462:	e002      	b.n	800d46a <MQTTDeserialize_publish+0xda>
 800d464:	bf00      	nop
 800d466:	e000      	b.n	800d46a <MQTTDeserialize_publish+0xda>
 800d468:	bf00      	nop
 800d46a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d46c:	4618      	mov	r0, r3
 800d46e:	3728      	adds	r7, #40	@ 0x28
 800d470:	46bd      	mov	sp, r7
 800d472:	bd80      	pop	{r7, pc}

0800d474 <MQTTDeserialize_ack>:
 800d474:	b580      	push	{r7, lr}
 800d476:	b08a      	sub	sp, #40	@ 0x28
 800d478:	af00      	add	r7, sp, #0
 800d47a:	60f8      	str	r0, [r7, #12]
 800d47c:	60b9      	str	r1, [r7, #8]
 800d47e:	607a      	str	r2, [r7, #4]
 800d480:	603b      	str	r3, [r7, #0]
 800d482:	2300      	movs	r3, #0
 800d484:	61fb      	str	r3, [r7, #28]
 800d486:	683b      	ldr	r3, [r7, #0]
 800d488:	61bb      	str	r3, [r7, #24]
 800d48a:	2300      	movs	r3, #0
 800d48c:	623b      	str	r3, [r7, #32]
 800d48e:	2300      	movs	r3, #0
 800d490:	627b      	str	r3, [r7, #36]	@ 0x24
 800d492:	f107 0318 	add.w	r3, r7, #24
 800d496:	4618      	mov	r0, r3
 800d498:	f000 f91d 	bl	800d6d6 <readChar>
 800d49c:	4603      	mov	r3, r0
 800d49e:	773b      	strb	r3, [r7, #28]
 800d4a0:	7f3b      	ldrb	r3, [r7, #28]
 800d4a2:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d4a6:	b2db      	uxtb	r3, r3
 800d4a8:	461a      	mov	r2, r3
 800d4aa:	68bb      	ldr	r3, [r7, #8]
 800d4ac:	701a      	strb	r2, [r3, #0]
 800d4ae:	7f3b      	ldrb	r3, [r7, #28]
 800d4b0:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800d4b4:	b2db      	uxtb	r3, r3
 800d4b6:	461a      	mov	r2, r3
 800d4b8:	68fb      	ldr	r3, [r7, #12]
 800d4ba:	701a      	strb	r2, [r3, #0]
 800d4bc:	69bb      	ldr	r3, [r7, #24]
 800d4be:	f107 0214 	add.w	r2, r7, #20
 800d4c2:	4611      	mov	r1, r2
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	f000 f8d5 	bl	800d674 <MQTTPacket_decodeBuf>
 800d4ca:	6278      	str	r0, [r7, #36]	@ 0x24
 800d4cc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d4ce:	69bb      	ldr	r3, [r7, #24]
 800d4d0:	4413      	add	r3, r2
 800d4d2:	61bb      	str	r3, [r7, #24]
 800d4d4:	69bb      	ldr	r3, [r7, #24]
 800d4d6:	697a      	ldr	r2, [r7, #20]
 800d4d8:	4413      	add	r3, r2
 800d4da:	623b      	str	r3, [r7, #32]
 800d4dc:	69bb      	ldr	r3, [r7, #24]
 800d4de:	6a3a      	ldr	r2, [r7, #32]
 800d4e0:	1ad3      	subs	r3, r2, r3
 800d4e2:	2b01      	cmp	r3, #1
 800d4e4:	dd0b      	ble.n	800d4fe <MQTTDeserialize_ack+0x8a>
 800d4e6:	f107 0318 	add.w	r3, r7, #24
 800d4ea:	4618      	mov	r0, r3
 800d4ec:	f000 f8d8 	bl	800d6a0 <readInt>
 800d4f0:	4603      	mov	r3, r0
 800d4f2:	b29a      	uxth	r2, r3
 800d4f4:	687b      	ldr	r3, [r7, #4]
 800d4f6:	801a      	strh	r2, [r3, #0]
 800d4f8:	2301      	movs	r3, #1
 800d4fa:	627b      	str	r3, [r7, #36]	@ 0x24
 800d4fc:	e000      	b.n	800d500 <MQTTDeserialize_ack+0x8c>
 800d4fe:	bf00      	nop
 800d500:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d502:	4618      	mov	r0, r3
 800d504:	3728      	adds	r7, #40	@ 0x28
 800d506:	46bd      	mov	sp, r7
 800d508:	bd80      	pop	{r7, pc}

0800d50a <MQTTPacket_encode>:
 800d50a:	b480      	push	{r7}
 800d50c:	b085      	sub	sp, #20
 800d50e:	af00      	add	r7, sp, #0
 800d510:	6078      	str	r0, [r7, #4]
 800d512:	6039      	str	r1, [r7, #0]
 800d514:	2300      	movs	r3, #0
 800d516:	60fb      	str	r3, [r7, #12]
 800d518:	683b      	ldr	r3, [r7, #0]
 800d51a:	425a      	negs	r2, r3
 800d51c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800d520:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800d524:	bf58      	it	pl
 800d526:	4253      	negpl	r3, r2
 800d528:	72fb      	strb	r3, [r7, #11]
 800d52a:	683b      	ldr	r3, [r7, #0]
 800d52c:	2b00      	cmp	r3, #0
 800d52e:	da00      	bge.n	800d532 <MQTTPacket_encode+0x28>
 800d530:	337f      	adds	r3, #127	@ 0x7f
 800d532:	11db      	asrs	r3, r3, #7
 800d534:	603b      	str	r3, [r7, #0]
 800d536:	683b      	ldr	r3, [r7, #0]
 800d538:	2b00      	cmp	r3, #0
 800d53a:	dd03      	ble.n	800d544 <MQTTPacket_encode+0x3a>
 800d53c:	7afb      	ldrb	r3, [r7, #11]
 800d53e:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800d542:	72fb      	strb	r3, [r7, #11]
 800d544:	68fb      	ldr	r3, [r7, #12]
 800d546:	1c5a      	adds	r2, r3, #1
 800d548:	60fa      	str	r2, [r7, #12]
 800d54a:	461a      	mov	r2, r3
 800d54c:	687b      	ldr	r3, [r7, #4]
 800d54e:	4413      	add	r3, r2
 800d550:	7afa      	ldrb	r2, [r7, #11]
 800d552:	701a      	strb	r2, [r3, #0]
 800d554:	683b      	ldr	r3, [r7, #0]
 800d556:	2b00      	cmp	r3, #0
 800d558:	dcde      	bgt.n	800d518 <MQTTPacket_encode+0xe>
 800d55a:	68fb      	ldr	r3, [r7, #12]
 800d55c:	4618      	mov	r0, r3
 800d55e:	3714      	adds	r7, #20
 800d560:	46bd      	mov	sp, r7
 800d562:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d566:	4770      	bx	lr

0800d568 <MQTTPacket_decode>:
 800d568:	b580      	push	{r7, lr}
 800d56a:	b086      	sub	sp, #24
 800d56c:	af00      	add	r7, sp, #0
 800d56e:	6078      	str	r0, [r7, #4]
 800d570:	6039      	str	r1, [r7, #0]
 800d572:	2301      	movs	r3, #1
 800d574:	617b      	str	r3, [r7, #20]
 800d576:	2300      	movs	r3, #0
 800d578:	613b      	str	r3, [r7, #16]
 800d57a:	683b      	ldr	r3, [r7, #0]
 800d57c:	2200      	movs	r2, #0
 800d57e:	601a      	str	r2, [r3, #0]
 800d580:	f04f 33ff 	mov.w	r3, #4294967295
 800d584:	60fb      	str	r3, [r7, #12]
 800d586:	693b      	ldr	r3, [r7, #16]
 800d588:	3301      	adds	r3, #1
 800d58a:	613b      	str	r3, [r7, #16]
 800d58c:	693b      	ldr	r3, [r7, #16]
 800d58e:	2b04      	cmp	r3, #4
 800d590:	dd03      	ble.n	800d59a <MQTTPacket_decode+0x32>
 800d592:	f04f 33ff 	mov.w	r3, #4294967295
 800d596:	60fb      	str	r3, [r7, #12]
 800d598:	e01d      	b.n	800d5d6 <MQTTPacket_decode+0x6e>
 800d59a:	f107 020b 	add.w	r2, r7, #11
 800d59e:	687b      	ldr	r3, [r7, #4]
 800d5a0:	2101      	movs	r1, #1
 800d5a2:	4610      	mov	r0, r2
 800d5a4:	4798      	blx	r3
 800d5a6:	60f8      	str	r0, [r7, #12]
 800d5a8:	68fb      	ldr	r3, [r7, #12]
 800d5aa:	2b01      	cmp	r3, #1
 800d5ac:	d112      	bne.n	800d5d4 <MQTTPacket_decode+0x6c>
 800d5ae:	683b      	ldr	r3, [r7, #0]
 800d5b0:	681a      	ldr	r2, [r3, #0]
 800d5b2:	7afb      	ldrb	r3, [r7, #11]
 800d5b4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800d5b8:	6979      	ldr	r1, [r7, #20]
 800d5ba:	fb01 f303 	mul.w	r3, r1, r3
 800d5be:	441a      	add	r2, r3
 800d5c0:	683b      	ldr	r3, [r7, #0]
 800d5c2:	601a      	str	r2, [r3, #0]
 800d5c4:	697b      	ldr	r3, [r7, #20]
 800d5c6:	01db      	lsls	r3, r3, #7
 800d5c8:	617b      	str	r3, [r7, #20]
 800d5ca:	7afb      	ldrb	r3, [r7, #11]
 800d5cc:	b25b      	sxtb	r3, r3
 800d5ce:	2b00      	cmp	r3, #0
 800d5d0:	dbd6      	blt.n	800d580 <MQTTPacket_decode+0x18>
 800d5d2:	e000      	b.n	800d5d6 <MQTTPacket_decode+0x6e>
 800d5d4:	bf00      	nop
 800d5d6:	693b      	ldr	r3, [r7, #16]
 800d5d8:	4618      	mov	r0, r3
 800d5da:	3718      	adds	r7, #24
 800d5dc:	46bd      	mov	sp, r7
 800d5de:	bd80      	pop	{r7, pc}

0800d5e0 <MQTTPacket_len>:
 800d5e0:	b480      	push	{r7}
 800d5e2:	b083      	sub	sp, #12
 800d5e4:	af00      	add	r7, sp, #0
 800d5e6:	6078      	str	r0, [r7, #4]
 800d5e8:	687b      	ldr	r3, [r7, #4]
 800d5ea:	3301      	adds	r3, #1
 800d5ec:	607b      	str	r3, [r7, #4]
 800d5ee:	687b      	ldr	r3, [r7, #4]
 800d5f0:	2b7f      	cmp	r3, #127	@ 0x7f
 800d5f2:	dc03      	bgt.n	800d5fc <MQTTPacket_len+0x1c>
 800d5f4:	687b      	ldr	r3, [r7, #4]
 800d5f6:	3301      	adds	r3, #1
 800d5f8:	607b      	str	r3, [r7, #4]
 800d5fa:	e012      	b.n	800d622 <MQTTPacket_len+0x42>
 800d5fc:	687b      	ldr	r3, [r7, #4]
 800d5fe:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800d602:	da03      	bge.n	800d60c <MQTTPacket_len+0x2c>
 800d604:	687b      	ldr	r3, [r7, #4]
 800d606:	3302      	adds	r3, #2
 800d608:	607b      	str	r3, [r7, #4]
 800d60a:	e00a      	b.n	800d622 <MQTTPacket_len+0x42>
 800d60c:	687b      	ldr	r3, [r7, #4]
 800d60e:	4a08      	ldr	r2, [pc, #32]	@ (800d630 <MQTTPacket_len+0x50>)
 800d610:	4293      	cmp	r3, r2
 800d612:	dc03      	bgt.n	800d61c <MQTTPacket_len+0x3c>
 800d614:	687b      	ldr	r3, [r7, #4]
 800d616:	3303      	adds	r3, #3
 800d618:	607b      	str	r3, [r7, #4]
 800d61a:	e002      	b.n	800d622 <MQTTPacket_len+0x42>
 800d61c:	687b      	ldr	r3, [r7, #4]
 800d61e:	3304      	adds	r3, #4
 800d620:	607b      	str	r3, [r7, #4]
 800d622:	687b      	ldr	r3, [r7, #4]
 800d624:	4618      	mov	r0, r3
 800d626:	370c      	adds	r7, #12
 800d628:	46bd      	mov	sp, r7
 800d62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d62e:	4770      	bx	lr
 800d630:	001ffffe 	.word	0x001ffffe

0800d634 <bufchar>:
 800d634:	b480      	push	{r7}
 800d636:	b085      	sub	sp, #20
 800d638:	af00      	add	r7, sp, #0
 800d63a:	6078      	str	r0, [r7, #4]
 800d63c:	6039      	str	r1, [r7, #0]
 800d63e:	2300      	movs	r3, #0
 800d640:	60fb      	str	r3, [r7, #12]
 800d642:	e00a      	b.n	800d65a <bufchar+0x26>
 800d644:	4b0a      	ldr	r3, [pc, #40]	@ (800d670 <bufchar+0x3c>)
 800d646:	681b      	ldr	r3, [r3, #0]
 800d648:	1c5a      	adds	r2, r3, #1
 800d64a:	4909      	ldr	r1, [pc, #36]	@ (800d670 <bufchar+0x3c>)
 800d64c:	600a      	str	r2, [r1, #0]
 800d64e:	781a      	ldrb	r2, [r3, #0]
 800d650:	687b      	ldr	r3, [r7, #4]
 800d652:	701a      	strb	r2, [r3, #0]
 800d654:	68fb      	ldr	r3, [r7, #12]
 800d656:	3301      	adds	r3, #1
 800d658:	60fb      	str	r3, [r7, #12]
 800d65a:	68fa      	ldr	r2, [r7, #12]
 800d65c:	683b      	ldr	r3, [r7, #0]
 800d65e:	429a      	cmp	r2, r3
 800d660:	dbf0      	blt.n	800d644 <bufchar+0x10>
 800d662:	683b      	ldr	r3, [r7, #0]
 800d664:	4618      	mov	r0, r3
 800d666:	3714      	adds	r7, #20
 800d668:	46bd      	mov	sp, r7
 800d66a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d66e:	4770      	bx	lr
 800d670:	2000159c 	.word	0x2000159c

0800d674 <MQTTPacket_decodeBuf>:
 800d674:	b580      	push	{r7, lr}
 800d676:	b082      	sub	sp, #8
 800d678:	af00      	add	r7, sp, #0
 800d67a:	6078      	str	r0, [r7, #4]
 800d67c:	6039      	str	r1, [r7, #0]
 800d67e:	4a06      	ldr	r2, [pc, #24]	@ (800d698 <MQTTPacket_decodeBuf+0x24>)
 800d680:	687b      	ldr	r3, [r7, #4]
 800d682:	6013      	str	r3, [r2, #0]
 800d684:	6839      	ldr	r1, [r7, #0]
 800d686:	4805      	ldr	r0, [pc, #20]	@ (800d69c <MQTTPacket_decodeBuf+0x28>)
 800d688:	f7ff ff6e 	bl	800d568 <MQTTPacket_decode>
 800d68c:	4603      	mov	r3, r0
 800d68e:	4618      	mov	r0, r3
 800d690:	3708      	adds	r7, #8
 800d692:	46bd      	mov	sp, r7
 800d694:	bd80      	pop	{r7, pc}
 800d696:	bf00      	nop
 800d698:	2000159c 	.word	0x2000159c
 800d69c:	0800d635 	.word	0x0800d635

0800d6a0 <readInt>:
 800d6a0:	b480      	push	{r7}
 800d6a2:	b085      	sub	sp, #20
 800d6a4:	af00      	add	r7, sp, #0
 800d6a6:	6078      	str	r0, [r7, #4]
 800d6a8:	687b      	ldr	r3, [r7, #4]
 800d6aa:	681b      	ldr	r3, [r3, #0]
 800d6ac:	60fb      	str	r3, [r7, #12]
 800d6ae:	68fb      	ldr	r3, [r7, #12]
 800d6b0:	781b      	ldrb	r3, [r3, #0]
 800d6b2:	021b      	lsls	r3, r3, #8
 800d6b4:	68fa      	ldr	r2, [r7, #12]
 800d6b6:	3201      	adds	r2, #1
 800d6b8:	7812      	ldrb	r2, [r2, #0]
 800d6ba:	4413      	add	r3, r2
 800d6bc:	60bb      	str	r3, [r7, #8]
 800d6be:	687b      	ldr	r3, [r7, #4]
 800d6c0:	681b      	ldr	r3, [r3, #0]
 800d6c2:	1c9a      	adds	r2, r3, #2
 800d6c4:	687b      	ldr	r3, [r7, #4]
 800d6c6:	601a      	str	r2, [r3, #0]
 800d6c8:	68bb      	ldr	r3, [r7, #8]
 800d6ca:	4618      	mov	r0, r3
 800d6cc:	3714      	adds	r7, #20
 800d6ce:	46bd      	mov	sp, r7
 800d6d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6d4:	4770      	bx	lr

0800d6d6 <readChar>:
 800d6d6:	b480      	push	{r7}
 800d6d8:	b085      	sub	sp, #20
 800d6da:	af00      	add	r7, sp, #0
 800d6dc:	6078      	str	r0, [r7, #4]
 800d6de:	687b      	ldr	r3, [r7, #4]
 800d6e0:	681b      	ldr	r3, [r3, #0]
 800d6e2:	781b      	ldrb	r3, [r3, #0]
 800d6e4:	73fb      	strb	r3, [r7, #15]
 800d6e6:	687b      	ldr	r3, [r7, #4]
 800d6e8:	681b      	ldr	r3, [r3, #0]
 800d6ea:	1c5a      	adds	r2, r3, #1
 800d6ec:	687b      	ldr	r3, [r7, #4]
 800d6ee:	601a      	str	r2, [r3, #0]
 800d6f0:	7bfb      	ldrb	r3, [r7, #15]
 800d6f2:	4618      	mov	r0, r3
 800d6f4:	3714      	adds	r7, #20
 800d6f6:	46bd      	mov	sp, r7
 800d6f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6fc:	4770      	bx	lr

0800d6fe <writeChar>:
 800d6fe:	b480      	push	{r7}
 800d700:	b083      	sub	sp, #12
 800d702:	af00      	add	r7, sp, #0
 800d704:	6078      	str	r0, [r7, #4]
 800d706:	460b      	mov	r3, r1
 800d708:	70fb      	strb	r3, [r7, #3]
 800d70a:	687b      	ldr	r3, [r7, #4]
 800d70c:	681b      	ldr	r3, [r3, #0]
 800d70e:	78fa      	ldrb	r2, [r7, #3]
 800d710:	701a      	strb	r2, [r3, #0]
 800d712:	687b      	ldr	r3, [r7, #4]
 800d714:	681b      	ldr	r3, [r3, #0]
 800d716:	1c5a      	adds	r2, r3, #1
 800d718:	687b      	ldr	r3, [r7, #4]
 800d71a:	601a      	str	r2, [r3, #0]
 800d71c:	bf00      	nop
 800d71e:	370c      	adds	r7, #12
 800d720:	46bd      	mov	sp, r7
 800d722:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d726:	4770      	bx	lr

0800d728 <writeInt>:
 800d728:	b480      	push	{r7}
 800d72a:	b083      	sub	sp, #12
 800d72c:	af00      	add	r7, sp, #0
 800d72e:	6078      	str	r0, [r7, #4]
 800d730:	6039      	str	r1, [r7, #0]
 800d732:	683b      	ldr	r3, [r7, #0]
 800d734:	2b00      	cmp	r3, #0
 800d736:	da00      	bge.n	800d73a <writeInt+0x12>
 800d738:	33ff      	adds	r3, #255	@ 0xff
 800d73a:	121b      	asrs	r3, r3, #8
 800d73c:	461a      	mov	r2, r3
 800d73e:	687b      	ldr	r3, [r7, #4]
 800d740:	681b      	ldr	r3, [r3, #0]
 800d742:	b2d2      	uxtb	r2, r2
 800d744:	701a      	strb	r2, [r3, #0]
 800d746:	687b      	ldr	r3, [r7, #4]
 800d748:	681b      	ldr	r3, [r3, #0]
 800d74a:	1c5a      	adds	r2, r3, #1
 800d74c:	687b      	ldr	r3, [r7, #4]
 800d74e:	601a      	str	r2, [r3, #0]
 800d750:	683b      	ldr	r3, [r7, #0]
 800d752:	425a      	negs	r2, r3
 800d754:	b2db      	uxtb	r3, r3
 800d756:	b2d2      	uxtb	r2, r2
 800d758:	bf58      	it	pl
 800d75a:	4253      	negpl	r3, r2
 800d75c:	687a      	ldr	r2, [r7, #4]
 800d75e:	6812      	ldr	r2, [r2, #0]
 800d760:	b2db      	uxtb	r3, r3
 800d762:	7013      	strb	r3, [r2, #0]
 800d764:	687b      	ldr	r3, [r7, #4]
 800d766:	681b      	ldr	r3, [r3, #0]
 800d768:	1c5a      	adds	r2, r3, #1
 800d76a:	687b      	ldr	r3, [r7, #4]
 800d76c:	601a      	str	r2, [r3, #0]
 800d76e:	bf00      	nop
 800d770:	370c      	adds	r7, #12
 800d772:	46bd      	mov	sp, r7
 800d774:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d778:	4770      	bx	lr

0800d77a <writeCString>:
 800d77a:	b580      	push	{r7, lr}
 800d77c:	b084      	sub	sp, #16
 800d77e:	af00      	add	r7, sp, #0
 800d780:	6078      	str	r0, [r7, #4]
 800d782:	6039      	str	r1, [r7, #0]
 800d784:	6838      	ldr	r0, [r7, #0]
 800d786:	f7f2 fd83 	bl	8000290 <strlen>
 800d78a:	4603      	mov	r3, r0
 800d78c:	60fb      	str	r3, [r7, #12]
 800d78e:	68f9      	ldr	r1, [r7, #12]
 800d790:	6878      	ldr	r0, [r7, #4]
 800d792:	f7ff ffc9 	bl	800d728 <writeInt>
 800d796:	687b      	ldr	r3, [r7, #4]
 800d798:	681b      	ldr	r3, [r3, #0]
 800d79a:	68fa      	ldr	r2, [r7, #12]
 800d79c:	6839      	ldr	r1, [r7, #0]
 800d79e:	4618      	mov	r0, r3
 800d7a0:	f004 fa7a 	bl	8011c98 <memcpy>
 800d7a4:	687b      	ldr	r3, [r7, #4]
 800d7a6:	681a      	ldr	r2, [r3, #0]
 800d7a8:	68fb      	ldr	r3, [r7, #12]
 800d7aa:	441a      	add	r2, r3
 800d7ac:	687b      	ldr	r3, [r7, #4]
 800d7ae:	601a      	str	r2, [r3, #0]
 800d7b0:	bf00      	nop
 800d7b2:	3710      	adds	r7, #16
 800d7b4:	46bd      	mov	sp, r7
 800d7b6:	bd80      	pop	{r7, pc}

0800d7b8 <writeMQTTString>:
 800d7b8:	b580      	push	{r7, lr}
 800d7ba:	b084      	sub	sp, #16
 800d7bc:	af00      	add	r7, sp, #0
 800d7be:	60f8      	str	r0, [r7, #12]
 800d7c0:	4638      	mov	r0, r7
 800d7c2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800d7c6:	687b      	ldr	r3, [r7, #4]
 800d7c8:	2b00      	cmp	r3, #0
 800d7ca:	dd12      	ble.n	800d7f2 <writeMQTTString+0x3a>
 800d7cc:	687b      	ldr	r3, [r7, #4]
 800d7ce:	4619      	mov	r1, r3
 800d7d0:	68f8      	ldr	r0, [r7, #12]
 800d7d2:	f7ff ffa9 	bl	800d728 <writeInt>
 800d7d6:	68fb      	ldr	r3, [r7, #12]
 800d7d8:	681b      	ldr	r3, [r3, #0]
 800d7da:	68b9      	ldr	r1, [r7, #8]
 800d7dc:	687a      	ldr	r2, [r7, #4]
 800d7de:	4618      	mov	r0, r3
 800d7e0:	f004 fa5a 	bl	8011c98 <memcpy>
 800d7e4:	68fb      	ldr	r3, [r7, #12]
 800d7e6:	681b      	ldr	r3, [r3, #0]
 800d7e8:	687a      	ldr	r2, [r7, #4]
 800d7ea:	441a      	add	r2, r3
 800d7ec:	68fb      	ldr	r3, [r7, #12]
 800d7ee:	601a      	str	r2, [r3, #0]
 800d7f0:	e00c      	b.n	800d80c <writeMQTTString+0x54>
 800d7f2:	683b      	ldr	r3, [r7, #0]
 800d7f4:	2b00      	cmp	r3, #0
 800d7f6:	d005      	beq.n	800d804 <writeMQTTString+0x4c>
 800d7f8:	683b      	ldr	r3, [r7, #0]
 800d7fa:	4619      	mov	r1, r3
 800d7fc:	68f8      	ldr	r0, [r7, #12]
 800d7fe:	f7ff ffbc 	bl	800d77a <writeCString>
 800d802:	e003      	b.n	800d80c <writeMQTTString+0x54>
 800d804:	2100      	movs	r1, #0
 800d806:	68f8      	ldr	r0, [r7, #12]
 800d808:	f7ff ff8e 	bl	800d728 <writeInt>
 800d80c:	bf00      	nop
 800d80e:	3710      	adds	r7, #16
 800d810:	46bd      	mov	sp, r7
 800d812:	bd80      	pop	{r7, pc}

0800d814 <readMQTTLenString>:
 800d814:	b580      	push	{r7, lr}
 800d816:	b086      	sub	sp, #24
 800d818:	af00      	add	r7, sp, #0
 800d81a:	60f8      	str	r0, [r7, #12]
 800d81c:	60b9      	str	r1, [r7, #8]
 800d81e:	607a      	str	r2, [r7, #4]
 800d820:	2300      	movs	r3, #0
 800d822:	617b      	str	r3, [r7, #20]
 800d824:	68bb      	ldr	r3, [r7, #8]
 800d826:	681b      	ldr	r3, [r3, #0]
 800d828:	687a      	ldr	r2, [r7, #4]
 800d82a:	1ad3      	subs	r3, r2, r3
 800d82c:	2b01      	cmp	r3, #1
 800d82e:	dd1a      	ble.n	800d866 <readMQTTLenString+0x52>
 800d830:	68b8      	ldr	r0, [r7, #8]
 800d832:	f7ff ff35 	bl	800d6a0 <readInt>
 800d836:	4602      	mov	r2, r0
 800d838:	68fb      	ldr	r3, [r7, #12]
 800d83a:	605a      	str	r2, [r3, #4]
 800d83c:	68bb      	ldr	r3, [r7, #8]
 800d83e:	681b      	ldr	r3, [r3, #0]
 800d840:	68fa      	ldr	r2, [r7, #12]
 800d842:	6852      	ldr	r2, [r2, #4]
 800d844:	4413      	add	r3, r2
 800d846:	687a      	ldr	r2, [r7, #4]
 800d848:	429a      	cmp	r2, r3
 800d84a:	d30c      	bcc.n	800d866 <readMQTTLenString+0x52>
 800d84c:	68bb      	ldr	r3, [r7, #8]
 800d84e:	681a      	ldr	r2, [r3, #0]
 800d850:	68fb      	ldr	r3, [r7, #12]
 800d852:	609a      	str	r2, [r3, #8]
 800d854:	68bb      	ldr	r3, [r7, #8]
 800d856:	681b      	ldr	r3, [r3, #0]
 800d858:	68fa      	ldr	r2, [r7, #12]
 800d85a:	6852      	ldr	r2, [r2, #4]
 800d85c:	441a      	add	r2, r3
 800d85e:	68bb      	ldr	r3, [r7, #8]
 800d860:	601a      	str	r2, [r3, #0]
 800d862:	2301      	movs	r3, #1
 800d864:	617b      	str	r3, [r7, #20]
 800d866:	68fb      	ldr	r3, [r7, #12]
 800d868:	2200      	movs	r2, #0
 800d86a:	601a      	str	r2, [r3, #0]
 800d86c:	697b      	ldr	r3, [r7, #20]
 800d86e:	4618      	mov	r0, r3
 800d870:	3718      	adds	r7, #24
 800d872:	46bd      	mov	sp, r7
 800d874:	bd80      	pop	{r7, pc}

0800d876 <MQTTstrlen>:
 800d876:	b580      	push	{r7, lr}
 800d878:	b086      	sub	sp, #24
 800d87a:	af00      	add	r7, sp, #0
 800d87c:	1d3b      	adds	r3, r7, #4
 800d87e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800d882:	2300      	movs	r3, #0
 800d884:	617b      	str	r3, [r7, #20]
 800d886:	687b      	ldr	r3, [r7, #4]
 800d888:	2b00      	cmp	r3, #0
 800d88a:	d006      	beq.n	800d89a <MQTTstrlen+0x24>
 800d88c:	687b      	ldr	r3, [r7, #4]
 800d88e:	4618      	mov	r0, r3
 800d890:	f7f2 fcfe 	bl	8000290 <strlen>
 800d894:	4603      	mov	r3, r0
 800d896:	617b      	str	r3, [r7, #20]
 800d898:	e001      	b.n	800d89e <MQTTstrlen+0x28>
 800d89a:	68bb      	ldr	r3, [r7, #8]
 800d89c:	617b      	str	r3, [r7, #20]
 800d89e:	697b      	ldr	r3, [r7, #20]
 800d8a0:	4618      	mov	r0, r3
 800d8a2:	3718      	adds	r7, #24
 800d8a4:	46bd      	mov	sp, r7
 800d8a6:	bd80      	pop	{r7, pc}

0800d8a8 <MQTTPacket_equals>:
 800d8a8:	b580      	push	{r7, lr}
 800d8aa:	b086      	sub	sp, #24
 800d8ac:	af00      	add	r7, sp, #0
 800d8ae:	6078      	str	r0, [r7, #4]
 800d8b0:	6039      	str	r1, [r7, #0]
 800d8b2:	2300      	movs	r3, #0
 800d8b4:	617b      	str	r3, [r7, #20]
 800d8b6:	2300      	movs	r3, #0
 800d8b8:	60fb      	str	r3, [r7, #12]
 800d8ba:	687b      	ldr	r3, [r7, #4]
 800d8bc:	681b      	ldr	r3, [r3, #0]
 800d8be:	2b00      	cmp	r3, #0
 800d8c0:	d00a      	beq.n	800d8d8 <MQTTPacket_equals+0x30>
 800d8c2:	687b      	ldr	r3, [r7, #4]
 800d8c4:	681b      	ldr	r3, [r3, #0]
 800d8c6:	613b      	str	r3, [r7, #16]
 800d8c8:	687b      	ldr	r3, [r7, #4]
 800d8ca:	681b      	ldr	r3, [r3, #0]
 800d8cc:	4618      	mov	r0, r3
 800d8ce:	f7f2 fcdf 	bl	8000290 <strlen>
 800d8d2:	4603      	mov	r3, r0
 800d8d4:	617b      	str	r3, [r7, #20]
 800d8d6:	e005      	b.n	800d8e4 <MQTTPacket_equals+0x3c>
 800d8d8:	687b      	ldr	r3, [r7, #4]
 800d8da:	689b      	ldr	r3, [r3, #8]
 800d8dc:	613b      	str	r3, [r7, #16]
 800d8de:	687b      	ldr	r3, [r7, #4]
 800d8e0:	685b      	ldr	r3, [r3, #4]
 800d8e2:	617b      	str	r3, [r7, #20]
 800d8e4:	6838      	ldr	r0, [r7, #0]
 800d8e6:	f7f2 fcd3 	bl	8000290 <strlen>
 800d8ea:	4603      	mov	r3, r0
 800d8ec:	60fb      	str	r3, [r7, #12]
 800d8ee:	697a      	ldr	r2, [r7, #20]
 800d8f0:	68fb      	ldr	r3, [r7, #12]
 800d8f2:	429a      	cmp	r2, r3
 800d8f4:	d10a      	bne.n	800d90c <MQTTPacket_equals+0x64>
 800d8f6:	697b      	ldr	r3, [r7, #20]
 800d8f8:	461a      	mov	r2, r3
 800d8fa:	6839      	ldr	r1, [r7, #0]
 800d8fc:	6938      	ldr	r0, [r7, #16]
 800d8fe:	f004 f859 	bl	80119b4 <strncmp>
 800d902:	4603      	mov	r3, r0
 800d904:	2b00      	cmp	r3, #0
 800d906:	d101      	bne.n	800d90c <MQTTPacket_equals+0x64>
 800d908:	2301      	movs	r3, #1
 800d90a:	e000      	b.n	800d90e <MQTTPacket_equals+0x66>
 800d90c:	2300      	movs	r3, #0
 800d90e:	4618      	mov	r0, r3
 800d910:	3718      	adds	r7, #24
 800d912:	46bd      	mov	sp, r7
 800d914:	bd80      	pop	{r7, pc}

0800d916 <MQTTSerialize_publishLength>:
 800d916:	b580      	push	{r7, lr}
 800d918:	b086      	sub	sp, #24
 800d91a:	af00      	add	r7, sp, #0
 800d91c:	60f8      	str	r0, [r7, #12]
 800d91e:	4638      	mov	r0, r7
 800d920:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800d924:	2300      	movs	r3, #0
 800d926:	617b      	str	r3, [r7, #20]
 800d928:	463b      	mov	r3, r7
 800d92a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d92e:	f7ff ffa2 	bl	800d876 <MQTTstrlen>
 800d932:	4603      	mov	r3, r0
 800d934:	1c9a      	adds	r2, r3, #2
 800d936:	6a3b      	ldr	r3, [r7, #32]
 800d938:	4413      	add	r3, r2
 800d93a:	697a      	ldr	r2, [r7, #20]
 800d93c:	4413      	add	r3, r2
 800d93e:	617b      	str	r3, [r7, #20]
 800d940:	68fb      	ldr	r3, [r7, #12]
 800d942:	2b00      	cmp	r3, #0
 800d944:	dd02      	ble.n	800d94c <MQTTSerialize_publishLength+0x36>
 800d946:	697b      	ldr	r3, [r7, #20]
 800d948:	3302      	adds	r3, #2
 800d94a:	617b      	str	r3, [r7, #20]
 800d94c:	697b      	ldr	r3, [r7, #20]
 800d94e:	4618      	mov	r0, r3
 800d950:	3718      	adds	r7, #24
 800d952:	46bd      	mov	sp, r7
 800d954:	bd80      	pop	{r7, pc}

0800d956 <MQTTSerialize_publish>:
 800d956:	b580      	push	{r7, lr}
 800d958:	b08a      	sub	sp, #40	@ 0x28
 800d95a:	af02      	add	r7, sp, #8
 800d95c:	60f8      	str	r0, [r7, #12]
 800d95e:	60b9      	str	r1, [r7, #8]
 800d960:	603b      	str	r3, [r7, #0]
 800d962:	4613      	mov	r3, r2
 800d964:	71fb      	strb	r3, [r7, #7]
 800d966:	68fb      	ldr	r3, [r7, #12]
 800d968:	617b      	str	r3, [r7, #20]
 800d96a:	2300      	movs	r3, #0
 800d96c:	613b      	str	r3, [r7, #16]
 800d96e:	2300      	movs	r3, #0
 800d970:	61bb      	str	r3, [r7, #24]
 800d972:	2300      	movs	r3, #0
 800d974:	61fb      	str	r3, [r7, #28]
 800d976:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800d978:	9300      	str	r3, [sp, #0]
 800d97a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800d97e:	cb0e      	ldmia	r3, {r1, r2, r3}
 800d980:	6838      	ldr	r0, [r7, #0]
 800d982:	f7ff ffc8 	bl	800d916 <MQTTSerialize_publishLength>
 800d986:	61b8      	str	r0, [r7, #24]
 800d988:	69b8      	ldr	r0, [r7, #24]
 800d98a:	f7ff fe29 	bl	800d5e0 <MQTTPacket_len>
 800d98e:	4602      	mov	r2, r0
 800d990:	68bb      	ldr	r3, [r7, #8]
 800d992:	4293      	cmp	r3, r2
 800d994:	da03      	bge.n	800d99e <MQTTSerialize_publish+0x48>
 800d996:	f06f 0301 	mvn.w	r3, #1
 800d99a:	61fb      	str	r3, [r7, #28]
 800d99c:	e04c      	b.n	800da38 <MQTTSerialize_publish+0xe2>
 800d99e:	7c3b      	ldrb	r3, [r7, #16]
 800d9a0:	2203      	movs	r2, #3
 800d9a2:	f362 1307 	bfi	r3, r2, #4, #4
 800d9a6:	743b      	strb	r3, [r7, #16]
 800d9a8:	79fb      	ldrb	r3, [r7, #7]
 800d9aa:	f003 0301 	and.w	r3, r3, #1
 800d9ae:	b2da      	uxtb	r2, r3
 800d9b0:	7c3b      	ldrb	r3, [r7, #16]
 800d9b2:	f362 03c3 	bfi	r3, r2, #3, #1
 800d9b6:	743b      	strb	r3, [r7, #16]
 800d9b8:	683b      	ldr	r3, [r7, #0]
 800d9ba:	f003 0303 	and.w	r3, r3, #3
 800d9be:	b2da      	uxtb	r2, r3
 800d9c0:	7c3b      	ldrb	r3, [r7, #16]
 800d9c2:	f362 0342 	bfi	r3, r2, #1, #2
 800d9c6:	743b      	strb	r3, [r7, #16]
 800d9c8:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800d9cc:	f003 0301 	and.w	r3, r3, #1
 800d9d0:	b2da      	uxtb	r2, r3
 800d9d2:	7c3b      	ldrb	r3, [r7, #16]
 800d9d4:	f362 0300 	bfi	r3, r2, #0, #1
 800d9d8:	743b      	strb	r3, [r7, #16]
 800d9da:	7c3a      	ldrb	r2, [r7, #16]
 800d9dc:	f107 0314 	add.w	r3, r7, #20
 800d9e0:	4611      	mov	r1, r2
 800d9e2:	4618      	mov	r0, r3
 800d9e4:	f7ff fe8b 	bl	800d6fe <writeChar>
 800d9e8:	697b      	ldr	r3, [r7, #20]
 800d9ea:	69b9      	ldr	r1, [r7, #24]
 800d9ec:	4618      	mov	r0, r3
 800d9ee:	f7ff fd8c 	bl	800d50a <MQTTPacket_encode>
 800d9f2:	4602      	mov	r2, r0
 800d9f4:	697b      	ldr	r3, [r7, #20]
 800d9f6:	4413      	add	r3, r2
 800d9f8:	617b      	str	r3, [r7, #20]
 800d9fa:	f107 0014 	add.w	r0, r7, #20
 800d9fe:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800da02:	cb0e      	ldmia	r3, {r1, r2, r3}
 800da04:	f7ff fed8 	bl	800d7b8 <writeMQTTString>
 800da08:	683b      	ldr	r3, [r7, #0]
 800da0a:	2b00      	cmp	r3, #0
 800da0c:	dd06      	ble.n	800da1c <MQTTSerialize_publish+0xc6>
 800da0e:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 800da10:	f107 0314 	add.w	r3, r7, #20
 800da14:	4611      	mov	r1, r2
 800da16:	4618      	mov	r0, r3
 800da18:	f7ff fe86 	bl	800d728 <writeInt>
 800da1c:	697b      	ldr	r3, [r7, #20]
 800da1e:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800da20:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800da22:	4618      	mov	r0, r3
 800da24:	f004 f938 	bl	8011c98 <memcpy>
 800da28:	697a      	ldr	r2, [r7, #20]
 800da2a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800da2c:	4413      	add	r3, r2
 800da2e:	617b      	str	r3, [r7, #20]
 800da30:	697a      	ldr	r2, [r7, #20]
 800da32:	68fb      	ldr	r3, [r7, #12]
 800da34:	1ad3      	subs	r3, r2, r3
 800da36:	61fb      	str	r3, [r7, #28]
 800da38:	69fb      	ldr	r3, [r7, #28]
 800da3a:	4618      	mov	r0, r3
 800da3c:	3720      	adds	r7, #32
 800da3e:	46bd      	mov	sp, r7
 800da40:	bd80      	pop	{r7, pc}

0800da42 <MQTTSerialize_ack>:
 800da42:	b580      	push	{r7, lr}
 800da44:	b088      	sub	sp, #32
 800da46:	af00      	add	r7, sp, #0
 800da48:	60f8      	str	r0, [r7, #12]
 800da4a:	60b9      	str	r1, [r7, #8]
 800da4c:	4611      	mov	r1, r2
 800da4e:	461a      	mov	r2, r3
 800da50:	460b      	mov	r3, r1
 800da52:	71fb      	strb	r3, [r7, #7]
 800da54:	4613      	mov	r3, r2
 800da56:	71bb      	strb	r3, [r7, #6]
 800da58:	2300      	movs	r3, #0
 800da5a:	61bb      	str	r3, [r7, #24]
 800da5c:	2300      	movs	r3, #0
 800da5e:	61fb      	str	r3, [r7, #28]
 800da60:	68fb      	ldr	r3, [r7, #12]
 800da62:	617b      	str	r3, [r7, #20]
 800da64:	68bb      	ldr	r3, [r7, #8]
 800da66:	2b03      	cmp	r3, #3
 800da68:	dc03      	bgt.n	800da72 <MQTTSerialize_ack+0x30>
 800da6a:	f06f 0301 	mvn.w	r3, #1
 800da6e:	61fb      	str	r3, [r7, #28]
 800da70:	e037      	b.n	800dae2 <MQTTSerialize_ack+0xa0>
 800da72:	79fb      	ldrb	r3, [r7, #7]
 800da74:	f003 030f 	and.w	r3, r3, #15
 800da78:	b2da      	uxtb	r2, r3
 800da7a:	7e3b      	ldrb	r3, [r7, #24]
 800da7c:	f362 1307 	bfi	r3, r2, #4, #4
 800da80:	763b      	strb	r3, [r7, #24]
 800da82:	79bb      	ldrb	r3, [r7, #6]
 800da84:	f003 0301 	and.w	r3, r3, #1
 800da88:	b2da      	uxtb	r2, r3
 800da8a:	7e3b      	ldrb	r3, [r7, #24]
 800da8c:	f362 03c3 	bfi	r3, r2, #3, #1
 800da90:	763b      	strb	r3, [r7, #24]
 800da92:	79fb      	ldrb	r3, [r7, #7]
 800da94:	2b06      	cmp	r3, #6
 800da96:	bf0c      	ite	eq
 800da98:	2301      	moveq	r3, #1
 800da9a:	2300      	movne	r3, #0
 800da9c:	b2db      	uxtb	r3, r3
 800da9e:	f003 0303 	and.w	r3, r3, #3
 800daa2:	b2da      	uxtb	r2, r3
 800daa4:	7e3b      	ldrb	r3, [r7, #24]
 800daa6:	f362 0342 	bfi	r3, r2, #1, #2
 800daaa:	763b      	strb	r3, [r7, #24]
 800daac:	7e3a      	ldrb	r2, [r7, #24]
 800daae:	f107 0314 	add.w	r3, r7, #20
 800dab2:	4611      	mov	r1, r2
 800dab4:	4618      	mov	r0, r3
 800dab6:	f7ff fe22 	bl	800d6fe <writeChar>
 800daba:	697b      	ldr	r3, [r7, #20]
 800dabc:	2102      	movs	r1, #2
 800dabe:	4618      	mov	r0, r3
 800dac0:	f7ff fd23 	bl	800d50a <MQTTPacket_encode>
 800dac4:	4602      	mov	r2, r0
 800dac6:	697b      	ldr	r3, [r7, #20]
 800dac8:	4413      	add	r3, r2
 800daca:	617b      	str	r3, [r7, #20]
 800dacc:	8d3a      	ldrh	r2, [r7, #40]	@ 0x28
 800dace:	f107 0314 	add.w	r3, r7, #20
 800dad2:	4611      	mov	r1, r2
 800dad4:	4618      	mov	r0, r3
 800dad6:	f7ff fe27 	bl	800d728 <writeInt>
 800dada:	697a      	ldr	r2, [r7, #20]
 800dadc:	68fb      	ldr	r3, [r7, #12]
 800dade:	1ad3      	subs	r3, r2, r3
 800dae0:	61fb      	str	r3, [r7, #28]
 800dae2:	69fb      	ldr	r3, [r7, #28]
 800dae4:	4618      	mov	r0, r3
 800dae6:	3720      	adds	r7, #32
 800dae8:	46bd      	mov	sp, r7
 800daea:	bd80      	pop	{r7, pc}

0800daec <MQTTSerialize_subscribeLength>:
 800daec:	b580      	push	{r7, lr}
 800daee:	b084      	sub	sp, #16
 800daf0:	af00      	add	r7, sp, #0
 800daf2:	6078      	str	r0, [r7, #4]
 800daf4:	6039      	str	r1, [r7, #0]
 800daf6:	2302      	movs	r3, #2
 800daf8:	60bb      	str	r3, [r7, #8]
 800dafa:	2300      	movs	r3, #0
 800dafc:	60fb      	str	r3, [r7, #12]
 800dafe:	e013      	b.n	800db28 <MQTTSerialize_subscribeLength+0x3c>
 800db00:	68fa      	ldr	r2, [r7, #12]
 800db02:	4613      	mov	r3, r2
 800db04:	005b      	lsls	r3, r3, #1
 800db06:	4413      	add	r3, r2
 800db08:	009b      	lsls	r3, r3, #2
 800db0a:	461a      	mov	r2, r3
 800db0c:	683b      	ldr	r3, [r7, #0]
 800db0e:	4413      	add	r3, r2
 800db10:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800db14:	f7ff feaf 	bl	800d876 <MQTTstrlen>
 800db18:	4603      	mov	r3, r0
 800db1a:	3303      	adds	r3, #3
 800db1c:	68ba      	ldr	r2, [r7, #8]
 800db1e:	4413      	add	r3, r2
 800db20:	60bb      	str	r3, [r7, #8]
 800db22:	68fb      	ldr	r3, [r7, #12]
 800db24:	3301      	adds	r3, #1
 800db26:	60fb      	str	r3, [r7, #12]
 800db28:	68fa      	ldr	r2, [r7, #12]
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	429a      	cmp	r2, r3
 800db2e:	dbe7      	blt.n	800db00 <MQTTSerialize_subscribeLength+0x14>
 800db30:	68bb      	ldr	r3, [r7, #8]
 800db32:	4618      	mov	r0, r3
 800db34:	3710      	adds	r7, #16
 800db36:	46bd      	mov	sp, r7
 800db38:	bd80      	pop	{r7, pc}

0800db3a <MQTTSerialize_subscribe>:
 800db3a:	b580      	push	{r7, lr}
 800db3c:	b08a      	sub	sp, #40	@ 0x28
 800db3e:	af00      	add	r7, sp, #0
 800db40:	60f8      	str	r0, [r7, #12]
 800db42:	60b9      	str	r1, [r7, #8]
 800db44:	4611      	mov	r1, r2
 800db46:	461a      	mov	r2, r3
 800db48:	460b      	mov	r3, r1
 800db4a:	71fb      	strb	r3, [r7, #7]
 800db4c:	4613      	mov	r3, r2
 800db4e:	80bb      	strh	r3, [r7, #4]
 800db50:	68fb      	ldr	r3, [r7, #12]
 800db52:	61bb      	str	r3, [r7, #24]
 800db54:	2300      	movs	r3, #0
 800db56:	617b      	str	r3, [r7, #20]
 800db58:	2300      	movs	r3, #0
 800db5a:	61fb      	str	r3, [r7, #28]
 800db5c:	2300      	movs	r3, #0
 800db5e:	627b      	str	r3, [r7, #36]	@ 0x24
 800db60:	2300      	movs	r3, #0
 800db62:	623b      	str	r3, [r7, #32]
 800db64:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 800db66:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800db68:	f7ff ffc0 	bl	800daec <MQTTSerialize_subscribeLength>
 800db6c:	61f8      	str	r0, [r7, #28]
 800db6e:	69f8      	ldr	r0, [r7, #28]
 800db70:	f7ff fd36 	bl	800d5e0 <MQTTPacket_len>
 800db74:	4602      	mov	r2, r0
 800db76:	68bb      	ldr	r3, [r7, #8]
 800db78:	4293      	cmp	r3, r2
 800db7a:	da03      	bge.n	800db84 <MQTTSerialize_subscribe+0x4a>
 800db7c:	f06f 0301 	mvn.w	r3, #1
 800db80:	627b      	str	r3, [r7, #36]	@ 0x24
 800db82:	e051      	b.n	800dc28 <MQTTSerialize_subscribe+0xee>
 800db84:	2300      	movs	r3, #0
 800db86:	753b      	strb	r3, [r7, #20]
 800db88:	7d3b      	ldrb	r3, [r7, #20]
 800db8a:	2208      	movs	r2, #8
 800db8c:	f362 1307 	bfi	r3, r2, #4, #4
 800db90:	753b      	strb	r3, [r7, #20]
 800db92:	79fb      	ldrb	r3, [r7, #7]
 800db94:	f003 0301 	and.w	r3, r3, #1
 800db98:	b2da      	uxtb	r2, r3
 800db9a:	7d3b      	ldrb	r3, [r7, #20]
 800db9c:	f362 03c3 	bfi	r3, r2, #3, #1
 800dba0:	753b      	strb	r3, [r7, #20]
 800dba2:	7d3b      	ldrb	r3, [r7, #20]
 800dba4:	2201      	movs	r2, #1
 800dba6:	f362 0342 	bfi	r3, r2, #1, #2
 800dbaa:	753b      	strb	r3, [r7, #20]
 800dbac:	7d3a      	ldrb	r2, [r7, #20]
 800dbae:	f107 0318 	add.w	r3, r7, #24
 800dbb2:	4611      	mov	r1, r2
 800dbb4:	4618      	mov	r0, r3
 800dbb6:	f7ff fda2 	bl	800d6fe <writeChar>
 800dbba:	69bb      	ldr	r3, [r7, #24]
 800dbbc:	69f9      	ldr	r1, [r7, #28]
 800dbbe:	4618      	mov	r0, r3
 800dbc0:	f7ff fca3 	bl	800d50a <MQTTPacket_encode>
 800dbc4:	4602      	mov	r2, r0
 800dbc6:	69bb      	ldr	r3, [r7, #24]
 800dbc8:	4413      	add	r3, r2
 800dbca:	61bb      	str	r3, [r7, #24]
 800dbcc:	88ba      	ldrh	r2, [r7, #4]
 800dbce:	f107 0318 	add.w	r3, r7, #24
 800dbd2:	4611      	mov	r1, r2
 800dbd4:	4618      	mov	r0, r3
 800dbd6:	f7ff fda7 	bl	800d728 <writeInt>
 800dbda:	2300      	movs	r3, #0
 800dbdc:	623b      	str	r3, [r7, #32]
 800dbde:	e01b      	b.n	800dc18 <MQTTSerialize_subscribe+0xde>
 800dbe0:	6a3a      	ldr	r2, [r7, #32]
 800dbe2:	4613      	mov	r3, r2
 800dbe4:	005b      	lsls	r3, r3, #1
 800dbe6:	4413      	add	r3, r2
 800dbe8:	009b      	lsls	r3, r3, #2
 800dbea:	461a      	mov	r2, r3
 800dbec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800dbee:	4413      	add	r3, r2
 800dbf0:	f107 0018 	add.w	r0, r7, #24
 800dbf4:	cb0e      	ldmia	r3, {r1, r2, r3}
 800dbf6:	f7ff fddf 	bl	800d7b8 <writeMQTTString>
 800dbfa:	6a3b      	ldr	r3, [r7, #32]
 800dbfc:	009b      	lsls	r3, r3, #2
 800dbfe:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800dc00:	4413      	add	r3, r2
 800dc02:	681b      	ldr	r3, [r3, #0]
 800dc04:	b2da      	uxtb	r2, r3
 800dc06:	f107 0318 	add.w	r3, r7, #24
 800dc0a:	4611      	mov	r1, r2
 800dc0c:	4618      	mov	r0, r3
 800dc0e:	f7ff fd76 	bl	800d6fe <writeChar>
 800dc12:	6a3b      	ldr	r3, [r7, #32]
 800dc14:	3301      	adds	r3, #1
 800dc16:	623b      	str	r3, [r7, #32]
 800dc18:	6a3a      	ldr	r2, [r7, #32]
 800dc1a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dc1c:	429a      	cmp	r2, r3
 800dc1e:	dbdf      	blt.n	800dbe0 <MQTTSerialize_subscribe+0xa6>
 800dc20:	69ba      	ldr	r2, [r7, #24]
 800dc22:	68fb      	ldr	r3, [r7, #12]
 800dc24:	1ad3      	subs	r3, r2, r3
 800dc26:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dc2a:	4618      	mov	r0, r3
 800dc2c:	3728      	adds	r7, #40	@ 0x28
 800dc2e:	46bd      	mov	sp, r7
 800dc30:	bd80      	pop	{r7, pc}

0800dc32 <MQTTDeserialize_suback>:
 800dc32:	b580      	push	{r7, lr}
 800dc34:	b08a      	sub	sp, #40	@ 0x28
 800dc36:	af00      	add	r7, sp, #0
 800dc38:	60f8      	str	r0, [r7, #12]
 800dc3a:	60b9      	str	r1, [r7, #8]
 800dc3c:	607a      	str	r2, [r7, #4]
 800dc3e:	603b      	str	r3, [r7, #0]
 800dc40:	2300      	movs	r3, #0
 800dc42:	61fb      	str	r3, [r7, #28]
 800dc44:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800dc46:	61bb      	str	r3, [r7, #24]
 800dc48:	2300      	movs	r3, #0
 800dc4a:	623b      	str	r3, [r7, #32]
 800dc4c:	2300      	movs	r3, #0
 800dc4e:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc50:	f107 0318 	add.w	r3, r7, #24
 800dc54:	4618      	mov	r0, r3
 800dc56:	f7ff fd3e 	bl	800d6d6 <readChar>
 800dc5a:	4603      	mov	r3, r0
 800dc5c:	773b      	strb	r3, [r7, #28]
 800dc5e:	7f3b      	ldrb	r3, [r7, #28]
 800dc60:	f023 030f 	bic.w	r3, r3, #15
 800dc64:	b2db      	uxtb	r3, r3
 800dc66:	2b90      	cmp	r3, #144	@ 0x90
 800dc68:	d142      	bne.n	800dcf0 <MQTTDeserialize_suback+0xbe>
 800dc6a:	69bb      	ldr	r3, [r7, #24]
 800dc6c:	f107 0214 	add.w	r2, r7, #20
 800dc70:	4611      	mov	r1, r2
 800dc72:	4618      	mov	r0, r3
 800dc74:	f7ff fcfe 	bl	800d674 <MQTTPacket_decodeBuf>
 800dc78:	6278      	str	r0, [r7, #36]	@ 0x24
 800dc7a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800dc7c:	69bb      	ldr	r3, [r7, #24]
 800dc7e:	4413      	add	r3, r2
 800dc80:	61bb      	str	r3, [r7, #24]
 800dc82:	69bb      	ldr	r3, [r7, #24]
 800dc84:	697a      	ldr	r2, [r7, #20]
 800dc86:	4413      	add	r3, r2
 800dc88:	623b      	str	r3, [r7, #32]
 800dc8a:	69bb      	ldr	r3, [r7, #24]
 800dc8c:	6a3a      	ldr	r2, [r7, #32]
 800dc8e:	1ad3      	subs	r3, r2, r3
 800dc90:	2b01      	cmp	r3, #1
 800dc92:	dd2f      	ble.n	800dcf4 <MQTTDeserialize_suback+0xc2>
 800dc94:	f107 0318 	add.w	r3, r7, #24
 800dc98:	4618      	mov	r0, r3
 800dc9a:	f7ff fd01 	bl	800d6a0 <readInt>
 800dc9e:	4603      	mov	r3, r0
 800dca0:	b29a      	uxth	r2, r3
 800dca2:	68fb      	ldr	r3, [r7, #12]
 800dca4:	801a      	strh	r2, [r3, #0]
 800dca6:	687b      	ldr	r3, [r7, #4]
 800dca8:	2200      	movs	r2, #0
 800dcaa:	601a      	str	r2, [r3, #0]
 800dcac:	e019      	b.n	800dce2 <MQTTDeserialize_suback+0xb0>
 800dcae:	687b      	ldr	r3, [r7, #4]
 800dcb0:	681b      	ldr	r3, [r3, #0]
 800dcb2:	68ba      	ldr	r2, [r7, #8]
 800dcb4:	429a      	cmp	r2, r3
 800dcb6:	da03      	bge.n	800dcc0 <MQTTDeserialize_suback+0x8e>
 800dcb8:	f04f 33ff 	mov.w	r3, #4294967295
 800dcbc:	627b      	str	r3, [r7, #36]	@ 0x24
 800dcbe:	e01a      	b.n	800dcf6 <MQTTDeserialize_suback+0xc4>
 800dcc0:	f107 0318 	add.w	r3, r7, #24
 800dcc4:	4618      	mov	r0, r3
 800dcc6:	f7ff fd06 	bl	800d6d6 <readChar>
 800dcca:	4603      	mov	r3, r0
 800dccc:	4618      	mov	r0, r3
 800dcce:	687b      	ldr	r3, [r7, #4]
 800dcd0:	681b      	ldr	r3, [r3, #0]
 800dcd2:	1c59      	adds	r1, r3, #1
 800dcd4:	687a      	ldr	r2, [r7, #4]
 800dcd6:	6011      	str	r1, [r2, #0]
 800dcd8:	009b      	lsls	r3, r3, #2
 800dcda:	683a      	ldr	r2, [r7, #0]
 800dcdc:	4413      	add	r3, r2
 800dcde:	4602      	mov	r2, r0
 800dce0:	601a      	str	r2, [r3, #0]
 800dce2:	69bb      	ldr	r3, [r7, #24]
 800dce4:	6a3a      	ldr	r2, [r7, #32]
 800dce6:	429a      	cmp	r2, r3
 800dce8:	d8e1      	bhi.n	800dcae <MQTTDeserialize_suback+0x7c>
 800dcea:	2301      	movs	r3, #1
 800dcec:	627b      	str	r3, [r7, #36]	@ 0x24
 800dcee:	e002      	b.n	800dcf6 <MQTTDeserialize_suback+0xc4>
 800dcf0:	bf00      	nop
 800dcf2:	e000      	b.n	800dcf6 <MQTTDeserialize_suback+0xc4>
 800dcf4:	bf00      	nop
 800dcf6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcf8:	4618      	mov	r0, r3
 800dcfa:	3728      	adds	r7, #40	@ 0x28
 800dcfc:	46bd      	mov	sp, r7
 800dcfe:	bd80      	pop	{r7, pc}

0800dd00 <vListInitialise>:
 800dd00:	b480      	push	{r7}
 800dd02:	b083      	sub	sp, #12
 800dd04:	af00      	add	r7, sp, #0
 800dd06:	6078      	str	r0, [r7, #4]
 800dd08:	687b      	ldr	r3, [r7, #4]
 800dd0a:	f103 0208 	add.w	r2, r3, #8
 800dd0e:	687b      	ldr	r3, [r7, #4]
 800dd10:	605a      	str	r2, [r3, #4]
 800dd12:	687b      	ldr	r3, [r7, #4]
 800dd14:	f04f 32ff 	mov.w	r2, #4294967295
 800dd18:	609a      	str	r2, [r3, #8]
 800dd1a:	687b      	ldr	r3, [r7, #4]
 800dd1c:	f103 0208 	add.w	r2, r3, #8
 800dd20:	687b      	ldr	r3, [r7, #4]
 800dd22:	60da      	str	r2, [r3, #12]
 800dd24:	687b      	ldr	r3, [r7, #4]
 800dd26:	f103 0208 	add.w	r2, r3, #8
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	611a      	str	r2, [r3, #16]
 800dd2e:	687b      	ldr	r3, [r7, #4]
 800dd30:	2200      	movs	r2, #0
 800dd32:	601a      	str	r2, [r3, #0]
 800dd34:	bf00      	nop
 800dd36:	370c      	adds	r7, #12
 800dd38:	46bd      	mov	sp, r7
 800dd3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd3e:	4770      	bx	lr

0800dd40 <vListInitialiseItem>:
 800dd40:	b480      	push	{r7}
 800dd42:	b083      	sub	sp, #12
 800dd44:	af00      	add	r7, sp, #0
 800dd46:	6078      	str	r0, [r7, #4]
 800dd48:	687b      	ldr	r3, [r7, #4]
 800dd4a:	2200      	movs	r2, #0
 800dd4c:	611a      	str	r2, [r3, #16]
 800dd4e:	bf00      	nop
 800dd50:	370c      	adds	r7, #12
 800dd52:	46bd      	mov	sp, r7
 800dd54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd58:	4770      	bx	lr

0800dd5a <vListInsertEnd>:
 800dd5a:	b480      	push	{r7}
 800dd5c:	b085      	sub	sp, #20
 800dd5e:	af00      	add	r7, sp, #0
 800dd60:	6078      	str	r0, [r7, #4]
 800dd62:	6039      	str	r1, [r7, #0]
 800dd64:	687b      	ldr	r3, [r7, #4]
 800dd66:	685b      	ldr	r3, [r3, #4]
 800dd68:	60fb      	str	r3, [r7, #12]
 800dd6a:	683b      	ldr	r3, [r7, #0]
 800dd6c:	68fa      	ldr	r2, [r7, #12]
 800dd6e:	605a      	str	r2, [r3, #4]
 800dd70:	68fb      	ldr	r3, [r7, #12]
 800dd72:	689a      	ldr	r2, [r3, #8]
 800dd74:	683b      	ldr	r3, [r7, #0]
 800dd76:	609a      	str	r2, [r3, #8]
 800dd78:	68fb      	ldr	r3, [r7, #12]
 800dd7a:	689b      	ldr	r3, [r3, #8]
 800dd7c:	683a      	ldr	r2, [r7, #0]
 800dd7e:	605a      	str	r2, [r3, #4]
 800dd80:	68fb      	ldr	r3, [r7, #12]
 800dd82:	683a      	ldr	r2, [r7, #0]
 800dd84:	609a      	str	r2, [r3, #8]
 800dd86:	683b      	ldr	r3, [r7, #0]
 800dd88:	687a      	ldr	r2, [r7, #4]
 800dd8a:	611a      	str	r2, [r3, #16]
 800dd8c:	687b      	ldr	r3, [r7, #4]
 800dd8e:	681b      	ldr	r3, [r3, #0]
 800dd90:	1c5a      	adds	r2, r3, #1
 800dd92:	687b      	ldr	r3, [r7, #4]
 800dd94:	601a      	str	r2, [r3, #0]
 800dd96:	bf00      	nop
 800dd98:	3714      	adds	r7, #20
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dda0:	4770      	bx	lr

0800dda2 <vListInsert>:
 800dda2:	b480      	push	{r7}
 800dda4:	b085      	sub	sp, #20
 800dda6:	af00      	add	r7, sp, #0
 800dda8:	6078      	str	r0, [r7, #4]
 800ddaa:	6039      	str	r1, [r7, #0]
 800ddac:	683b      	ldr	r3, [r7, #0]
 800ddae:	681b      	ldr	r3, [r3, #0]
 800ddb0:	60bb      	str	r3, [r7, #8]
 800ddb2:	68bb      	ldr	r3, [r7, #8]
 800ddb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ddb8:	d103      	bne.n	800ddc2 <vListInsert+0x20>
 800ddba:	687b      	ldr	r3, [r7, #4]
 800ddbc:	691b      	ldr	r3, [r3, #16]
 800ddbe:	60fb      	str	r3, [r7, #12]
 800ddc0:	e00c      	b.n	800dddc <vListInsert+0x3a>
 800ddc2:	687b      	ldr	r3, [r7, #4]
 800ddc4:	3308      	adds	r3, #8
 800ddc6:	60fb      	str	r3, [r7, #12]
 800ddc8:	e002      	b.n	800ddd0 <vListInsert+0x2e>
 800ddca:	68fb      	ldr	r3, [r7, #12]
 800ddcc:	685b      	ldr	r3, [r3, #4]
 800ddce:	60fb      	str	r3, [r7, #12]
 800ddd0:	68fb      	ldr	r3, [r7, #12]
 800ddd2:	685b      	ldr	r3, [r3, #4]
 800ddd4:	681b      	ldr	r3, [r3, #0]
 800ddd6:	68ba      	ldr	r2, [r7, #8]
 800ddd8:	429a      	cmp	r2, r3
 800ddda:	d2f6      	bcs.n	800ddca <vListInsert+0x28>
 800dddc:	68fb      	ldr	r3, [r7, #12]
 800ddde:	685a      	ldr	r2, [r3, #4]
 800dde0:	683b      	ldr	r3, [r7, #0]
 800dde2:	605a      	str	r2, [r3, #4]
 800dde4:	683b      	ldr	r3, [r7, #0]
 800dde6:	685b      	ldr	r3, [r3, #4]
 800dde8:	683a      	ldr	r2, [r7, #0]
 800ddea:	609a      	str	r2, [r3, #8]
 800ddec:	683b      	ldr	r3, [r7, #0]
 800ddee:	68fa      	ldr	r2, [r7, #12]
 800ddf0:	609a      	str	r2, [r3, #8]
 800ddf2:	68fb      	ldr	r3, [r7, #12]
 800ddf4:	683a      	ldr	r2, [r7, #0]
 800ddf6:	605a      	str	r2, [r3, #4]
 800ddf8:	683b      	ldr	r3, [r7, #0]
 800ddfa:	687a      	ldr	r2, [r7, #4]
 800ddfc:	611a      	str	r2, [r3, #16]
 800ddfe:	687b      	ldr	r3, [r7, #4]
 800de00:	681b      	ldr	r3, [r3, #0]
 800de02:	1c5a      	adds	r2, r3, #1
 800de04:	687b      	ldr	r3, [r7, #4]
 800de06:	601a      	str	r2, [r3, #0]
 800de08:	bf00      	nop
 800de0a:	3714      	adds	r7, #20
 800de0c:	46bd      	mov	sp, r7
 800de0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de12:	4770      	bx	lr

0800de14 <uxListRemove>:
 800de14:	b480      	push	{r7}
 800de16:	b085      	sub	sp, #20
 800de18:	af00      	add	r7, sp, #0
 800de1a:	6078      	str	r0, [r7, #4]
 800de1c:	687b      	ldr	r3, [r7, #4]
 800de1e:	691b      	ldr	r3, [r3, #16]
 800de20:	60fb      	str	r3, [r7, #12]
 800de22:	687b      	ldr	r3, [r7, #4]
 800de24:	685b      	ldr	r3, [r3, #4]
 800de26:	687a      	ldr	r2, [r7, #4]
 800de28:	6892      	ldr	r2, [r2, #8]
 800de2a:	609a      	str	r2, [r3, #8]
 800de2c:	687b      	ldr	r3, [r7, #4]
 800de2e:	689b      	ldr	r3, [r3, #8]
 800de30:	687a      	ldr	r2, [r7, #4]
 800de32:	6852      	ldr	r2, [r2, #4]
 800de34:	605a      	str	r2, [r3, #4]
 800de36:	68fb      	ldr	r3, [r7, #12]
 800de38:	685b      	ldr	r3, [r3, #4]
 800de3a:	687a      	ldr	r2, [r7, #4]
 800de3c:	429a      	cmp	r2, r3
 800de3e:	d103      	bne.n	800de48 <uxListRemove+0x34>
 800de40:	687b      	ldr	r3, [r7, #4]
 800de42:	689a      	ldr	r2, [r3, #8]
 800de44:	68fb      	ldr	r3, [r7, #12]
 800de46:	605a      	str	r2, [r3, #4]
 800de48:	687b      	ldr	r3, [r7, #4]
 800de4a:	2200      	movs	r2, #0
 800de4c:	611a      	str	r2, [r3, #16]
 800de4e:	68fb      	ldr	r3, [r7, #12]
 800de50:	681b      	ldr	r3, [r3, #0]
 800de52:	1e5a      	subs	r2, r3, #1
 800de54:	68fb      	ldr	r3, [r7, #12]
 800de56:	601a      	str	r2, [r3, #0]
 800de58:	68fb      	ldr	r3, [r7, #12]
 800de5a:	681b      	ldr	r3, [r3, #0]
 800de5c:	4618      	mov	r0, r3
 800de5e:	3714      	adds	r7, #20
 800de60:	46bd      	mov	sp, r7
 800de62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de66:	4770      	bx	lr

0800de68 <xQueueGenericReset>:
 800de68:	b580      	push	{r7, lr}
 800de6a:	b084      	sub	sp, #16
 800de6c:	af00      	add	r7, sp, #0
 800de6e:	6078      	str	r0, [r7, #4]
 800de70:	6039      	str	r1, [r7, #0]
 800de72:	687b      	ldr	r3, [r7, #4]
 800de74:	60fb      	str	r3, [r7, #12]
 800de76:	68fb      	ldr	r3, [r7, #12]
 800de78:	2b00      	cmp	r3, #0
 800de7a:	d10b      	bne.n	800de94 <xQueueGenericReset+0x2c>
 800de7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800de80:	f383 8811 	msr	BASEPRI, r3
 800de84:	f3bf 8f6f 	isb	sy
 800de88:	f3bf 8f4f 	dsb	sy
 800de8c:	60bb      	str	r3, [r7, #8]
 800de8e:	bf00      	nop
 800de90:	bf00      	nop
 800de92:	e7fd      	b.n	800de90 <xQueueGenericReset+0x28>
 800de94:	f001 fc90 	bl	800f7b8 <vPortEnterCritical>
 800de98:	68fb      	ldr	r3, [r7, #12]
 800de9a:	681a      	ldr	r2, [r3, #0]
 800de9c:	68fb      	ldr	r3, [r7, #12]
 800de9e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dea0:	68f9      	ldr	r1, [r7, #12]
 800dea2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800dea4:	fb01 f303 	mul.w	r3, r1, r3
 800dea8:	441a      	add	r2, r3
 800deaa:	68fb      	ldr	r3, [r7, #12]
 800deac:	609a      	str	r2, [r3, #8]
 800deae:	68fb      	ldr	r3, [r7, #12]
 800deb0:	2200      	movs	r2, #0
 800deb2:	639a      	str	r2, [r3, #56]	@ 0x38
 800deb4:	68fb      	ldr	r3, [r7, #12]
 800deb6:	681a      	ldr	r2, [r3, #0]
 800deb8:	68fb      	ldr	r3, [r7, #12]
 800deba:	605a      	str	r2, [r3, #4]
 800debc:	68fb      	ldr	r3, [r7, #12]
 800debe:	681a      	ldr	r2, [r3, #0]
 800dec0:	68fb      	ldr	r3, [r7, #12]
 800dec2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dec4:	3b01      	subs	r3, #1
 800dec6:	68f9      	ldr	r1, [r7, #12]
 800dec8:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800deca:	fb01 f303 	mul.w	r3, r1, r3
 800dece:	441a      	add	r2, r3
 800ded0:	68fb      	ldr	r3, [r7, #12]
 800ded2:	60da      	str	r2, [r3, #12]
 800ded4:	68fb      	ldr	r3, [r7, #12]
 800ded6:	22ff      	movs	r2, #255	@ 0xff
 800ded8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800dedc:	68fb      	ldr	r3, [r7, #12]
 800dede:	22ff      	movs	r2, #255	@ 0xff
 800dee0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800dee4:	683b      	ldr	r3, [r7, #0]
 800dee6:	2b00      	cmp	r3, #0
 800dee8:	d114      	bne.n	800df14 <xQueueGenericReset+0xac>
 800deea:	68fb      	ldr	r3, [r7, #12]
 800deec:	691b      	ldr	r3, [r3, #16]
 800deee:	2b00      	cmp	r3, #0
 800def0:	d01a      	beq.n	800df28 <xQueueGenericReset+0xc0>
 800def2:	68fb      	ldr	r3, [r7, #12]
 800def4:	3310      	adds	r3, #16
 800def6:	4618      	mov	r0, r3
 800def8:	f000 ffc6 	bl	800ee88 <xTaskRemoveFromEventList>
 800defc:	4603      	mov	r3, r0
 800defe:	2b00      	cmp	r3, #0
 800df00:	d012      	beq.n	800df28 <xQueueGenericReset+0xc0>
 800df02:	4b0d      	ldr	r3, [pc, #52]	@ (800df38 <xQueueGenericReset+0xd0>)
 800df04:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800df08:	601a      	str	r2, [r3, #0]
 800df0a:	f3bf 8f4f 	dsb	sy
 800df0e:	f3bf 8f6f 	isb	sy
 800df12:	e009      	b.n	800df28 <xQueueGenericReset+0xc0>
 800df14:	68fb      	ldr	r3, [r7, #12]
 800df16:	3310      	adds	r3, #16
 800df18:	4618      	mov	r0, r3
 800df1a:	f7ff fef1 	bl	800dd00 <vListInitialise>
 800df1e:	68fb      	ldr	r3, [r7, #12]
 800df20:	3324      	adds	r3, #36	@ 0x24
 800df22:	4618      	mov	r0, r3
 800df24:	f7ff feec 	bl	800dd00 <vListInitialise>
 800df28:	f001 fc78 	bl	800f81c <vPortExitCritical>
 800df2c:	2301      	movs	r3, #1
 800df2e:	4618      	mov	r0, r3
 800df30:	3710      	adds	r7, #16
 800df32:	46bd      	mov	sp, r7
 800df34:	bd80      	pop	{r7, pc}
 800df36:	bf00      	nop
 800df38:	e000ed04 	.word	0xe000ed04

0800df3c <xQueueGenericCreate>:
 800df3c:	b580      	push	{r7, lr}
 800df3e:	b08a      	sub	sp, #40	@ 0x28
 800df40:	af02      	add	r7, sp, #8
 800df42:	60f8      	str	r0, [r7, #12]
 800df44:	60b9      	str	r1, [r7, #8]
 800df46:	4613      	mov	r3, r2
 800df48:	71fb      	strb	r3, [r7, #7]
 800df4a:	68fb      	ldr	r3, [r7, #12]
 800df4c:	2b00      	cmp	r3, #0
 800df4e:	d10b      	bne.n	800df68 <xQueueGenericCreate+0x2c>
 800df50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800df54:	f383 8811 	msr	BASEPRI, r3
 800df58:	f3bf 8f6f 	isb	sy
 800df5c:	f3bf 8f4f 	dsb	sy
 800df60:	613b      	str	r3, [r7, #16]
 800df62:	bf00      	nop
 800df64:	bf00      	nop
 800df66:	e7fd      	b.n	800df64 <xQueueGenericCreate+0x28>
 800df68:	68fb      	ldr	r3, [r7, #12]
 800df6a:	68ba      	ldr	r2, [r7, #8]
 800df6c:	fb02 f303 	mul.w	r3, r2, r3
 800df70:	61fb      	str	r3, [r7, #28]
 800df72:	69fb      	ldr	r3, [r7, #28]
 800df74:	3350      	adds	r3, #80	@ 0x50
 800df76:	4618      	mov	r0, r3
 800df78:	f001 fd40 	bl	800f9fc <pvPortMalloc>
 800df7c:	61b8      	str	r0, [r7, #24]
 800df7e:	69bb      	ldr	r3, [r7, #24]
 800df80:	2b00      	cmp	r3, #0
 800df82:	d011      	beq.n	800dfa8 <xQueueGenericCreate+0x6c>
 800df84:	69bb      	ldr	r3, [r7, #24]
 800df86:	617b      	str	r3, [r7, #20]
 800df88:	697b      	ldr	r3, [r7, #20]
 800df8a:	3350      	adds	r3, #80	@ 0x50
 800df8c:	617b      	str	r3, [r7, #20]
 800df8e:	69bb      	ldr	r3, [r7, #24]
 800df90:	2200      	movs	r2, #0
 800df92:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800df96:	79fa      	ldrb	r2, [r7, #7]
 800df98:	69bb      	ldr	r3, [r7, #24]
 800df9a:	9300      	str	r3, [sp, #0]
 800df9c:	4613      	mov	r3, r2
 800df9e:	697a      	ldr	r2, [r7, #20]
 800dfa0:	68b9      	ldr	r1, [r7, #8]
 800dfa2:	68f8      	ldr	r0, [r7, #12]
 800dfa4:	f000 f805 	bl	800dfb2 <prvInitialiseNewQueue>
 800dfa8:	69bb      	ldr	r3, [r7, #24]
 800dfaa:	4618      	mov	r0, r3
 800dfac:	3720      	adds	r7, #32
 800dfae:	46bd      	mov	sp, r7
 800dfb0:	bd80      	pop	{r7, pc}

0800dfb2 <prvInitialiseNewQueue>:
 800dfb2:	b580      	push	{r7, lr}
 800dfb4:	b084      	sub	sp, #16
 800dfb6:	af00      	add	r7, sp, #0
 800dfb8:	60f8      	str	r0, [r7, #12]
 800dfba:	60b9      	str	r1, [r7, #8]
 800dfbc:	607a      	str	r2, [r7, #4]
 800dfbe:	70fb      	strb	r3, [r7, #3]
 800dfc0:	68bb      	ldr	r3, [r7, #8]
 800dfc2:	2b00      	cmp	r3, #0
 800dfc4:	d103      	bne.n	800dfce <prvInitialiseNewQueue+0x1c>
 800dfc6:	69bb      	ldr	r3, [r7, #24]
 800dfc8:	69ba      	ldr	r2, [r7, #24]
 800dfca:	601a      	str	r2, [r3, #0]
 800dfcc:	e002      	b.n	800dfd4 <prvInitialiseNewQueue+0x22>
 800dfce:	69bb      	ldr	r3, [r7, #24]
 800dfd0:	687a      	ldr	r2, [r7, #4]
 800dfd2:	601a      	str	r2, [r3, #0]
 800dfd4:	69bb      	ldr	r3, [r7, #24]
 800dfd6:	68fa      	ldr	r2, [r7, #12]
 800dfd8:	63da      	str	r2, [r3, #60]	@ 0x3c
 800dfda:	69bb      	ldr	r3, [r7, #24]
 800dfdc:	68ba      	ldr	r2, [r7, #8]
 800dfde:	641a      	str	r2, [r3, #64]	@ 0x40
 800dfe0:	2101      	movs	r1, #1
 800dfe2:	69b8      	ldr	r0, [r7, #24]
 800dfe4:	f7ff ff40 	bl	800de68 <xQueueGenericReset>
 800dfe8:	69bb      	ldr	r3, [r7, #24]
 800dfea:	78fa      	ldrb	r2, [r7, #3]
 800dfec:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 800dff0:	bf00      	nop
 800dff2:	3710      	adds	r7, #16
 800dff4:	46bd      	mov	sp, r7
 800dff6:	bd80      	pop	{r7, pc}

0800dff8 <xQueueGiveFromISR>:
 800dff8:	b580      	push	{r7, lr}
 800dffa:	b08e      	sub	sp, #56	@ 0x38
 800dffc:	af00      	add	r7, sp, #0
 800dffe:	6078      	str	r0, [r7, #4]
 800e000:	6039      	str	r1, [r7, #0]
 800e002:	687b      	ldr	r3, [r7, #4]
 800e004:	633b      	str	r3, [r7, #48]	@ 0x30
 800e006:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e008:	2b00      	cmp	r3, #0
 800e00a:	d10b      	bne.n	800e024 <xQueueGiveFromISR+0x2c>
 800e00c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e010:	f383 8811 	msr	BASEPRI, r3
 800e014:	f3bf 8f6f 	isb	sy
 800e018:	f3bf 8f4f 	dsb	sy
 800e01c:	623b      	str	r3, [r7, #32]
 800e01e:	bf00      	nop
 800e020:	bf00      	nop
 800e022:	e7fd      	b.n	800e020 <xQueueGiveFromISR+0x28>
 800e024:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e026:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e028:	2b00      	cmp	r3, #0
 800e02a:	d00b      	beq.n	800e044 <xQueueGiveFromISR+0x4c>
 800e02c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e030:	f383 8811 	msr	BASEPRI, r3
 800e034:	f3bf 8f6f 	isb	sy
 800e038:	f3bf 8f4f 	dsb	sy
 800e03c:	61fb      	str	r3, [r7, #28]
 800e03e:	bf00      	nop
 800e040:	bf00      	nop
 800e042:	e7fd      	b.n	800e040 <xQueueGiveFromISR+0x48>
 800e044:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e046:	681b      	ldr	r3, [r3, #0]
 800e048:	2b00      	cmp	r3, #0
 800e04a:	d103      	bne.n	800e054 <xQueueGiveFromISR+0x5c>
 800e04c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e04e:	689b      	ldr	r3, [r3, #8]
 800e050:	2b00      	cmp	r3, #0
 800e052:	d101      	bne.n	800e058 <xQueueGiveFromISR+0x60>
 800e054:	2301      	movs	r3, #1
 800e056:	e000      	b.n	800e05a <xQueueGiveFromISR+0x62>
 800e058:	2300      	movs	r3, #0
 800e05a:	2b00      	cmp	r3, #0
 800e05c:	d10b      	bne.n	800e076 <xQueueGiveFromISR+0x7e>
 800e05e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e062:	f383 8811 	msr	BASEPRI, r3
 800e066:	f3bf 8f6f 	isb	sy
 800e06a:	f3bf 8f4f 	dsb	sy
 800e06e:	61bb      	str	r3, [r7, #24]
 800e070:	bf00      	nop
 800e072:	bf00      	nop
 800e074:	e7fd      	b.n	800e072 <xQueueGiveFromISR+0x7a>
 800e076:	f001 fc7f 	bl	800f978 <vPortValidateInterruptPriority>
 800e07a:	f3ef 8211 	mrs	r2, BASEPRI
 800e07e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e082:	f383 8811 	msr	BASEPRI, r3
 800e086:	f3bf 8f6f 	isb	sy
 800e08a:	f3bf 8f4f 	dsb	sy
 800e08e:	617a      	str	r2, [r7, #20]
 800e090:	613b      	str	r3, [r7, #16]
 800e092:	697b      	ldr	r3, [r7, #20]
 800e094:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800e096:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e098:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e09a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800e09c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e09e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e0a0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800e0a2:	429a      	cmp	r2, r3
 800e0a4:	d22b      	bcs.n	800e0fe <xQueueGiveFromISR+0x106>
 800e0a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e0a8:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800e0ac:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800e0b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e0b2:	1c5a      	adds	r2, r3, #1
 800e0b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e0b6:	639a      	str	r2, [r3, #56]	@ 0x38
 800e0b8:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 800e0bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e0c0:	d112      	bne.n	800e0e8 <xQueueGiveFromISR+0xf0>
 800e0c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e0c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e0c6:	2b00      	cmp	r3, #0
 800e0c8:	d016      	beq.n	800e0f8 <xQueueGiveFromISR+0x100>
 800e0ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e0cc:	3324      	adds	r3, #36	@ 0x24
 800e0ce:	4618      	mov	r0, r3
 800e0d0:	f000 feda 	bl	800ee88 <xTaskRemoveFromEventList>
 800e0d4:	4603      	mov	r3, r0
 800e0d6:	2b00      	cmp	r3, #0
 800e0d8:	d00e      	beq.n	800e0f8 <xQueueGiveFromISR+0x100>
 800e0da:	683b      	ldr	r3, [r7, #0]
 800e0dc:	2b00      	cmp	r3, #0
 800e0de:	d00b      	beq.n	800e0f8 <xQueueGiveFromISR+0x100>
 800e0e0:	683b      	ldr	r3, [r7, #0]
 800e0e2:	2201      	movs	r2, #1
 800e0e4:	601a      	str	r2, [r3, #0]
 800e0e6:	e007      	b.n	800e0f8 <xQueueGiveFromISR+0x100>
 800e0e8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800e0ec:	3301      	adds	r3, #1
 800e0ee:	b2db      	uxtb	r3, r3
 800e0f0:	b25a      	sxtb	r2, r3
 800e0f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e0f4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800e0f8:	2301      	movs	r3, #1
 800e0fa:	637b      	str	r3, [r7, #52]	@ 0x34
 800e0fc:	e001      	b.n	800e102 <xQueueGiveFromISR+0x10a>
 800e0fe:	2300      	movs	r3, #0
 800e100:	637b      	str	r3, [r7, #52]	@ 0x34
 800e102:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e104:	60fb      	str	r3, [r7, #12]
 800e106:	68fb      	ldr	r3, [r7, #12]
 800e108:	f383 8811 	msr	BASEPRI, r3
 800e10c:	bf00      	nop
 800e10e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e110:	4618      	mov	r0, r3
 800e112:	3738      	adds	r7, #56	@ 0x38
 800e114:	46bd      	mov	sp, r7
 800e116:	bd80      	pop	{r7, pc}

0800e118 <xQueueSemaphoreTake>:
 800e118:	b580      	push	{r7, lr}
 800e11a:	b08e      	sub	sp, #56	@ 0x38
 800e11c:	af00      	add	r7, sp, #0
 800e11e:	6078      	str	r0, [r7, #4]
 800e120:	6039      	str	r1, [r7, #0]
 800e122:	2300      	movs	r3, #0
 800e124:	637b      	str	r3, [r7, #52]	@ 0x34
 800e126:	687b      	ldr	r3, [r7, #4]
 800e128:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800e12a:	2300      	movs	r3, #0
 800e12c:	633b      	str	r3, [r7, #48]	@ 0x30
 800e12e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e130:	2b00      	cmp	r3, #0
 800e132:	d10b      	bne.n	800e14c <xQueueSemaphoreTake+0x34>
 800e134:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e138:	f383 8811 	msr	BASEPRI, r3
 800e13c:	f3bf 8f6f 	isb	sy
 800e140:	f3bf 8f4f 	dsb	sy
 800e144:	623b      	str	r3, [r7, #32]
 800e146:	bf00      	nop
 800e148:	bf00      	nop
 800e14a:	e7fd      	b.n	800e148 <xQueueSemaphoreTake+0x30>
 800e14c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e14e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e150:	2b00      	cmp	r3, #0
 800e152:	d00b      	beq.n	800e16c <xQueueSemaphoreTake+0x54>
 800e154:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e158:	f383 8811 	msr	BASEPRI, r3
 800e15c:	f3bf 8f6f 	isb	sy
 800e160:	f3bf 8f4f 	dsb	sy
 800e164:	61fb      	str	r3, [r7, #28]
 800e166:	bf00      	nop
 800e168:	bf00      	nop
 800e16a:	e7fd      	b.n	800e168 <xQueueSemaphoreTake+0x50>
 800e16c:	f001 f852 	bl	800f214 <xTaskGetSchedulerState>
 800e170:	4603      	mov	r3, r0
 800e172:	2b00      	cmp	r3, #0
 800e174:	d102      	bne.n	800e17c <xQueueSemaphoreTake+0x64>
 800e176:	683b      	ldr	r3, [r7, #0]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d101      	bne.n	800e180 <xQueueSemaphoreTake+0x68>
 800e17c:	2301      	movs	r3, #1
 800e17e:	e000      	b.n	800e182 <xQueueSemaphoreTake+0x6a>
 800e180:	2300      	movs	r3, #0
 800e182:	2b00      	cmp	r3, #0
 800e184:	d10b      	bne.n	800e19e <xQueueSemaphoreTake+0x86>
 800e186:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e18a:	f383 8811 	msr	BASEPRI, r3
 800e18e:	f3bf 8f6f 	isb	sy
 800e192:	f3bf 8f4f 	dsb	sy
 800e196:	61bb      	str	r3, [r7, #24]
 800e198:	bf00      	nop
 800e19a:	bf00      	nop
 800e19c:	e7fd      	b.n	800e19a <xQueueSemaphoreTake+0x82>
 800e19e:	f001 fb0b 	bl	800f7b8 <vPortEnterCritical>
 800e1a2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e1a6:	62bb      	str	r3, [r7, #40]	@ 0x28
 800e1a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e1aa:	2b00      	cmp	r3, #0
 800e1ac:	d024      	beq.n	800e1f8 <xQueueSemaphoreTake+0xe0>
 800e1ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e1b0:	1e5a      	subs	r2, r3, #1
 800e1b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1b4:	639a      	str	r2, [r3, #56]	@ 0x38
 800e1b6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1b8:	681b      	ldr	r3, [r3, #0]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d104      	bne.n	800e1c8 <xQueueSemaphoreTake+0xb0>
 800e1be:	f001 f94d 	bl	800f45c <pvTaskIncrementMutexHeldCount>
 800e1c2:	4602      	mov	r2, r0
 800e1c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1c6:	609a      	str	r2, [r3, #8]
 800e1c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1ca:	691b      	ldr	r3, [r3, #16]
 800e1cc:	2b00      	cmp	r3, #0
 800e1ce:	d00f      	beq.n	800e1f0 <xQueueSemaphoreTake+0xd8>
 800e1d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e1d2:	3310      	adds	r3, #16
 800e1d4:	4618      	mov	r0, r3
 800e1d6:	f000 fe57 	bl	800ee88 <xTaskRemoveFromEventList>
 800e1da:	4603      	mov	r3, r0
 800e1dc:	2b00      	cmp	r3, #0
 800e1de:	d007      	beq.n	800e1f0 <xQueueSemaphoreTake+0xd8>
 800e1e0:	4b54      	ldr	r3, [pc, #336]	@ (800e334 <xQueueSemaphoreTake+0x21c>)
 800e1e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e1e6:	601a      	str	r2, [r3, #0]
 800e1e8:	f3bf 8f4f 	dsb	sy
 800e1ec:	f3bf 8f6f 	isb	sy
 800e1f0:	f001 fb14 	bl	800f81c <vPortExitCritical>
 800e1f4:	2301      	movs	r3, #1
 800e1f6:	e098      	b.n	800e32a <xQueueSemaphoreTake+0x212>
 800e1f8:	683b      	ldr	r3, [r7, #0]
 800e1fa:	2b00      	cmp	r3, #0
 800e1fc:	d112      	bne.n	800e224 <xQueueSemaphoreTake+0x10c>
 800e1fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e200:	2b00      	cmp	r3, #0
 800e202:	d00b      	beq.n	800e21c <xQueueSemaphoreTake+0x104>
 800e204:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e208:	f383 8811 	msr	BASEPRI, r3
 800e20c:	f3bf 8f6f 	isb	sy
 800e210:	f3bf 8f4f 	dsb	sy
 800e214:	617b      	str	r3, [r7, #20]
 800e216:	bf00      	nop
 800e218:	bf00      	nop
 800e21a:	e7fd      	b.n	800e218 <xQueueSemaphoreTake+0x100>
 800e21c:	f001 fafe 	bl	800f81c <vPortExitCritical>
 800e220:	2300      	movs	r3, #0
 800e222:	e082      	b.n	800e32a <xQueueSemaphoreTake+0x212>
 800e224:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e226:	2b00      	cmp	r3, #0
 800e228:	d106      	bne.n	800e238 <xQueueSemaphoreTake+0x120>
 800e22a:	f107 030c 	add.w	r3, r7, #12
 800e22e:	4618      	mov	r0, r3
 800e230:	f000 fe8e 	bl	800ef50 <vTaskInternalSetTimeOutState>
 800e234:	2301      	movs	r3, #1
 800e236:	637b      	str	r3, [r7, #52]	@ 0x34
 800e238:	f001 faf0 	bl	800f81c <vPortExitCritical>
 800e23c:	f000 fc1a 	bl	800ea74 <vTaskSuspendAll>
 800e240:	f001 faba 	bl	800f7b8 <vPortEnterCritical>
 800e244:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e246:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800e24a:	b25b      	sxtb	r3, r3
 800e24c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e250:	d103      	bne.n	800e25a <xQueueSemaphoreTake+0x142>
 800e252:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e254:	2200      	movs	r2, #0
 800e256:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800e25a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e25c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800e260:	b25b      	sxtb	r3, r3
 800e262:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e266:	d103      	bne.n	800e270 <xQueueSemaphoreTake+0x158>
 800e268:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e26a:	2200      	movs	r2, #0
 800e26c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800e270:	f001 fad4 	bl	800f81c <vPortExitCritical>
 800e274:	463a      	mov	r2, r7
 800e276:	f107 030c 	add.w	r3, r7, #12
 800e27a:	4611      	mov	r1, r2
 800e27c:	4618      	mov	r0, r3
 800e27e:	f000 fe7d 	bl	800ef7c <xTaskCheckForTimeOut>
 800e282:	4603      	mov	r3, r0
 800e284:	2b00      	cmp	r3, #0
 800e286:	d132      	bne.n	800e2ee <xQueueSemaphoreTake+0x1d6>
 800e288:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e28a:	f000 f8bf 	bl	800e40c <prvIsQueueEmpty>
 800e28e:	4603      	mov	r3, r0
 800e290:	2b00      	cmp	r3, #0
 800e292:	d026      	beq.n	800e2e2 <xQueueSemaphoreTake+0x1ca>
 800e294:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e296:	681b      	ldr	r3, [r3, #0]
 800e298:	2b00      	cmp	r3, #0
 800e29a:	d109      	bne.n	800e2b0 <xQueueSemaphoreTake+0x198>
 800e29c:	f001 fa8c 	bl	800f7b8 <vPortEnterCritical>
 800e2a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e2a2:	689b      	ldr	r3, [r3, #8]
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	f000 ffd3 	bl	800f250 <xTaskPriorityInherit>
 800e2aa:	6338      	str	r0, [r7, #48]	@ 0x30
 800e2ac:	f001 fab6 	bl	800f81c <vPortExitCritical>
 800e2b0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e2b2:	3324      	adds	r3, #36	@ 0x24
 800e2b4:	683a      	ldr	r2, [r7, #0]
 800e2b6:	4611      	mov	r1, r2
 800e2b8:	4618      	mov	r0, r3
 800e2ba:	f000 fdbf 	bl	800ee3c <vTaskPlaceOnEventList>
 800e2be:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e2c0:	f000 f852 	bl	800e368 <prvUnlockQueue>
 800e2c4:	f000 fbe4 	bl	800ea90 <xTaskResumeAll>
 800e2c8:	4603      	mov	r3, r0
 800e2ca:	2b00      	cmp	r3, #0
 800e2cc:	f47f af67 	bne.w	800e19e <xQueueSemaphoreTake+0x86>
 800e2d0:	4b18      	ldr	r3, [pc, #96]	@ (800e334 <xQueueSemaphoreTake+0x21c>)
 800e2d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e2d6:	601a      	str	r2, [r3, #0]
 800e2d8:	f3bf 8f4f 	dsb	sy
 800e2dc:	f3bf 8f6f 	isb	sy
 800e2e0:	e75d      	b.n	800e19e <xQueueSemaphoreTake+0x86>
 800e2e2:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e2e4:	f000 f840 	bl	800e368 <prvUnlockQueue>
 800e2e8:	f000 fbd2 	bl	800ea90 <xTaskResumeAll>
 800e2ec:	e757      	b.n	800e19e <xQueueSemaphoreTake+0x86>
 800e2ee:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e2f0:	f000 f83a 	bl	800e368 <prvUnlockQueue>
 800e2f4:	f000 fbcc 	bl	800ea90 <xTaskResumeAll>
 800e2f8:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e2fa:	f000 f887 	bl	800e40c <prvIsQueueEmpty>
 800e2fe:	4603      	mov	r3, r0
 800e300:	2b00      	cmp	r3, #0
 800e302:	f43f af4c 	beq.w	800e19e <xQueueSemaphoreTake+0x86>
 800e306:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e308:	2b00      	cmp	r3, #0
 800e30a:	d00d      	beq.n	800e328 <xQueueSemaphoreTake+0x210>
 800e30c:	f001 fa54 	bl	800f7b8 <vPortEnterCritical>
 800e310:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800e312:	f000 f811 	bl	800e338 <prvGetDisinheritPriorityAfterTimeout>
 800e316:	6278      	str	r0, [r7, #36]	@ 0x24
 800e318:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e31a:	689b      	ldr	r3, [r3, #8]
 800e31c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800e31e:	4618      	mov	r0, r3
 800e320:	f001 f80c 	bl	800f33c <vTaskPriorityDisinheritAfterTimeout>
 800e324:	f001 fa7a 	bl	800f81c <vPortExitCritical>
 800e328:	2300      	movs	r3, #0
 800e32a:	4618      	mov	r0, r3
 800e32c:	3738      	adds	r7, #56	@ 0x38
 800e32e:	46bd      	mov	sp, r7
 800e330:	bd80      	pop	{r7, pc}
 800e332:	bf00      	nop
 800e334:	e000ed04 	.word	0xe000ed04

0800e338 <prvGetDisinheritPriorityAfterTimeout>:
 800e338:	b480      	push	{r7}
 800e33a:	b085      	sub	sp, #20
 800e33c:	af00      	add	r7, sp, #0
 800e33e:	6078      	str	r0, [r7, #4]
 800e340:	687b      	ldr	r3, [r7, #4]
 800e342:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e344:	2b00      	cmp	r3, #0
 800e346:	d006      	beq.n	800e356 <prvGetDisinheritPriorityAfterTimeout+0x1e>
 800e348:	687b      	ldr	r3, [r7, #4]
 800e34a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e34c:	681b      	ldr	r3, [r3, #0]
 800e34e:	f1c3 0307 	rsb	r3, r3, #7
 800e352:	60fb      	str	r3, [r7, #12]
 800e354:	e001      	b.n	800e35a <prvGetDisinheritPriorityAfterTimeout+0x22>
 800e356:	2300      	movs	r3, #0
 800e358:	60fb      	str	r3, [r7, #12]
 800e35a:	68fb      	ldr	r3, [r7, #12]
 800e35c:	4618      	mov	r0, r3
 800e35e:	3714      	adds	r7, #20
 800e360:	46bd      	mov	sp, r7
 800e362:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e366:	4770      	bx	lr

0800e368 <prvUnlockQueue>:
 800e368:	b580      	push	{r7, lr}
 800e36a:	b084      	sub	sp, #16
 800e36c:	af00      	add	r7, sp, #0
 800e36e:	6078      	str	r0, [r7, #4]
 800e370:	f001 fa22 	bl	800f7b8 <vPortEnterCritical>
 800e374:	687b      	ldr	r3, [r7, #4]
 800e376:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800e37a:	73fb      	strb	r3, [r7, #15]
 800e37c:	e011      	b.n	800e3a2 <prvUnlockQueue+0x3a>
 800e37e:	687b      	ldr	r3, [r7, #4]
 800e380:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e382:	2b00      	cmp	r3, #0
 800e384:	d012      	beq.n	800e3ac <prvUnlockQueue+0x44>
 800e386:	687b      	ldr	r3, [r7, #4]
 800e388:	3324      	adds	r3, #36	@ 0x24
 800e38a:	4618      	mov	r0, r3
 800e38c:	f000 fd7c 	bl	800ee88 <xTaskRemoveFromEventList>
 800e390:	4603      	mov	r3, r0
 800e392:	2b00      	cmp	r3, #0
 800e394:	d001      	beq.n	800e39a <prvUnlockQueue+0x32>
 800e396:	f000 fe55 	bl	800f044 <vTaskMissedYield>
 800e39a:	7bfb      	ldrb	r3, [r7, #15]
 800e39c:	3b01      	subs	r3, #1
 800e39e:	b2db      	uxtb	r3, r3
 800e3a0:	73fb      	strb	r3, [r7, #15]
 800e3a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800e3a6:	2b00      	cmp	r3, #0
 800e3a8:	dce9      	bgt.n	800e37e <prvUnlockQueue+0x16>
 800e3aa:	e000      	b.n	800e3ae <prvUnlockQueue+0x46>
 800e3ac:	bf00      	nop
 800e3ae:	687b      	ldr	r3, [r7, #4]
 800e3b0:	22ff      	movs	r2, #255	@ 0xff
 800e3b2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800e3b6:	f001 fa31 	bl	800f81c <vPortExitCritical>
 800e3ba:	f001 f9fd 	bl	800f7b8 <vPortEnterCritical>
 800e3be:	687b      	ldr	r3, [r7, #4]
 800e3c0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800e3c4:	73bb      	strb	r3, [r7, #14]
 800e3c6:	e011      	b.n	800e3ec <prvUnlockQueue+0x84>
 800e3c8:	687b      	ldr	r3, [r7, #4]
 800e3ca:	691b      	ldr	r3, [r3, #16]
 800e3cc:	2b00      	cmp	r3, #0
 800e3ce:	d012      	beq.n	800e3f6 <prvUnlockQueue+0x8e>
 800e3d0:	687b      	ldr	r3, [r7, #4]
 800e3d2:	3310      	adds	r3, #16
 800e3d4:	4618      	mov	r0, r3
 800e3d6:	f000 fd57 	bl	800ee88 <xTaskRemoveFromEventList>
 800e3da:	4603      	mov	r3, r0
 800e3dc:	2b00      	cmp	r3, #0
 800e3de:	d001      	beq.n	800e3e4 <prvUnlockQueue+0x7c>
 800e3e0:	f000 fe30 	bl	800f044 <vTaskMissedYield>
 800e3e4:	7bbb      	ldrb	r3, [r7, #14]
 800e3e6:	3b01      	subs	r3, #1
 800e3e8:	b2db      	uxtb	r3, r3
 800e3ea:	73bb      	strb	r3, [r7, #14]
 800e3ec:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800e3f0:	2b00      	cmp	r3, #0
 800e3f2:	dce9      	bgt.n	800e3c8 <prvUnlockQueue+0x60>
 800e3f4:	e000      	b.n	800e3f8 <prvUnlockQueue+0x90>
 800e3f6:	bf00      	nop
 800e3f8:	687b      	ldr	r3, [r7, #4]
 800e3fa:	22ff      	movs	r2, #255	@ 0xff
 800e3fc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800e400:	f001 fa0c 	bl	800f81c <vPortExitCritical>
 800e404:	bf00      	nop
 800e406:	3710      	adds	r7, #16
 800e408:	46bd      	mov	sp, r7
 800e40a:	bd80      	pop	{r7, pc}

0800e40c <prvIsQueueEmpty>:
 800e40c:	b580      	push	{r7, lr}
 800e40e:	b084      	sub	sp, #16
 800e410:	af00      	add	r7, sp, #0
 800e412:	6078      	str	r0, [r7, #4]
 800e414:	f001 f9d0 	bl	800f7b8 <vPortEnterCritical>
 800e418:	687b      	ldr	r3, [r7, #4]
 800e41a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e41c:	2b00      	cmp	r3, #0
 800e41e:	d102      	bne.n	800e426 <prvIsQueueEmpty+0x1a>
 800e420:	2301      	movs	r3, #1
 800e422:	60fb      	str	r3, [r7, #12]
 800e424:	e001      	b.n	800e42a <prvIsQueueEmpty+0x1e>
 800e426:	2300      	movs	r3, #0
 800e428:	60fb      	str	r3, [r7, #12]
 800e42a:	f001 f9f7 	bl	800f81c <vPortExitCritical>
 800e42e:	68fb      	ldr	r3, [r7, #12]
 800e430:	4618      	mov	r0, r3
 800e432:	3710      	adds	r7, #16
 800e434:	46bd      	mov	sp, r7
 800e436:	bd80      	pop	{r7, pc}

0800e438 <vQueueAddToRegistry>:
 800e438:	b480      	push	{r7}
 800e43a:	b085      	sub	sp, #20
 800e43c:	af00      	add	r7, sp, #0
 800e43e:	6078      	str	r0, [r7, #4]
 800e440:	6039      	str	r1, [r7, #0]
 800e442:	2300      	movs	r3, #0
 800e444:	60fb      	str	r3, [r7, #12]
 800e446:	e014      	b.n	800e472 <vQueueAddToRegistry+0x3a>
 800e448:	4a0f      	ldr	r2, [pc, #60]	@ (800e488 <vQueueAddToRegistry+0x50>)
 800e44a:	68fb      	ldr	r3, [r7, #12]
 800e44c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800e450:	2b00      	cmp	r3, #0
 800e452:	d10b      	bne.n	800e46c <vQueueAddToRegistry+0x34>
 800e454:	490c      	ldr	r1, [pc, #48]	@ (800e488 <vQueueAddToRegistry+0x50>)
 800e456:	68fb      	ldr	r3, [r7, #12]
 800e458:	683a      	ldr	r2, [r7, #0]
 800e45a:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800e45e:	4a0a      	ldr	r2, [pc, #40]	@ (800e488 <vQueueAddToRegistry+0x50>)
 800e460:	68fb      	ldr	r3, [r7, #12]
 800e462:	00db      	lsls	r3, r3, #3
 800e464:	4413      	add	r3, r2
 800e466:	687a      	ldr	r2, [r7, #4]
 800e468:	605a      	str	r2, [r3, #4]
 800e46a:	e006      	b.n	800e47a <vQueueAddToRegistry+0x42>
 800e46c:	68fb      	ldr	r3, [r7, #12]
 800e46e:	3301      	adds	r3, #1
 800e470:	60fb      	str	r3, [r7, #12]
 800e472:	68fb      	ldr	r3, [r7, #12]
 800e474:	2b07      	cmp	r3, #7
 800e476:	d9e7      	bls.n	800e448 <vQueueAddToRegistry+0x10>
 800e478:	bf00      	nop
 800e47a:	bf00      	nop
 800e47c:	3714      	adds	r7, #20
 800e47e:	46bd      	mov	sp, r7
 800e480:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e484:	4770      	bx	lr
 800e486:	bf00      	nop
 800e488:	200015a0 	.word	0x200015a0

0800e48c <xTaskCreateStatic>:
 800e48c:	b580      	push	{r7, lr}
 800e48e:	b08e      	sub	sp, #56	@ 0x38
 800e490:	af04      	add	r7, sp, #16
 800e492:	60f8      	str	r0, [r7, #12]
 800e494:	60b9      	str	r1, [r7, #8]
 800e496:	607a      	str	r2, [r7, #4]
 800e498:	603b      	str	r3, [r7, #0]
 800e49a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e49c:	2b00      	cmp	r3, #0
 800e49e:	d10b      	bne.n	800e4b8 <xTaskCreateStatic+0x2c>
 800e4a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4a4:	f383 8811 	msr	BASEPRI, r3
 800e4a8:	f3bf 8f6f 	isb	sy
 800e4ac:	f3bf 8f4f 	dsb	sy
 800e4b0:	623b      	str	r3, [r7, #32]
 800e4b2:	bf00      	nop
 800e4b4:	bf00      	nop
 800e4b6:	e7fd      	b.n	800e4b4 <xTaskCreateStatic+0x28>
 800e4b8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e4ba:	2b00      	cmp	r3, #0
 800e4bc:	d10b      	bne.n	800e4d6 <xTaskCreateStatic+0x4a>
 800e4be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4c2:	f383 8811 	msr	BASEPRI, r3
 800e4c6:	f3bf 8f6f 	isb	sy
 800e4ca:	f3bf 8f4f 	dsb	sy
 800e4ce:	61fb      	str	r3, [r7, #28]
 800e4d0:	bf00      	nop
 800e4d2:	bf00      	nop
 800e4d4:	e7fd      	b.n	800e4d2 <xTaskCreateStatic+0x46>
 800e4d6:	23b0      	movs	r3, #176	@ 0xb0
 800e4d8:	613b      	str	r3, [r7, #16]
 800e4da:	693b      	ldr	r3, [r7, #16]
 800e4dc:	2bb0      	cmp	r3, #176	@ 0xb0
 800e4de:	d00b      	beq.n	800e4f8 <xTaskCreateStatic+0x6c>
 800e4e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4e4:	f383 8811 	msr	BASEPRI, r3
 800e4e8:	f3bf 8f6f 	isb	sy
 800e4ec:	f3bf 8f4f 	dsb	sy
 800e4f0:	61bb      	str	r3, [r7, #24]
 800e4f2:	bf00      	nop
 800e4f4:	bf00      	nop
 800e4f6:	e7fd      	b.n	800e4f4 <xTaskCreateStatic+0x68>
 800e4f8:	693b      	ldr	r3, [r7, #16]
 800e4fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e4fc:	2b00      	cmp	r3, #0
 800e4fe:	d01e      	beq.n	800e53e <xTaskCreateStatic+0xb2>
 800e500:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e502:	2b00      	cmp	r3, #0
 800e504:	d01b      	beq.n	800e53e <xTaskCreateStatic+0xb2>
 800e506:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e508:	627b      	str	r3, [r7, #36]	@ 0x24
 800e50a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e50c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800e50e:	631a      	str	r2, [r3, #48]	@ 0x30
 800e510:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e512:	2202      	movs	r2, #2
 800e514:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 800e518:	2300      	movs	r3, #0
 800e51a:	9303      	str	r3, [sp, #12]
 800e51c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e51e:	9302      	str	r3, [sp, #8]
 800e520:	f107 0314 	add.w	r3, r7, #20
 800e524:	9301      	str	r3, [sp, #4]
 800e526:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e528:	9300      	str	r3, [sp, #0]
 800e52a:	683b      	ldr	r3, [r7, #0]
 800e52c:	687a      	ldr	r2, [r7, #4]
 800e52e:	68b9      	ldr	r1, [r7, #8]
 800e530:	68f8      	ldr	r0, [r7, #12]
 800e532:	f000 f851 	bl	800e5d8 <prvInitialiseNewTask>
 800e536:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800e538:	f000 f8fc 	bl	800e734 <prvAddNewTaskToReadyList>
 800e53c:	e001      	b.n	800e542 <xTaskCreateStatic+0xb6>
 800e53e:	2300      	movs	r3, #0
 800e540:	617b      	str	r3, [r7, #20]
 800e542:	697b      	ldr	r3, [r7, #20]
 800e544:	4618      	mov	r0, r3
 800e546:	3728      	adds	r7, #40	@ 0x28
 800e548:	46bd      	mov	sp, r7
 800e54a:	bd80      	pop	{r7, pc}

0800e54c <xTaskCreate>:
 800e54c:	b580      	push	{r7, lr}
 800e54e:	b08c      	sub	sp, #48	@ 0x30
 800e550:	af04      	add	r7, sp, #16
 800e552:	60f8      	str	r0, [r7, #12]
 800e554:	60b9      	str	r1, [r7, #8]
 800e556:	603b      	str	r3, [r7, #0]
 800e558:	4613      	mov	r3, r2
 800e55a:	80fb      	strh	r3, [r7, #6]
 800e55c:	88fb      	ldrh	r3, [r7, #6]
 800e55e:	009b      	lsls	r3, r3, #2
 800e560:	4618      	mov	r0, r3
 800e562:	f001 fa4b 	bl	800f9fc <pvPortMalloc>
 800e566:	6178      	str	r0, [r7, #20]
 800e568:	697b      	ldr	r3, [r7, #20]
 800e56a:	2b00      	cmp	r3, #0
 800e56c:	d00e      	beq.n	800e58c <xTaskCreate+0x40>
 800e56e:	20b0      	movs	r0, #176	@ 0xb0
 800e570:	f001 fa44 	bl	800f9fc <pvPortMalloc>
 800e574:	61f8      	str	r0, [r7, #28]
 800e576:	69fb      	ldr	r3, [r7, #28]
 800e578:	2b00      	cmp	r3, #0
 800e57a:	d003      	beq.n	800e584 <xTaskCreate+0x38>
 800e57c:	69fb      	ldr	r3, [r7, #28]
 800e57e:	697a      	ldr	r2, [r7, #20]
 800e580:	631a      	str	r2, [r3, #48]	@ 0x30
 800e582:	e005      	b.n	800e590 <xTaskCreate+0x44>
 800e584:	6978      	ldr	r0, [r7, #20]
 800e586:	f001 fb07 	bl	800fb98 <vPortFree>
 800e58a:	e001      	b.n	800e590 <xTaskCreate+0x44>
 800e58c:	2300      	movs	r3, #0
 800e58e:	61fb      	str	r3, [r7, #28]
 800e590:	69fb      	ldr	r3, [r7, #28]
 800e592:	2b00      	cmp	r3, #0
 800e594:	d017      	beq.n	800e5c6 <xTaskCreate+0x7a>
 800e596:	69fb      	ldr	r3, [r7, #28]
 800e598:	2200      	movs	r2, #0
 800e59a:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 800e59e:	88fa      	ldrh	r2, [r7, #6]
 800e5a0:	2300      	movs	r3, #0
 800e5a2:	9303      	str	r3, [sp, #12]
 800e5a4:	69fb      	ldr	r3, [r7, #28]
 800e5a6:	9302      	str	r3, [sp, #8]
 800e5a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e5aa:	9301      	str	r3, [sp, #4]
 800e5ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e5ae:	9300      	str	r3, [sp, #0]
 800e5b0:	683b      	ldr	r3, [r7, #0]
 800e5b2:	68b9      	ldr	r1, [r7, #8]
 800e5b4:	68f8      	ldr	r0, [r7, #12]
 800e5b6:	f000 f80f 	bl	800e5d8 <prvInitialiseNewTask>
 800e5ba:	69f8      	ldr	r0, [r7, #28]
 800e5bc:	f000 f8ba 	bl	800e734 <prvAddNewTaskToReadyList>
 800e5c0:	2301      	movs	r3, #1
 800e5c2:	61bb      	str	r3, [r7, #24]
 800e5c4:	e002      	b.n	800e5cc <xTaskCreate+0x80>
 800e5c6:	f04f 33ff 	mov.w	r3, #4294967295
 800e5ca:	61bb      	str	r3, [r7, #24]
 800e5cc:	69bb      	ldr	r3, [r7, #24]
 800e5ce:	4618      	mov	r0, r3
 800e5d0:	3720      	adds	r7, #32
 800e5d2:	46bd      	mov	sp, r7
 800e5d4:	bd80      	pop	{r7, pc}
	...

0800e5d8 <prvInitialiseNewTask>:
 800e5d8:	b580      	push	{r7, lr}
 800e5da:	b088      	sub	sp, #32
 800e5dc:	af00      	add	r7, sp, #0
 800e5de:	60f8      	str	r0, [r7, #12]
 800e5e0:	60b9      	str	r1, [r7, #8]
 800e5e2:	607a      	str	r2, [r7, #4]
 800e5e4:	603b      	str	r3, [r7, #0]
 800e5e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e5e8:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800e5ea:	687b      	ldr	r3, [r7, #4]
 800e5ec:	009b      	lsls	r3, r3, #2
 800e5ee:	461a      	mov	r2, r3
 800e5f0:	21a5      	movs	r1, #165	@ 0xa5
 800e5f2:	f003 f9d7 	bl	80119a4 <memset>
 800e5f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e5f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800e5fa:	687b      	ldr	r3, [r7, #4]
 800e5fc:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800e600:	3b01      	subs	r3, #1
 800e602:	009b      	lsls	r3, r3, #2
 800e604:	4413      	add	r3, r2
 800e606:	61bb      	str	r3, [r7, #24]
 800e608:	69bb      	ldr	r3, [r7, #24]
 800e60a:	f023 0307 	bic.w	r3, r3, #7
 800e60e:	61bb      	str	r3, [r7, #24]
 800e610:	69bb      	ldr	r3, [r7, #24]
 800e612:	f003 0307 	and.w	r3, r3, #7
 800e616:	2b00      	cmp	r3, #0
 800e618:	d00b      	beq.n	800e632 <prvInitialiseNewTask+0x5a>
 800e61a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e61e:	f383 8811 	msr	BASEPRI, r3
 800e622:	f3bf 8f6f 	isb	sy
 800e626:	f3bf 8f4f 	dsb	sy
 800e62a:	617b      	str	r3, [r7, #20]
 800e62c:	bf00      	nop
 800e62e:	bf00      	nop
 800e630:	e7fd      	b.n	800e62e <prvInitialiseNewTask+0x56>
 800e632:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e634:	69ba      	ldr	r2, [r7, #24]
 800e636:	645a      	str	r2, [r3, #68]	@ 0x44
 800e638:	68bb      	ldr	r3, [r7, #8]
 800e63a:	2b00      	cmp	r3, #0
 800e63c:	d01f      	beq.n	800e67e <prvInitialiseNewTask+0xa6>
 800e63e:	2300      	movs	r3, #0
 800e640:	61fb      	str	r3, [r7, #28]
 800e642:	e012      	b.n	800e66a <prvInitialiseNewTask+0x92>
 800e644:	68ba      	ldr	r2, [r7, #8]
 800e646:	69fb      	ldr	r3, [r7, #28]
 800e648:	4413      	add	r3, r2
 800e64a:	7819      	ldrb	r1, [r3, #0]
 800e64c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800e64e:	69fb      	ldr	r3, [r7, #28]
 800e650:	4413      	add	r3, r2
 800e652:	3334      	adds	r3, #52	@ 0x34
 800e654:	460a      	mov	r2, r1
 800e656:	701a      	strb	r2, [r3, #0]
 800e658:	68ba      	ldr	r2, [r7, #8]
 800e65a:	69fb      	ldr	r3, [r7, #28]
 800e65c:	4413      	add	r3, r2
 800e65e:	781b      	ldrb	r3, [r3, #0]
 800e660:	2b00      	cmp	r3, #0
 800e662:	d006      	beq.n	800e672 <prvInitialiseNewTask+0x9a>
 800e664:	69fb      	ldr	r3, [r7, #28]
 800e666:	3301      	adds	r3, #1
 800e668:	61fb      	str	r3, [r7, #28]
 800e66a:	69fb      	ldr	r3, [r7, #28]
 800e66c:	2b0f      	cmp	r3, #15
 800e66e:	d9e9      	bls.n	800e644 <prvInitialiseNewTask+0x6c>
 800e670:	e000      	b.n	800e674 <prvInitialiseNewTask+0x9c>
 800e672:	bf00      	nop
 800e674:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e676:	2200      	movs	r2, #0
 800e678:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800e67c:	e003      	b.n	800e686 <prvInitialiseNewTask+0xae>
 800e67e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e680:	2200      	movs	r2, #0
 800e682:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800e686:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e688:	2b06      	cmp	r3, #6
 800e68a:	d901      	bls.n	800e690 <prvInitialiseNewTask+0xb8>
 800e68c:	2306      	movs	r3, #6
 800e68e:	62bb      	str	r3, [r7, #40]	@ 0x28
 800e690:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e692:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800e694:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e696:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e698:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800e69a:	651a      	str	r2, [r3, #80]	@ 0x50
 800e69c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e69e:	2200      	movs	r2, #0
 800e6a0:	655a      	str	r2, [r3, #84]	@ 0x54
 800e6a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6a4:	3304      	adds	r3, #4
 800e6a6:	4618      	mov	r0, r3
 800e6a8:	f7ff fb4a 	bl	800dd40 <vListInitialiseItem>
 800e6ac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6ae:	3318      	adds	r3, #24
 800e6b0:	4618      	mov	r0, r3
 800e6b2:	f7ff fb45 	bl	800dd40 <vListInitialiseItem>
 800e6b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6b8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800e6ba:	611a      	str	r2, [r3, #16]
 800e6bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800e6be:	f1c3 0207 	rsb	r2, r3, #7
 800e6c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6c4:	619a      	str	r2, [r3, #24]
 800e6c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6c8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800e6ca:	625a      	str	r2, [r3, #36]	@ 0x24
 800e6cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6ce:	2200      	movs	r2, #0
 800e6d0:	659a      	str	r2, [r3, #88]	@ 0x58
 800e6d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6d4:	2200      	movs	r2, #0
 800e6d6:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
 800e6da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6dc:	2200      	movs	r2, #0
 800e6de:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 800e6e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6e4:	335c      	adds	r3, #92	@ 0x5c
 800e6e6:	224c      	movs	r2, #76	@ 0x4c
 800e6e8:	2100      	movs	r1, #0
 800e6ea:	4618      	mov	r0, r3
 800e6ec:	f003 f95a 	bl	80119a4 <memset>
 800e6f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6f2:	4a0d      	ldr	r2, [pc, #52]	@ (800e728 <prvInitialiseNewTask+0x150>)
 800e6f4:	661a      	str	r2, [r3, #96]	@ 0x60
 800e6f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6f8:	4a0c      	ldr	r2, [pc, #48]	@ (800e72c <prvInitialiseNewTask+0x154>)
 800e6fa:	665a      	str	r2, [r3, #100]	@ 0x64
 800e6fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e6fe:	4a0c      	ldr	r2, [pc, #48]	@ (800e730 <prvInitialiseNewTask+0x158>)
 800e700:	669a      	str	r2, [r3, #104]	@ 0x68
 800e702:	683a      	ldr	r2, [r7, #0]
 800e704:	68f9      	ldr	r1, [r7, #12]
 800e706:	69b8      	ldr	r0, [r7, #24]
 800e708:	f000 ff22 	bl	800f550 <pxPortInitialiseStack>
 800e70c:	4602      	mov	r2, r0
 800e70e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e710:	601a      	str	r2, [r3, #0]
 800e712:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e714:	2b00      	cmp	r3, #0
 800e716:	d002      	beq.n	800e71e <prvInitialiseNewTask+0x146>
 800e718:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e71a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800e71c:	601a      	str	r2, [r3, #0]
 800e71e:	bf00      	nop
 800e720:	3720      	adds	r7, #32
 800e722:	46bd      	mov	sp, r7
 800e724:	bd80      	pop	{r7, pc}
 800e726:	bf00      	nop
 800e728:	20006c80 	.word	0x20006c80
 800e72c:	20006ce8 	.word	0x20006ce8
 800e730:	20006d50 	.word	0x20006d50

0800e734 <prvAddNewTaskToReadyList>:
 800e734:	b580      	push	{r7, lr}
 800e736:	b082      	sub	sp, #8
 800e738:	af00      	add	r7, sp, #0
 800e73a:	6078      	str	r0, [r7, #4]
 800e73c:	f001 f83c 	bl	800f7b8 <vPortEnterCritical>
 800e740:	4b2c      	ldr	r3, [pc, #176]	@ (800e7f4 <prvAddNewTaskToReadyList+0xc0>)
 800e742:	681b      	ldr	r3, [r3, #0]
 800e744:	3301      	adds	r3, #1
 800e746:	4a2b      	ldr	r2, [pc, #172]	@ (800e7f4 <prvAddNewTaskToReadyList+0xc0>)
 800e748:	6013      	str	r3, [r2, #0]
 800e74a:	4b2b      	ldr	r3, [pc, #172]	@ (800e7f8 <prvAddNewTaskToReadyList+0xc4>)
 800e74c:	681b      	ldr	r3, [r3, #0]
 800e74e:	2b00      	cmp	r3, #0
 800e750:	d109      	bne.n	800e766 <prvAddNewTaskToReadyList+0x32>
 800e752:	4a29      	ldr	r2, [pc, #164]	@ (800e7f8 <prvAddNewTaskToReadyList+0xc4>)
 800e754:	687b      	ldr	r3, [r7, #4]
 800e756:	6013      	str	r3, [r2, #0]
 800e758:	4b26      	ldr	r3, [pc, #152]	@ (800e7f4 <prvAddNewTaskToReadyList+0xc0>)
 800e75a:	681b      	ldr	r3, [r3, #0]
 800e75c:	2b01      	cmp	r3, #1
 800e75e:	d110      	bne.n	800e782 <prvAddNewTaskToReadyList+0x4e>
 800e760:	f000 fc94 	bl	800f08c <prvInitialiseTaskLists>
 800e764:	e00d      	b.n	800e782 <prvAddNewTaskToReadyList+0x4e>
 800e766:	4b25      	ldr	r3, [pc, #148]	@ (800e7fc <prvAddNewTaskToReadyList+0xc8>)
 800e768:	681b      	ldr	r3, [r3, #0]
 800e76a:	2b00      	cmp	r3, #0
 800e76c:	d109      	bne.n	800e782 <prvAddNewTaskToReadyList+0x4e>
 800e76e:	4b22      	ldr	r3, [pc, #136]	@ (800e7f8 <prvAddNewTaskToReadyList+0xc4>)
 800e770:	681b      	ldr	r3, [r3, #0]
 800e772:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e774:	687b      	ldr	r3, [r7, #4]
 800e776:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e778:	429a      	cmp	r2, r3
 800e77a:	d802      	bhi.n	800e782 <prvAddNewTaskToReadyList+0x4e>
 800e77c:	4a1e      	ldr	r2, [pc, #120]	@ (800e7f8 <prvAddNewTaskToReadyList+0xc4>)
 800e77e:	687b      	ldr	r3, [r7, #4]
 800e780:	6013      	str	r3, [r2, #0]
 800e782:	4b1f      	ldr	r3, [pc, #124]	@ (800e800 <prvAddNewTaskToReadyList+0xcc>)
 800e784:	681b      	ldr	r3, [r3, #0]
 800e786:	3301      	adds	r3, #1
 800e788:	4a1d      	ldr	r2, [pc, #116]	@ (800e800 <prvAddNewTaskToReadyList+0xcc>)
 800e78a:	6013      	str	r3, [r2, #0]
 800e78c:	4b1c      	ldr	r3, [pc, #112]	@ (800e800 <prvAddNewTaskToReadyList+0xcc>)
 800e78e:	681a      	ldr	r2, [r3, #0]
 800e790:	687b      	ldr	r3, [r7, #4]
 800e792:	649a      	str	r2, [r3, #72]	@ 0x48
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e798:	2201      	movs	r2, #1
 800e79a:	409a      	lsls	r2, r3
 800e79c:	4b19      	ldr	r3, [pc, #100]	@ (800e804 <prvAddNewTaskToReadyList+0xd0>)
 800e79e:	681b      	ldr	r3, [r3, #0]
 800e7a0:	4313      	orrs	r3, r2
 800e7a2:	4a18      	ldr	r2, [pc, #96]	@ (800e804 <prvAddNewTaskToReadyList+0xd0>)
 800e7a4:	6013      	str	r3, [r2, #0]
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e7aa:	4613      	mov	r3, r2
 800e7ac:	009b      	lsls	r3, r3, #2
 800e7ae:	4413      	add	r3, r2
 800e7b0:	009b      	lsls	r3, r3, #2
 800e7b2:	4a15      	ldr	r2, [pc, #84]	@ (800e808 <prvAddNewTaskToReadyList+0xd4>)
 800e7b4:	441a      	add	r2, r3
 800e7b6:	687b      	ldr	r3, [r7, #4]
 800e7b8:	3304      	adds	r3, #4
 800e7ba:	4619      	mov	r1, r3
 800e7bc:	4610      	mov	r0, r2
 800e7be:	f7ff facc 	bl	800dd5a <vListInsertEnd>
 800e7c2:	f001 f82b 	bl	800f81c <vPortExitCritical>
 800e7c6:	4b0d      	ldr	r3, [pc, #52]	@ (800e7fc <prvAddNewTaskToReadyList+0xc8>)
 800e7c8:	681b      	ldr	r3, [r3, #0]
 800e7ca:	2b00      	cmp	r3, #0
 800e7cc:	d00e      	beq.n	800e7ec <prvAddNewTaskToReadyList+0xb8>
 800e7ce:	4b0a      	ldr	r3, [pc, #40]	@ (800e7f8 <prvAddNewTaskToReadyList+0xc4>)
 800e7d0:	681b      	ldr	r3, [r3, #0]
 800e7d2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e7d8:	429a      	cmp	r2, r3
 800e7da:	d207      	bcs.n	800e7ec <prvAddNewTaskToReadyList+0xb8>
 800e7dc:	4b0b      	ldr	r3, [pc, #44]	@ (800e80c <prvAddNewTaskToReadyList+0xd8>)
 800e7de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e7e2:	601a      	str	r2, [r3, #0]
 800e7e4:	f3bf 8f4f 	dsb	sy
 800e7e8:	f3bf 8f6f 	isb	sy
 800e7ec:	bf00      	nop
 800e7ee:	3708      	adds	r7, #8
 800e7f0:	46bd      	mov	sp, r7
 800e7f2:	bd80      	pop	{r7, pc}
 800e7f4:	200016e0 	.word	0x200016e0
 800e7f8:	200015e0 	.word	0x200015e0
 800e7fc:	200016ec 	.word	0x200016ec
 800e800:	200016fc 	.word	0x200016fc
 800e804:	200016e8 	.word	0x200016e8
 800e808:	200015e4 	.word	0x200015e4
 800e80c:	e000ed04 	.word	0xe000ed04

0800e810 <vTaskDelete>:
 800e810:	b580      	push	{r7, lr}
 800e812:	b084      	sub	sp, #16
 800e814:	af00      	add	r7, sp, #0
 800e816:	6078      	str	r0, [r7, #4]
 800e818:	f000 ffce 	bl	800f7b8 <vPortEnterCritical>
 800e81c:	687b      	ldr	r3, [r7, #4]
 800e81e:	2b00      	cmp	r3, #0
 800e820:	d102      	bne.n	800e828 <vTaskDelete+0x18>
 800e822:	4b39      	ldr	r3, [pc, #228]	@ (800e908 <vTaskDelete+0xf8>)
 800e824:	681b      	ldr	r3, [r3, #0]
 800e826:	e000      	b.n	800e82a <vTaskDelete+0x1a>
 800e828:	687b      	ldr	r3, [r7, #4]
 800e82a:	60fb      	str	r3, [r7, #12]
 800e82c:	68fb      	ldr	r3, [r7, #12]
 800e82e:	3304      	adds	r3, #4
 800e830:	4618      	mov	r0, r3
 800e832:	f7ff faef 	bl	800de14 <uxListRemove>
 800e836:	4603      	mov	r3, r0
 800e838:	2b00      	cmp	r3, #0
 800e83a:	d115      	bne.n	800e868 <vTaskDelete+0x58>
 800e83c:	68fb      	ldr	r3, [r7, #12]
 800e83e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e840:	4932      	ldr	r1, [pc, #200]	@ (800e90c <vTaskDelete+0xfc>)
 800e842:	4613      	mov	r3, r2
 800e844:	009b      	lsls	r3, r3, #2
 800e846:	4413      	add	r3, r2
 800e848:	009b      	lsls	r3, r3, #2
 800e84a:	440b      	add	r3, r1
 800e84c:	681b      	ldr	r3, [r3, #0]
 800e84e:	2b00      	cmp	r3, #0
 800e850:	d10a      	bne.n	800e868 <vTaskDelete+0x58>
 800e852:	68fb      	ldr	r3, [r7, #12]
 800e854:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e856:	2201      	movs	r2, #1
 800e858:	fa02 f303 	lsl.w	r3, r2, r3
 800e85c:	43da      	mvns	r2, r3
 800e85e:	4b2c      	ldr	r3, [pc, #176]	@ (800e910 <vTaskDelete+0x100>)
 800e860:	681b      	ldr	r3, [r3, #0]
 800e862:	4013      	ands	r3, r2
 800e864:	4a2a      	ldr	r2, [pc, #168]	@ (800e910 <vTaskDelete+0x100>)
 800e866:	6013      	str	r3, [r2, #0]
 800e868:	68fb      	ldr	r3, [r7, #12]
 800e86a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e86c:	2b00      	cmp	r3, #0
 800e86e:	d004      	beq.n	800e87a <vTaskDelete+0x6a>
 800e870:	68fb      	ldr	r3, [r7, #12]
 800e872:	3318      	adds	r3, #24
 800e874:	4618      	mov	r0, r3
 800e876:	f7ff facd 	bl	800de14 <uxListRemove>
 800e87a:	4b26      	ldr	r3, [pc, #152]	@ (800e914 <vTaskDelete+0x104>)
 800e87c:	681b      	ldr	r3, [r3, #0]
 800e87e:	3301      	adds	r3, #1
 800e880:	4a24      	ldr	r2, [pc, #144]	@ (800e914 <vTaskDelete+0x104>)
 800e882:	6013      	str	r3, [r2, #0]
 800e884:	4b20      	ldr	r3, [pc, #128]	@ (800e908 <vTaskDelete+0xf8>)
 800e886:	681b      	ldr	r3, [r3, #0]
 800e888:	68fa      	ldr	r2, [r7, #12]
 800e88a:	429a      	cmp	r2, r3
 800e88c:	d10b      	bne.n	800e8a6 <vTaskDelete+0x96>
 800e88e:	68fb      	ldr	r3, [r7, #12]
 800e890:	3304      	adds	r3, #4
 800e892:	4619      	mov	r1, r3
 800e894:	4820      	ldr	r0, [pc, #128]	@ (800e918 <vTaskDelete+0x108>)
 800e896:	f7ff fa60 	bl	800dd5a <vListInsertEnd>
 800e89a:	4b20      	ldr	r3, [pc, #128]	@ (800e91c <vTaskDelete+0x10c>)
 800e89c:	681b      	ldr	r3, [r3, #0]
 800e89e:	3301      	adds	r3, #1
 800e8a0:	4a1e      	ldr	r2, [pc, #120]	@ (800e91c <vTaskDelete+0x10c>)
 800e8a2:	6013      	str	r3, [r2, #0]
 800e8a4:	e009      	b.n	800e8ba <vTaskDelete+0xaa>
 800e8a6:	4b1e      	ldr	r3, [pc, #120]	@ (800e920 <vTaskDelete+0x110>)
 800e8a8:	681b      	ldr	r3, [r3, #0]
 800e8aa:	3b01      	subs	r3, #1
 800e8ac:	4a1c      	ldr	r2, [pc, #112]	@ (800e920 <vTaskDelete+0x110>)
 800e8ae:	6013      	str	r3, [r2, #0]
 800e8b0:	68f8      	ldr	r0, [r7, #12]
 800e8b2:	f000 fc59 	bl	800f168 <prvDeleteTCB>
 800e8b6:	f000 fc8d 	bl	800f1d4 <prvResetNextTaskUnblockTime>
 800e8ba:	f000 ffaf 	bl	800f81c <vPortExitCritical>
 800e8be:	4b19      	ldr	r3, [pc, #100]	@ (800e924 <vTaskDelete+0x114>)
 800e8c0:	681b      	ldr	r3, [r3, #0]
 800e8c2:	2b00      	cmp	r3, #0
 800e8c4:	d01c      	beq.n	800e900 <vTaskDelete+0xf0>
 800e8c6:	4b10      	ldr	r3, [pc, #64]	@ (800e908 <vTaskDelete+0xf8>)
 800e8c8:	681b      	ldr	r3, [r3, #0]
 800e8ca:	68fa      	ldr	r2, [r7, #12]
 800e8cc:	429a      	cmp	r2, r3
 800e8ce:	d117      	bne.n	800e900 <vTaskDelete+0xf0>
 800e8d0:	4b15      	ldr	r3, [pc, #84]	@ (800e928 <vTaskDelete+0x118>)
 800e8d2:	681b      	ldr	r3, [r3, #0]
 800e8d4:	2b00      	cmp	r3, #0
 800e8d6:	d00b      	beq.n	800e8f0 <vTaskDelete+0xe0>
 800e8d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e8dc:	f383 8811 	msr	BASEPRI, r3
 800e8e0:	f3bf 8f6f 	isb	sy
 800e8e4:	f3bf 8f4f 	dsb	sy
 800e8e8:	60bb      	str	r3, [r7, #8]
 800e8ea:	bf00      	nop
 800e8ec:	bf00      	nop
 800e8ee:	e7fd      	b.n	800e8ec <vTaskDelete+0xdc>
 800e8f0:	4b0e      	ldr	r3, [pc, #56]	@ (800e92c <vTaskDelete+0x11c>)
 800e8f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e8f6:	601a      	str	r2, [r3, #0]
 800e8f8:	f3bf 8f4f 	dsb	sy
 800e8fc:	f3bf 8f6f 	isb	sy
 800e900:	bf00      	nop
 800e902:	3710      	adds	r7, #16
 800e904:	46bd      	mov	sp, r7
 800e906:	bd80      	pop	{r7, pc}
 800e908:	200015e0 	.word	0x200015e0
 800e90c:	200015e4 	.word	0x200015e4
 800e910:	200016e8 	.word	0x200016e8
 800e914:	200016fc 	.word	0x200016fc
 800e918:	200016b4 	.word	0x200016b4
 800e91c:	200016c8 	.word	0x200016c8
 800e920:	200016e0 	.word	0x200016e0
 800e924:	200016ec 	.word	0x200016ec
 800e928:	20001708 	.word	0x20001708
 800e92c:	e000ed04 	.word	0xe000ed04

0800e930 <vTaskDelay>:
 800e930:	b580      	push	{r7, lr}
 800e932:	b084      	sub	sp, #16
 800e934:	af00      	add	r7, sp, #0
 800e936:	6078      	str	r0, [r7, #4]
 800e938:	2300      	movs	r3, #0
 800e93a:	60fb      	str	r3, [r7, #12]
 800e93c:	687b      	ldr	r3, [r7, #4]
 800e93e:	2b00      	cmp	r3, #0
 800e940:	d018      	beq.n	800e974 <vTaskDelay+0x44>
 800e942:	4b14      	ldr	r3, [pc, #80]	@ (800e994 <vTaskDelay+0x64>)
 800e944:	681b      	ldr	r3, [r3, #0]
 800e946:	2b00      	cmp	r3, #0
 800e948:	d00b      	beq.n	800e962 <vTaskDelay+0x32>
 800e94a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e94e:	f383 8811 	msr	BASEPRI, r3
 800e952:	f3bf 8f6f 	isb	sy
 800e956:	f3bf 8f4f 	dsb	sy
 800e95a:	60bb      	str	r3, [r7, #8]
 800e95c:	bf00      	nop
 800e95e:	bf00      	nop
 800e960:	e7fd      	b.n	800e95e <vTaskDelay+0x2e>
 800e962:	f000 f887 	bl	800ea74 <vTaskSuspendAll>
 800e966:	2100      	movs	r1, #0
 800e968:	6878      	ldr	r0, [r7, #4]
 800e96a:	f000 fd8b 	bl	800f484 <prvAddCurrentTaskToDelayedList>
 800e96e:	f000 f88f 	bl	800ea90 <xTaskResumeAll>
 800e972:	60f8      	str	r0, [r7, #12]
 800e974:	68fb      	ldr	r3, [r7, #12]
 800e976:	2b00      	cmp	r3, #0
 800e978:	d107      	bne.n	800e98a <vTaskDelay+0x5a>
 800e97a:	4b07      	ldr	r3, [pc, #28]	@ (800e998 <vTaskDelay+0x68>)
 800e97c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e980:	601a      	str	r2, [r3, #0]
 800e982:	f3bf 8f4f 	dsb	sy
 800e986:	f3bf 8f6f 	isb	sy
 800e98a:	bf00      	nop
 800e98c:	3710      	adds	r7, #16
 800e98e:	46bd      	mov	sp, r7
 800e990:	bd80      	pop	{r7, pc}
 800e992:	bf00      	nop
 800e994:	20001708 	.word	0x20001708
 800e998:	e000ed04 	.word	0xe000ed04

0800e99c <vTaskStartScheduler>:
 800e99c:	b580      	push	{r7, lr}
 800e99e:	b08a      	sub	sp, #40	@ 0x28
 800e9a0:	af04      	add	r7, sp, #16
 800e9a2:	2300      	movs	r3, #0
 800e9a4:	60bb      	str	r3, [r7, #8]
 800e9a6:	2300      	movs	r3, #0
 800e9a8:	607b      	str	r3, [r7, #4]
 800e9aa:	463a      	mov	r2, r7
 800e9ac:	1d39      	adds	r1, r7, #4
 800e9ae:	f107 0308 	add.w	r3, r7, #8
 800e9b2:	4618      	mov	r0, r3
 800e9b4:	f7f3 fd66 	bl	8002484 <vApplicationGetIdleTaskMemory>
 800e9b8:	6839      	ldr	r1, [r7, #0]
 800e9ba:	687b      	ldr	r3, [r7, #4]
 800e9bc:	68ba      	ldr	r2, [r7, #8]
 800e9be:	9202      	str	r2, [sp, #8]
 800e9c0:	9301      	str	r3, [sp, #4]
 800e9c2:	2300      	movs	r3, #0
 800e9c4:	9300      	str	r3, [sp, #0]
 800e9c6:	2300      	movs	r3, #0
 800e9c8:	460a      	mov	r2, r1
 800e9ca:	4922      	ldr	r1, [pc, #136]	@ (800ea54 <vTaskStartScheduler+0xb8>)
 800e9cc:	4822      	ldr	r0, [pc, #136]	@ (800ea58 <vTaskStartScheduler+0xbc>)
 800e9ce:	f7ff fd5d 	bl	800e48c <xTaskCreateStatic>
 800e9d2:	4603      	mov	r3, r0
 800e9d4:	4a21      	ldr	r2, [pc, #132]	@ (800ea5c <vTaskStartScheduler+0xc0>)
 800e9d6:	6013      	str	r3, [r2, #0]
 800e9d8:	4b20      	ldr	r3, [pc, #128]	@ (800ea5c <vTaskStartScheduler+0xc0>)
 800e9da:	681b      	ldr	r3, [r3, #0]
 800e9dc:	2b00      	cmp	r3, #0
 800e9de:	d002      	beq.n	800e9e6 <vTaskStartScheduler+0x4a>
 800e9e0:	2301      	movs	r3, #1
 800e9e2:	617b      	str	r3, [r7, #20]
 800e9e4:	e001      	b.n	800e9ea <vTaskStartScheduler+0x4e>
 800e9e6:	2300      	movs	r3, #0
 800e9e8:	617b      	str	r3, [r7, #20]
 800e9ea:	697b      	ldr	r3, [r7, #20]
 800e9ec:	2b01      	cmp	r3, #1
 800e9ee:	d11d      	bne.n	800ea2c <vTaskStartScheduler+0x90>
 800e9f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e9f4:	f383 8811 	msr	BASEPRI, r3
 800e9f8:	f3bf 8f6f 	isb	sy
 800e9fc:	f3bf 8f4f 	dsb	sy
 800ea00:	613b      	str	r3, [r7, #16]
 800ea02:	bf00      	nop
 800ea04:	4b16      	ldr	r3, [pc, #88]	@ (800ea60 <vTaskStartScheduler+0xc4>)
 800ea06:	681b      	ldr	r3, [r3, #0]
 800ea08:	335c      	adds	r3, #92	@ 0x5c
 800ea0a:	4a16      	ldr	r2, [pc, #88]	@ (800ea64 <vTaskStartScheduler+0xc8>)
 800ea0c:	6013      	str	r3, [r2, #0]
 800ea0e:	4b16      	ldr	r3, [pc, #88]	@ (800ea68 <vTaskStartScheduler+0xcc>)
 800ea10:	f04f 32ff 	mov.w	r2, #4294967295
 800ea14:	601a      	str	r2, [r3, #0]
 800ea16:	4b15      	ldr	r3, [pc, #84]	@ (800ea6c <vTaskStartScheduler+0xd0>)
 800ea18:	2201      	movs	r2, #1
 800ea1a:	601a      	str	r2, [r3, #0]
 800ea1c:	4b14      	ldr	r3, [pc, #80]	@ (800ea70 <vTaskStartScheduler+0xd4>)
 800ea1e:	2200      	movs	r2, #0
 800ea20:	601a      	str	r2, [r3, #0]
 800ea22:	f7f3 fd5f 	bl	80024e4 <configureTimerForRunTimeStats>
 800ea26:	f000 fe23 	bl	800f670 <xPortStartScheduler>
 800ea2a:	e00f      	b.n	800ea4c <vTaskStartScheduler+0xb0>
 800ea2c:	697b      	ldr	r3, [r7, #20]
 800ea2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ea32:	d10b      	bne.n	800ea4c <vTaskStartScheduler+0xb0>
 800ea34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea38:	f383 8811 	msr	BASEPRI, r3
 800ea3c:	f3bf 8f6f 	isb	sy
 800ea40:	f3bf 8f4f 	dsb	sy
 800ea44:	60fb      	str	r3, [r7, #12]
 800ea46:	bf00      	nop
 800ea48:	bf00      	nop
 800ea4a:	e7fd      	b.n	800ea48 <vTaskStartScheduler+0xac>
 800ea4c:	bf00      	nop
 800ea4e:	3718      	adds	r7, #24
 800ea50:	46bd      	mov	sp, r7
 800ea52:	bd80      	pop	{r7, pc}
 800ea54:	080154d4 	.word	0x080154d4
 800ea58:	0800f05d 	.word	0x0800f05d
 800ea5c:	20001704 	.word	0x20001704
 800ea60:	200015e0 	.word	0x200015e0
 800ea64:	200001f0 	.word	0x200001f0
 800ea68:	20001700 	.word	0x20001700
 800ea6c:	200016ec 	.word	0x200016ec
 800ea70:	200016e4 	.word	0x200016e4

0800ea74 <vTaskSuspendAll>:
 800ea74:	b480      	push	{r7}
 800ea76:	af00      	add	r7, sp, #0
 800ea78:	4b04      	ldr	r3, [pc, #16]	@ (800ea8c <vTaskSuspendAll+0x18>)
 800ea7a:	681b      	ldr	r3, [r3, #0]
 800ea7c:	3301      	adds	r3, #1
 800ea7e:	4a03      	ldr	r2, [pc, #12]	@ (800ea8c <vTaskSuspendAll+0x18>)
 800ea80:	6013      	str	r3, [r2, #0]
 800ea82:	bf00      	nop
 800ea84:	46bd      	mov	sp, r7
 800ea86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea8a:	4770      	bx	lr
 800ea8c:	20001708 	.word	0x20001708

0800ea90 <xTaskResumeAll>:
 800ea90:	b580      	push	{r7, lr}
 800ea92:	b084      	sub	sp, #16
 800ea94:	af00      	add	r7, sp, #0
 800ea96:	2300      	movs	r3, #0
 800ea98:	60fb      	str	r3, [r7, #12]
 800ea9a:	2300      	movs	r3, #0
 800ea9c:	60bb      	str	r3, [r7, #8]
 800ea9e:	4b42      	ldr	r3, [pc, #264]	@ (800eba8 <xTaskResumeAll+0x118>)
 800eaa0:	681b      	ldr	r3, [r3, #0]
 800eaa2:	2b00      	cmp	r3, #0
 800eaa4:	d10b      	bne.n	800eabe <xTaskResumeAll+0x2e>
 800eaa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eaaa:	f383 8811 	msr	BASEPRI, r3
 800eaae:	f3bf 8f6f 	isb	sy
 800eab2:	f3bf 8f4f 	dsb	sy
 800eab6:	603b      	str	r3, [r7, #0]
 800eab8:	bf00      	nop
 800eaba:	bf00      	nop
 800eabc:	e7fd      	b.n	800eaba <xTaskResumeAll+0x2a>
 800eabe:	f000 fe7b 	bl	800f7b8 <vPortEnterCritical>
 800eac2:	4b39      	ldr	r3, [pc, #228]	@ (800eba8 <xTaskResumeAll+0x118>)
 800eac4:	681b      	ldr	r3, [r3, #0]
 800eac6:	3b01      	subs	r3, #1
 800eac8:	4a37      	ldr	r2, [pc, #220]	@ (800eba8 <xTaskResumeAll+0x118>)
 800eaca:	6013      	str	r3, [r2, #0]
 800eacc:	4b36      	ldr	r3, [pc, #216]	@ (800eba8 <xTaskResumeAll+0x118>)
 800eace:	681b      	ldr	r3, [r3, #0]
 800ead0:	2b00      	cmp	r3, #0
 800ead2:	d161      	bne.n	800eb98 <xTaskResumeAll+0x108>
 800ead4:	4b35      	ldr	r3, [pc, #212]	@ (800ebac <xTaskResumeAll+0x11c>)
 800ead6:	681b      	ldr	r3, [r3, #0]
 800ead8:	2b00      	cmp	r3, #0
 800eada:	d05d      	beq.n	800eb98 <xTaskResumeAll+0x108>
 800eadc:	e02e      	b.n	800eb3c <xTaskResumeAll+0xac>
 800eade:	4b34      	ldr	r3, [pc, #208]	@ (800ebb0 <xTaskResumeAll+0x120>)
 800eae0:	68db      	ldr	r3, [r3, #12]
 800eae2:	68db      	ldr	r3, [r3, #12]
 800eae4:	60fb      	str	r3, [r7, #12]
 800eae6:	68fb      	ldr	r3, [r7, #12]
 800eae8:	3318      	adds	r3, #24
 800eaea:	4618      	mov	r0, r3
 800eaec:	f7ff f992 	bl	800de14 <uxListRemove>
 800eaf0:	68fb      	ldr	r3, [r7, #12]
 800eaf2:	3304      	adds	r3, #4
 800eaf4:	4618      	mov	r0, r3
 800eaf6:	f7ff f98d 	bl	800de14 <uxListRemove>
 800eafa:	68fb      	ldr	r3, [r7, #12]
 800eafc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eafe:	2201      	movs	r2, #1
 800eb00:	409a      	lsls	r2, r3
 800eb02:	4b2c      	ldr	r3, [pc, #176]	@ (800ebb4 <xTaskResumeAll+0x124>)
 800eb04:	681b      	ldr	r3, [r3, #0]
 800eb06:	4313      	orrs	r3, r2
 800eb08:	4a2a      	ldr	r2, [pc, #168]	@ (800ebb4 <xTaskResumeAll+0x124>)
 800eb0a:	6013      	str	r3, [r2, #0]
 800eb0c:	68fb      	ldr	r3, [r7, #12]
 800eb0e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eb10:	4613      	mov	r3, r2
 800eb12:	009b      	lsls	r3, r3, #2
 800eb14:	4413      	add	r3, r2
 800eb16:	009b      	lsls	r3, r3, #2
 800eb18:	4a27      	ldr	r2, [pc, #156]	@ (800ebb8 <xTaskResumeAll+0x128>)
 800eb1a:	441a      	add	r2, r3
 800eb1c:	68fb      	ldr	r3, [r7, #12]
 800eb1e:	3304      	adds	r3, #4
 800eb20:	4619      	mov	r1, r3
 800eb22:	4610      	mov	r0, r2
 800eb24:	f7ff f919 	bl	800dd5a <vListInsertEnd>
 800eb28:	68fb      	ldr	r3, [r7, #12]
 800eb2a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eb2c:	4b23      	ldr	r3, [pc, #140]	@ (800ebbc <xTaskResumeAll+0x12c>)
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb32:	429a      	cmp	r2, r3
 800eb34:	d302      	bcc.n	800eb3c <xTaskResumeAll+0xac>
 800eb36:	4b22      	ldr	r3, [pc, #136]	@ (800ebc0 <xTaskResumeAll+0x130>)
 800eb38:	2201      	movs	r2, #1
 800eb3a:	601a      	str	r2, [r3, #0]
 800eb3c:	4b1c      	ldr	r3, [pc, #112]	@ (800ebb0 <xTaskResumeAll+0x120>)
 800eb3e:	681b      	ldr	r3, [r3, #0]
 800eb40:	2b00      	cmp	r3, #0
 800eb42:	d1cc      	bne.n	800eade <xTaskResumeAll+0x4e>
 800eb44:	68fb      	ldr	r3, [r7, #12]
 800eb46:	2b00      	cmp	r3, #0
 800eb48:	d001      	beq.n	800eb4e <xTaskResumeAll+0xbe>
 800eb4a:	f000 fb43 	bl	800f1d4 <prvResetNextTaskUnblockTime>
 800eb4e:	4b1d      	ldr	r3, [pc, #116]	@ (800ebc4 <xTaskResumeAll+0x134>)
 800eb50:	681b      	ldr	r3, [r3, #0]
 800eb52:	607b      	str	r3, [r7, #4]
 800eb54:	687b      	ldr	r3, [r7, #4]
 800eb56:	2b00      	cmp	r3, #0
 800eb58:	d010      	beq.n	800eb7c <xTaskResumeAll+0xec>
 800eb5a:	f000 f837 	bl	800ebcc <xTaskIncrementTick>
 800eb5e:	4603      	mov	r3, r0
 800eb60:	2b00      	cmp	r3, #0
 800eb62:	d002      	beq.n	800eb6a <xTaskResumeAll+0xda>
 800eb64:	4b16      	ldr	r3, [pc, #88]	@ (800ebc0 <xTaskResumeAll+0x130>)
 800eb66:	2201      	movs	r2, #1
 800eb68:	601a      	str	r2, [r3, #0]
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	3b01      	subs	r3, #1
 800eb6e:	607b      	str	r3, [r7, #4]
 800eb70:	687b      	ldr	r3, [r7, #4]
 800eb72:	2b00      	cmp	r3, #0
 800eb74:	d1f1      	bne.n	800eb5a <xTaskResumeAll+0xca>
 800eb76:	4b13      	ldr	r3, [pc, #76]	@ (800ebc4 <xTaskResumeAll+0x134>)
 800eb78:	2200      	movs	r2, #0
 800eb7a:	601a      	str	r2, [r3, #0]
 800eb7c:	4b10      	ldr	r3, [pc, #64]	@ (800ebc0 <xTaskResumeAll+0x130>)
 800eb7e:	681b      	ldr	r3, [r3, #0]
 800eb80:	2b00      	cmp	r3, #0
 800eb82:	d009      	beq.n	800eb98 <xTaskResumeAll+0x108>
 800eb84:	2301      	movs	r3, #1
 800eb86:	60bb      	str	r3, [r7, #8]
 800eb88:	4b0f      	ldr	r3, [pc, #60]	@ (800ebc8 <xTaskResumeAll+0x138>)
 800eb8a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800eb8e:	601a      	str	r2, [r3, #0]
 800eb90:	f3bf 8f4f 	dsb	sy
 800eb94:	f3bf 8f6f 	isb	sy
 800eb98:	f000 fe40 	bl	800f81c <vPortExitCritical>
 800eb9c:	68bb      	ldr	r3, [r7, #8]
 800eb9e:	4618      	mov	r0, r3
 800eba0:	3710      	adds	r7, #16
 800eba2:	46bd      	mov	sp, r7
 800eba4:	bd80      	pop	{r7, pc}
 800eba6:	bf00      	nop
 800eba8:	20001708 	.word	0x20001708
 800ebac:	200016e0 	.word	0x200016e0
 800ebb0:	200016a0 	.word	0x200016a0
 800ebb4:	200016e8 	.word	0x200016e8
 800ebb8:	200015e4 	.word	0x200015e4
 800ebbc:	200015e0 	.word	0x200015e0
 800ebc0:	200016f4 	.word	0x200016f4
 800ebc4:	200016f0 	.word	0x200016f0
 800ebc8:	e000ed04 	.word	0xe000ed04

0800ebcc <xTaskIncrementTick>:
 800ebcc:	b580      	push	{r7, lr}
 800ebce:	b086      	sub	sp, #24
 800ebd0:	af00      	add	r7, sp, #0
 800ebd2:	2300      	movs	r3, #0
 800ebd4:	617b      	str	r3, [r7, #20]
 800ebd6:	4b4f      	ldr	r3, [pc, #316]	@ (800ed14 <xTaskIncrementTick+0x148>)
 800ebd8:	681b      	ldr	r3, [r3, #0]
 800ebda:	2b00      	cmp	r3, #0
 800ebdc:	f040 808f 	bne.w	800ecfe <xTaskIncrementTick+0x132>
 800ebe0:	4b4d      	ldr	r3, [pc, #308]	@ (800ed18 <xTaskIncrementTick+0x14c>)
 800ebe2:	681b      	ldr	r3, [r3, #0]
 800ebe4:	3301      	adds	r3, #1
 800ebe6:	613b      	str	r3, [r7, #16]
 800ebe8:	4a4b      	ldr	r2, [pc, #300]	@ (800ed18 <xTaskIncrementTick+0x14c>)
 800ebea:	693b      	ldr	r3, [r7, #16]
 800ebec:	6013      	str	r3, [r2, #0]
 800ebee:	693b      	ldr	r3, [r7, #16]
 800ebf0:	2b00      	cmp	r3, #0
 800ebf2:	d121      	bne.n	800ec38 <xTaskIncrementTick+0x6c>
 800ebf4:	4b49      	ldr	r3, [pc, #292]	@ (800ed1c <xTaskIncrementTick+0x150>)
 800ebf6:	681b      	ldr	r3, [r3, #0]
 800ebf8:	681b      	ldr	r3, [r3, #0]
 800ebfa:	2b00      	cmp	r3, #0
 800ebfc:	d00b      	beq.n	800ec16 <xTaskIncrementTick+0x4a>
 800ebfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec02:	f383 8811 	msr	BASEPRI, r3
 800ec06:	f3bf 8f6f 	isb	sy
 800ec0a:	f3bf 8f4f 	dsb	sy
 800ec0e:	603b      	str	r3, [r7, #0]
 800ec10:	bf00      	nop
 800ec12:	bf00      	nop
 800ec14:	e7fd      	b.n	800ec12 <xTaskIncrementTick+0x46>
 800ec16:	4b41      	ldr	r3, [pc, #260]	@ (800ed1c <xTaskIncrementTick+0x150>)
 800ec18:	681b      	ldr	r3, [r3, #0]
 800ec1a:	60fb      	str	r3, [r7, #12]
 800ec1c:	4b40      	ldr	r3, [pc, #256]	@ (800ed20 <xTaskIncrementTick+0x154>)
 800ec1e:	681b      	ldr	r3, [r3, #0]
 800ec20:	4a3e      	ldr	r2, [pc, #248]	@ (800ed1c <xTaskIncrementTick+0x150>)
 800ec22:	6013      	str	r3, [r2, #0]
 800ec24:	4a3e      	ldr	r2, [pc, #248]	@ (800ed20 <xTaskIncrementTick+0x154>)
 800ec26:	68fb      	ldr	r3, [r7, #12]
 800ec28:	6013      	str	r3, [r2, #0]
 800ec2a:	4b3e      	ldr	r3, [pc, #248]	@ (800ed24 <xTaskIncrementTick+0x158>)
 800ec2c:	681b      	ldr	r3, [r3, #0]
 800ec2e:	3301      	adds	r3, #1
 800ec30:	4a3c      	ldr	r2, [pc, #240]	@ (800ed24 <xTaskIncrementTick+0x158>)
 800ec32:	6013      	str	r3, [r2, #0]
 800ec34:	f000 face 	bl	800f1d4 <prvResetNextTaskUnblockTime>
 800ec38:	4b3b      	ldr	r3, [pc, #236]	@ (800ed28 <xTaskIncrementTick+0x15c>)
 800ec3a:	681b      	ldr	r3, [r3, #0]
 800ec3c:	693a      	ldr	r2, [r7, #16]
 800ec3e:	429a      	cmp	r2, r3
 800ec40:	d348      	bcc.n	800ecd4 <xTaskIncrementTick+0x108>
 800ec42:	4b36      	ldr	r3, [pc, #216]	@ (800ed1c <xTaskIncrementTick+0x150>)
 800ec44:	681b      	ldr	r3, [r3, #0]
 800ec46:	681b      	ldr	r3, [r3, #0]
 800ec48:	2b00      	cmp	r3, #0
 800ec4a:	d104      	bne.n	800ec56 <xTaskIncrementTick+0x8a>
 800ec4c:	4b36      	ldr	r3, [pc, #216]	@ (800ed28 <xTaskIncrementTick+0x15c>)
 800ec4e:	f04f 32ff 	mov.w	r2, #4294967295
 800ec52:	601a      	str	r2, [r3, #0]
 800ec54:	e03e      	b.n	800ecd4 <xTaskIncrementTick+0x108>
 800ec56:	4b31      	ldr	r3, [pc, #196]	@ (800ed1c <xTaskIncrementTick+0x150>)
 800ec58:	681b      	ldr	r3, [r3, #0]
 800ec5a:	68db      	ldr	r3, [r3, #12]
 800ec5c:	68db      	ldr	r3, [r3, #12]
 800ec5e:	60bb      	str	r3, [r7, #8]
 800ec60:	68bb      	ldr	r3, [r7, #8]
 800ec62:	685b      	ldr	r3, [r3, #4]
 800ec64:	607b      	str	r3, [r7, #4]
 800ec66:	693a      	ldr	r2, [r7, #16]
 800ec68:	687b      	ldr	r3, [r7, #4]
 800ec6a:	429a      	cmp	r2, r3
 800ec6c:	d203      	bcs.n	800ec76 <xTaskIncrementTick+0xaa>
 800ec6e:	4a2e      	ldr	r2, [pc, #184]	@ (800ed28 <xTaskIncrementTick+0x15c>)
 800ec70:	687b      	ldr	r3, [r7, #4]
 800ec72:	6013      	str	r3, [r2, #0]
 800ec74:	e02e      	b.n	800ecd4 <xTaskIncrementTick+0x108>
 800ec76:	68bb      	ldr	r3, [r7, #8]
 800ec78:	3304      	adds	r3, #4
 800ec7a:	4618      	mov	r0, r3
 800ec7c:	f7ff f8ca 	bl	800de14 <uxListRemove>
 800ec80:	68bb      	ldr	r3, [r7, #8]
 800ec82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ec84:	2b00      	cmp	r3, #0
 800ec86:	d004      	beq.n	800ec92 <xTaskIncrementTick+0xc6>
 800ec88:	68bb      	ldr	r3, [r7, #8]
 800ec8a:	3318      	adds	r3, #24
 800ec8c:	4618      	mov	r0, r3
 800ec8e:	f7ff f8c1 	bl	800de14 <uxListRemove>
 800ec92:	68bb      	ldr	r3, [r7, #8]
 800ec94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ec96:	2201      	movs	r2, #1
 800ec98:	409a      	lsls	r2, r3
 800ec9a:	4b24      	ldr	r3, [pc, #144]	@ (800ed2c <xTaskIncrementTick+0x160>)
 800ec9c:	681b      	ldr	r3, [r3, #0]
 800ec9e:	4313      	orrs	r3, r2
 800eca0:	4a22      	ldr	r2, [pc, #136]	@ (800ed2c <xTaskIncrementTick+0x160>)
 800eca2:	6013      	str	r3, [r2, #0]
 800eca4:	68bb      	ldr	r3, [r7, #8]
 800eca6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eca8:	4613      	mov	r3, r2
 800ecaa:	009b      	lsls	r3, r3, #2
 800ecac:	4413      	add	r3, r2
 800ecae:	009b      	lsls	r3, r3, #2
 800ecb0:	4a1f      	ldr	r2, [pc, #124]	@ (800ed30 <xTaskIncrementTick+0x164>)
 800ecb2:	441a      	add	r2, r3
 800ecb4:	68bb      	ldr	r3, [r7, #8]
 800ecb6:	3304      	adds	r3, #4
 800ecb8:	4619      	mov	r1, r3
 800ecba:	4610      	mov	r0, r2
 800ecbc:	f7ff f84d 	bl	800dd5a <vListInsertEnd>
 800ecc0:	68bb      	ldr	r3, [r7, #8]
 800ecc2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ecc4:	4b1b      	ldr	r3, [pc, #108]	@ (800ed34 <xTaskIncrementTick+0x168>)
 800ecc6:	681b      	ldr	r3, [r3, #0]
 800ecc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecca:	429a      	cmp	r2, r3
 800eccc:	d3b9      	bcc.n	800ec42 <xTaskIncrementTick+0x76>
 800ecce:	2301      	movs	r3, #1
 800ecd0:	617b      	str	r3, [r7, #20]
 800ecd2:	e7b6      	b.n	800ec42 <xTaskIncrementTick+0x76>
 800ecd4:	4b17      	ldr	r3, [pc, #92]	@ (800ed34 <xTaskIncrementTick+0x168>)
 800ecd6:	681b      	ldr	r3, [r3, #0]
 800ecd8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ecda:	4915      	ldr	r1, [pc, #84]	@ (800ed30 <xTaskIncrementTick+0x164>)
 800ecdc:	4613      	mov	r3, r2
 800ecde:	009b      	lsls	r3, r3, #2
 800ece0:	4413      	add	r3, r2
 800ece2:	009b      	lsls	r3, r3, #2
 800ece4:	440b      	add	r3, r1
 800ece6:	681b      	ldr	r3, [r3, #0]
 800ece8:	2b01      	cmp	r3, #1
 800ecea:	d901      	bls.n	800ecf0 <xTaskIncrementTick+0x124>
 800ecec:	2301      	movs	r3, #1
 800ecee:	617b      	str	r3, [r7, #20]
 800ecf0:	4b11      	ldr	r3, [pc, #68]	@ (800ed38 <xTaskIncrementTick+0x16c>)
 800ecf2:	681b      	ldr	r3, [r3, #0]
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	d007      	beq.n	800ed08 <xTaskIncrementTick+0x13c>
 800ecf8:	2301      	movs	r3, #1
 800ecfa:	617b      	str	r3, [r7, #20]
 800ecfc:	e004      	b.n	800ed08 <xTaskIncrementTick+0x13c>
 800ecfe:	4b0f      	ldr	r3, [pc, #60]	@ (800ed3c <xTaskIncrementTick+0x170>)
 800ed00:	681b      	ldr	r3, [r3, #0]
 800ed02:	3301      	adds	r3, #1
 800ed04:	4a0d      	ldr	r2, [pc, #52]	@ (800ed3c <xTaskIncrementTick+0x170>)
 800ed06:	6013      	str	r3, [r2, #0]
 800ed08:	697b      	ldr	r3, [r7, #20]
 800ed0a:	4618      	mov	r0, r3
 800ed0c:	3718      	adds	r7, #24
 800ed0e:	46bd      	mov	sp, r7
 800ed10:	bd80      	pop	{r7, pc}
 800ed12:	bf00      	nop
 800ed14:	20001708 	.word	0x20001708
 800ed18:	200016e4 	.word	0x200016e4
 800ed1c:	20001698 	.word	0x20001698
 800ed20:	2000169c 	.word	0x2000169c
 800ed24:	200016f8 	.word	0x200016f8
 800ed28:	20001700 	.word	0x20001700
 800ed2c:	200016e8 	.word	0x200016e8
 800ed30:	200015e4 	.word	0x200015e4
 800ed34:	200015e0 	.word	0x200015e0
 800ed38:	200016f4 	.word	0x200016f4
 800ed3c:	200016f0 	.word	0x200016f0

0800ed40 <vTaskSwitchContext>:
 800ed40:	b580      	push	{r7, lr}
 800ed42:	b086      	sub	sp, #24
 800ed44:	af00      	add	r7, sp, #0
 800ed46:	4b35      	ldr	r3, [pc, #212]	@ (800ee1c <vTaskSwitchContext+0xdc>)
 800ed48:	681b      	ldr	r3, [r3, #0]
 800ed4a:	2b00      	cmp	r3, #0
 800ed4c:	d003      	beq.n	800ed56 <vTaskSwitchContext+0x16>
 800ed4e:	4b34      	ldr	r3, [pc, #208]	@ (800ee20 <vTaskSwitchContext+0xe0>)
 800ed50:	2201      	movs	r2, #1
 800ed52:	601a      	str	r2, [r3, #0]
 800ed54:	e05e      	b.n	800ee14 <vTaskSwitchContext+0xd4>
 800ed56:	4b32      	ldr	r3, [pc, #200]	@ (800ee20 <vTaskSwitchContext+0xe0>)
 800ed58:	2200      	movs	r2, #0
 800ed5a:	601a      	str	r2, [r3, #0]
 800ed5c:	f7f3 fbd0 	bl	8002500 <getRunTimeCounterValue>
 800ed60:	4603      	mov	r3, r0
 800ed62:	4a30      	ldr	r2, [pc, #192]	@ (800ee24 <vTaskSwitchContext+0xe4>)
 800ed64:	6013      	str	r3, [r2, #0]
 800ed66:	4b2f      	ldr	r3, [pc, #188]	@ (800ee24 <vTaskSwitchContext+0xe4>)
 800ed68:	681a      	ldr	r2, [r3, #0]
 800ed6a:	4b2f      	ldr	r3, [pc, #188]	@ (800ee28 <vTaskSwitchContext+0xe8>)
 800ed6c:	681b      	ldr	r3, [r3, #0]
 800ed6e:	429a      	cmp	r2, r3
 800ed70:	d909      	bls.n	800ed86 <vTaskSwitchContext+0x46>
 800ed72:	4b2e      	ldr	r3, [pc, #184]	@ (800ee2c <vTaskSwitchContext+0xec>)
 800ed74:	681b      	ldr	r3, [r3, #0]
 800ed76:	6d99      	ldr	r1, [r3, #88]	@ 0x58
 800ed78:	4a2a      	ldr	r2, [pc, #168]	@ (800ee24 <vTaskSwitchContext+0xe4>)
 800ed7a:	6810      	ldr	r0, [r2, #0]
 800ed7c:	4a2a      	ldr	r2, [pc, #168]	@ (800ee28 <vTaskSwitchContext+0xe8>)
 800ed7e:	6812      	ldr	r2, [r2, #0]
 800ed80:	1a82      	subs	r2, r0, r2
 800ed82:	440a      	add	r2, r1
 800ed84:	659a      	str	r2, [r3, #88]	@ 0x58
 800ed86:	4b27      	ldr	r3, [pc, #156]	@ (800ee24 <vTaskSwitchContext+0xe4>)
 800ed88:	681b      	ldr	r3, [r3, #0]
 800ed8a:	4a27      	ldr	r2, [pc, #156]	@ (800ee28 <vTaskSwitchContext+0xe8>)
 800ed8c:	6013      	str	r3, [r2, #0]
 800ed8e:	4b28      	ldr	r3, [pc, #160]	@ (800ee30 <vTaskSwitchContext+0xf0>)
 800ed90:	681b      	ldr	r3, [r3, #0]
 800ed92:	60fb      	str	r3, [r7, #12]
 800ed94:	68fb      	ldr	r3, [r7, #12]
 800ed96:	fab3 f383 	clz	r3, r3
 800ed9a:	72fb      	strb	r3, [r7, #11]
 800ed9c:	7afb      	ldrb	r3, [r7, #11]
 800ed9e:	f1c3 031f 	rsb	r3, r3, #31
 800eda2:	617b      	str	r3, [r7, #20]
 800eda4:	4923      	ldr	r1, [pc, #140]	@ (800ee34 <vTaskSwitchContext+0xf4>)
 800eda6:	697a      	ldr	r2, [r7, #20]
 800eda8:	4613      	mov	r3, r2
 800edaa:	009b      	lsls	r3, r3, #2
 800edac:	4413      	add	r3, r2
 800edae:	009b      	lsls	r3, r3, #2
 800edb0:	440b      	add	r3, r1
 800edb2:	681b      	ldr	r3, [r3, #0]
 800edb4:	2b00      	cmp	r3, #0
 800edb6:	d10b      	bne.n	800edd0 <vTaskSwitchContext+0x90>
 800edb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800edbc:	f383 8811 	msr	BASEPRI, r3
 800edc0:	f3bf 8f6f 	isb	sy
 800edc4:	f3bf 8f4f 	dsb	sy
 800edc8:	607b      	str	r3, [r7, #4]
 800edca:	bf00      	nop
 800edcc:	bf00      	nop
 800edce:	e7fd      	b.n	800edcc <vTaskSwitchContext+0x8c>
 800edd0:	697a      	ldr	r2, [r7, #20]
 800edd2:	4613      	mov	r3, r2
 800edd4:	009b      	lsls	r3, r3, #2
 800edd6:	4413      	add	r3, r2
 800edd8:	009b      	lsls	r3, r3, #2
 800edda:	4a16      	ldr	r2, [pc, #88]	@ (800ee34 <vTaskSwitchContext+0xf4>)
 800eddc:	4413      	add	r3, r2
 800edde:	613b      	str	r3, [r7, #16]
 800ede0:	693b      	ldr	r3, [r7, #16]
 800ede2:	685b      	ldr	r3, [r3, #4]
 800ede4:	685a      	ldr	r2, [r3, #4]
 800ede6:	693b      	ldr	r3, [r7, #16]
 800ede8:	605a      	str	r2, [r3, #4]
 800edea:	693b      	ldr	r3, [r7, #16]
 800edec:	685a      	ldr	r2, [r3, #4]
 800edee:	693b      	ldr	r3, [r7, #16]
 800edf0:	3308      	adds	r3, #8
 800edf2:	429a      	cmp	r2, r3
 800edf4:	d104      	bne.n	800ee00 <vTaskSwitchContext+0xc0>
 800edf6:	693b      	ldr	r3, [r7, #16]
 800edf8:	685b      	ldr	r3, [r3, #4]
 800edfa:	685a      	ldr	r2, [r3, #4]
 800edfc:	693b      	ldr	r3, [r7, #16]
 800edfe:	605a      	str	r2, [r3, #4]
 800ee00:	693b      	ldr	r3, [r7, #16]
 800ee02:	685b      	ldr	r3, [r3, #4]
 800ee04:	68db      	ldr	r3, [r3, #12]
 800ee06:	4a09      	ldr	r2, [pc, #36]	@ (800ee2c <vTaskSwitchContext+0xec>)
 800ee08:	6013      	str	r3, [r2, #0]
 800ee0a:	4b08      	ldr	r3, [pc, #32]	@ (800ee2c <vTaskSwitchContext+0xec>)
 800ee0c:	681b      	ldr	r3, [r3, #0]
 800ee0e:	335c      	adds	r3, #92	@ 0x5c
 800ee10:	4a09      	ldr	r2, [pc, #36]	@ (800ee38 <vTaskSwitchContext+0xf8>)
 800ee12:	6013      	str	r3, [r2, #0]
 800ee14:	bf00      	nop
 800ee16:	3718      	adds	r7, #24
 800ee18:	46bd      	mov	sp, r7
 800ee1a:	bd80      	pop	{r7, pc}
 800ee1c:	20001708 	.word	0x20001708
 800ee20:	200016f4 	.word	0x200016f4
 800ee24:	20001710 	.word	0x20001710
 800ee28:	2000170c 	.word	0x2000170c
 800ee2c:	200015e0 	.word	0x200015e0
 800ee30:	200016e8 	.word	0x200016e8
 800ee34:	200015e4 	.word	0x200015e4
 800ee38:	200001f0 	.word	0x200001f0

0800ee3c <vTaskPlaceOnEventList>:
 800ee3c:	b580      	push	{r7, lr}
 800ee3e:	b084      	sub	sp, #16
 800ee40:	af00      	add	r7, sp, #0
 800ee42:	6078      	str	r0, [r7, #4]
 800ee44:	6039      	str	r1, [r7, #0]
 800ee46:	687b      	ldr	r3, [r7, #4]
 800ee48:	2b00      	cmp	r3, #0
 800ee4a:	d10b      	bne.n	800ee64 <vTaskPlaceOnEventList+0x28>
 800ee4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee50:	f383 8811 	msr	BASEPRI, r3
 800ee54:	f3bf 8f6f 	isb	sy
 800ee58:	f3bf 8f4f 	dsb	sy
 800ee5c:	60fb      	str	r3, [r7, #12]
 800ee5e:	bf00      	nop
 800ee60:	bf00      	nop
 800ee62:	e7fd      	b.n	800ee60 <vTaskPlaceOnEventList+0x24>
 800ee64:	4b07      	ldr	r3, [pc, #28]	@ (800ee84 <vTaskPlaceOnEventList+0x48>)
 800ee66:	681b      	ldr	r3, [r3, #0]
 800ee68:	3318      	adds	r3, #24
 800ee6a:	4619      	mov	r1, r3
 800ee6c:	6878      	ldr	r0, [r7, #4]
 800ee6e:	f7fe ff98 	bl	800dda2 <vListInsert>
 800ee72:	2101      	movs	r1, #1
 800ee74:	6838      	ldr	r0, [r7, #0]
 800ee76:	f000 fb05 	bl	800f484 <prvAddCurrentTaskToDelayedList>
 800ee7a:	bf00      	nop
 800ee7c:	3710      	adds	r7, #16
 800ee7e:	46bd      	mov	sp, r7
 800ee80:	bd80      	pop	{r7, pc}
 800ee82:	bf00      	nop
 800ee84:	200015e0 	.word	0x200015e0

0800ee88 <xTaskRemoveFromEventList>:
 800ee88:	b580      	push	{r7, lr}
 800ee8a:	b086      	sub	sp, #24
 800ee8c:	af00      	add	r7, sp, #0
 800ee8e:	6078      	str	r0, [r7, #4]
 800ee90:	687b      	ldr	r3, [r7, #4]
 800ee92:	68db      	ldr	r3, [r3, #12]
 800ee94:	68db      	ldr	r3, [r3, #12]
 800ee96:	613b      	str	r3, [r7, #16]
 800ee98:	693b      	ldr	r3, [r7, #16]
 800ee9a:	2b00      	cmp	r3, #0
 800ee9c:	d10b      	bne.n	800eeb6 <xTaskRemoveFromEventList+0x2e>
 800ee9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eea2:	f383 8811 	msr	BASEPRI, r3
 800eea6:	f3bf 8f6f 	isb	sy
 800eeaa:	f3bf 8f4f 	dsb	sy
 800eeae:	60fb      	str	r3, [r7, #12]
 800eeb0:	bf00      	nop
 800eeb2:	bf00      	nop
 800eeb4:	e7fd      	b.n	800eeb2 <xTaskRemoveFromEventList+0x2a>
 800eeb6:	693b      	ldr	r3, [r7, #16]
 800eeb8:	3318      	adds	r3, #24
 800eeba:	4618      	mov	r0, r3
 800eebc:	f7fe ffaa 	bl	800de14 <uxListRemove>
 800eec0:	4b1d      	ldr	r3, [pc, #116]	@ (800ef38 <xTaskRemoveFromEventList+0xb0>)
 800eec2:	681b      	ldr	r3, [r3, #0]
 800eec4:	2b00      	cmp	r3, #0
 800eec6:	d11c      	bne.n	800ef02 <xTaskRemoveFromEventList+0x7a>
 800eec8:	693b      	ldr	r3, [r7, #16]
 800eeca:	3304      	adds	r3, #4
 800eecc:	4618      	mov	r0, r3
 800eece:	f7fe ffa1 	bl	800de14 <uxListRemove>
 800eed2:	693b      	ldr	r3, [r7, #16]
 800eed4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eed6:	2201      	movs	r2, #1
 800eed8:	409a      	lsls	r2, r3
 800eeda:	4b18      	ldr	r3, [pc, #96]	@ (800ef3c <xTaskRemoveFromEventList+0xb4>)
 800eedc:	681b      	ldr	r3, [r3, #0]
 800eede:	4313      	orrs	r3, r2
 800eee0:	4a16      	ldr	r2, [pc, #88]	@ (800ef3c <xTaskRemoveFromEventList+0xb4>)
 800eee2:	6013      	str	r3, [r2, #0]
 800eee4:	693b      	ldr	r3, [r7, #16]
 800eee6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800eee8:	4613      	mov	r3, r2
 800eeea:	009b      	lsls	r3, r3, #2
 800eeec:	4413      	add	r3, r2
 800eeee:	009b      	lsls	r3, r3, #2
 800eef0:	4a13      	ldr	r2, [pc, #76]	@ (800ef40 <xTaskRemoveFromEventList+0xb8>)
 800eef2:	441a      	add	r2, r3
 800eef4:	693b      	ldr	r3, [r7, #16]
 800eef6:	3304      	adds	r3, #4
 800eef8:	4619      	mov	r1, r3
 800eefa:	4610      	mov	r0, r2
 800eefc:	f7fe ff2d 	bl	800dd5a <vListInsertEnd>
 800ef00:	e005      	b.n	800ef0e <xTaskRemoveFromEventList+0x86>
 800ef02:	693b      	ldr	r3, [r7, #16]
 800ef04:	3318      	adds	r3, #24
 800ef06:	4619      	mov	r1, r3
 800ef08:	480e      	ldr	r0, [pc, #56]	@ (800ef44 <xTaskRemoveFromEventList+0xbc>)
 800ef0a:	f7fe ff26 	bl	800dd5a <vListInsertEnd>
 800ef0e:	693b      	ldr	r3, [r7, #16]
 800ef10:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ef12:	4b0d      	ldr	r3, [pc, #52]	@ (800ef48 <xTaskRemoveFromEventList+0xc0>)
 800ef14:	681b      	ldr	r3, [r3, #0]
 800ef16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ef18:	429a      	cmp	r2, r3
 800ef1a:	d905      	bls.n	800ef28 <xTaskRemoveFromEventList+0xa0>
 800ef1c:	2301      	movs	r3, #1
 800ef1e:	617b      	str	r3, [r7, #20]
 800ef20:	4b0a      	ldr	r3, [pc, #40]	@ (800ef4c <xTaskRemoveFromEventList+0xc4>)
 800ef22:	2201      	movs	r2, #1
 800ef24:	601a      	str	r2, [r3, #0]
 800ef26:	e001      	b.n	800ef2c <xTaskRemoveFromEventList+0xa4>
 800ef28:	2300      	movs	r3, #0
 800ef2a:	617b      	str	r3, [r7, #20]
 800ef2c:	697b      	ldr	r3, [r7, #20]
 800ef2e:	4618      	mov	r0, r3
 800ef30:	3718      	adds	r7, #24
 800ef32:	46bd      	mov	sp, r7
 800ef34:	bd80      	pop	{r7, pc}
 800ef36:	bf00      	nop
 800ef38:	20001708 	.word	0x20001708
 800ef3c:	200016e8 	.word	0x200016e8
 800ef40:	200015e4 	.word	0x200015e4
 800ef44:	200016a0 	.word	0x200016a0
 800ef48:	200015e0 	.word	0x200015e0
 800ef4c:	200016f4 	.word	0x200016f4

0800ef50 <vTaskInternalSetTimeOutState>:
 800ef50:	b480      	push	{r7}
 800ef52:	b083      	sub	sp, #12
 800ef54:	af00      	add	r7, sp, #0
 800ef56:	6078      	str	r0, [r7, #4]
 800ef58:	4b06      	ldr	r3, [pc, #24]	@ (800ef74 <vTaskInternalSetTimeOutState+0x24>)
 800ef5a:	681a      	ldr	r2, [r3, #0]
 800ef5c:	687b      	ldr	r3, [r7, #4]
 800ef5e:	601a      	str	r2, [r3, #0]
 800ef60:	4b05      	ldr	r3, [pc, #20]	@ (800ef78 <vTaskInternalSetTimeOutState+0x28>)
 800ef62:	681a      	ldr	r2, [r3, #0]
 800ef64:	687b      	ldr	r3, [r7, #4]
 800ef66:	605a      	str	r2, [r3, #4]
 800ef68:	bf00      	nop
 800ef6a:	370c      	adds	r7, #12
 800ef6c:	46bd      	mov	sp, r7
 800ef6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef72:	4770      	bx	lr
 800ef74:	200016f8 	.word	0x200016f8
 800ef78:	200016e4 	.word	0x200016e4

0800ef7c <xTaskCheckForTimeOut>:
 800ef7c:	b580      	push	{r7, lr}
 800ef7e:	b088      	sub	sp, #32
 800ef80:	af00      	add	r7, sp, #0
 800ef82:	6078      	str	r0, [r7, #4]
 800ef84:	6039      	str	r1, [r7, #0]
 800ef86:	687b      	ldr	r3, [r7, #4]
 800ef88:	2b00      	cmp	r3, #0
 800ef8a:	d10b      	bne.n	800efa4 <xTaskCheckForTimeOut+0x28>
 800ef8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ef90:	f383 8811 	msr	BASEPRI, r3
 800ef94:	f3bf 8f6f 	isb	sy
 800ef98:	f3bf 8f4f 	dsb	sy
 800ef9c:	613b      	str	r3, [r7, #16]
 800ef9e:	bf00      	nop
 800efa0:	bf00      	nop
 800efa2:	e7fd      	b.n	800efa0 <xTaskCheckForTimeOut+0x24>
 800efa4:	683b      	ldr	r3, [r7, #0]
 800efa6:	2b00      	cmp	r3, #0
 800efa8:	d10b      	bne.n	800efc2 <xTaskCheckForTimeOut+0x46>
 800efaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800efae:	f383 8811 	msr	BASEPRI, r3
 800efb2:	f3bf 8f6f 	isb	sy
 800efb6:	f3bf 8f4f 	dsb	sy
 800efba:	60fb      	str	r3, [r7, #12]
 800efbc:	bf00      	nop
 800efbe:	bf00      	nop
 800efc0:	e7fd      	b.n	800efbe <xTaskCheckForTimeOut+0x42>
 800efc2:	f000 fbf9 	bl	800f7b8 <vPortEnterCritical>
 800efc6:	4b1d      	ldr	r3, [pc, #116]	@ (800f03c <xTaskCheckForTimeOut+0xc0>)
 800efc8:	681b      	ldr	r3, [r3, #0]
 800efca:	61bb      	str	r3, [r7, #24]
 800efcc:	687b      	ldr	r3, [r7, #4]
 800efce:	685b      	ldr	r3, [r3, #4]
 800efd0:	69ba      	ldr	r2, [r7, #24]
 800efd2:	1ad3      	subs	r3, r2, r3
 800efd4:	617b      	str	r3, [r7, #20]
 800efd6:	683b      	ldr	r3, [r7, #0]
 800efd8:	681b      	ldr	r3, [r3, #0]
 800efda:	f1b3 3fff 	cmp.w	r3, #4294967295
 800efde:	d102      	bne.n	800efe6 <xTaskCheckForTimeOut+0x6a>
 800efe0:	2300      	movs	r3, #0
 800efe2:	61fb      	str	r3, [r7, #28]
 800efe4:	e023      	b.n	800f02e <xTaskCheckForTimeOut+0xb2>
 800efe6:	687b      	ldr	r3, [r7, #4]
 800efe8:	681a      	ldr	r2, [r3, #0]
 800efea:	4b15      	ldr	r3, [pc, #84]	@ (800f040 <xTaskCheckForTimeOut+0xc4>)
 800efec:	681b      	ldr	r3, [r3, #0]
 800efee:	429a      	cmp	r2, r3
 800eff0:	d007      	beq.n	800f002 <xTaskCheckForTimeOut+0x86>
 800eff2:	687b      	ldr	r3, [r7, #4]
 800eff4:	685b      	ldr	r3, [r3, #4]
 800eff6:	69ba      	ldr	r2, [r7, #24]
 800eff8:	429a      	cmp	r2, r3
 800effa:	d302      	bcc.n	800f002 <xTaskCheckForTimeOut+0x86>
 800effc:	2301      	movs	r3, #1
 800effe:	61fb      	str	r3, [r7, #28]
 800f000:	e015      	b.n	800f02e <xTaskCheckForTimeOut+0xb2>
 800f002:	683b      	ldr	r3, [r7, #0]
 800f004:	681b      	ldr	r3, [r3, #0]
 800f006:	697a      	ldr	r2, [r7, #20]
 800f008:	429a      	cmp	r2, r3
 800f00a:	d20b      	bcs.n	800f024 <xTaskCheckForTimeOut+0xa8>
 800f00c:	683b      	ldr	r3, [r7, #0]
 800f00e:	681a      	ldr	r2, [r3, #0]
 800f010:	697b      	ldr	r3, [r7, #20]
 800f012:	1ad2      	subs	r2, r2, r3
 800f014:	683b      	ldr	r3, [r7, #0]
 800f016:	601a      	str	r2, [r3, #0]
 800f018:	6878      	ldr	r0, [r7, #4]
 800f01a:	f7ff ff99 	bl	800ef50 <vTaskInternalSetTimeOutState>
 800f01e:	2300      	movs	r3, #0
 800f020:	61fb      	str	r3, [r7, #28]
 800f022:	e004      	b.n	800f02e <xTaskCheckForTimeOut+0xb2>
 800f024:	683b      	ldr	r3, [r7, #0]
 800f026:	2200      	movs	r2, #0
 800f028:	601a      	str	r2, [r3, #0]
 800f02a:	2301      	movs	r3, #1
 800f02c:	61fb      	str	r3, [r7, #28]
 800f02e:	f000 fbf5 	bl	800f81c <vPortExitCritical>
 800f032:	69fb      	ldr	r3, [r7, #28]
 800f034:	4618      	mov	r0, r3
 800f036:	3720      	adds	r7, #32
 800f038:	46bd      	mov	sp, r7
 800f03a:	bd80      	pop	{r7, pc}
 800f03c:	200016e4 	.word	0x200016e4
 800f040:	200016f8 	.word	0x200016f8

0800f044 <vTaskMissedYield>:
 800f044:	b480      	push	{r7}
 800f046:	af00      	add	r7, sp, #0
 800f048:	4b03      	ldr	r3, [pc, #12]	@ (800f058 <vTaskMissedYield+0x14>)
 800f04a:	2201      	movs	r2, #1
 800f04c:	601a      	str	r2, [r3, #0]
 800f04e:	bf00      	nop
 800f050:	46bd      	mov	sp, r7
 800f052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f056:	4770      	bx	lr
 800f058:	200016f4 	.word	0x200016f4

0800f05c <prvIdleTask>:
 800f05c:	b580      	push	{r7, lr}
 800f05e:	b082      	sub	sp, #8
 800f060:	af00      	add	r7, sp, #0
 800f062:	6078      	str	r0, [r7, #4]
 800f064:	f000 f852 	bl	800f10c <prvCheckTasksWaitingTermination>
 800f068:	4b06      	ldr	r3, [pc, #24]	@ (800f084 <prvIdleTask+0x28>)
 800f06a:	681b      	ldr	r3, [r3, #0]
 800f06c:	2b01      	cmp	r3, #1
 800f06e:	d9f9      	bls.n	800f064 <prvIdleTask+0x8>
 800f070:	4b05      	ldr	r3, [pc, #20]	@ (800f088 <prvIdleTask+0x2c>)
 800f072:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f076:	601a      	str	r2, [r3, #0]
 800f078:	f3bf 8f4f 	dsb	sy
 800f07c:	f3bf 8f6f 	isb	sy
 800f080:	e7f0      	b.n	800f064 <prvIdleTask+0x8>
 800f082:	bf00      	nop
 800f084:	200015e4 	.word	0x200015e4
 800f088:	e000ed04 	.word	0xe000ed04

0800f08c <prvInitialiseTaskLists>:
 800f08c:	b580      	push	{r7, lr}
 800f08e:	b082      	sub	sp, #8
 800f090:	af00      	add	r7, sp, #0
 800f092:	2300      	movs	r3, #0
 800f094:	607b      	str	r3, [r7, #4]
 800f096:	e00c      	b.n	800f0b2 <prvInitialiseTaskLists+0x26>
 800f098:	687a      	ldr	r2, [r7, #4]
 800f09a:	4613      	mov	r3, r2
 800f09c:	009b      	lsls	r3, r3, #2
 800f09e:	4413      	add	r3, r2
 800f0a0:	009b      	lsls	r3, r3, #2
 800f0a2:	4a12      	ldr	r2, [pc, #72]	@ (800f0ec <prvInitialiseTaskLists+0x60>)
 800f0a4:	4413      	add	r3, r2
 800f0a6:	4618      	mov	r0, r3
 800f0a8:	f7fe fe2a 	bl	800dd00 <vListInitialise>
 800f0ac:	687b      	ldr	r3, [r7, #4]
 800f0ae:	3301      	adds	r3, #1
 800f0b0:	607b      	str	r3, [r7, #4]
 800f0b2:	687b      	ldr	r3, [r7, #4]
 800f0b4:	2b06      	cmp	r3, #6
 800f0b6:	d9ef      	bls.n	800f098 <prvInitialiseTaskLists+0xc>
 800f0b8:	480d      	ldr	r0, [pc, #52]	@ (800f0f0 <prvInitialiseTaskLists+0x64>)
 800f0ba:	f7fe fe21 	bl	800dd00 <vListInitialise>
 800f0be:	480d      	ldr	r0, [pc, #52]	@ (800f0f4 <prvInitialiseTaskLists+0x68>)
 800f0c0:	f7fe fe1e 	bl	800dd00 <vListInitialise>
 800f0c4:	480c      	ldr	r0, [pc, #48]	@ (800f0f8 <prvInitialiseTaskLists+0x6c>)
 800f0c6:	f7fe fe1b 	bl	800dd00 <vListInitialise>
 800f0ca:	480c      	ldr	r0, [pc, #48]	@ (800f0fc <prvInitialiseTaskLists+0x70>)
 800f0cc:	f7fe fe18 	bl	800dd00 <vListInitialise>
 800f0d0:	480b      	ldr	r0, [pc, #44]	@ (800f100 <prvInitialiseTaskLists+0x74>)
 800f0d2:	f7fe fe15 	bl	800dd00 <vListInitialise>
 800f0d6:	4b0b      	ldr	r3, [pc, #44]	@ (800f104 <prvInitialiseTaskLists+0x78>)
 800f0d8:	4a05      	ldr	r2, [pc, #20]	@ (800f0f0 <prvInitialiseTaskLists+0x64>)
 800f0da:	601a      	str	r2, [r3, #0]
 800f0dc:	4b0a      	ldr	r3, [pc, #40]	@ (800f108 <prvInitialiseTaskLists+0x7c>)
 800f0de:	4a05      	ldr	r2, [pc, #20]	@ (800f0f4 <prvInitialiseTaskLists+0x68>)
 800f0e0:	601a      	str	r2, [r3, #0]
 800f0e2:	bf00      	nop
 800f0e4:	3708      	adds	r7, #8
 800f0e6:	46bd      	mov	sp, r7
 800f0e8:	bd80      	pop	{r7, pc}
 800f0ea:	bf00      	nop
 800f0ec:	200015e4 	.word	0x200015e4
 800f0f0:	20001670 	.word	0x20001670
 800f0f4:	20001684 	.word	0x20001684
 800f0f8:	200016a0 	.word	0x200016a0
 800f0fc:	200016b4 	.word	0x200016b4
 800f100:	200016cc 	.word	0x200016cc
 800f104:	20001698 	.word	0x20001698
 800f108:	2000169c 	.word	0x2000169c

0800f10c <prvCheckTasksWaitingTermination>:
 800f10c:	b580      	push	{r7, lr}
 800f10e:	b082      	sub	sp, #8
 800f110:	af00      	add	r7, sp, #0
 800f112:	e019      	b.n	800f148 <prvCheckTasksWaitingTermination+0x3c>
 800f114:	f000 fb50 	bl	800f7b8 <vPortEnterCritical>
 800f118:	4b10      	ldr	r3, [pc, #64]	@ (800f15c <prvCheckTasksWaitingTermination+0x50>)
 800f11a:	68db      	ldr	r3, [r3, #12]
 800f11c:	68db      	ldr	r3, [r3, #12]
 800f11e:	607b      	str	r3, [r7, #4]
 800f120:	687b      	ldr	r3, [r7, #4]
 800f122:	3304      	adds	r3, #4
 800f124:	4618      	mov	r0, r3
 800f126:	f7fe fe75 	bl	800de14 <uxListRemove>
 800f12a:	4b0d      	ldr	r3, [pc, #52]	@ (800f160 <prvCheckTasksWaitingTermination+0x54>)
 800f12c:	681b      	ldr	r3, [r3, #0]
 800f12e:	3b01      	subs	r3, #1
 800f130:	4a0b      	ldr	r2, [pc, #44]	@ (800f160 <prvCheckTasksWaitingTermination+0x54>)
 800f132:	6013      	str	r3, [r2, #0]
 800f134:	4b0b      	ldr	r3, [pc, #44]	@ (800f164 <prvCheckTasksWaitingTermination+0x58>)
 800f136:	681b      	ldr	r3, [r3, #0]
 800f138:	3b01      	subs	r3, #1
 800f13a:	4a0a      	ldr	r2, [pc, #40]	@ (800f164 <prvCheckTasksWaitingTermination+0x58>)
 800f13c:	6013      	str	r3, [r2, #0]
 800f13e:	f000 fb6d 	bl	800f81c <vPortExitCritical>
 800f142:	6878      	ldr	r0, [r7, #4]
 800f144:	f000 f810 	bl	800f168 <prvDeleteTCB>
 800f148:	4b06      	ldr	r3, [pc, #24]	@ (800f164 <prvCheckTasksWaitingTermination+0x58>)
 800f14a:	681b      	ldr	r3, [r3, #0]
 800f14c:	2b00      	cmp	r3, #0
 800f14e:	d1e1      	bne.n	800f114 <prvCheckTasksWaitingTermination+0x8>
 800f150:	bf00      	nop
 800f152:	bf00      	nop
 800f154:	3708      	adds	r7, #8
 800f156:	46bd      	mov	sp, r7
 800f158:	bd80      	pop	{r7, pc}
 800f15a:	bf00      	nop
 800f15c:	200016b4 	.word	0x200016b4
 800f160:	200016e0 	.word	0x200016e0
 800f164:	200016c8 	.word	0x200016c8

0800f168 <prvDeleteTCB>:
 800f168:	b580      	push	{r7, lr}
 800f16a:	b084      	sub	sp, #16
 800f16c:	af00      	add	r7, sp, #0
 800f16e:	6078      	str	r0, [r7, #4]
 800f170:	687b      	ldr	r3, [r7, #4]
 800f172:	335c      	adds	r3, #92	@ 0x5c
 800f174:	4618      	mov	r0, r3
 800f176:	f002 fcc9 	bl	8011b0c <_reclaim_reent>
 800f17a:	687b      	ldr	r3, [r7, #4]
 800f17c:	f893 30ad 	ldrb.w	r3, [r3, #173]	@ 0xad
 800f180:	2b00      	cmp	r3, #0
 800f182:	d108      	bne.n	800f196 <prvDeleteTCB+0x2e>
 800f184:	687b      	ldr	r3, [r7, #4]
 800f186:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f188:	4618      	mov	r0, r3
 800f18a:	f000 fd05 	bl	800fb98 <vPortFree>
 800f18e:	6878      	ldr	r0, [r7, #4]
 800f190:	f000 fd02 	bl	800fb98 <vPortFree>
 800f194:	e019      	b.n	800f1ca <prvDeleteTCB+0x62>
 800f196:	687b      	ldr	r3, [r7, #4]
 800f198:	f893 30ad 	ldrb.w	r3, [r3, #173]	@ 0xad
 800f19c:	2b01      	cmp	r3, #1
 800f19e:	d103      	bne.n	800f1a8 <prvDeleteTCB+0x40>
 800f1a0:	6878      	ldr	r0, [r7, #4]
 800f1a2:	f000 fcf9 	bl	800fb98 <vPortFree>
 800f1a6:	e010      	b.n	800f1ca <prvDeleteTCB+0x62>
 800f1a8:	687b      	ldr	r3, [r7, #4]
 800f1aa:	f893 30ad 	ldrb.w	r3, [r3, #173]	@ 0xad
 800f1ae:	2b02      	cmp	r3, #2
 800f1b0:	d00b      	beq.n	800f1ca <prvDeleteTCB+0x62>
 800f1b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1b6:	f383 8811 	msr	BASEPRI, r3
 800f1ba:	f3bf 8f6f 	isb	sy
 800f1be:	f3bf 8f4f 	dsb	sy
 800f1c2:	60fb      	str	r3, [r7, #12]
 800f1c4:	bf00      	nop
 800f1c6:	bf00      	nop
 800f1c8:	e7fd      	b.n	800f1c6 <prvDeleteTCB+0x5e>
 800f1ca:	bf00      	nop
 800f1cc:	3710      	adds	r7, #16
 800f1ce:	46bd      	mov	sp, r7
 800f1d0:	bd80      	pop	{r7, pc}
	...

0800f1d4 <prvResetNextTaskUnblockTime>:
 800f1d4:	b480      	push	{r7}
 800f1d6:	b083      	sub	sp, #12
 800f1d8:	af00      	add	r7, sp, #0
 800f1da:	4b0c      	ldr	r3, [pc, #48]	@ (800f20c <prvResetNextTaskUnblockTime+0x38>)
 800f1dc:	681b      	ldr	r3, [r3, #0]
 800f1de:	681b      	ldr	r3, [r3, #0]
 800f1e0:	2b00      	cmp	r3, #0
 800f1e2:	d104      	bne.n	800f1ee <prvResetNextTaskUnblockTime+0x1a>
 800f1e4:	4b0a      	ldr	r3, [pc, #40]	@ (800f210 <prvResetNextTaskUnblockTime+0x3c>)
 800f1e6:	f04f 32ff 	mov.w	r2, #4294967295
 800f1ea:	601a      	str	r2, [r3, #0]
 800f1ec:	e008      	b.n	800f200 <prvResetNextTaskUnblockTime+0x2c>
 800f1ee:	4b07      	ldr	r3, [pc, #28]	@ (800f20c <prvResetNextTaskUnblockTime+0x38>)
 800f1f0:	681b      	ldr	r3, [r3, #0]
 800f1f2:	68db      	ldr	r3, [r3, #12]
 800f1f4:	68db      	ldr	r3, [r3, #12]
 800f1f6:	607b      	str	r3, [r7, #4]
 800f1f8:	687b      	ldr	r3, [r7, #4]
 800f1fa:	685b      	ldr	r3, [r3, #4]
 800f1fc:	4a04      	ldr	r2, [pc, #16]	@ (800f210 <prvResetNextTaskUnblockTime+0x3c>)
 800f1fe:	6013      	str	r3, [r2, #0]
 800f200:	bf00      	nop
 800f202:	370c      	adds	r7, #12
 800f204:	46bd      	mov	sp, r7
 800f206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f20a:	4770      	bx	lr
 800f20c:	20001698 	.word	0x20001698
 800f210:	20001700 	.word	0x20001700

0800f214 <xTaskGetSchedulerState>:
 800f214:	b480      	push	{r7}
 800f216:	b083      	sub	sp, #12
 800f218:	af00      	add	r7, sp, #0
 800f21a:	4b0b      	ldr	r3, [pc, #44]	@ (800f248 <xTaskGetSchedulerState+0x34>)
 800f21c:	681b      	ldr	r3, [r3, #0]
 800f21e:	2b00      	cmp	r3, #0
 800f220:	d102      	bne.n	800f228 <xTaskGetSchedulerState+0x14>
 800f222:	2301      	movs	r3, #1
 800f224:	607b      	str	r3, [r7, #4]
 800f226:	e008      	b.n	800f23a <xTaskGetSchedulerState+0x26>
 800f228:	4b08      	ldr	r3, [pc, #32]	@ (800f24c <xTaskGetSchedulerState+0x38>)
 800f22a:	681b      	ldr	r3, [r3, #0]
 800f22c:	2b00      	cmp	r3, #0
 800f22e:	d102      	bne.n	800f236 <xTaskGetSchedulerState+0x22>
 800f230:	2302      	movs	r3, #2
 800f232:	607b      	str	r3, [r7, #4]
 800f234:	e001      	b.n	800f23a <xTaskGetSchedulerState+0x26>
 800f236:	2300      	movs	r3, #0
 800f238:	607b      	str	r3, [r7, #4]
 800f23a:	687b      	ldr	r3, [r7, #4]
 800f23c:	4618      	mov	r0, r3
 800f23e:	370c      	adds	r7, #12
 800f240:	46bd      	mov	sp, r7
 800f242:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f246:	4770      	bx	lr
 800f248:	200016ec 	.word	0x200016ec
 800f24c:	20001708 	.word	0x20001708

0800f250 <xTaskPriorityInherit>:
 800f250:	b580      	push	{r7, lr}
 800f252:	b084      	sub	sp, #16
 800f254:	af00      	add	r7, sp, #0
 800f256:	6078      	str	r0, [r7, #4]
 800f258:	687b      	ldr	r3, [r7, #4]
 800f25a:	60bb      	str	r3, [r7, #8]
 800f25c:	2300      	movs	r3, #0
 800f25e:	60fb      	str	r3, [r7, #12]
 800f260:	687b      	ldr	r3, [r7, #4]
 800f262:	2b00      	cmp	r3, #0
 800f264:	d05e      	beq.n	800f324 <xTaskPriorityInherit+0xd4>
 800f266:	68bb      	ldr	r3, [r7, #8]
 800f268:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f26a:	4b31      	ldr	r3, [pc, #196]	@ (800f330 <xTaskPriorityInherit+0xe0>)
 800f26c:	681b      	ldr	r3, [r3, #0]
 800f26e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f270:	429a      	cmp	r2, r3
 800f272:	d24e      	bcs.n	800f312 <xTaskPriorityInherit+0xc2>
 800f274:	68bb      	ldr	r3, [r7, #8]
 800f276:	699b      	ldr	r3, [r3, #24]
 800f278:	2b00      	cmp	r3, #0
 800f27a:	db06      	blt.n	800f28a <xTaskPriorityInherit+0x3a>
 800f27c:	4b2c      	ldr	r3, [pc, #176]	@ (800f330 <xTaskPriorityInherit+0xe0>)
 800f27e:	681b      	ldr	r3, [r3, #0]
 800f280:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f282:	f1c3 0207 	rsb	r2, r3, #7
 800f286:	68bb      	ldr	r3, [r7, #8]
 800f288:	619a      	str	r2, [r3, #24]
 800f28a:	68bb      	ldr	r3, [r7, #8]
 800f28c:	6959      	ldr	r1, [r3, #20]
 800f28e:	68bb      	ldr	r3, [r7, #8]
 800f290:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f292:	4613      	mov	r3, r2
 800f294:	009b      	lsls	r3, r3, #2
 800f296:	4413      	add	r3, r2
 800f298:	009b      	lsls	r3, r3, #2
 800f29a:	4a26      	ldr	r2, [pc, #152]	@ (800f334 <xTaskPriorityInherit+0xe4>)
 800f29c:	4413      	add	r3, r2
 800f29e:	4299      	cmp	r1, r3
 800f2a0:	d12f      	bne.n	800f302 <xTaskPriorityInherit+0xb2>
 800f2a2:	68bb      	ldr	r3, [r7, #8]
 800f2a4:	3304      	adds	r3, #4
 800f2a6:	4618      	mov	r0, r3
 800f2a8:	f7fe fdb4 	bl	800de14 <uxListRemove>
 800f2ac:	4603      	mov	r3, r0
 800f2ae:	2b00      	cmp	r3, #0
 800f2b0:	d10a      	bne.n	800f2c8 <xTaskPriorityInherit+0x78>
 800f2b2:	68bb      	ldr	r3, [r7, #8]
 800f2b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2b6:	2201      	movs	r2, #1
 800f2b8:	fa02 f303 	lsl.w	r3, r2, r3
 800f2bc:	43da      	mvns	r2, r3
 800f2be:	4b1e      	ldr	r3, [pc, #120]	@ (800f338 <xTaskPriorityInherit+0xe8>)
 800f2c0:	681b      	ldr	r3, [r3, #0]
 800f2c2:	4013      	ands	r3, r2
 800f2c4:	4a1c      	ldr	r2, [pc, #112]	@ (800f338 <xTaskPriorityInherit+0xe8>)
 800f2c6:	6013      	str	r3, [r2, #0]
 800f2c8:	4b19      	ldr	r3, [pc, #100]	@ (800f330 <xTaskPriorityInherit+0xe0>)
 800f2ca:	681b      	ldr	r3, [r3, #0]
 800f2cc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f2ce:	68bb      	ldr	r3, [r7, #8]
 800f2d0:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f2d2:	68bb      	ldr	r3, [r7, #8]
 800f2d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2d6:	2201      	movs	r2, #1
 800f2d8:	409a      	lsls	r2, r3
 800f2da:	4b17      	ldr	r3, [pc, #92]	@ (800f338 <xTaskPriorityInherit+0xe8>)
 800f2dc:	681b      	ldr	r3, [r3, #0]
 800f2de:	4313      	orrs	r3, r2
 800f2e0:	4a15      	ldr	r2, [pc, #84]	@ (800f338 <xTaskPriorityInherit+0xe8>)
 800f2e2:	6013      	str	r3, [r2, #0]
 800f2e4:	68bb      	ldr	r3, [r7, #8]
 800f2e6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f2e8:	4613      	mov	r3, r2
 800f2ea:	009b      	lsls	r3, r3, #2
 800f2ec:	4413      	add	r3, r2
 800f2ee:	009b      	lsls	r3, r3, #2
 800f2f0:	4a10      	ldr	r2, [pc, #64]	@ (800f334 <xTaskPriorityInherit+0xe4>)
 800f2f2:	441a      	add	r2, r3
 800f2f4:	68bb      	ldr	r3, [r7, #8]
 800f2f6:	3304      	adds	r3, #4
 800f2f8:	4619      	mov	r1, r3
 800f2fa:	4610      	mov	r0, r2
 800f2fc:	f7fe fd2d 	bl	800dd5a <vListInsertEnd>
 800f300:	e004      	b.n	800f30c <xTaskPriorityInherit+0xbc>
 800f302:	4b0b      	ldr	r3, [pc, #44]	@ (800f330 <xTaskPriorityInherit+0xe0>)
 800f304:	681b      	ldr	r3, [r3, #0]
 800f306:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f308:	68bb      	ldr	r3, [r7, #8]
 800f30a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f30c:	2301      	movs	r3, #1
 800f30e:	60fb      	str	r3, [r7, #12]
 800f310:	e008      	b.n	800f324 <xTaskPriorityInherit+0xd4>
 800f312:	68bb      	ldr	r3, [r7, #8]
 800f314:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800f316:	4b06      	ldr	r3, [pc, #24]	@ (800f330 <xTaskPriorityInherit+0xe0>)
 800f318:	681b      	ldr	r3, [r3, #0]
 800f31a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f31c:	429a      	cmp	r2, r3
 800f31e:	d201      	bcs.n	800f324 <xTaskPriorityInherit+0xd4>
 800f320:	2301      	movs	r3, #1
 800f322:	60fb      	str	r3, [r7, #12]
 800f324:	68fb      	ldr	r3, [r7, #12]
 800f326:	4618      	mov	r0, r3
 800f328:	3710      	adds	r7, #16
 800f32a:	46bd      	mov	sp, r7
 800f32c:	bd80      	pop	{r7, pc}
 800f32e:	bf00      	nop
 800f330:	200015e0 	.word	0x200015e0
 800f334:	200015e4 	.word	0x200015e4
 800f338:	200016e8 	.word	0x200016e8

0800f33c <vTaskPriorityDisinheritAfterTimeout>:
 800f33c:	b580      	push	{r7, lr}
 800f33e:	b088      	sub	sp, #32
 800f340:	af00      	add	r7, sp, #0
 800f342:	6078      	str	r0, [r7, #4]
 800f344:	6039      	str	r1, [r7, #0]
 800f346:	687b      	ldr	r3, [r7, #4]
 800f348:	61bb      	str	r3, [r7, #24]
 800f34a:	2301      	movs	r3, #1
 800f34c:	617b      	str	r3, [r7, #20]
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	2b00      	cmp	r3, #0
 800f352:	d079      	beq.n	800f448 <vTaskPriorityDisinheritAfterTimeout+0x10c>
 800f354:	69bb      	ldr	r3, [r7, #24]
 800f356:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f358:	2b00      	cmp	r3, #0
 800f35a:	d10b      	bne.n	800f374 <vTaskPriorityDisinheritAfterTimeout+0x38>
 800f35c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f360:	f383 8811 	msr	BASEPRI, r3
 800f364:	f3bf 8f6f 	isb	sy
 800f368:	f3bf 8f4f 	dsb	sy
 800f36c:	60fb      	str	r3, [r7, #12]
 800f36e:	bf00      	nop
 800f370:	bf00      	nop
 800f372:	e7fd      	b.n	800f370 <vTaskPriorityDisinheritAfterTimeout+0x34>
 800f374:	69bb      	ldr	r3, [r7, #24]
 800f376:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f378:	683a      	ldr	r2, [r7, #0]
 800f37a:	429a      	cmp	r2, r3
 800f37c:	d902      	bls.n	800f384 <vTaskPriorityDisinheritAfterTimeout+0x48>
 800f37e:	683b      	ldr	r3, [r7, #0]
 800f380:	61fb      	str	r3, [r7, #28]
 800f382:	e002      	b.n	800f38a <vTaskPriorityDisinheritAfterTimeout+0x4e>
 800f384:	69bb      	ldr	r3, [r7, #24]
 800f386:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f388:	61fb      	str	r3, [r7, #28]
 800f38a:	69bb      	ldr	r3, [r7, #24]
 800f38c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f38e:	69fa      	ldr	r2, [r7, #28]
 800f390:	429a      	cmp	r2, r3
 800f392:	d059      	beq.n	800f448 <vTaskPriorityDisinheritAfterTimeout+0x10c>
 800f394:	69bb      	ldr	r3, [r7, #24]
 800f396:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f398:	697a      	ldr	r2, [r7, #20]
 800f39a:	429a      	cmp	r2, r3
 800f39c:	d154      	bne.n	800f448 <vTaskPriorityDisinheritAfterTimeout+0x10c>
 800f39e:	4b2c      	ldr	r3, [pc, #176]	@ (800f450 <vTaskPriorityDisinheritAfterTimeout+0x114>)
 800f3a0:	681b      	ldr	r3, [r3, #0]
 800f3a2:	69ba      	ldr	r2, [r7, #24]
 800f3a4:	429a      	cmp	r2, r3
 800f3a6:	d10b      	bne.n	800f3c0 <vTaskPriorityDisinheritAfterTimeout+0x84>
 800f3a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f3ac:	f383 8811 	msr	BASEPRI, r3
 800f3b0:	f3bf 8f6f 	isb	sy
 800f3b4:	f3bf 8f4f 	dsb	sy
 800f3b8:	60bb      	str	r3, [r7, #8]
 800f3ba:	bf00      	nop
 800f3bc:	bf00      	nop
 800f3be:	e7fd      	b.n	800f3bc <vTaskPriorityDisinheritAfterTimeout+0x80>
 800f3c0:	69bb      	ldr	r3, [r7, #24]
 800f3c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f3c4:	613b      	str	r3, [r7, #16]
 800f3c6:	69bb      	ldr	r3, [r7, #24]
 800f3c8:	69fa      	ldr	r2, [r7, #28]
 800f3ca:	62da      	str	r2, [r3, #44]	@ 0x2c
 800f3cc:	69bb      	ldr	r3, [r7, #24]
 800f3ce:	699b      	ldr	r3, [r3, #24]
 800f3d0:	2b00      	cmp	r3, #0
 800f3d2:	db04      	blt.n	800f3de <vTaskPriorityDisinheritAfterTimeout+0xa2>
 800f3d4:	69fb      	ldr	r3, [r7, #28]
 800f3d6:	f1c3 0207 	rsb	r2, r3, #7
 800f3da:	69bb      	ldr	r3, [r7, #24]
 800f3dc:	619a      	str	r2, [r3, #24]
 800f3de:	69bb      	ldr	r3, [r7, #24]
 800f3e0:	6959      	ldr	r1, [r3, #20]
 800f3e2:	693a      	ldr	r2, [r7, #16]
 800f3e4:	4613      	mov	r3, r2
 800f3e6:	009b      	lsls	r3, r3, #2
 800f3e8:	4413      	add	r3, r2
 800f3ea:	009b      	lsls	r3, r3, #2
 800f3ec:	4a19      	ldr	r2, [pc, #100]	@ (800f454 <vTaskPriorityDisinheritAfterTimeout+0x118>)
 800f3ee:	4413      	add	r3, r2
 800f3f0:	4299      	cmp	r1, r3
 800f3f2:	d129      	bne.n	800f448 <vTaskPriorityDisinheritAfterTimeout+0x10c>
 800f3f4:	69bb      	ldr	r3, [r7, #24]
 800f3f6:	3304      	adds	r3, #4
 800f3f8:	4618      	mov	r0, r3
 800f3fa:	f7fe fd0b 	bl	800de14 <uxListRemove>
 800f3fe:	4603      	mov	r3, r0
 800f400:	2b00      	cmp	r3, #0
 800f402:	d10a      	bne.n	800f41a <vTaskPriorityDisinheritAfterTimeout+0xde>
 800f404:	69bb      	ldr	r3, [r7, #24]
 800f406:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f408:	2201      	movs	r2, #1
 800f40a:	fa02 f303 	lsl.w	r3, r2, r3
 800f40e:	43da      	mvns	r2, r3
 800f410:	4b11      	ldr	r3, [pc, #68]	@ (800f458 <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 800f412:	681b      	ldr	r3, [r3, #0]
 800f414:	4013      	ands	r3, r2
 800f416:	4a10      	ldr	r2, [pc, #64]	@ (800f458 <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 800f418:	6013      	str	r3, [r2, #0]
 800f41a:	69bb      	ldr	r3, [r7, #24]
 800f41c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f41e:	2201      	movs	r2, #1
 800f420:	409a      	lsls	r2, r3
 800f422:	4b0d      	ldr	r3, [pc, #52]	@ (800f458 <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 800f424:	681b      	ldr	r3, [r3, #0]
 800f426:	4313      	orrs	r3, r2
 800f428:	4a0b      	ldr	r2, [pc, #44]	@ (800f458 <vTaskPriorityDisinheritAfterTimeout+0x11c>)
 800f42a:	6013      	str	r3, [r2, #0]
 800f42c:	69bb      	ldr	r3, [r7, #24]
 800f42e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f430:	4613      	mov	r3, r2
 800f432:	009b      	lsls	r3, r3, #2
 800f434:	4413      	add	r3, r2
 800f436:	009b      	lsls	r3, r3, #2
 800f438:	4a06      	ldr	r2, [pc, #24]	@ (800f454 <vTaskPriorityDisinheritAfterTimeout+0x118>)
 800f43a:	441a      	add	r2, r3
 800f43c:	69bb      	ldr	r3, [r7, #24]
 800f43e:	3304      	adds	r3, #4
 800f440:	4619      	mov	r1, r3
 800f442:	4610      	mov	r0, r2
 800f444:	f7fe fc89 	bl	800dd5a <vListInsertEnd>
 800f448:	bf00      	nop
 800f44a:	3720      	adds	r7, #32
 800f44c:	46bd      	mov	sp, r7
 800f44e:	bd80      	pop	{r7, pc}
 800f450:	200015e0 	.word	0x200015e0
 800f454:	200015e4 	.word	0x200015e4
 800f458:	200016e8 	.word	0x200016e8

0800f45c <pvTaskIncrementMutexHeldCount>:
 800f45c:	b480      	push	{r7}
 800f45e:	af00      	add	r7, sp, #0
 800f460:	4b07      	ldr	r3, [pc, #28]	@ (800f480 <pvTaskIncrementMutexHeldCount+0x24>)
 800f462:	681b      	ldr	r3, [r3, #0]
 800f464:	2b00      	cmp	r3, #0
 800f466:	d004      	beq.n	800f472 <pvTaskIncrementMutexHeldCount+0x16>
 800f468:	4b05      	ldr	r3, [pc, #20]	@ (800f480 <pvTaskIncrementMutexHeldCount+0x24>)
 800f46a:	681b      	ldr	r3, [r3, #0]
 800f46c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800f46e:	3201      	adds	r2, #1
 800f470:	655a      	str	r2, [r3, #84]	@ 0x54
 800f472:	4b03      	ldr	r3, [pc, #12]	@ (800f480 <pvTaskIncrementMutexHeldCount+0x24>)
 800f474:	681b      	ldr	r3, [r3, #0]
 800f476:	4618      	mov	r0, r3
 800f478:	46bd      	mov	sp, r7
 800f47a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f47e:	4770      	bx	lr
 800f480:	200015e0 	.word	0x200015e0

0800f484 <prvAddCurrentTaskToDelayedList>:
 800f484:	b580      	push	{r7, lr}
 800f486:	b084      	sub	sp, #16
 800f488:	af00      	add	r7, sp, #0
 800f48a:	6078      	str	r0, [r7, #4]
 800f48c:	6039      	str	r1, [r7, #0]
 800f48e:	4b29      	ldr	r3, [pc, #164]	@ (800f534 <prvAddCurrentTaskToDelayedList+0xb0>)
 800f490:	681b      	ldr	r3, [r3, #0]
 800f492:	60fb      	str	r3, [r7, #12]
 800f494:	4b28      	ldr	r3, [pc, #160]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f496:	681b      	ldr	r3, [r3, #0]
 800f498:	3304      	adds	r3, #4
 800f49a:	4618      	mov	r0, r3
 800f49c:	f7fe fcba 	bl	800de14 <uxListRemove>
 800f4a0:	4603      	mov	r3, r0
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	d10b      	bne.n	800f4be <prvAddCurrentTaskToDelayedList+0x3a>
 800f4a6:	4b24      	ldr	r3, [pc, #144]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f4a8:	681b      	ldr	r3, [r3, #0]
 800f4aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f4ac:	2201      	movs	r2, #1
 800f4ae:	fa02 f303 	lsl.w	r3, r2, r3
 800f4b2:	43da      	mvns	r2, r3
 800f4b4:	4b21      	ldr	r3, [pc, #132]	@ (800f53c <prvAddCurrentTaskToDelayedList+0xb8>)
 800f4b6:	681b      	ldr	r3, [r3, #0]
 800f4b8:	4013      	ands	r3, r2
 800f4ba:	4a20      	ldr	r2, [pc, #128]	@ (800f53c <prvAddCurrentTaskToDelayedList+0xb8>)
 800f4bc:	6013      	str	r3, [r2, #0]
 800f4be:	687b      	ldr	r3, [r7, #4]
 800f4c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f4c4:	d10a      	bne.n	800f4dc <prvAddCurrentTaskToDelayedList+0x58>
 800f4c6:	683b      	ldr	r3, [r7, #0]
 800f4c8:	2b00      	cmp	r3, #0
 800f4ca:	d007      	beq.n	800f4dc <prvAddCurrentTaskToDelayedList+0x58>
 800f4cc:	4b1a      	ldr	r3, [pc, #104]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f4ce:	681b      	ldr	r3, [r3, #0]
 800f4d0:	3304      	adds	r3, #4
 800f4d2:	4619      	mov	r1, r3
 800f4d4:	481a      	ldr	r0, [pc, #104]	@ (800f540 <prvAddCurrentTaskToDelayedList+0xbc>)
 800f4d6:	f7fe fc40 	bl	800dd5a <vListInsertEnd>
 800f4da:	e026      	b.n	800f52a <prvAddCurrentTaskToDelayedList+0xa6>
 800f4dc:	68fa      	ldr	r2, [r7, #12]
 800f4de:	687b      	ldr	r3, [r7, #4]
 800f4e0:	4413      	add	r3, r2
 800f4e2:	60bb      	str	r3, [r7, #8]
 800f4e4:	4b14      	ldr	r3, [pc, #80]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f4e6:	681b      	ldr	r3, [r3, #0]
 800f4e8:	68ba      	ldr	r2, [r7, #8]
 800f4ea:	605a      	str	r2, [r3, #4]
 800f4ec:	68ba      	ldr	r2, [r7, #8]
 800f4ee:	68fb      	ldr	r3, [r7, #12]
 800f4f0:	429a      	cmp	r2, r3
 800f4f2:	d209      	bcs.n	800f508 <prvAddCurrentTaskToDelayedList+0x84>
 800f4f4:	4b13      	ldr	r3, [pc, #76]	@ (800f544 <prvAddCurrentTaskToDelayedList+0xc0>)
 800f4f6:	681a      	ldr	r2, [r3, #0]
 800f4f8:	4b0f      	ldr	r3, [pc, #60]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f4fa:	681b      	ldr	r3, [r3, #0]
 800f4fc:	3304      	adds	r3, #4
 800f4fe:	4619      	mov	r1, r3
 800f500:	4610      	mov	r0, r2
 800f502:	f7fe fc4e 	bl	800dda2 <vListInsert>
 800f506:	e010      	b.n	800f52a <prvAddCurrentTaskToDelayedList+0xa6>
 800f508:	4b0f      	ldr	r3, [pc, #60]	@ (800f548 <prvAddCurrentTaskToDelayedList+0xc4>)
 800f50a:	681a      	ldr	r2, [r3, #0]
 800f50c:	4b0a      	ldr	r3, [pc, #40]	@ (800f538 <prvAddCurrentTaskToDelayedList+0xb4>)
 800f50e:	681b      	ldr	r3, [r3, #0]
 800f510:	3304      	adds	r3, #4
 800f512:	4619      	mov	r1, r3
 800f514:	4610      	mov	r0, r2
 800f516:	f7fe fc44 	bl	800dda2 <vListInsert>
 800f51a:	4b0c      	ldr	r3, [pc, #48]	@ (800f54c <prvAddCurrentTaskToDelayedList+0xc8>)
 800f51c:	681b      	ldr	r3, [r3, #0]
 800f51e:	68ba      	ldr	r2, [r7, #8]
 800f520:	429a      	cmp	r2, r3
 800f522:	d202      	bcs.n	800f52a <prvAddCurrentTaskToDelayedList+0xa6>
 800f524:	4a09      	ldr	r2, [pc, #36]	@ (800f54c <prvAddCurrentTaskToDelayedList+0xc8>)
 800f526:	68bb      	ldr	r3, [r7, #8]
 800f528:	6013      	str	r3, [r2, #0]
 800f52a:	bf00      	nop
 800f52c:	3710      	adds	r7, #16
 800f52e:	46bd      	mov	sp, r7
 800f530:	bd80      	pop	{r7, pc}
 800f532:	bf00      	nop
 800f534:	200016e4 	.word	0x200016e4
 800f538:	200015e0 	.word	0x200015e0
 800f53c:	200016e8 	.word	0x200016e8
 800f540:	200016cc 	.word	0x200016cc
 800f544:	2000169c 	.word	0x2000169c
 800f548:	20001698 	.word	0x20001698
 800f54c:	20001700 	.word	0x20001700

0800f550 <pxPortInitialiseStack>:
 800f550:	b480      	push	{r7}
 800f552:	b085      	sub	sp, #20
 800f554:	af00      	add	r7, sp, #0
 800f556:	60f8      	str	r0, [r7, #12]
 800f558:	60b9      	str	r1, [r7, #8]
 800f55a:	607a      	str	r2, [r7, #4]
 800f55c:	68fb      	ldr	r3, [r7, #12]
 800f55e:	3b04      	subs	r3, #4
 800f560:	60fb      	str	r3, [r7, #12]
 800f562:	68fb      	ldr	r3, [r7, #12]
 800f564:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800f568:	601a      	str	r2, [r3, #0]
 800f56a:	68fb      	ldr	r3, [r7, #12]
 800f56c:	3b04      	subs	r3, #4
 800f56e:	60fb      	str	r3, [r7, #12]
 800f570:	68bb      	ldr	r3, [r7, #8]
 800f572:	f023 0201 	bic.w	r2, r3, #1
 800f576:	68fb      	ldr	r3, [r7, #12]
 800f578:	601a      	str	r2, [r3, #0]
 800f57a:	68fb      	ldr	r3, [r7, #12]
 800f57c:	3b04      	subs	r3, #4
 800f57e:	60fb      	str	r3, [r7, #12]
 800f580:	4a0c      	ldr	r2, [pc, #48]	@ (800f5b4 <pxPortInitialiseStack+0x64>)
 800f582:	68fb      	ldr	r3, [r7, #12]
 800f584:	601a      	str	r2, [r3, #0]
 800f586:	68fb      	ldr	r3, [r7, #12]
 800f588:	3b14      	subs	r3, #20
 800f58a:	60fb      	str	r3, [r7, #12]
 800f58c:	687a      	ldr	r2, [r7, #4]
 800f58e:	68fb      	ldr	r3, [r7, #12]
 800f590:	601a      	str	r2, [r3, #0]
 800f592:	68fb      	ldr	r3, [r7, #12]
 800f594:	3b04      	subs	r3, #4
 800f596:	60fb      	str	r3, [r7, #12]
 800f598:	68fb      	ldr	r3, [r7, #12]
 800f59a:	f06f 0202 	mvn.w	r2, #2
 800f59e:	601a      	str	r2, [r3, #0]
 800f5a0:	68fb      	ldr	r3, [r7, #12]
 800f5a2:	3b20      	subs	r3, #32
 800f5a4:	60fb      	str	r3, [r7, #12]
 800f5a6:	68fb      	ldr	r3, [r7, #12]
 800f5a8:	4618      	mov	r0, r3
 800f5aa:	3714      	adds	r7, #20
 800f5ac:	46bd      	mov	sp, r7
 800f5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5b2:	4770      	bx	lr
 800f5b4:	0800f5b9 	.word	0x0800f5b9

0800f5b8 <prvTaskExitError>:
 800f5b8:	b480      	push	{r7}
 800f5ba:	b085      	sub	sp, #20
 800f5bc:	af00      	add	r7, sp, #0
 800f5be:	2300      	movs	r3, #0
 800f5c0:	607b      	str	r3, [r7, #4]
 800f5c2:	4b13      	ldr	r3, [pc, #76]	@ (800f610 <prvTaskExitError+0x58>)
 800f5c4:	681b      	ldr	r3, [r3, #0]
 800f5c6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f5ca:	d00b      	beq.n	800f5e4 <prvTaskExitError+0x2c>
 800f5cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5d0:	f383 8811 	msr	BASEPRI, r3
 800f5d4:	f3bf 8f6f 	isb	sy
 800f5d8:	f3bf 8f4f 	dsb	sy
 800f5dc:	60fb      	str	r3, [r7, #12]
 800f5de:	bf00      	nop
 800f5e0:	bf00      	nop
 800f5e2:	e7fd      	b.n	800f5e0 <prvTaskExitError+0x28>
 800f5e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5e8:	f383 8811 	msr	BASEPRI, r3
 800f5ec:	f3bf 8f6f 	isb	sy
 800f5f0:	f3bf 8f4f 	dsb	sy
 800f5f4:	60bb      	str	r3, [r7, #8]
 800f5f6:	bf00      	nop
 800f5f8:	bf00      	nop
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	2b00      	cmp	r3, #0
 800f5fe:	d0fc      	beq.n	800f5fa <prvTaskExitError+0x42>
 800f600:	bf00      	nop
 800f602:	bf00      	nop
 800f604:	3714      	adds	r7, #20
 800f606:	46bd      	mov	sp, r7
 800f608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f60c:	4770      	bx	lr
 800f60e:	bf00      	nop
 800f610:	20000074 	.word	0x20000074
	...

0800f620 <SVC_Handler>:
 800f620:	4b07      	ldr	r3, [pc, #28]	@ (800f640 <pxCurrentTCBConst2>)
 800f622:	6819      	ldr	r1, [r3, #0]
 800f624:	6808      	ldr	r0, [r1, #0]
 800f626:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f62a:	f380 8809 	msr	PSP, r0
 800f62e:	f3bf 8f6f 	isb	sy
 800f632:	f04f 0000 	mov.w	r0, #0
 800f636:	f380 8811 	msr	BASEPRI, r0
 800f63a:	4770      	bx	lr
 800f63c:	f3af 8000 	nop.w

0800f640 <pxCurrentTCBConst2>:
 800f640:	200015e0 	.word	0x200015e0
 800f644:	bf00      	nop
 800f646:	bf00      	nop

0800f648 <prvPortStartFirstTask>:
 800f648:	4808      	ldr	r0, [pc, #32]	@ (800f66c <prvPortStartFirstTask+0x24>)
 800f64a:	6800      	ldr	r0, [r0, #0]
 800f64c:	6800      	ldr	r0, [r0, #0]
 800f64e:	f380 8808 	msr	MSP, r0
 800f652:	f04f 0000 	mov.w	r0, #0
 800f656:	f380 8814 	msr	CONTROL, r0
 800f65a:	b662      	cpsie	i
 800f65c:	b661      	cpsie	f
 800f65e:	f3bf 8f4f 	dsb	sy
 800f662:	f3bf 8f6f 	isb	sy
 800f666:	df00      	svc	0
 800f668:	bf00      	nop
 800f66a:	bf00      	nop
 800f66c:	e000ed08 	.word	0xe000ed08

0800f670 <xPortStartScheduler>:
 800f670:	b580      	push	{r7, lr}
 800f672:	b086      	sub	sp, #24
 800f674:	af00      	add	r7, sp, #0
 800f676:	4b47      	ldr	r3, [pc, #284]	@ (800f794 <xPortStartScheduler+0x124>)
 800f678:	681b      	ldr	r3, [r3, #0]
 800f67a:	4a47      	ldr	r2, [pc, #284]	@ (800f798 <xPortStartScheduler+0x128>)
 800f67c:	4293      	cmp	r3, r2
 800f67e:	d10b      	bne.n	800f698 <xPortStartScheduler+0x28>
 800f680:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f684:	f383 8811 	msr	BASEPRI, r3
 800f688:	f3bf 8f6f 	isb	sy
 800f68c:	f3bf 8f4f 	dsb	sy
 800f690:	613b      	str	r3, [r7, #16]
 800f692:	bf00      	nop
 800f694:	bf00      	nop
 800f696:	e7fd      	b.n	800f694 <xPortStartScheduler+0x24>
 800f698:	4b3e      	ldr	r3, [pc, #248]	@ (800f794 <xPortStartScheduler+0x124>)
 800f69a:	681b      	ldr	r3, [r3, #0]
 800f69c:	4a3f      	ldr	r2, [pc, #252]	@ (800f79c <xPortStartScheduler+0x12c>)
 800f69e:	4293      	cmp	r3, r2
 800f6a0:	d10b      	bne.n	800f6ba <xPortStartScheduler+0x4a>
 800f6a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f6a6:	f383 8811 	msr	BASEPRI, r3
 800f6aa:	f3bf 8f6f 	isb	sy
 800f6ae:	f3bf 8f4f 	dsb	sy
 800f6b2:	60fb      	str	r3, [r7, #12]
 800f6b4:	bf00      	nop
 800f6b6:	bf00      	nop
 800f6b8:	e7fd      	b.n	800f6b6 <xPortStartScheduler+0x46>
 800f6ba:	4b39      	ldr	r3, [pc, #228]	@ (800f7a0 <xPortStartScheduler+0x130>)
 800f6bc:	617b      	str	r3, [r7, #20]
 800f6be:	697b      	ldr	r3, [r7, #20]
 800f6c0:	781b      	ldrb	r3, [r3, #0]
 800f6c2:	b2db      	uxtb	r3, r3
 800f6c4:	607b      	str	r3, [r7, #4]
 800f6c6:	697b      	ldr	r3, [r7, #20]
 800f6c8:	22ff      	movs	r2, #255	@ 0xff
 800f6ca:	701a      	strb	r2, [r3, #0]
 800f6cc:	697b      	ldr	r3, [r7, #20]
 800f6ce:	781b      	ldrb	r3, [r3, #0]
 800f6d0:	b2db      	uxtb	r3, r3
 800f6d2:	70fb      	strb	r3, [r7, #3]
 800f6d4:	78fb      	ldrb	r3, [r7, #3]
 800f6d6:	b2db      	uxtb	r3, r3
 800f6d8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800f6dc:	b2da      	uxtb	r2, r3
 800f6de:	4b31      	ldr	r3, [pc, #196]	@ (800f7a4 <xPortStartScheduler+0x134>)
 800f6e0:	701a      	strb	r2, [r3, #0]
 800f6e2:	4b31      	ldr	r3, [pc, #196]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f6e4:	2207      	movs	r2, #7
 800f6e6:	601a      	str	r2, [r3, #0]
 800f6e8:	e009      	b.n	800f6fe <xPortStartScheduler+0x8e>
 800f6ea:	4b2f      	ldr	r3, [pc, #188]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f6ec:	681b      	ldr	r3, [r3, #0]
 800f6ee:	3b01      	subs	r3, #1
 800f6f0:	4a2d      	ldr	r2, [pc, #180]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f6f2:	6013      	str	r3, [r2, #0]
 800f6f4:	78fb      	ldrb	r3, [r7, #3]
 800f6f6:	b2db      	uxtb	r3, r3
 800f6f8:	005b      	lsls	r3, r3, #1
 800f6fa:	b2db      	uxtb	r3, r3
 800f6fc:	70fb      	strb	r3, [r7, #3]
 800f6fe:	78fb      	ldrb	r3, [r7, #3]
 800f700:	b2db      	uxtb	r3, r3
 800f702:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f706:	2b80      	cmp	r3, #128	@ 0x80
 800f708:	d0ef      	beq.n	800f6ea <xPortStartScheduler+0x7a>
 800f70a:	4b27      	ldr	r3, [pc, #156]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f70c:	681b      	ldr	r3, [r3, #0]
 800f70e:	f1c3 0307 	rsb	r3, r3, #7
 800f712:	2b04      	cmp	r3, #4
 800f714:	d00b      	beq.n	800f72e <xPortStartScheduler+0xbe>
 800f716:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f71a:	f383 8811 	msr	BASEPRI, r3
 800f71e:	f3bf 8f6f 	isb	sy
 800f722:	f3bf 8f4f 	dsb	sy
 800f726:	60bb      	str	r3, [r7, #8]
 800f728:	bf00      	nop
 800f72a:	bf00      	nop
 800f72c:	e7fd      	b.n	800f72a <xPortStartScheduler+0xba>
 800f72e:	4b1e      	ldr	r3, [pc, #120]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f730:	681b      	ldr	r3, [r3, #0]
 800f732:	021b      	lsls	r3, r3, #8
 800f734:	4a1c      	ldr	r2, [pc, #112]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f736:	6013      	str	r3, [r2, #0]
 800f738:	4b1b      	ldr	r3, [pc, #108]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f73a:	681b      	ldr	r3, [r3, #0]
 800f73c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800f740:	4a19      	ldr	r2, [pc, #100]	@ (800f7a8 <xPortStartScheduler+0x138>)
 800f742:	6013      	str	r3, [r2, #0]
 800f744:	687b      	ldr	r3, [r7, #4]
 800f746:	b2da      	uxtb	r2, r3
 800f748:	697b      	ldr	r3, [r7, #20]
 800f74a:	701a      	strb	r2, [r3, #0]
 800f74c:	4b17      	ldr	r3, [pc, #92]	@ (800f7ac <xPortStartScheduler+0x13c>)
 800f74e:	681b      	ldr	r3, [r3, #0]
 800f750:	4a16      	ldr	r2, [pc, #88]	@ (800f7ac <xPortStartScheduler+0x13c>)
 800f752:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800f756:	6013      	str	r3, [r2, #0]
 800f758:	4b14      	ldr	r3, [pc, #80]	@ (800f7ac <xPortStartScheduler+0x13c>)
 800f75a:	681b      	ldr	r3, [r3, #0]
 800f75c:	4a13      	ldr	r2, [pc, #76]	@ (800f7ac <xPortStartScheduler+0x13c>)
 800f75e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800f762:	6013      	str	r3, [r2, #0]
 800f764:	f000 f8da 	bl	800f91c <vPortSetupTimerInterrupt>
 800f768:	4b11      	ldr	r3, [pc, #68]	@ (800f7b0 <xPortStartScheduler+0x140>)
 800f76a:	2200      	movs	r2, #0
 800f76c:	601a      	str	r2, [r3, #0]
 800f76e:	f000 f8f9 	bl	800f964 <vPortEnableVFP>
 800f772:	4b10      	ldr	r3, [pc, #64]	@ (800f7b4 <xPortStartScheduler+0x144>)
 800f774:	681b      	ldr	r3, [r3, #0]
 800f776:	4a0f      	ldr	r2, [pc, #60]	@ (800f7b4 <xPortStartScheduler+0x144>)
 800f778:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800f77c:	6013      	str	r3, [r2, #0]
 800f77e:	f7ff ff63 	bl	800f648 <prvPortStartFirstTask>
 800f782:	f7ff fadd 	bl	800ed40 <vTaskSwitchContext>
 800f786:	f7ff ff17 	bl	800f5b8 <prvTaskExitError>
 800f78a:	2300      	movs	r3, #0
 800f78c:	4618      	mov	r0, r3
 800f78e:	3718      	adds	r7, #24
 800f790:	46bd      	mov	sp, r7
 800f792:	bd80      	pop	{r7, pc}
 800f794:	e000ed00 	.word	0xe000ed00
 800f798:	410fc271 	.word	0x410fc271
 800f79c:	410fc270 	.word	0x410fc270
 800f7a0:	e000e400 	.word	0xe000e400
 800f7a4:	20001714 	.word	0x20001714
 800f7a8:	20001718 	.word	0x20001718
 800f7ac:	e000ed20 	.word	0xe000ed20
 800f7b0:	20000074 	.word	0x20000074
 800f7b4:	e000ef34 	.word	0xe000ef34

0800f7b8 <vPortEnterCritical>:
 800f7b8:	b480      	push	{r7}
 800f7ba:	b083      	sub	sp, #12
 800f7bc:	af00      	add	r7, sp, #0
 800f7be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f7c2:	f383 8811 	msr	BASEPRI, r3
 800f7c6:	f3bf 8f6f 	isb	sy
 800f7ca:	f3bf 8f4f 	dsb	sy
 800f7ce:	607b      	str	r3, [r7, #4]
 800f7d0:	bf00      	nop
 800f7d2:	4b10      	ldr	r3, [pc, #64]	@ (800f814 <vPortEnterCritical+0x5c>)
 800f7d4:	681b      	ldr	r3, [r3, #0]
 800f7d6:	3301      	adds	r3, #1
 800f7d8:	4a0e      	ldr	r2, [pc, #56]	@ (800f814 <vPortEnterCritical+0x5c>)
 800f7da:	6013      	str	r3, [r2, #0]
 800f7dc:	4b0d      	ldr	r3, [pc, #52]	@ (800f814 <vPortEnterCritical+0x5c>)
 800f7de:	681b      	ldr	r3, [r3, #0]
 800f7e0:	2b01      	cmp	r3, #1
 800f7e2:	d110      	bne.n	800f806 <vPortEnterCritical+0x4e>
 800f7e4:	4b0c      	ldr	r3, [pc, #48]	@ (800f818 <vPortEnterCritical+0x60>)
 800f7e6:	681b      	ldr	r3, [r3, #0]
 800f7e8:	b2db      	uxtb	r3, r3
 800f7ea:	2b00      	cmp	r3, #0
 800f7ec:	d00b      	beq.n	800f806 <vPortEnterCritical+0x4e>
 800f7ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f7f2:	f383 8811 	msr	BASEPRI, r3
 800f7f6:	f3bf 8f6f 	isb	sy
 800f7fa:	f3bf 8f4f 	dsb	sy
 800f7fe:	603b      	str	r3, [r7, #0]
 800f800:	bf00      	nop
 800f802:	bf00      	nop
 800f804:	e7fd      	b.n	800f802 <vPortEnterCritical+0x4a>
 800f806:	bf00      	nop
 800f808:	370c      	adds	r7, #12
 800f80a:	46bd      	mov	sp, r7
 800f80c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f810:	4770      	bx	lr
 800f812:	bf00      	nop
 800f814:	20000074 	.word	0x20000074
 800f818:	e000ed04 	.word	0xe000ed04

0800f81c <vPortExitCritical>:
 800f81c:	b480      	push	{r7}
 800f81e:	b083      	sub	sp, #12
 800f820:	af00      	add	r7, sp, #0
 800f822:	4b12      	ldr	r3, [pc, #72]	@ (800f86c <vPortExitCritical+0x50>)
 800f824:	681b      	ldr	r3, [r3, #0]
 800f826:	2b00      	cmp	r3, #0
 800f828:	d10b      	bne.n	800f842 <vPortExitCritical+0x26>
 800f82a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f82e:	f383 8811 	msr	BASEPRI, r3
 800f832:	f3bf 8f6f 	isb	sy
 800f836:	f3bf 8f4f 	dsb	sy
 800f83a:	607b      	str	r3, [r7, #4]
 800f83c:	bf00      	nop
 800f83e:	bf00      	nop
 800f840:	e7fd      	b.n	800f83e <vPortExitCritical+0x22>
 800f842:	4b0a      	ldr	r3, [pc, #40]	@ (800f86c <vPortExitCritical+0x50>)
 800f844:	681b      	ldr	r3, [r3, #0]
 800f846:	3b01      	subs	r3, #1
 800f848:	4a08      	ldr	r2, [pc, #32]	@ (800f86c <vPortExitCritical+0x50>)
 800f84a:	6013      	str	r3, [r2, #0]
 800f84c:	4b07      	ldr	r3, [pc, #28]	@ (800f86c <vPortExitCritical+0x50>)
 800f84e:	681b      	ldr	r3, [r3, #0]
 800f850:	2b00      	cmp	r3, #0
 800f852:	d105      	bne.n	800f860 <vPortExitCritical+0x44>
 800f854:	2300      	movs	r3, #0
 800f856:	603b      	str	r3, [r7, #0]
 800f858:	683b      	ldr	r3, [r7, #0]
 800f85a:	f383 8811 	msr	BASEPRI, r3
 800f85e:	bf00      	nop
 800f860:	bf00      	nop
 800f862:	370c      	adds	r7, #12
 800f864:	46bd      	mov	sp, r7
 800f866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f86a:	4770      	bx	lr
 800f86c:	20000074 	.word	0x20000074

0800f870 <PendSV_Handler>:
 800f870:	f3ef 8009 	mrs	r0, PSP
 800f874:	f3bf 8f6f 	isb	sy
 800f878:	4b15      	ldr	r3, [pc, #84]	@ (800f8d0 <pxCurrentTCBConst>)
 800f87a:	681a      	ldr	r2, [r3, #0]
 800f87c:	f01e 0f10 	tst.w	lr, #16
 800f880:	bf08      	it	eq
 800f882:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800f886:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f88a:	6010      	str	r0, [r2, #0]
 800f88c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800f890:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800f894:	f380 8811 	msr	BASEPRI, r0
 800f898:	f3bf 8f4f 	dsb	sy
 800f89c:	f3bf 8f6f 	isb	sy
 800f8a0:	f7ff fa4e 	bl	800ed40 <vTaskSwitchContext>
 800f8a4:	f04f 0000 	mov.w	r0, #0
 800f8a8:	f380 8811 	msr	BASEPRI, r0
 800f8ac:	bc09      	pop	{r0, r3}
 800f8ae:	6819      	ldr	r1, [r3, #0]
 800f8b0:	6808      	ldr	r0, [r1, #0]
 800f8b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8b6:	f01e 0f10 	tst.w	lr, #16
 800f8ba:	bf08      	it	eq
 800f8bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800f8c0:	f380 8809 	msr	PSP, r0
 800f8c4:	f3bf 8f6f 	isb	sy
 800f8c8:	4770      	bx	lr
 800f8ca:	bf00      	nop
 800f8cc:	f3af 8000 	nop.w

0800f8d0 <pxCurrentTCBConst>:
 800f8d0:	200015e0 	.word	0x200015e0
 800f8d4:	bf00      	nop
 800f8d6:	bf00      	nop

0800f8d8 <SysTick_Handler>:
 800f8d8:	b580      	push	{r7, lr}
 800f8da:	b082      	sub	sp, #8
 800f8dc:	af00      	add	r7, sp, #0
 800f8de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f8e2:	f383 8811 	msr	BASEPRI, r3
 800f8e6:	f3bf 8f6f 	isb	sy
 800f8ea:	f3bf 8f4f 	dsb	sy
 800f8ee:	607b      	str	r3, [r7, #4]
 800f8f0:	bf00      	nop
 800f8f2:	f7ff f96b 	bl	800ebcc <xTaskIncrementTick>
 800f8f6:	4603      	mov	r3, r0
 800f8f8:	2b00      	cmp	r3, #0
 800f8fa:	d003      	beq.n	800f904 <SysTick_Handler+0x2c>
 800f8fc:	4b06      	ldr	r3, [pc, #24]	@ (800f918 <SysTick_Handler+0x40>)
 800f8fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f902:	601a      	str	r2, [r3, #0]
 800f904:	2300      	movs	r3, #0
 800f906:	603b      	str	r3, [r7, #0]
 800f908:	683b      	ldr	r3, [r7, #0]
 800f90a:	f383 8811 	msr	BASEPRI, r3
 800f90e:	bf00      	nop
 800f910:	bf00      	nop
 800f912:	3708      	adds	r7, #8
 800f914:	46bd      	mov	sp, r7
 800f916:	bd80      	pop	{r7, pc}
 800f918:	e000ed04 	.word	0xe000ed04

0800f91c <vPortSetupTimerInterrupt>:
 800f91c:	b480      	push	{r7}
 800f91e:	af00      	add	r7, sp, #0
 800f920:	4b0b      	ldr	r3, [pc, #44]	@ (800f950 <vPortSetupTimerInterrupt+0x34>)
 800f922:	2200      	movs	r2, #0
 800f924:	601a      	str	r2, [r3, #0]
 800f926:	4b0b      	ldr	r3, [pc, #44]	@ (800f954 <vPortSetupTimerInterrupt+0x38>)
 800f928:	2200      	movs	r2, #0
 800f92a:	601a      	str	r2, [r3, #0]
 800f92c:	4b0a      	ldr	r3, [pc, #40]	@ (800f958 <vPortSetupTimerInterrupt+0x3c>)
 800f92e:	681b      	ldr	r3, [r3, #0]
 800f930:	4a0a      	ldr	r2, [pc, #40]	@ (800f95c <vPortSetupTimerInterrupt+0x40>)
 800f932:	fba2 2303 	umull	r2, r3, r2, r3
 800f936:	099b      	lsrs	r3, r3, #6
 800f938:	4a09      	ldr	r2, [pc, #36]	@ (800f960 <vPortSetupTimerInterrupt+0x44>)
 800f93a:	3b01      	subs	r3, #1
 800f93c:	6013      	str	r3, [r2, #0]
 800f93e:	4b04      	ldr	r3, [pc, #16]	@ (800f950 <vPortSetupTimerInterrupt+0x34>)
 800f940:	2207      	movs	r2, #7
 800f942:	601a      	str	r2, [r3, #0]
 800f944:	bf00      	nop
 800f946:	46bd      	mov	sp, r7
 800f948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f94c:	4770      	bx	lr
 800f94e:	bf00      	nop
 800f950:	e000e010 	.word	0xe000e010
 800f954:	e000e018 	.word	0xe000e018
 800f958:	20000000 	.word	0x20000000
 800f95c:	51eb851f 	.word	0x51eb851f
 800f960:	e000e014 	.word	0xe000e014

0800f964 <vPortEnableVFP>:
 800f964:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800f974 <vPortEnableVFP+0x10>
 800f968:	6801      	ldr	r1, [r0, #0]
 800f96a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800f96e:	6001      	str	r1, [r0, #0]
 800f970:	4770      	bx	lr
 800f972:	bf00      	nop
 800f974:	e000ed88 	.word	0xe000ed88

0800f978 <vPortValidateInterruptPriority>:
 800f978:	b480      	push	{r7}
 800f97a:	b085      	sub	sp, #20
 800f97c:	af00      	add	r7, sp, #0
 800f97e:	f3ef 8305 	mrs	r3, IPSR
 800f982:	60fb      	str	r3, [r7, #12]
 800f984:	68fb      	ldr	r3, [r7, #12]
 800f986:	2b0f      	cmp	r3, #15
 800f988:	d915      	bls.n	800f9b6 <vPortValidateInterruptPriority+0x3e>
 800f98a:	4a18      	ldr	r2, [pc, #96]	@ (800f9ec <vPortValidateInterruptPriority+0x74>)
 800f98c:	68fb      	ldr	r3, [r7, #12]
 800f98e:	4413      	add	r3, r2
 800f990:	781b      	ldrb	r3, [r3, #0]
 800f992:	72fb      	strb	r3, [r7, #11]
 800f994:	4b16      	ldr	r3, [pc, #88]	@ (800f9f0 <vPortValidateInterruptPriority+0x78>)
 800f996:	781b      	ldrb	r3, [r3, #0]
 800f998:	7afa      	ldrb	r2, [r7, #11]
 800f99a:	429a      	cmp	r2, r3
 800f99c:	d20b      	bcs.n	800f9b6 <vPortValidateInterruptPriority+0x3e>
 800f99e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f9a2:	f383 8811 	msr	BASEPRI, r3
 800f9a6:	f3bf 8f6f 	isb	sy
 800f9aa:	f3bf 8f4f 	dsb	sy
 800f9ae:	607b      	str	r3, [r7, #4]
 800f9b0:	bf00      	nop
 800f9b2:	bf00      	nop
 800f9b4:	e7fd      	b.n	800f9b2 <vPortValidateInterruptPriority+0x3a>
 800f9b6:	4b0f      	ldr	r3, [pc, #60]	@ (800f9f4 <vPortValidateInterruptPriority+0x7c>)
 800f9b8:	681b      	ldr	r3, [r3, #0]
 800f9ba:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800f9be:	4b0e      	ldr	r3, [pc, #56]	@ (800f9f8 <vPortValidateInterruptPriority+0x80>)
 800f9c0:	681b      	ldr	r3, [r3, #0]
 800f9c2:	429a      	cmp	r2, r3
 800f9c4:	d90b      	bls.n	800f9de <vPortValidateInterruptPriority+0x66>
 800f9c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f9ca:	f383 8811 	msr	BASEPRI, r3
 800f9ce:	f3bf 8f6f 	isb	sy
 800f9d2:	f3bf 8f4f 	dsb	sy
 800f9d6:	603b      	str	r3, [r7, #0]
 800f9d8:	bf00      	nop
 800f9da:	bf00      	nop
 800f9dc:	e7fd      	b.n	800f9da <vPortValidateInterruptPriority+0x62>
 800f9de:	bf00      	nop
 800f9e0:	3714      	adds	r7, #20
 800f9e2:	46bd      	mov	sp, r7
 800f9e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9e8:	4770      	bx	lr
 800f9ea:	bf00      	nop
 800f9ec:	e000e3f0 	.word	0xe000e3f0
 800f9f0:	20001714 	.word	0x20001714
 800f9f4:	e000ed0c 	.word	0xe000ed0c
 800f9f8:	20001718 	.word	0x20001718

0800f9fc <pvPortMalloc>:
 800f9fc:	b580      	push	{r7, lr}
 800f9fe:	b08a      	sub	sp, #40	@ 0x28
 800fa00:	af00      	add	r7, sp, #0
 800fa02:	6078      	str	r0, [r7, #4]
 800fa04:	2300      	movs	r3, #0
 800fa06:	61fb      	str	r3, [r7, #28]
 800fa08:	f7ff f834 	bl	800ea74 <vTaskSuspendAll>
 800fa0c:	4b5c      	ldr	r3, [pc, #368]	@ (800fb80 <pvPortMalloc+0x184>)
 800fa0e:	681b      	ldr	r3, [r3, #0]
 800fa10:	2b00      	cmp	r3, #0
 800fa12:	d101      	bne.n	800fa18 <pvPortMalloc+0x1c>
 800fa14:	f000 f924 	bl	800fc60 <prvHeapInit>
 800fa18:	4b5a      	ldr	r3, [pc, #360]	@ (800fb84 <pvPortMalloc+0x188>)
 800fa1a:	681a      	ldr	r2, [r3, #0]
 800fa1c:	687b      	ldr	r3, [r7, #4]
 800fa1e:	4013      	ands	r3, r2
 800fa20:	2b00      	cmp	r3, #0
 800fa22:	f040 8095 	bne.w	800fb50 <pvPortMalloc+0x154>
 800fa26:	687b      	ldr	r3, [r7, #4]
 800fa28:	2b00      	cmp	r3, #0
 800fa2a:	d01e      	beq.n	800fa6a <pvPortMalloc+0x6e>
 800fa2c:	2208      	movs	r2, #8
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	4413      	add	r3, r2
 800fa32:	607b      	str	r3, [r7, #4]
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	f003 0307 	and.w	r3, r3, #7
 800fa3a:	2b00      	cmp	r3, #0
 800fa3c:	d015      	beq.n	800fa6a <pvPortMalloc+0x6e>
 800fa3e:	687b      	ldr	r3, [r7, #4]
 800fa40:	f023 0307 	bic.w	r3, r3, #7
 800fa44:	3308      	adds	r3, #8
 800fa46:	607b      	str	r3, [r7, #4]
 800fa48:	687b      	ldr	r3, [r7, #4]
 800fa4a:	f003 0307 	and.w	r3, r3, #7
 800fa4e:	2b00      	cmp	r3, #0
 800fa50:	d00b      	beq.n	800fa6a <pvPortMalloc+0x6e>
 800fa52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fa56:	f383 8811 	msr	BASEPRI, r3
 800fa5a:	f3bf 8f6f 	isb	sy
 800fa5e:	f3bf 8f4f 	dsb	sy
 800fa62:	617b      	str	r3, [r7, #20]
 800fa64:	bf00      	nop
 800fa66:	bf00      	nop
 800fa68:	e7fd      	b.n	800fa66 <pvPortMalloc+0x6a>
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	2b00      	cmp	r3, #0
 800fa6e:	d06f      	beq.n	800fb50 <pvPortMalloc+0x154>
 800fa70:	4b45      	ldr	r3, [pc, #276]	@ (800fb88 <pvPortMalloc+0x18c>)
 800fa72:	681b      	ldr	r3, [r3, #0]
 800fa74:	687a      	ldr	r2, [r7, #4]
 800fa76:	429a      	cmp	r2, r3
 800fa78:	d86a      	bhi.n	800fb50 <pvPortMalloc+0x154>
 800fa7a:	4b44      	ldr	r3, [pc, #272]	@ (800fb8c <pvPortMalloc+0x190>)
 800fa7c:	623b      	str	r3, [r7, #32]
 800fa7e:	4b43      	ldr	r3, [pc, #268]	@ (800fb8c <pvPortMalloc+0x190>)
 800fa80:	681b      	ldr	r3, [r3, #0]
 800fa82:	627b      	str	r3, [r7, #36]	@ 0x24
 800fa84:	e004      	b.n	800fa90 <pvPortMalloc+0x94>
 800fa86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fa88:	623b      	str	r3, [r7, #32]
 800fa8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fa8c:	681b      	ldr	r3, [r3, #0]
 800fa8e:	627b      	str	r3, [r7, #36]	@ 0x24
 800fa90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fa92:	685b      	ldr	r3, [r3, #4]
 800fa94:	687a      	ldr	r2, [r7, #4]
 800fa96:	429a      	cmp	r2, r3
 800fa98:	d903      	bls.n	800faa2 <pvPortMalloc+0xa6>
 800fa9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fa9c:	681b      	ldr	r3, [r3, #0]
 800fa9e:	2b00      	cmp	r3, #0
 800faa0:	d1f1      	bne.n	800fa86 <pvPortMalloc+0x8a>
 800faa2:	4b37      	ldr	r3, [pc, #220]	@ (800fb80 <pvPortMalloc+0x184>)
 800faa4:	681b      	ldr	r3, [r3, #0]
 800faa6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800faa8:	429a      	cmp	r2, r3
 800faaa:	d051      	beq.n	800fb50 <pvPortMalloc+0x154>
 800faac:	6a3b      	ldr	r3, [r7, #32]
 800faae:	681b      	ldr	r3, [r3, #0]
 800fab0:	2208      	movs	r2, #8
 800fab2:	4413      	add	r3, r2
 800fab4:	61fb      	str	r3, [r7, #28]
 800fab6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fab8:	681a      	ldr	r2, [r3, #0]
 800faba:	6a3b      	ldr	r3, [r7, #32]
 800fabc:	601a      	str	r2, [r3, #0]
 800fabe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fac0:	685a      	ldr	r2, [r3, #4]
 800fac2:	687b      	ldr	r3, [r7, #4]
 800fac4:	1ad2      	subs	r2, r2, r3
 800fac6:	2308      	movs	r3, #8
 800fac8:	005b      	lsls	r3, r3, #1
 800faca:	429a      	cmp	r2, r3
 800facc:	d920      	bls.n	800fb10 <pvPortMalloc+0x114>
 800face:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800fad0:	687b      	ldr	r3, [r7, #4]
 800fad2:	4413      	add	r3, r2
 800fad4:	61bb      	str	r3, [r7, #24]
 800fad6:	69bb      	ldr	r3, [r7, #24]
 800fad8:	f003 0307 	and.w	r3, r3, #7
 800fadc:	2b00      	cmp	r3, #0
 800fade:	d00b      	beq.n	800faf8 <pvPortMalloc+0xfc>
 800fae0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fae4:	f383 8811 	msr	BASEPRI, r3
 800fae8:	f3bf 8f6f 	isb	sy
 800faec:	f3bf 8f4f 	dsb	sy
 800faf0:	613b      	str	r3, [r7, #16]
 800faf2:	bf00      	nop
 800faf4:	bf00      	nop
 800faf6:	e7fd      	b.n	800faf4 <pvPortMalloc+0xf8>
 800faf8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fafa:	685a      	ldr	r2, [r3, #4]
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	1ad2      	subs	r2, r2, r3
 800fb00:	69bb      	ldr	r3, [r7, #24]
 800fb02:	605a      	str	r2, [r3, #4]
 800fb04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb06:	687a      	ldr	r2, [r7, #4]
 800fb08:	605a      	str	r2, [r3, #4]
 800fb0a:	69b8      	ldr	r0, [r7, #24]
 800fb0c:	f000 f90a 	bl	800fd24 <prvInsertBlockIntoFreeList>
 800fb10:	4b1d      	ldr	r3, [pc, #116]	@ (800fb88 <pvPortMalloc+0x18c>)
 800fb12:	681a      	ldr	r2, [r3, #0]
 800fb14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb16:	685b      	ldr	r3, [r3, #4]
 800fb18:	1ad3      	subs	r3, r2, r3
 800fb1a:	4a1b      	ldr	r2, [pc, #108]	@ (800fb88 <pvPortMalloc+0x18c>)
 800fb1c:	6013      	str	r3, [r2, #0]
 800fb1e:	4b1a      	ldr	r3, [pc, #104]	@ (800fb88 <pvPortMalloc+0x18c>)
 800fb20:	681a      	ldr	r2, [r3, #0]
 800fb22:	4b1b      	ldr	r3, [pc, #108]	@ (800fb90 <pvPortMalloc+0x194>)
 800fb24:	681b      	ldr	r3, [r3, #0]
 800fb26:	429a      	cmp	r2, r3
 800fb28:	d203      	bcs.n	800fb32 <pvPortMalloc+0x136>
 800fb2a:	4b17      	ldr	r3, [pc, #92]	@ (800fb88 <pvPortMalloc+0x18c>)
 800fb2c:	681b      	ldr	r3, [r3, #0]
 800fb2e:	4a18      	ldr	r2, [pc, #96]	@ (800fb90 <pvPortMalloc+0x194>)
 800fb30:	6013      	str	r3, [r2, #0]
 800fb32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb34:	685a      	ldr	r2, [r3, #4]
 800fb36:	4b13      	ldr	r3, [pc, #76]	@ (800fb84 <pvPortMalloc+0x188>)
 800fb38:	681b      	ldr	r3, [r3, #0]
 800fb3a:	431a      	orrs	r2, r3
 800fb3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb3e:	605a      	str	r2, [r3, #4]
 800fb40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb42:	2200      	movs	r2, #0
 800fb44:	601a      	str	r2, [r3, #0]
 800fb46:	4b13      	ldr	r3, [pc, #76]	@ (800fb94 <pvPortMalloc+0x198>)
 800fb48:	681b      	ldr	r3, [r3, #0]
 800fb4a:	3301      	adds	r3, #1
 800fb4c:	4a11      	ldr	r2, [pc, #68]	@ (800fb94 <pvPortMalloc+0x198>)
 800fb4e:	6013      	str	r3, [r2, #0]
 800fb50:	f7fe ff9e 	bl	800ea90 <xTaskResumeAll>
 800fb54:	69fb      	ldr	r3, [r7, #28]
 800fb56:	f003 0307 	and.w	r3, r3, #7
 800fb5a:	2b00      	cmp	r3, #0
 800fb5c:	d00b      	beq.n	800fb76 <pvPortMalloc+0x17a>
 800fb5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb62:	f383 8811 	msr	BASEPRI, r3
 800fb66:	f3bf 8f6f 	isb	sy
 800fb6a:	f3bf 8f4f 	dsb	sy
 800fb6e:	60fb      	str	r3, [r7, #12]
 800fb70:	bf00      	nop
 800fb72:	bf00      	nop
 800fb74:	e7fd      	b.n	800fb72 <pvPortMalloc+0x176>
 800fb76:	69fb      	ldr	r3, [r7, #28]
 800fb78:	4618      	mov	r0, r3
 800fb7a:	3728      	adds	r7, #40	@ 0x28
 800fb7c:	46bd      	mov	sp, r7
 800fb7e:	bd80      	pop	{r7, pc}
 800fb80:	20006544 	.word	0x20006544
 800fb84:	20006558 	.word	0x20006558
 800fb88:	20006548 	.word	0x20006548
 800fb8c:	2000653c 	.word	0x2000653c
 800fb90:	2000654c 	.word	0x2000654c
 800fb94:	20006550 	.word	0x20006550

0800fb98 <vPortFree>:
 800fb98:	b580      	push	{r7, lr}
 800fb9a:	b086      	sub	sp, #24
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
 800fba0:	687b      	ldr	r3, [r7, #4]
 800fba2:	617b      	str	r3, [r7, #20]
 800fba4:	687b      	ldr	r3, [r7, #4]
 800fba6:	2b00      	cmp	r3, #0
 800fba8:	d04f      	beq.n	800fc4a <vPortFree+0xb2>
 800fbaa:	2308      	movs	r3, #8
 800fbac:	425b      	negs	r3, r3
 800fbae:	697a      	ldr	r2, [r7, #20]
 800fbb0:	4413      	add	r3, r2
 800fbb2:	617b      	str	r3, [r7, #20]
 800fbb4:	697b      	ldr	r3, [r7, #20]
 800fbb6:	613b      	str	r3, [r7, #16]
 800fbb8:	693b      	ldr	r3, [r7, #16]
 800fbba:	685a      	ldr	r2, [r3, #4]
 800fbbc:	4b25      	ldr	r3, [pc, #148]	@ (800fc54 <vPortFree+0xbc>)
 800fbbe:	681b      	ldr	r3, [r3, #0]
 800fbc0:	4013      	ands	r3, r2
 800fbc2:	2b00      	cmp	r3, #0
 800fbc4:	d10b      	bne.n	800fbde <vPortFree+0x46>
 800fbc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fbca:	f383 8811 	msr	BASEPRI, r3
 800fbce:	f3bf 8f6f 	isb	sy
 800fbd2:	f3bf 8f4f 	dsb	sy
 800fbd6:	60fb      	str	r3, [r7, #12]
 800fbd8:	bf00      	nop
 800fbda:	bf00      	nop
 800fbdc:	e7fd      	b.n	800fbda <vPortFree+0x42>
 800fbde:	693b      	ldr	r3, [r7, #16]
 800fbe0:	681b      	ldr	r3, [r3, #0]
 800fbe2:	2b00      	cmp	r3, #0
 800fbe4:	d00b      	beq.n	800fbfe <vPortFree+0x66>
 800fbe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fbea:	f383 8811 	msr	BASEPRI, r3
 800fbee:	f3bf 8f6f 	isb	sy
 800fbf2:	f3bf 8f4f 	dsb	sy
 800fbf6:	60bb      	str	r3, [r7, #8]
 800fbf8:	bf00      	nop
 800fbfa:	bf00      	nop
 800fbfc:	e7fd      	b.n	800fbfa <vPortFree+0x62>
 800fbfe:	693b      	ldr	r3, [r7, #16]
 800fc00:	685a      	ldr	r2, [r3, #4]
 800fc02:	4b14      	ldr	r3, [pc, #80]	@ (800fc54 <vPortFree+0xbc>)
 800fc04:	681b      	ldr	r3, [r3, #0]
 800fc06:	4013      	ands	r3, r2
 800fc08:	2b00      	cmp	r3, #0
 800fc0a:	d01e      	beq.n	800fc4a <vPortFree+0xb2>
 800fc0c:	693b      	ldr	r3, [r7, #16]
 800fc0e:	681b      	ldr	r3, [r3, #0]
 800fc10:	2b00      	cmp	r3, #0
 800fc12:	d11a      	bne.n	800fc4a <vPortFree+0xb2>
 800fc14:	693b      	ldr	r3, [r7, #16]
 800fc16:	685a      	ldr	r2, [r3, #4]
 800fc18:	4b0e      	ldr	r3, [pc, #56]	@ (800fc54 <vPortFree+0xbc>)
 800fc1a:	681b      	ldr	r3, [r3, #0]
 800fc1c:	43db      	mvns	r3, r3
 800fc1e:	401a      	ands	r2, r3
 800fc20:	693b      	ldr	r3, [r7, #16]
 800fc22:	605a      	str	r2, [r3, #4]
 800fc24:	f7fe ff26 	bl	800ea74 <vTaskSuspendAll>
 800fc28:	693b      	ldr	r3, [r7, #16]
 800fc2a:	685a      	ldr	r2, [r3, #4]
 800fc2c:	4b0a      	ldr	r3, [pc, #40]	@ (800fc58 <vPortFree+0xc0>)
 800fc2e:	681b      	ldr	r3, [r3, #0]
 800fc30:	4413      	add	r3, r2
 800fc32:	4a09      	ldr	r2, [pc, #36]	@ (800fc58 <vPortFree+0xc0>)
 800fc34:	6013      	str	r3, [r2, #0]
 800fc36:	6938      	ldr	r0, [r7, #16]
 800fc38:	f000 f874 	bl	800fd24 <prvInsertBlockIntoFreeList>
 800fc3c:	4b07      	ldr	r3, [pc, #28]	@ (800fc5c <vPortFree+0xc4>)
 800fc3e:	681b      	ldr	r3, [r3, #0]
 800fc40:	3301      	adds	r3, #1
 800fc42:	4a06      	ldr	r2, [pc, #24]	@ (800fc5c <vPortFree+0xc4>)
 800fc44:	6013      	str	r3, [r2, #0]
 800fc46:	f7fe ff23 	bl	800ea90 <xTaskResumeAll>
 800fc4a:	bf00      	nop
 800fc4c:	3718      	adds	r7, #24
 800fc4e:	46bd      	mov	sp, r7
 800fc50:	bd80      	pop	{r7, pc}
 800fc52:	bf00      	nop
 800fc54:	20006558 	.word	0x20006558
 800fc58:	20006548 	.word	0x20006548
 800fc5c:	20006554 	.word	0x20006554

0800fc60 <prvHeapInit>:
 800fc60:	b480      	push	{r7}
 800fc62:	b085      	sub	sp, #20
 800fc64:	af00      	add	r7, sp, #0
 800fc66:	f644 6320 	movw	r3, #20000	@ 0x4e20
 800fc6a:	60bb      	str	r3, [r7, #8]
 800fc6c:	4b27      	ldr	r3, [pc, #156]	@ (800fd0c <prvHeapInit+0xac>)
 800fc6e:	60fb      	str	r3, [r7, #12]
 800fc70:	68fb      	ldr	r3, [r7, #12]
 800fc72:	f003 0307 	and.w	r3, r3, #7
 800fc76:	2b00      	cmp	r3, #0
 800fc78:	d00c      	beq.n	800fc94 <prvHeapInit+0x34>
 800fc7a:	68fb      	ldr	r3, [r7, #12]
 800fc7c:	3307      	adds	r3, #7
 800fc7e:	60fb      	str	r3, [r7, #12]
 800fc80:	68fb      	ldr	r3, [r7, #12]
 800fc82:	f023 0307 	bic.w	r3, r3, #7
 800fc86:	60fb      	str	r3, [r7, #12]
 800fc88:	68ba      	ldr	r2, [r7, #8]
 800fc8a:	68fb      	ldr	r3, [r7, #12]
 800fc8c:	1ad3      	subs	r3, r2, r3
 800fc8e:	4a1f      	ldr	r2, [pc, #124]	@ (800fd0c <prvHeapInit+0xac>)
 800fc90:	4413      	add	r3, r2
 800fc92:	60bb      	str	r3, [r7, #8]
 800fc94:	68fb      	ldr	r3, [r7, #12]
 800fc96:	607b      	str	r3, [r7, #4]
 800fc98:	4a1d      	ldr	r2, [pc, #116]	@ (800fd10 <prvHeapInit+0xb0>)
 800fc9a:	687b      	ldr	r3, [r7, #4]
 800fc9c:	6013      	str	r3, [r2, #0]
 800fc9e:	4b1c      	ldr	r3, [pc, #112]	@ (800fd10 <prvHeapInit+0xb0>)
 800fca0:	2200      	movs	r2, #0
 800fca2:	605a      	str	r2, [r3, #4]
 800fca4:	687b      	ldr	r3, [r7, #4]
 800fca6:	68ba      	ldr	r2, [r7, #8]
 800fca8:	4413      	add	r3, r2
 800fcaa:	60fb      	str	r3, [r7, #12]
 800fcac:	2208      	movs	r2, #8
 800fcae:	68fb      	ldr	r3, [r7, #12]
 800fcb0:	1a9b      	subs	r3, r3, r2
 800fcb2:	60fb      	str	r3, [r7, #12]
 800fcb4:	68fb      	ldr	r3, [r7, #12]
 800fcb6:	f023 0307 	bic.w	r3, r3, #7
 800fcba:	60fb      	str	r3, [r7, #12]
 800fcbc:	68fb      	ldr	r3, [r7, #12]
 800fcbe:	4a15      	ldr	r2, [pc, #84]	@ (800fd14 <prvHeapInit+0xb4>)
 800fcc0:	6013      	str	r3, [r2, #0]
 800fcc2:	4b14      	ldr	r3, [pc, #80]	@ (800fd14 <prvHeapInit+0xb4>)
 800fcc4:	681b      	ldr	r3, [r3, #0]
 800fcc6:	2200      	movs	r2, #0
 800fcc8:	605a      	str	r2, [r3, #4]
 800fcca:	4b12      	ldr	r3, [pc, #72]	@ (800fd14 <prvHeapInit+0xb4>)
 800fccc:	681b      	ldr	r3, [r3, #0]
 800fcce:	2200      	movs	r2, #0
 800fcd0:	601a      	str	r2, [r3, #0]
 800fcd2:	687b      	ldr	r3, [r7, #4]
 800fcd4:	603b      	str	r3, [r7, #0]
 800fcd6:	683b      	ldr	r3, [r7, #0]
 800fcd8:	68fa      	ldr	r2, [r7, #12]
 800fcda:	1ad2      	subs	r2, r2, r3
 800fcdc:	683b      	ldr	r3, [r7, #0]
 800fcde:	605a      	str	r2, [r3, #4]
 800fce0:	4b0c      	ldr	r3, [pc, #48]	@ (800fd14 <prvHeapInit+0xb4>)
 800fce2:	681a      	ldr	r2, [r3, #0]
 800fce4:	683b      	ldr	r3, [r7, #0]
 800fce6:	601a      	str	r2, [r3, #0]
 800fce8:	683b      	ldr	r3, [r7, #0]
 800fcea:	685b      	ldr	r3, [r3, #4]
 800fcec:	4a0a      	ldr	r2, [pc, #40]	@ (800fd18 <prvHeapInit+0xb8>)
 800fcee:	6013      	str	r3, [r2, #0]
 800fcf0:	683b      	ldr	r3, [r7, #0]
 800fcf2:	685b      	ldr	r3, [r3, #4]
 800fcf4:	4a09      	ldr	r2, [pc, #36]	@ (800fd1c <prvHeapInit+0xbc>)
 800fcf6:	6013      	str	r3, [r2, #0]
 800fcf8:	4b09      	ldr	r3, [pc, #36]	@ (800fd20 <prvHeapInit+0xc0>)
 800fcfa:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 800fcfe:	601a      	str	r2, [r3, #0]
 800fd00:	bf00      	nop
 800fd02:	3714      	adds	r7, #20
 800fd04:	46bd      	mov	sp, r7
 800fd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd0a:	4770      	bx	lr
 800fd0c:	2000171c 	.word	0x2000171c
 800fd10:	2000653c 	.word	0x2000653c
 800fd14:	20006544 	.word	0x20006544
 800fd18:	2000654c 	.word	0x2000654c
 800fd1c:	20006548 	.word	0x20006548
 800fd20:	20006558 	.word	0x20006558

0800fd24 <prvInsertBlockIntoFreeList>:
 800fd24:	b480      	push	{r7}
 800fd26:	b085      	sub	sp, #20
 800fd28:	af00      	add	r7, sp, #0
 800fd2a:	6078      	str	r0, [r7, #4]
 800fd2c:	4b28      	ldr	r3, [pc, #160]	@ (800fdd0 <prvInsertBlockIntoFreeList+0xac>)
 800fd2e:	60fb      	str	r3, [r7, #12]
 800fd30:	e002      	b.n	800fd38 <prvInsertBlockIntoFreeList+0x14>
 800fd32:	68fb      	ldr	r3, [r7, #12]
 800fd34:	681b      	ldr	r3, [r3, #0]
 800fd36:	60fb      	str	r3, [r7, #12]
 800fd38:	68fb      	ldr	r3, [r7, #12]
 800fd3a:	681b      	ldr	r3, [r3, #0]
 800fd3c:	687a      	ldr	r2, [r7, #4]
 800fd3e:	429a      	cmp	r2, r3
 800fd40:	d8f7      	bhi.n	800fd32 <prvInsertBlockIntoFreeList+0xe>
 800fd42:	68fb      	ldr	r3, [r7, #12]
 800fd44:	60bb      	str	r3, [r7, #8]
 800fd46:	68fb      	ldr	r3, [r7, #12]
 800fd48:	685b      	ldr	r3, [r3, #4]
 800fd4a:	68ba      	ldr	r2, [r7, #8]
 800fd4c:	4413      	add	r3, r2
 800fd4e:	687a      	ldr	r2, [r7, #4]
 800fd50:	429a      	cmp	r2, r3
 800fd52:	d108      	bne.n	800fd66 <prvInsertBlockIntoFreeList+0x42>
 800fd54:	68fb      	ldr	r3, [r7, #12]
 800fd56:	685a      	ldr	r2, [r3, #4]
 800fd58:	687b      	ldr	r3, [r7, #4]
 800fd5a:	685b      	ldr	r3, [r3, #4]
 800fd5c:	441a      	add	r2, r3
 800fd5e:	68fb      	ldr	r3, [r7, #12]
 800fd60:	605a      	str	r2, [r3, #4]
 800fd62:	68fb      	ldr	r3, [r7, #12]
 800fd64:	607b      	str	r3, [r7, #4]
 800fd66:	687b      	ldr	r3, [r7, #4]
 800fd68:	60bb      	str	r3, [r7, #8]
 800fd6a:	687b      	ldr	r3, [r7, #4]
 800fd6c:	685b      	ldr	r3, [r3, #4]
 800fd6e:	68ba      	ldr	r2, [r7, #8]
 800fd70:	441a      	add	r2, r3
 800fd72:	68fb      	ldr	r3, [r7, #12]
 800fd74:	681b      	ldr	r3, [r3, #0]
 800fd76:	429a      	cmp	r2, r3
 800fd78:	d118      	bne.n	800fdac <prvInsertBlockIntoFreeList+0x88>
 800fd7a:	68fb      	ldr	r3, [r7, #12]
 800fd7c:	681a      	ldr	r2, [r3, #0]
 800fd7e:	4b15      	ldr	r3, [pc, #84]	@ (800fdd4 <prvInsertBlockIntoFreeList+0xb0>)
 800fd80:	681b      	ldr	r3, [r3, #0]
 800fd82:	429a      	cmp	r2, r3
 800fd84:	d00d      	beq.n	800fda2 <prvInsertBlockIntoFreeList+0x7e>
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	685a      	ldr	r2, [r3, #4]
 800fd8a:	68fb      	ldr	r3, [r7, #12]
 800fd8c:	681b      	ldr	r3, [r3, #0]
 800fd8e:	685b      	ldr	r3, [r3, #4]
 800fd90:	441a      	add	r2, r3
 800fd92:	687b      	ldr	r3, [r7, #4]
 800fd94:	605a      	str	r2, [r3, #4]
 800fd96:	68fb      	ldr	r3, [r7, #12]
 800fd98:	681b      	ldr	r3, [r3, #0]
 800fd9a:	681a      	ldr	r2, [r3, #0]
 800fd9c:	687b      	ldr	r3, [r7, #4]
 800fd9e:	601a      	str	r2, [r3, #0]
 800fda0:	e008      	b.n	800fdb4 <prvInsertBlockIntoFreeList+0x90>
 800fda2:	4b0c      	ldr	r3, [pc, #48]	@ (800fdd4 <prvInsertBlockIntoFreeList+0xb0>)
 800fda4:	681a      	ldr	r2, [r3, #0]
 800fda6:	687b      	ldr	r3, [r7, #4]
 800fda8:	601a      	str	r2, [r3, #0]
 800fdaa:	e003      	b.n	800fdb4 <prvInsertBlockIntoFreeList+0x90>
 800fdac:	68fb      	ldr	r3, [r7, #12]
 800fdae:	681a      	ldr	r2, [r3, #0]
 800fdb0:	687b      	ldr	r3, [r7, #4]
 800fdb2:	601a      	str	r2, [r3, #0]
 800fdb4:	68fa      	ldr	r2, [r7, #12]
 800fdb6:	687b      	ldr	r3, [r7, #4]
 800fdb8:	429a      	cmp	r2, r3
 800fdba:	d002      	beq.n	800fdc2 <prvInsertBlockIntoFreeList+0x9e>
 800fdbc:	68fb      	ldr	r3, [r7, #12]
 800fdbe:	687a      	ldr	r2, [r7, #4]
 800fdc0:	601a      	str	r2, [r3, #0]
 800fdc2:	bf00      	nop
 800fdc4:	3714      	adds	r7, #20
 800fdc6:	46bd      	mov	sp, r7
 800fdc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdcc:	4770      	bx	lr
 800fdce:	bf00      	nop
 800fdd0:	2000653c 	.word	0x2000653c
 800fdd4:	20006544 	.word	0x20006544

0800fdd8 <SPI_WIFI_MspInit>:
 800fdd8:	b580      	push	{r7, lr}
 800fdda:	b08c      	sub	sp, #48	@ 0x30
 800fddc:	af00      	add	r7, sp, #0
 800fdde:	6078      	str	r0, [r7, #4]
 800fde0:	4b57      	ldr	r3, [pc, #348]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fde2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800fde4:	4a56      	ldr	r2, [pc, #344]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fde6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800fdea:	6593      	str	r3, [r2, #88]	@ 0x58
 800fdec:	4b54      	ldr	r3, [pc, #336]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fdee:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800fdf0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fdf4:	61bb      	str	r3, [r7, #24]
 800fdf6:	69bb      	ldr	r3, [r7, #24]
 800fdf8:	4b51      	ldr	r3, [pc, #324]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fdfa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fdfc:	4a50      	ldr	r2, [pc, #320]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fdfe:	f043 0302 	orr.w	r3, r3, #2
 800fe02:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800fe04:	4b4e      	ldr	r3, [pc, #312]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe06:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fe08:	f003 0302 	and.w	r3, r3, #2
 800fe0c:	617b      	str	r3, [r7, #20]
 800fe0e:	697b      	ldr	r3, [r7, #20]
 800fe10:	4b4b      	ldr	r3, [pc, #300]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe12:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fe14:	4a4a      	ldr	r2, [pc, #296]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe16:	f043 0304 	orr.w	r3, r3, #4
 800fe1a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800fe1c:	4b48      	ldr	r3, [pc, #288]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe1e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fe20:	f003 0304 	and.w	r3, r3, #4
 800fe24:	613b      	str	r3, [r7, #16]
 800fe26:	693b      	ldr	r3, [r7, #16]
 800fe28:	4b45      	ldr	r3, [pc, #276]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe2a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fe2c:	4a44      	ldr	r2, [pc, #272]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe2e:	f043 0310 	orr.w	r3, r3, #16
 800fe32:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800fe34:	4b42      	ldr	r3, [pc, #264]	@ (800ff40 <SPI_WIFI_MspInit+0x168>)
 800fe36:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fe38:	f003 0310 	and.w	r3, r3, #16
 800fe3c:	60fb      	str	r3, [r7, #12]
 800fe3e:	68fb      	ldr	r3, [r7, #12]
 800fe40:	2200      	movs	r2, #0
 800fe42:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800fe46:	483f      	ldr	r0, [pc, #252]	@ (800ff44 <SPI_WIFI_MspInit+0x16c>)
 800fe48:	f7f6 fb2e 	bl	80064a8 <HAL_GPIO_WritePin>
 800fe4c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800fe50:	61fb      	str	r3, [r7, #28]
 800fe52:	2301      	movs	r3, #1
 800fe54:	623b      	str	r3, [r7, #32]
 800fe56:	2300      	movs	r3, #0
 800fe58:	627b      	str	r3, [r7, #36]	@ 0x24
 800fe5a:	2300      	movs	r3, #0
 800fe5c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fe5e:	f107 031c 	add.w	r3, r7, #28
 800fe62:	4619      	mov	r1, r3
 800fe64:	4837      	ldr	r0, [pc, #220]	@ (800ff44 <SPI_WIFI_MspInit+0x16c>)
 800fe66:	f7f6 f869 	bl	8005f3c <HAL_GPIO_Init>
 800fe6a:	2302      	movs	r3, #2
 800fe6c:	61fb      	str	r3, [r7, #28]
 800fe6e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 800fe72:	623b      	str	r3, [r7, #32]
 800fe74:	2300      	movs	r3, #0
 800fe76:	627b      	str	r3, [r7, #36]	@ 0x24
 800fe78:	2300      	movs	r3, #0
 800fe7a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fe7c:	f107 031c 	add.w	r3, r7, #28
 800fe80:	4619      	mov	r1, r3
 800fe82:	4831      	ldr	r0, [pc, #196]	@ (800ff48 <SPI_WIFI_MspInit+0x170>)
 800fe84:	f7f6 f85a 	bl	8005f3c <HAL_GPIO_Init>
 800fe88:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800fe8c:	61fb      	str	r3, [r7, #28]
 800fe8e:	2301      	movs	r3, #1
 800fe90:	623b      	str	r3, [r7, #32]
 800fe92:	2300      	movs	r3, #0
 800fe94:	627b      	str	r3, [r7, #36]	@ 0x24
 800fe96:	2300      	movs	r3, #0
 800fe98:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fe9a:	2300      	movs	r3, #0
 800fe9c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fe9e:	f107 031c 	add.w	r3, r7, #28
 800fea2:	4619      	mov	r1, r3
 800fea4:	4828      	ldr	r0, [pc, #160]	@ (800ff48 <SPI_WIFI_MspInit+0x170>)
 800fea6:	f7f6 f849 	bl	8005f3c <HAL_GPIO_Init>
 800feaa:	2201      	movs	r2, #1
 800feac:	2101      	movs	r1, #1
 800feae:	4826      	ldr	r0, [pc, #152]	@ (800ff48 <SPI_WIFI_MspInit+0x170>)
 800feb0:	f7f6 fafa 	bl	80064a8 <HAL_GPIO_WritePin>
 800feb4:	2301      	movs	r3, #1
 800feb6:	61fb      	str	r3, [r7, #28]
 800feb8:	2301      	movs	r3, #1
 800feba:	623b      	str	r3, [r7, #32]
 800febc:	2300      	movs	r3, #0
 800febe:	627b      	str	r3, [r7, #36]	@ 0x24
 800fec0:	2301      	movs	r3, #1
 800fec2:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fec4:	f107 031c 	add.w	r3, r7, #28
 800fec8:	4619      	mov	r1, r3
 800feca:	481f      	ldr	r0, [pc, #124]	@ (800ff48 <SPI_WIFI_MspInit+0x170>)
 800fecc:	f7f6 f836 	bl	8005f3c <HAL_GPIO_Init>
 800fed0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800fed4:	61fb      	str	r3, [r7, #28]
 800fed6:	2302      	movs	r3, #2
 800fed8:	623b      	str	r3, [r7, #32]
 800feda:	2300      	movs	r3, #0
 800fedc:	627b      	str	r3, [r7, #36]	@ 0x24
 800fede:	2301      	movs	r3, #1
 800fee0:	62bb      	str	r3, [r7, #40]	@ 0x28
 800fee2:	2306      	movs	r3, #6
 800fee4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fee6:	f107 031c 	add.w	r3, r7, #28
 800feea:	4619      	mov	r1, r3
 800feec:	4817      	ldr	r0, [pc, #92]	@ (800ff4c <SPI_WIFI_MspInit+0x174>)
 800feee:	f7f6 f825 	bl	8005f3c <HAL_GPIO_Init>
 800fef2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800fef6:	61fb      	str	r3, [r7, #28]
 800fef8:	2302      	movs	r3, #2
 800fefa:	623b      	str	r3, [r7, #32]
 800fefc:	2300      	movs	r3, #0
 800fefe:	627b      	str	r3, [r7, #36]	@ 0x24
 800ff00:	2301      	movs	r3, #1
 800ff02:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ff04:	2306      	movs	r3, #6
 800ff06:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ff08:	f107 031c 	add.w	r3, r7, #28
 800ff0c:	4619      	mov	r1, r3
 800ff0e:	480f      	ldr	r0, [pc, #60]	@ (800ff4c <SPI_WIFI_MspInit+0x174>)
 800ff10:	f7f6 f814 	bl	8005f3c <HAL_GPIO_Init>
 800ff14:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ff18:	61fb      	str	r3, [r7, #28]
 800ff1a:	2302      	movs	r3, #2
 800ff1c:	623b      	str	r3, [r7, #32]
 800ff1e:	2301      	movs	r3, #1
 800ff20:	627b      	str	r3, [r7, #36]	@ 0x24
 800ff22:	2301      	movs	r3, #1
 800ff24:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ff26:	2306      	movs	r3, #6
 800ff28:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ff2a:	f107 031c 	add.w	r3, r7, #28
 800ff2e:	4619      	mov	r1, r3
 800ff30:	4806      	ldr	r0, [pc, #24]	@ (800ff4c <SPI_WIFI_MspInit+0x174>)
 800ff32:	f7f6 f803 	bl	8005f3c <HAL_GPIO_Init>
 800ff36:	bf00      	nop
 800ff38:	3730      	adds	r7, #48	@ 0x30
 800ff3a:	46bd      	mov	sp, r7
 800ff3c:	bd80      	pop	{r7, pc}
 800ff3e:	bf00      	nop
 800ff40:	40021000 	.word	0x40021000
 800ff44:	48000400 	.word	0x48000400
 800ff48:	48001000 	.word	0x48001000
 800ff4c:	48000800 	.word	0x48000800

0800ff50 <SPI_WIFI_Init>:
 800ff50:	b580      	push	{r7, lr}
 800ff52:	b084      	sub	sp, #16
 800ff54:	af00      	add	r7, sp, #0
 800ff56:	4603      	mov	r3, r0
 800ff58:	80fb      	strh	r3, [r7, #6]
 800ff5a:	2300      	movs	r3, #0
 800ff5c:	73fb      	strb	r3, [r7, #15]
 800ff5e:	88fb      	ldrh	r3, [r7, #6]
 800ff60:	2b00      	cmp	r3, #0
 800ff62:	d145      	bne.n	800fff0 <SPI_WIFI_Init+0xa0>
 800ff64:	4b27      	ldr	r3, [pc, #156]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff66:	4a28      	ldr	r2, [pc, #160]	@ (8010008 <SPI_WIFI_Init+0xb8>)
 800ff68:	601a      	str	r2, [r3, #0]
 800ff6a:	4826      	ldr	r0, [pc, #152]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff6c:	f7ff ff34 	bl	800fdd8 <SPI_WIFI_MspInit>
 800ff70:	4b24      	ldr	r3, [pc, #144]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff72:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800ff76:	605a      	str	r2, [r3, #4]
 800ff78:	4b22      	ldr	r3, [pc, #136]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff7a:	2200      	movs	r2, #0
 800ff7c:	609a      	str	r2, [r3, #8]
 800ff7e:	4b21      	ldr	r3, [pc, #132]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff80:	f44f 6270 	mov.w	r2, #3840	@ 0xf00
 800ff84:	60da      	str	r2, [r3, #12]
 800ff86:	4b1f      	ldr	r3, [pc, #124]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff88:	2200      	movs	r2, #0
 800ff8a:	611a      	str	r2, [r3, #16]
 800ff8c:	4b1d      	ldr	r3, [pc, #116]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff8e:	2200      	movs	r2, #0
 800ff90:	615a      	str	r2, [r3, #20]
 800ff92:	4b1c      	ldr	r3, [pc, #112]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff94:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800ff98:	619a      	str	r2, [r3, #24]
 800ff9a:	4b1a      	ldr	r3, [pc, #104]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ff9c:	2210      	movs	r2, #16
 800ff9e:	61da      	str	r2, [r3, #28]
 800ffa0:	4b18      	ldr	r3, [pc, #96]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ffa2:	2200      	movs	r2, #0
 800ffa4:	621a      	str	r2, [r3, #32]
 800ffa6:	4b17      	ldr	r3, [pc, #92]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ffa8:	2200      	movs	r2, #0
 800ffaa:	625a      	str	r2, [r3, #36]	@ 0x24
 800ffac:	4b15      	ldr	r3, [pc, #84]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ffae:	2200      	movs	r2, #0
 800ffb0:	629a      	str	r2, [r3, #40]	@ 0x28
 800ffb2:	4b14      	ldr	r3, [pc, #80]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ffb4:	2200      	movs	r2, #0
 800ffb6:	62da      	str	r2, [r3, #44]	@ 0x2c
 800ffb8:	4812      	ldr	r0, [pc, #72]	@ (8010004 <SPI_WIFI_Init+0xb4>)
 800ffba:	f7f9 fa9d 	bl	80094f8 <HAL_SPI_Init>
 800ffbe:	4603      	mov	r3, r0
 800ffc0:	2b00      	cmp	r3, #0
 800ffc2:	d002      	beq.n	800ffca <SPI_WIFI_Init+0x7a>
 800ffc4:	f04f 33ff 	mov.w	r3, #4294967295
 800ffc8:	e018      	b.n	800fffc <SPI_WIFI_Init+0xac>
 800ffca:	2200      	movs	r2, #0
 800ffcc:	210f      	movs	r1, #15
 800ffce:	2007      	movs	r0, #7
 800ffd0:	f7f5 fe3c 	bl	8005c4c <HAL_NVIC_SetPriority>
 800ffd4:	2007      	movs	r0, #7
 800ffd6:	f7f5 fe55 	bl	8005c84 <HAL_NVIC_EnableIRQ>
 800ffda:	2200      	movs	r2, #0
 800ffdc:	2101      	movs	r1, #1
 800ffde:	2033      	movs	r0, #51	@ 0x33
 800ffe0:	f7f5 fe34 	bl	8005c4c <HAL_NVIC_SetPriority>
 800ffe4:	2033      	movs	r0, #51	@ 0x33
 800ffe6:	f7f5 fe4d 	bl	8005c84 <HAL_NVIC_EnableIRQ>
 800ffea:	200a      	movs	r0, #10
 800ffec:	f000 f9fe 	bl	80103ec <SPI_WIFI_DelayUs>
 800fff0:	f000 f80c 	bl	801000c <SPI_WIFI_ResetModule>
 800fff4:	4603      	mov	r3, r0
 800fff6:	73fb      	strb	r3, [r7, #15]
 800fff8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800fffc:	4618      	mov	r0, r3
 800fffe:	3710      	adds	r7, #16
 8010000:	46bd      	mov	sp, r7
 8010002:	bd80      	pop	{r7, pc}
 8010004:	2000655c 	.word	0x2000655c
 8010008:	40003c00 	.word	0x40003c00

0801000c <SPI_WIFI_ResetModule>:
 801000c:	b580      	push	{r7, lr}
 801000e:	b084      	sub	sp, #16
 8010010:	af00      	add	r7, sp, #0
 8010012:	f7f5 fd33 	bl	8005a7c <HAL_GetTick>
 8010016:	60b8      	str	r0, [r7, #8]
 8010018:	2300      	movs	r3, #0
 801001a:	73fb      	strb	r3, [r7, #15]
 801001c:	2200      	movs	r2, #0
 801001e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8010022:	4830      	ldr	r0, [pc, #192]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 8010024:	f7f6 fa40 	bl	80064a8 <HAL_GPIO_WritePin>
 8010028:	200a      	movs	r0, #10
 801002a:	f7f5 fd33 	bl	8005a94 <HAL_Delay>
 801002e:	2201      	movs	r2, #1
 8010030:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8010034:	482b      	ldr	r0, [pc, #172]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 8010036:	f7f6 fa37 	bl	80064a8 <HAL_GPIO_WritePin>
 801003a:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 801003e:	f7f5 fd29 	bl	8005a94 <HAL_Delay>
 8010042:	2200      	movs	r2, #0
 8010044:	2101      	movs	r1, #1
 8010046:	4827      	ldr	r0, [pc, #156]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 8010048:	f7f6 fa2e 	bl	80064a8 <HAL_GPIO_WritePin>
 801004c:	200f      	movs	r0, #15
 801004e:	f000 f9cd 	bl	80103ec <SPI_WIFI_DelayUs>
 8010052:	e020      	b.n	8010096 <SPI_WIFI_ResetModule+0x8a>
 8010054:	7bfb      	ldrb	r3, [r7, #15]
 8010056:	463a      	mov	r2, r7
 8010058:	18d1      	adds	r1, r2, r3
 801005a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801005e:	2201      	movs	r2, #1
 8010060:	4821      	ldr	r0, [pc, #132]	@ (80100e8 <SPI_WIFI_ResetModule+0xdc>)
 8010062:	f7f9 fb14 	bl	800968e <HAL_SPI_Receive>
 8010066:	4603      	mov	r3, r0
 8010068:	71fb      	strb	r3, [r7, #7]
 801006a:	7bfb      	ldrb	r3, [r7, #15]
 801006c:	3302      	adds	r3, #2
 801006e:	73fb      	strb	r3, [r7, #15]
 8010070:	f7f5 fd04 	bl	8005a7c <HAL_GetTick>
 8010074:	4602      	mov	r2, r0
 8010076:	68bb      	ldr	r3, [r7, #8]
 8010078:	1ad3      	subs	r3, r2, r3
 801007a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 801007e:	d202      	bcs.n	8010086 <SPI_WIFI_ResetModule+0x7a>
 8010080:	79fb      	ldrb	r3, [r7, #7]
 8010082:	2b00      	cmp	r3, #0
 8010084:	d007      	beq.n	8010096 <SPI_WIFI_ResetModule+0x8a>
 8010086:	2201      	movs	r2, #1
 8010088:	2101      	movs	r1, #1
 801008a:	4816      	ldr	r0, [pc, #88]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 801008c:	f7f6 fa0c 	bl	80064a8 <HAL_GPIO_WritePin>
 8010090:	f04f 33ff 	mov.w	r3, #4294967295
 8010094:	e021      	b.n	80100da <SPI_WIFI_ResetModule+0xce>
 8010096:	2102      	movs	r1, #2
 8010098:	4812      	ldr	r0, [pc, #72]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 801009a:	f7f6 f9ed 	bl	8006478 <HAL_GPIO_ReadPin>
 801009e:	4603      	mov	r3, r0
 80100a0:	2b01      	cmp	r3, #1
 80100a2:	d0d7      	beq.n	8010054 <SPI_WIFI_ResetModule+0x48>
 80100a4:	2201      	movs	r2, #1
 80100a6:	2101      	movs	r1, #1
 80100a8:	480e      	ldr	r0, [pc, #56]	@ (80100e4 <SPI_WIFI_ResetModule+0xd8>)
 80100aa:	f7f6 f9fd 	bl	80064a8 <HAL_GPIO_WritePin>
 80100ae:	783b      	ldrb	r3, [r7, #0]
 80100b0:	2b15      	cmp	r3, #21
 80100b2:	d10e      	bne.n	80100d2 <SPI_WIFI_ResetModule+0xc6>
 80100b4:	787b      	ldrb	r3, [r7, #1]
 80100b6:	2b15      	cmp	r3, #21
 80100b8:	d10b      	bne.n	80100d2 <SPI_WIFI_ResetModule+0xc6>
 80100ba:	78bb      	ldrb	r3, [r7, #2]
 80100bc:	2b0d      	cmp	r3, #13
 80100be:	d108      	bne.n	80100d2 <SPI_WIFI_ResetModule+0xc6>
 80100c0:	78fb      	ldrb	r3, [r7, #3]
 80100c2:	2b0a      	cmp	r3, #10
 80100c4:	d105      	bne.n	80100d2 <SPI_WIFI_ResetModule+0xc6>
 80100c6:	793b      	ldrb	r3, [r7, #4]
 80100c8:	2b3e      	cmp	r3, #62	@ 0x3e
 80100ca:	d102      	bne.n	80100d2 <SPI_WIFI_ResetModule+0xc6>
 80100cc:	797b      	ldrb	r3, [r7, #5]
 80100ce:	2b20      	cmp	r3, #32
 80100d0:	d002      	beq.n	80100d8 <SPI_WIFI_ResetModule+0xcc>
 80100d2:	f04f 33ff 	mov.w	r3, #4294967295
 80100d6:	e000      	b.n	80100da <SPI_WIFI_ResetModule+0xce>
 80100d8:	2300      	movs	r3, #0
 80100da:	4618      	mov	r0, r3
 80100dc:	3710      	adds	r7, #16
 80100de:	46bd      	mov	sp, r7
 80100e0:	bd80      	pop	{r7, pc}
 80100e2:	bf00      	nop
 80100e4:	48001000 	.word	0x48001000
 80100e8:	2000655c 	.word	0x2000655c

080100ec <SPI_WIFI_DeInit>:
 80100ec:	b580      	push	{r7, lr}
 80100ee:	af00      	add	r7, sp, #0
 80100f0:	4802      	ldr	r0, [pc, #8]	@ (80100fc <SPI_WIFI_DeInit+0x10>)
 80100f2:	f7f9 faa4 	bl	800963e <HAL_SPI_DeInit>
 80100f6:	2300      	movs	r3, #0
 80100f8:	4618      	mov	r0, r3
 80100fa:	bd80      	pop	{r7, pc}
 80100fc:	2000655c 	.word	0x2000655c

08010100 <wait_cmddata_rdy_high>:
 8010100:	b580      	push	{r7, lr}
 8010102:	b084      	sub	sp, #16
 8010104:	af00      	add	r7, sp, #0
 8010106:	6078      	str	r0, [r7, #4]
 8010108:	f7f5 fcb8 	bl	8005a7c <HAL_GetTick>
 801010c:	4603      	mov	r3, r0
 801010e:	60fb      	str	r3, [r7, #12]
 8010110:	e00a      	b.n	8010128 <wait_cmddata_rdy_high+0x28>
 8010112:	f7f5 fcb3 	bl	8005a7c <HAL_GetTick>
 8010116:	4602      	mov	r2, r0
 8010118:	68fb      	ldr	r3, [r7, #12]
 801011a:	1ad2      	subs	r2, r2, r3
 801011c:	687b      	ldr	r3, [r7, #4]
 801011e:	429a      	cmp	r2, r3
 8010120:	d902      	bls.n	8010128 <wait_cmddata_rdy_high+0x28>
 8010122:	f04f 33ff 	mov.w	r3, #4294967295
 8010126:	e007      	b.n	8010138 <wait_cmddata_rdy_high+0x38>
 8010128:	2102      	movs	r1, #2
 801012a:	4805      	ldr	r0, [pc, #20]	@ (8010140 <wait_cmddata_rdy_high+0x40>)
 801012c:	f7f6 f9a4 	bl	8006478 <HAL_GPIO_ReadPin>
 8010130:	4603      	mov	r3, r0
 8010132:	2b01      	cmp	r3, #1
 8010134:	d1ed      	bne.n	8010112 <wait_cmddata_rdy_high+0x12>
 8010136:	2300      	movs	r3, #0
 8010138:	4618      	mov	r0, r3
 801013a:	3710      	adds	r7, #16
 801013c:	46bd      	mov	sp, r7
 801013e:	bd80      	pop	{r7, pc}
 8010140:	48001000 	.word	0x48001000

08010144 <wait_cmddata_rdy_rising_event>:
 8010144:	b580      	push	{r7, lr}
 8010146:	b084      	sub	sp, #16
 8010148:	af00      	add	r7, sp, #0
 801014a:	6078      	str	r0, [r7, #4]
 801014c:	f7f5 fc96 	bl	8005a7c <HAL_GetTick>
 8010150:	4603      	mov	r3, r0
 8010152:	60fb      	str	r3, [r7, #12]
 8010154:	e00a      	b.n	801016c <wait_cmddata_rdy_rising_event+0x28>
 8010156:	f7f5 fc91 	bl	8005a7c <HAL_GetTick>
 801015a:	4602      	mov	r2, r0
 801015c:	68fb      	ldr	r3, [r7, #12]
 801015e:	1ad2      	subs	r2, r2, r3
 8010160:	687b      	ldr	r3, [r7, #4]
 8010162:	429a      	cmp	r2, r3
 8010164:	d902      	bls.n	801016c <wait_cmddata_rdy_rising_event+0x28>
 8010166:	f04f 33ff 	mov.w	r3, #4294967295
 801016a:	e004      	b.n	8010176 <wait_cmddata_rdy_rising_event+0x32>
 801016c:	4b04      	ldr	r3, [pc, #16]	@ (8010180 <wait_cmddata_rdy_rising_event+0x3c>)
 801016e:	681b      	ldr	r3, [r3, #0]
 8010170:	2b01      	cmp	r3, #1
 8010172:	d0f0      	beq.n	8010156 <wait_cmddata_rdy_rising_event+0x12>
 8010174:	2300      	movs	r3, #0
 8010176:	4618      	mov	r0, r3
 8010178:	3710      	adds	r7, #16
 801017a:	46bd      	mov	sp, r7
 801017c:	bd80      	pop	{r7, pc}
 801017e:	bf00      	nop
 8010180:	200065c8 	.word	0x200065c8

08010184 <wait_spi_rx_event>:
 8010184:	b580      	push	{r7, lr}
 8010186:	b084      	sub	sp, #16
 8010188:	af00      	add	r7, sp, #0
 801018a:	6078      	str	r0, [r7, #4]
 801018c:	f7f5 fc76 	bl	8005a7c <HAL_GetTick>
 8010190:	4603      	mov	r3, r0
 8010192:	60fb      	str	r3, [r7, #12]
 8010194:	e00a      	b.n	80101ac <wait_spi_rx_event+0x28>
 8010196:	f7f5 fc71 	bl	8005a7c <HAL_GetTick>
 801019a:	4602      	mov	r2, r0
 801019c:	68fb      	ldr	r3, [r7, #12]
 801019e:	1ad2      	subs	r2, r2, r3
 80101a0:	687b      	ldr	r3, [r7, #4]
 80101a2:	429a      	cmp	r2, r3
 80101a4:	d902      	bls.n	80101ac <wait_spi_rx_event+0x28>
 80101a6:	f04f 33ff 	mov.w	r3, #4294967295
 80101aa:	e004      	b.n	80101b6 <wait_spi_rx_event+0x32>
 80101ac:	4b04      	ldr	r3, [pc, #16]	@ (80101c0 <wait_spi_rx_event+0x3c>)
 80101ae:	681b      	ldr	r3, [r3, #0]
 80101b0:	2b01      	cmp	r3, #1
 80101b2:	d0f0      	beq.n	8010196 <wait_spi_rx_event+0x12>
 80101b4:	2300      	movs	r3, #0
 80101b6:	4618      	mov	r0, r3
 80101b8:	3710      	adds	r7, #16
 80101ba:	46bd      	mov	sp, r7
 80101bc:	bd80      	pop	{r7, pc}
 80101be:	bf00      	nop
 80101c0:	200065c0 	.word	0x200065c0

080101c4 <wait_spi_tx_event>:
 80101c4:	b580      	push	{r7, lr}
 80101c6:	b084      	sub	sp, #16
 80101c8:	af00      	add	r7, sp, #0
 80101ca:	6078      	str	r0, [r7, #4]
 80101cc:	f7f5 fc56 	bl	8005a7c <HAL_GetTick>
 80101d0:	4603      	mov	r3, r0
 80101d2:	60fb      	str	r3, [r7, #12]
 80101d4:	e00a      	b.n	80101ec <wait_spi_tx_event+0x28>
 80101d6:	f7f5 fc51 	bl	8005a7c <HAL_GetTick>
 80101da:	4602      	mov	r2, r0
 80101dc:	68fb      	ldr	r3, [r7, #12]
 80101de:	1ad2      	subs	r2, r2, r3
 80101e0:	687b      	ldr	r3, [r7, #4]
 80101e2:	429a      	cmp	r2, r3
 80101e4:	d902      	bls.n	80101ec <wait_spi_tx_event+0x28>
 80101e6:	f04f 33ff 	mov.w	r3, #4294967295
 80101ea:	e004      	b.n	80101f6 <wait_spi_tx_event+0x32>
 80101ec:	4b04      	ldr	r3, [pc, #16]	@ (8010200 <wait_spi_tx_event+0x3c>)
 80101ee:	681b      	ldr	r3, [r3, #0]
 80101f0:	2b01      	cmp	r3, #1
 80101f2:	d0f0      	beq.n	80101d6 <wait_spi_tx_event+0x12>
 80101f4:	2300      	movs	r3, #0
 80101f6:	4618      	mov	r0, r3
 80101f8:	3710      	adds	r7, #16
 80101fa:	46bd      	mov	sp, r7
 80101fc:	bd80      	pop	{r7, pc}
 80101fe:	bf00      	nop
 8010200:	200065c4 	.word	0x200065c4

08010204 <SPI_WIFI_ReceiveData>:
 8010204:	b580      	push	{r7, lr}
 8010206:	b086      	sub	sp, #24
 8010208:	af00      	add	r7, sp, #0
 801020a:	60f8      	str	r0, [r7, #12]
 801020c:	460b      	mov	r3, r1
 801020e:	607a      	str	r2, [r7, #4]
 8010210:	817b      	strh	r3, [r7, #10]
 8010212:	2300      	movs	r3, #0
 8010214:	82fb      	strh	r3, [r7, #22]
 8010216:	2201      	movs	r2, #1
 8010218:	2101      	movs	r1, #1
 801021a:	4834      	ldr	r0, [pc, #208]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 801021c:	f7f6 f944 	bl	80064a8 <HAL_GPIO_WritePin>
 8010220:	2003      	movs	r0, #3
 8010222:	f000 f8e3 	bl	80103ec <SPI_WIFI_DelayUs>
 8010226:	687b      	ldr	r3, [r7, #4]
 8010228:	4618      	mov	r0, r3
 801022a:	f7ff ff8b 	bl	8010144 <wait_cmddata_rdy_rising_event>
 801022e:	4603      	mov	r3, r0
 8010230:	2b00      	cmp	r3, #0
 8010232:	da02      	bge.n	801023a <SPI_WIFI_ReceiveData+0x36>
 8010234:	f06f 0302 	mvn.w	r3, #2
 8010238:	e054      	b.n	80102e4 <SPI_WIFI_ReceiveData+0xe0>
 801023a:	2200      	movs	r2, #0
 801023c:	2101      	movs	r1, #1
 801023e:	482b      	ldr	r0, [pc, #172]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 8010240:	f7f6 f932 	bl	80064a8 <HAL_GPIO_WritePin>
 8010244:	200f      	movs	r0, #15
 8010246:	f000 f8d1 	bl	80103ec <SPI_WIFI_DelayUs>
 801024a:	e03d      	b.n	80102c8 <SPI_WIFI_ReceiveData+0xc4>
 801024c:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8010250:	897b      	ldrh	r3, [r7, #10]
 8010252:	429a      	cmp	r2, r3
 8010254:	db02      	blt.n	801025c <SPI_WIFI_ReceiveData+0x58>
 8010256:	897b      	ldrh	r3, [r7, #10]
 8010258:	2b00      	cmp	r3, #0
 801025a:	d13c      	bne.n	80102d6 <SPI_WIFI_ReceiveData+0xd2>
 801025c:	4b24      	ldr	r3, [pc, #144]	@ (80102f0 <SPI_WIFI_ReceiveData+0xec>)
 801025e:	2201      	movs	r2, #1
 8010260:	601a      	str	r2, [r3, #0]
 8010262:	f107 0314 	add.w	r3, r7, #20
 8010266:	2201      	movs	r2, #1
 8010268:	4619      	mov	r1, r3
 801026a:	4822      	ldr	r0, [pc, #136]	@ (80102f4 <SPI_WIFI_ReceiveData+0xf0>)
 801026c:	f7f9 fdee 	bl	8009e4c <HAL_SPI_Receive_IT>
 8010270:	4603      	mov	r3, r0
 8010272:	2b00      	cmp	r3, #0
 8010274:	d007      	beq.n	8010286 <SPI_WIFI_ReceiveData+0x82>
 8010276:	2201      	movs	r2, #1
 8010278:	2101      	movs	r1, #1
 801027a:	481c      	ldr	r0, [pc, #112]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 801027c:	f7f6 f914 	bl	80064a8 <HAL_GPIO_WritePin>
 8010280:	f04f 33ff 	mov.w	r3, #4294967295
 8010284:	e02e      	b.n	80102e4 <SPI_WIFI_ReceiveData+0xe0>
 8010286:	687b      	ldr	r3, [r7, #4]
 8010288:	4618      	mov	r0, r3
 801028a:	f7ff ff7b 	bl	8010184 <wait_spi_rx_event>
 801028e:	7d3a      	ldrb	r2, [r7, #20]
 8010290:	68fb      	ldr	r3, [r7, #12]
 8010292:	701a      	strb	r2, [r3, #0]
 8010294:	68fb      	ldr	r3, [r7, #12]
 8010296:	3301      	adds	r3, #1
 8010298:	7d7a      	ldrb	r2, [r7, #21]
 801029a:	701a      	strb	r2, [r3, #0]
 801029c:	8afb      	ldrh	r3, [r7, #22]
 801029e:	3302      	adds	r3, #2
 80102a0:	b29b      	uxth	r3, r3
 80102a2:	82fb      	strh	r3, [r7, #22]
 80102a4:	68fb      	ldr	r3, [r7, #12]
 80102a6:	3302      	adds	r3, #2
 80102a8:	60fb      	str	r3, [r7, #12]
 80102aa:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80102ae:	f5b3 6faf 	cmp.w	r3, #1400	@ 0x578
 80102b2:	db09      	blt.n	80102c8 <SPI_WIFI_ReceiveData+0xc4>
 80102b4:	2201      	movs	r2, #1
 80102b6:	2101      	movs	r1, #1
 80102b8:	480c      	ldr	r0, [pc, #48]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 80102ba:	f7f6 f8f5 	bl	80064a8 <HAL_GPIO_WritePin>
 80102be:	f7ff fea5 	bl	801000c <SPI_WIFI_ResetModule>
 80102c2:	f06f 0303 	mvn.w	r3, #3
 80102c6:	e00d      	b.n	80102e4 <SPI_WIFI_ReceiveData+0xe0>
 80102c8:	2102      	movs	r1, #2
 80102ca:	4808      	ldr	r0, [pc, #32]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 80102cc:	f7f6 f8d4 	bl	8006478 <HAL_GPIO_ReadPin>
 80102d0:	4603      	mov	r3, r0
 80102d2:	2b01      	cmp	r3, #1
 80102d4:	d0ba      	beq.n	801024c <SPI_WIFI_ReceiveData+0x48>
 80102d6:	2201      	movs	r2, #1
 80102d8:	2101      	movs	r1, #1
 80102da:	4804      	ldr	r0, [pc, #16]	@ (80102ec <SPI_WIFI_ReceiveData+0xe8>)
 80102dc:	f7f6 f8e4 	bl	80064a8 <HAL_GPIO_WritePin>
 80102e0:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80102e4:	4618      	mov	r0, r3
 80102e6:	3718      	adds	r7, #24
 80102e8:	46bd      	mov	sp, r7
 80102ea:	bd80      	pop	{r7, pc}
 80102ec:	48001000 	.word	0x48001000
 80102f0:	200065c0 	.word	0x200065c0
 80102f4:	2000655c 	.word	0x2000655c

080102f8 <SPI_WIFI_SendData>:
 80102f8:	b580      	push	{r7, lr}
 80102fa:	b086      	sub	sp, #24
 80102fc:	af00      	add	r7, sp, #0
 80102fe:	60f8      	str	r0, [r7, #12]
 8010300:	460b      	mov	r3, r1
 8010302:	607a      	str	r2, [r7, #4]
 8010304:	817b      	strh	r3, [r7, #10]
 8010306:	687b      	ldr	r3, [r7, #4]
 8010308:	4618      	mov	r0, r3
 801030a:	f7ff fef9 	bl	8010100 <wait_cmddata_rdy_high>
 801030e:	4603      	mov	r3, r0
 8010310:	2b00      	cmp	r3, #0
 8010312:	da02      	bge.n	801031a <SPI_WIFI_SendData+0x22>
 8010314:	f04f 33ff 	mov.w	r3, #4294967295
 8010318:	e04f      	b.n	80103ba <SPI_WIFI_SendData+0xc2>
 801031a:	4b2a      	ldr	r3, [pc, #168]	@ (80103c4 <SPI_WIFI_SendData+0xcc>)
 801031c:	2201      	movs	r2, #1
 801031e:	601a      	str	r2, [r3, #0]
 8010320:	2200      	movs	r2, #0
 8010322:	2101      	movs	r1, #1
 8010324:	4828      	ldr	r0, [pc, #160]	@ (80103c8 <SPI_WIFI_SendData+0xd0>)
 8010326:	f7f6 f8bf 	bl	80064a8 <HAL_GPIO_WritePin>
 801032a:	200f      	movs	r0, #15
 801032c:	f000 f85e 	bl	80103ec <SPI_WIFI_DelayUs>
 8010330:	897b      	ldrh	r3, [r7, #10]
 8010332:	2b01      	cmp	r3, #1
 8010334:	d919      	bls.n	801036a <SPI_WIFI_SendData+0x72>
 8010336:	4b25      	ldr	r3, [pc, #148]	@ (80103cc <SPI_WIFI_SendData+0xd4>)
 8010338:	2201      	movs	r2, #1
 801033a:	601a      	str	r2, [r3, #0]
 801033c:	897b      	ldrh	r3, [r7, #10]
 801033e:	085b      	lsrs	r3, r3, #1
 8010340:	b29b      	uxth	r3, r3
 8010342:	461a      	mov	r2, r3
 8010344:	68f9      	ldr	r1, [r7, #12]
 8010346:	4822      	ldr	r0, [pc, #136]	@ (80103d0 <SPI_WIFI_SendData+0xd8>)
 8010348:	f7f9 fcf8 	bl	8009d3c <HAL_SPI_Transmit_IT>
 801034c:	4603      	mov	r3, r0
 801034e:	2b00      	cmp	r3, #0
 8010350:	d007      	beq.n	8010362 <SPI_WIFI_SendData+0x6a>
 8010352:	2201      	movs	r2, #1
 8010354:	2101      	movs	r1, #1
 8010356:	481c      	ldr	r0, [pc, #112]	@ (80103c8 <SPI_WIFI_SendData+0xd0>)
 8010358:	f7f6 f8a6 	bl	80064a8 <HAL_GPIO_WritePin>
 801035c:	f04f 33ff 	mov.w	r3, #4294967295
 8010360:	e02b      	b.n	80103ba <SPI_WIFI_SendData+0xc2>
 8010362:	687b      	ldr	r3, [r7, #4]
 8010364:	4618      	mov	r0, r3
 8010366:	f7ff ff2d 	bl	80101c4 <wait_spi_tx_event>
 801036a:	897b      	ldrh	r3, [r7, #10]
 801036c:	f003 0301 	and.w	r3, r3, #1
 8010370:	2b00      	cmp	r3, #0
 8010372:	d020      	beq.n	80103b6 <SPI_WIFI_SendData+0xbe>
 8010374:	897b      	ldrh	r3, [r7, #10]
 8010376:	3b01      	subs	r3, #1
 8010378:	68fa      	ldr	r2, [r7, #12]
 801037a:	4413      	add	r3, r2
 801037c:	781b      	ldrb	r3, [r3, #0]
 801037e:	753b      	strb	r3, [r7, #20]
 8010380:	230a      	movs	r3, #10
 8010382:	757b      	strb	r3, [r7, #21]
 8010384:	4b11      	ldr	r3, [pc, #68]	@ (80103cc <SPI_WIFI_SendData+0xd4>)
 8010386:	2201      	movs	r2, #1
 8010388:	601a      	str	r2, [r3, #0]
 801038a:	f107 0314 	add.w	r3, r7, #20
 801038e:	2201      	movs	r2, #1
 8010390:	4619      	mov	r1, r3
 8010392:	480f      	ldr	r0, [pc, #60]	@ (80103d0 <SPI_WIFI_SendData+0xd8>)
 8010394:	f7f9 fcd2 	bl	8009d3c <HAL_SPI_Transmit_IT>
 8010398:	4603      	mov	r3, r0
 801039a:	2b00      	cmp	r3, #0
 801039c:	d007      	beq.n	80103ae <SPI_WIFI_SendData+0xb6>
 801039e:	2201      	movs	r2, #1
 80103a0:	2101      	movs	r1, #1
 80103a2:	4809      	ldr	r0, [pc, #36]	@ (80103c8 <SPI_WIFI_SendData+0xd0>)
 80103a4:	f7f6 f880 	bl	80064a8 <HAL_GPIO_WritePin>
 80103a8:	f04f 33ff 	mov.w	r3, #4294967295
 80103ac:	e005      	b.n	80103ba <SPI_WIFI_SendData+0xc2>
 80103ae:	687b      	ldr	r3, [r7, #4]
 80103b0:	4618      	mov	r0, r3
 80103b2:	f7ff ff07 	bl	80101c4 <wait_spi_tx_event>
 80103b6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80103ba:	4618      	mov	r0, r3
 80103bc:	3718      	adds	r7, #24
 80103be:	46bd      	mov	sp, r7
 80103c0:	bd80      	pop	{r7, pc}
 80103c2:	bf00      	nop
 80103c4:	200065c8 	.word	0x200065c8
 80103c8:	48001000 	.word	0x48001000
 80103cc:	200065c4 	.word	0x200065c4
 80103d0:	2000655c 	.word	0x2000655c

080103d4 <SPI_WIFI_Delay>:
 80103d4:	b580      	push	{r7, lr}
 80103d6:	b082      	sub	sp, #8
 80103d8:	af00      	add	r7, sp, #0
 80103da:	6078      	str	r0, [r7, #4]
 80103dc:	6878      	ldr	r0, [r7, #4]
 80103de:	f7f5 fb59 	bl	8005a94 <HAL_Delay>
 80103e2:	bf00      	nop
 80103e4:	3708      	adds	r7, #8
 80103e6:	46bd      	mov	sp, r7
 80103e8:	bd80      	pop	{r7, pc}
	...

080103ec <SPI_WIFI_DelayUs>:
 80103ec:	b580      	push	{r7, lr}
 80103ee:	b086      	sub	sp, #24
 80103f0:	af00      	add	r7, sp, #0
 80103f2:	6078      	str	r0, [r7, #4]
 80103f4:	4b1f      	ldr	r3, [pc, #124]	@ (8010474 <SPI_WIFI_DelayUs+0x88>)
 80103f6:	681b      	ldr	r3, [r3, #0]
 80103f8:	2b00      	cmp	r3, #0
 80103fa:	d120      	bne.n	801043e <SPI_WIFI_DelayUs+0x52>
 80103fc:	4b1e      	ldr	r3, [pc, #120]	@ (8010478 <SPI_WIFI_DelayUs+0x8c>)
 80103fe:	681b      	ldr	r3, [r3, #0]
 8010400:	4a1e      	ldr	r2, [pc, #120]	@ (801047c <SPI_WIFI_DelayUs+0x90>)
 8010402:	fba2 2303 	umull	r2, r3, r2, r3
 8010406:	099b      	lsrs	r3, r3, #6
 8010408:	617b      	str	r3, [r7, #20]
 801040a:	697b      	ldr	r3, [r7, #20]
 801040c:	60bb      	str	r3, [r7, #8]
 801040e:	f7f5 fb35 	bl	8005a7c <HAL_GetTick>
 8010412:	6138      	str	r0, [r7, #16]
 8010414:	e002      	b.n	801041c <SPI_WIFI_DelayUs+0x30>
 8010416:	68bb      	ldr	r3, [r7, #8]
 8010418:	3b01      	subs	r3, #1
 801041a:	60bb      	str	r3, [r7, #8]
 801041c:	68bb      	ldr	r3, [r7, #8]
 801041e:	2b00      	cmp	r3, #0
 8010420:	d1f9      	bne.n	8010416 <SPI_WIFI_DelayUs+0x2a>
 8010422:	f7f5 fb2b 	bl	8005a7c <HAL_GetTick>
 8010426:	4602      	mov	r2, r0
 8010428:	693b      	ldr	r3, [r7, #16]
 801042a:	1ad3      	subs	r3, r2, r3
 801042c:	4a11      	ldr	r2, [pc, #68]	@ (8010474 <SPI_WIFI_DelayUs+0x88>)
 801042e:	6013      	str	r3, [r2, #0]
 8010430:	4b10      	ldr	r3, [pc, #64]	@ (8010474 <SPI_WIFI_DelayUs+0x88>)
 8010432:	681b      	ldr	r3, [r3, #0]
 8010434:	2b00      	cmp	r3, #0
 8010436:	d102      	bne.n	801043e <SPI_WIFI_DelayUs+0x52>
 8010438:	4b0e      	ldr	r3, [pc, #56]	@ (8010474 <SPI_WIFI_DelayUs+0x88>)
 801043a:	2201      	movs	r2, #1
 801043c:	601a      	str	r2, [r3, #0]
 801043e:	4b0e      	ldr	r3, [pc, #56]	@ (8010478 <SPI_WIFI_DelayUs+0x8c>)
 8010440:	681b      	ldr	r3, [r3, #0]
 8010442:	4a0f      	ldr	r2, [pc, #60]	@ (8010480 <SPI_WIFI_DelayUs+0x94>)
 8010444:	fba2 2303 	umull	r2, r3, r2, r3
 8010448:	0c9a      	lsrs	r2, r3, #18
 801044a:	4b0a      	ldr	r3, [pc, #40]	@ (8010474 <SPI_WIFI_DelayUs+0x88>)
 801044c:	681b      	ldr	r3, [r3, #0]
 801044e:	fbb2 f3f3 	udiv	r3, r2, r3
 8010452:	60fb      	str	r3, [r7, #12]
 8010454:	687b      	ldr	r3, [r7, #4]
 8010456:	68fa      	ldr	r2, [r7, #12]
 8010458:	fb02 f303 	mul.w	r3, r2, r3
 801045c:	60bb      	str	r3, [r7, #8]
 801045e:	e002      	b.n	8010466 <SPI_WIFI_DelayUs+0x7a>
 8010460:	68bb      	ldr	r3, [r7, #8]
 8010462:	3b01      	subs	r3, #1
 8010464:	60bb      	str	r3, [r7, #8]
 8010466:	68bb      	ldr	r3, [r7, #8]
 8010468:	2b00      	cmp	r3, #0
 801046a:	d1f9      	bne.n	8010460 <SPI_WIFI_DelayUs+0x74>
 801046c:	bf00      	nop
 801046e:	3718      	adds	r7, #24
 8010470:	46bd      	mov	sp, r7
 8010472:	bd80      	pop	{r7, pc}
 8010474:	200065cc 	.word	0x200065cc
 8010478:	20000000 	.word	0x20000000
 801047c:	10624dd3 	.word	0x10624dd3
 8010480:	431bde83 	.word	0x431bde83

08010484 <HAL_SPI_RxCpltCallback>:
 8010484:	b480      	push	{r7}
 8010486:	b083      	sub	sp, #12
 8010488:	af00      	add	r7, sp, #0
 801048a:	6078      	str	r0, [r7, #4]
 801048c:	4b06      	ldr	r3, [pc, #24]	@ (80104a8 <HAL_SPI_RxCpltCallback+0x24>)
 801048e:	681b      	ldr	r3, [r3, #0]
 8010490:	2b00      	cmp	r3, #0
 8010492:	d002      	beq.n	801049a <HAL_SPI_RxCpltCallback+0x16>
 8010494:	4b04      	ldr	r3, [pc, #16]	@ (80104a8 <HAL_SPI_RxCpltCallback+0x24>)
 8010496:	2200      	movs	r2, #0
 8010498:	601a      	str	r2, [r3, #0]
 801049a:	bf00      	nop
 801049c:	370c      	adds	r7, #12
 801049e:	46bd      	mov	sp, r7
 80104a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104a4:	4770      	bx	lr
 80104a6:	bf00      	nop
 80104a8:	200065c0 	.word	0x200065c0

080104ac <HAL_SPI_TxCpltCallback>:
 80104ac:	b480      	push	{r7}
 80104ae:	b083      	sub	sp, #12
 80104b0:	af00      	add	r7, sp, #0
 80104b2:	6078      	str	r0, [r7, #4]
 80104b4:	4b06      	ldr	r3, [pc, #24]	@ (80104d0 <HAL_SPI_TxCpltCallback+0x24>)
 80104b6:	681b      	ldr	r3, [r3, #0]
 80104b8:	2b00      	cmp	r3, #0
 80104ba:	d002      	beq.n	80104c2 <HAL_SPI_TxCpltCallback+0x16>
 80104bc:	4b04      	ldr	r3, [pc, #16]	@ (80104d0 <HAL_SPI_TxCpltCallback+0x24>)
 80104be:	2200      	movs	r2, #0
 80104c0:	601a      	str	r2, [r3, #0]
 80104c2:	bf00      	nop
 80104c4:	370c      	adds	r7, #12
 80104c6:	46bd      	mov	sp, r7
 80104c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104cc:	4770      	bx	lr
 80104ce:	bf00      	nop
 80104d0:	200065c4 	.word	0x200065c4

080104d4 <SPI_WIFI_ISR>:
 80104d4:	b480      	push	{r7}
 80104d6:	af00      	add	r7, sp, #0
 80104d8:	4b05      	ldr	r3, [pc, #20]	@ (80104f0 <SPI_WIFI_ISR+0x1c>)
 80104da:	681b      	ldr	r3, [r3, #0]
 80104dc:	2b01      	cmp	r3, #1
 80104de:	d102      	bne.n	80104e6 <SPI_WIFI_ISR+0x12>
 80104e0:	4b03      	ldr	r3, [pc, #12]	@ (80104f0 <SPI_WIFI_ISR+0x1c>)
 80104e2:	2200      	movs	r2, #0
 80104e4:	601a      	str	r2, [r3, #0]
 80104e6:	bf00      	nop
 80104e8:	46bd      	mov	sp, r7
 80104ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104ee:	4770      	bx	lr
 80104f0:	200065c8 	.word	0x200065c8

080104f4 <WIFI_Init>:
 80104f4:	b580      	push	{r7, lr}
 80104f6:	b084      	sub	sp, #16
 80104f8:	af02      	add	r7, sp, #8
 80104fa:	2301      	movs	r3, #1
 80104fc:	71fb      	strb	r3, [r7, #7]
 80104fe:	4b0d      	ldr	r3, [pc, #52]	@ (8010534 <WIFI_Init+0x40>)
 8010500:	9301      	str	r3, [sp, #4]
 8010502:	4b0d      	ldr	r3, [pc, #52]	@ (8010538 <WIFI_Init+0x44>)
 8010504:	9300      	str	r3, [sp, #0]
 8010506:	4b0d      	ldr	r3, [pc, #52]	@ (801053c <WIFI_Init+0x48>)
 8010508:	4a0d      	ldr	r2, [pc, #52]	@ (8010540 <WIFI_Init+0x4c>)
 801050a:	490e      	ldr	r1, [pc, #56]	@ (8010544 <WIFI_Init+0x50>)
 801050c:	480e      	ldr	r0, [pc, #56]	@ (8010548 <WIFI_Init+0x54>)
 801050e:	f7f4 fcb9 	bl	8004e84 <ES_WIFI_RegisterBusIO>
 8010512:	4603      	mov	r3, r0
 8010514:	2b00      	cmp	r3, #0
 8010516:	d107      	bne.n	8010528 <WIFI_Init+0x34>
 8010518:	480b      	ldr	r0, [pc, #44]	@ (8010548 <WIFI_Init+0x54>)
 801051a:	f7f4 fc85 	bl	8004e28 <ES_WIFI_Init>
 801051e:	4603      	mov	r3, r0
 8010520:	2b00      	cmp	r3, #0
 8010522:	d101      	bne.n	8010528 <WIFI_Init+0x34>
 8010524:	2300      	movs	r3, #0
 8010526:	71fb      	strb	r3, [r7, #7]
 8010528:	79fb      	ldrb	r3, [r7, #7]
 801052a:	4618      	mov	r0, r3
 801052c:	3708      	adds	r7, #8
 801052e:	46bd      	mov	sp, r7
 8010530:	bd80      	pop	{r7, pc}
 8010532:	bf00      	nop
 8010534:	08010205 	.word	0x08010205
 8010538:	080102f9 	.word	0x080102f9
 801053c:	080103d5 	.word	0x080103d5
 8010540:	080100ed 	.word	0x080100ed
 8010544:	0800ff51 	.word	0x0800ff51
 8010548:	200065d0 	.word	0x200065d0

0801054c <WIFI_Connect>:
 801054c:	b580      	push	{r7, lr}
 801054e:	b086      	sub	sp, #24
 8010550:	af00      	add	r7, sp, #0
 8010552:	60f8      	str	r0, [r7, #12]
 8010554:	60b9      	str	r1, [r7, #8]
 8010556:	4613      	mov	r3, r2
 8010558:	71fb      	strb	r3, [r7, #7]
 801055a:	2301      	movs	r3, #1
 801055c:	75fb      	strb	r3, [r7, #23]
 801055e:	79fb      	ldrb	r3, [r7, #7]
 8010560:	68ba      	ldr	r2, [r7, #8]
 8010562:	68f9      	ldr	r1, [r7, #12]
 8010564:	4809      	ldr	r0, [pc, #36]	@ (801058c <WIFI_Connect+0x40>)
 8010566:	f7f4 fcc1 	bl	8004eec <ES_WIFI_Connect>
 801056a:	4603      	mov	r3, r0
 801056c:	2b00      	cmp	r3, #0
 801056e:	d107      	bne.n	8010580 <WIFI_Connect+0x34>
 8010570:	4806      	ldr	r0, [pc, #24]	@ (801058c <WIFI_Connect+0x40>)
 8010572:	f7f4 fd5f 	bl	8005034 <ES_WIFI_GetNetworkSettings>
 8010576:	4603      	mov	r3, r0
 8010578:	2b00      	cmp	r3, #0
 801057a:	d101      	bne.n	8010580 <WIFI_Connect+0x34>
 801057c:	2300      	movs	r3, #0
 801057e:	75fb      	strb	r3, [r7, #23]
 8010580:	7dfb      	ldrb	r3, [r7, #23]
 8010582:	4618      	mov	r0, r3
 8010584:	3718      	adds	r7, #24
 8010586:	46bd      	mov	sp, r7
 8010588:	bd80      	pop	{r7, pc}
 801058a:	bf00      	nop
 801058c:	200065d0 	.word	0x200065d0

08010590 <WIFI_GetMAC_Address>:
 8010590:	b580      	push	{r7, lr}
 8010592:	b084      	sub	sp, #16
 8010594:	af00      	add	r7, sp, #0
 8010596:	6078      	str	r0, [r7, #4]
 8010598:	2301      	movs	r3, #1
 801059a:	73fb      	strb	r3, [r7, #15]
 801059c:	6879      	ldr	r1, [r7, #4]
 801059e:	4806      	ldr	r0, [pc, #24]	@ (80105b8 <WIFI_GetMAC_Address+0x28>)
 80105a0:	f7f4 fd72 	bl	8005088 <ES_WIFI_GetMACAddress>
 80105a4:	4603      	mov	r3, r0
 80105a6:	2b00      	cmp	r3, #0
 80105a8:	d101      	bne.n	80105ae <WIFI_GetMAC_Address+0x1e>
 80105aa:	2300      	movs	r3, #0
 80105ac:	73fb      	strb	r3, [r7, #15]
 80105ae:	7bfb      	ldrb	r3, [r7, #15]
 80105b0:	4618      	mov	r0, r3
 80105b2:	3710      	adds	r7, #16
 80105b4:	46bd      	mov	sp, r7
 80105b6:	bd80      	pop	{r7, pc}
 80105b8:	200065d0 	.word	0x200065d0

080105bc <WIFI_GetIP_Address>:
 80105bc:	b580      	push	{r7, lr}
 80105be:	b084      	sub	sp, #16
 80105c0:	af00      	add	r7, sp, #0
 80105c2:	6078      	str	r0, [r7, #4]
 80105c4:	2301      	movs	r3, #1
 80105c6:	73fb      	strb	r3, [r7, #15]
 80105c8:	4809      	ldr	r0, [pc, #36]	@ (80105f0 <WIFI_GetIP_Address+0x34>)
 80105ca:	f7f4 fd07 	bl	8004fdc <ES_WIFI_IsConnected>
 80105ce:	4603      	mov	r3, r0
 80105d0:	2b01      	cmp	r3, #1
 80105d2:	d107      	bne.n	80105e4 <WIFI_GetIP_Address+0x28>
 80105d4:	4b06      	ldr	r3, [pc, #24]	@ (80105f0 <WIFI_GetIP_Address+0x34>)
 80105d6:	f8d3 30d5 	ldr.w	r3, [r3, #213]	@ 0xd5
 80105da:	461a      	mov	r2, r3
 80105dc:	687b      	ldr	r3, [r7, #4]
 80105de:	601a      	str	r2, [r3, #0]
 80105e0:	2300      	movs	r3, #0
 80105e2:	73fb      	strb	r3, [r7, #15]
 80105e4:	7bfb      	ldrb	r3, [r7, #15]
 80105e6:	4618      	mov	r0, r3
 80105e8:	3710      	adds	r7, #16
 80105ea:	46bd      	mov	sp, r7
 80105ec:	bd80      	pop	{r7, pc}
 80105ee:	bf00      	nop
 80105f0:	200065d0 	.word	0x200065d0

080105f4 <WIFI_GetHostAddress>:
 80105f4:	b580      	push	{r7, lr}
 80105f6:	b084      	sub	sp, #16
 80105f8:	af00      	add	r7, sp, #0
 80105fa:	6078      	str	r0, [r7, #4]
 80105fc:	6039      	str	r1, [r7, #0]
 80105fe:	2301      	movs	r3, #1
 8010600:	73fb      	strb	r3, [r7, #15]
 8010602:	683a      	ldr	r2, [r7, #0]
 8010604:	6879      	ldr	r1, [r7, #4]
 8010606:	4806      	ldr	r0, [pc, #24]	@ (8010620 <WIFI_GetHostAddress+0x2c>)
 8010608:	f7f4 fd70 	bl	80050ec <ES_WIFI_DNS_LookUp>
 801060c:	4603      	mov	r3, r0
 801060e:	2b00      	cmp	r3, #0
 8010610:	d101      	bne.n	8010616 <WIFI_GetHostAddress+0x22>
 8010612:	2300      	movs	r3, #0
 8010614:	e000      	b.n	8010618 <WIFI_GetHostAddress+0x24>
 8010616:	7bfb      	ldrb	r3, [r7, #15]
 8010618:	4618      	mov	r0, r3
 801061a:	3710      	adds	r7, #16
 801061c:	46bd      	mov	sp, r7
 801061e:	bd80      	pop	{r7, pc}
 8010620:	200065d0 	.word	0x200065d0

08010624 <WIFI_OpenClientConnection>:
 8010624:	b580      	push	{r7, lr}
 8010626:	b08a      	sub	sp, #40	@ 0x28
 8010628:	af00      	add	r7, sp, #0
 801062a:	60f8      	str	r0, [r7, #12]
 801062c:	607a      	str	r2, [r7, #4]
 801062e:	603b      	str	r3, [r7, #0]
 8010630:	460b      	mov	r3, r1
 8010632:	72fb      	strb	r3, [r7, #11]
 8010634:	2301      	movs	r3, #1
 8010636:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 801063a:	68fb      	ldr	r3, [r7, #12]
 801063c:	b2db      	uxtb	r3, r3
 801063e:	747b      	strb	r3, [r7, #17]
 8010640:	8e3b      	ldrh	r3, [r7, #48]	@ 0x30
 8010642:	827b      	strh	r3, [r7, #18]
 8010644:	8ebb      	ldrh	r3, [r7, #52]	@ 0x34
 8010646:	82bb      	strh	r3, [r7, #20]
 8010648:	7afb      	ldrb	r3, [r7, #11]
 801064a:	2b00      	cmp	r3, #0
 801064c:	bf14      	ite	ne
 801064e:	2301      	movne	r3, #1
 8010650:	2300      	moveq	r3, #0
 8010652:	b2db      	uxtb	r3, r3
 8010654:	743b      	strb	r3, [r7, #16]
 8010656:	683b      	ldr	r3, [r7, #0]
 8010658:	781b      	ldrb	r3, [r3, #0]
 801065a:	75bb      	strb	r3, [r7, #22]
 801065c:	683b      	ldr	r3, [r7, #0]
 801065e:	785b      	ldrb	r3, [r3, #1]
 8010660:	75fb      	strb	r3, [r7, #23]
 8010662:	683b      	ldr	r3, [r7, #0]
 8010664:	789b      	ldrb	r3, [r3, #2]
 8010666:	763b      	strb	r3, [r7, #24]
 8010668:	683b      	ldr	r3, [r7, #0]
 801066a:	78db      	ldrb	r3, [r3, #3]
 801066c:	767b      	strb	r3, [r7, #25]
 801066e:	f107 0310 	add.w	r3, r7, #16
 8010672:	4619      	mov	r1, r3
 8010674:	4807      	ldr	r0, [pc, #28]	@ (8010694 <WIFI_OpenClientConnection+0x70>)
 8010676:	f7f4 fd6d 	bl	8005154 <ES_WIFI_StartClientConnection>
 801067a:	4603      	mov	r3, r0
 801067c:	2b00      	cmp	r3, #0
 801067e:	d102      	bne.n	8010686 <WIFI_OpenClientConnection+0x62>
 8010680:	2300      	movs	r3, #0
 8010682:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8010686:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 801068a:	4618      	mov	r0, r3
 801068c:	3728      	adds	r7, #40	@ 0x28
 801068e:	46bd      	mov	sp, r7
 8010690:	bd80      	pop	{r7, pc}
 8010692:	bf00      	nop
 8010694:	200065d0 	.word	0x200065d0

08010698 <WIFI_CloseClientConnection>:
 8010698:	b580      	push	{r7, lr}
 801069a:	b088      	sub	sp, #32
 801069c:	af00      	add	r7, sp, #0
 801069e:	6078      	str	r0, [r7, #4]
 80106a0:	2301      	movs	r3, #1
 80106a2:	77fb      	strb	r3, [r7, #31]
 80106a4:	687b      	ldr	r3, [r7, #4]
 80106a6:	b2db      	uxtb	r3, r3
 80106a8:	727b      	strb	r3, [r7, #9]
 80106aa:	f107 0308 	add.w	r3, r7, #8
 80106ae:	4619      	mov	r1, r3
 80106b0:	4806      	ldr	r0, [pc, #24]	@ (80106cc <WIFI_CloseClientConnection+0x34>)
 80106b2:	f7f4 fe0b 	bl	80052cc <ES_WIFI_StopClientConnection>
 80106b6:	4603      	mov	r3, r0
 80106b8:	2b00      	cmp	r3, #0
 80106ba:	d101      	bne.n	80106c0 <WIFI_CloseClientConnection+0x28>
 80106bc:	2300      	movs	r3, #0
 80106be:	77fb      	strb	r3, [r7, #31]
 80106c0:	7ffb      	ldrb	r3, [r7, #31]
 80106c2:	4618      	mov	r0, r3
 80106c4:	3720      	adds	r7, #32
 80106c6:	46bd      	mov	sp, r7
 80106c8:	bd80      	pop	{r7, pc}
 80106ca:	bf00      	nop
 80106cc:	200065d0 	.word	0x200065d0

080106d0 <WIFI_SendData>:
 80106d0:	b580      	push	{r7, lr}
 80106d2:	b088      	sub	sp, #32
 80106d4:	af02      	add	r7, sp, #8
 80106d6:	60b9      	str	r1, [r7, #8]
 80106d8:	607b      	str	r3, [r7, #4]
 80106da:	4603      	mov	r3, r0
 80106dc:	73fb      	strb	r3, [r7, #15]
 80106de:	4613      	mov	r3, r2
 80106e0:	81bb      	strh	r3, [r7, #12]
 80106e2:	2301      	movs	r3, #1
 80106e4:	75fb      	strb	r3, [r7, #23]
 80106e6:	89ba      	ldrh	r2, [r7, #12]
 80106e8:	7bf9      	ldrb	r1, [r7, #15]
 80106ea:	6a3b      	ldr	r3, [r7, #32]
 80106ec:	9301      	str	r3, [sp, #4]
 80106ee:	687b      	ldr	r3, [r7, #4]
 80106f0:	9300      	str	r3, [sp, #0]
 80106f2:	4613      	mov	r3, r2
 80106f4:	68ba      	ldr	r2, [r7, #8]
 80106f6:	4806      	ldr	r0, [pc, #24]	@ (8010710 <WIFI_SendData+0x40>)
 80106f8:	f7f4 fe22 	bl	8005340 <ES_WIFI_SendData>
 80106fc:	4603      	mov	r3, r0
 80106fe:	2b00      	cmp	r3, #0
 8010700:	d101      	bne.n	8010706 <WIFI_SendData+0x36>
 8010702:	2300      	movs	r3, #0
 8010704:	75fb      	strb	r3, [r7, #23]
 8010706:	7dfb      	ldrb	r3, [r7, #23]
 8010708:	4618      	mov	r0, r3
 801070a:	3718      	adds	r7, #24
 801070c:	46bd      	mov	sp, r7
 801070e:	bd80      	pop	{r7, pc}
 8010710:	200065d0 	.word	0x200065d0

08010714 <WIFI_SendDataTo>:
 8010714:	b580      	push	{r7, lr}
 8010716:	b08a      	sub	sp, #40	@ 0x28
 8010718:	af04      	add	r7, sp, #16
 801071a:	60b9      	str	r1, [r7, #8]
 801071c:	607b      	str	r3, [r7, #4]
 801071e:	4603      	mov	r3, r0
 8010720:	73fb      	strb	r3, [r7, #15]
 8010722:	4613      	mov	r3, r2
 8010724:	81bb      	strh	r3, [r7, #12]
 8010726:	2301      	movs	r3, #1
 8010728:	75fb      	strb	r3, [r7, #23]
 801072a:	89ba      	ldrh	r2, [r7, #12]
 801072c:	7bf9      	ldrb	r1, [r7, #15]
 801072e:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8010730:	9303      	str	r3, [sp, #12]
 8010732:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010734:	9302      	str	r3, [sp, #8]
 8010736:	6a3b      	ldr	r3, [r7, #32]
 8010738:	9301      	str	r3, [sp, #4]
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	9300      	str	r3, [sp, #0]
 801073e:	4613      	mov	r3, r2
 8010740:	68ba      	ldr	r2, [r7, #8]
 8010742:	4806      	ldr	r0, [pc, #24]	@ (801075c <WIFI_SendDataTo+0x48>)
 8010744:	f7f4 feb0 	bl	80054a8 <ES_WIFI_SendDataTo>
 8010748:	4603      	mov	r3, r0
 801074a:	2b00      	cmp	r3, #0
 801074c:	d101      	bne.n	8010752 <WIFI_SendDataTo+0x3e>
 801074e:	2300      	movs	r3, #0
 8010750:	75fb      	strb	r3, [r7, #23]
 8010752:	7dfb      	ldrb	r3, [r7, #23]
 8010754:	4618      	mov	r0, r3
 8010756:	3718      	adds	r7, #24
 8010758:	46bd      	mov	sp, r7
 801075a:	bd80      	pop	{r7, pc}
 801075c:	200065d0 	.word	0x200065d0

08010760 <WIFI_ReceiveData>:
 8010760:	b580      	push	{r7, lr}
 8010762:	b088      	sub	sp, #32
 8010764:	af02      	add	r7, sp, #8
 8010766:	60b9      	str	r1, [r7, #8]
 8010768:	607b      	str	r3, [r7, #4]
 801076a:	4603      	mov	r3, r0
 801076c:	73fb      	strb	r3, [r7, #15]
 801076e:	4613      	mov	r3, r2
 8010770:	81bb      	strh	r3, [r7, #12]
 8010772:	2301      	movs	r3, #1
 8010774:	75fb      	strb	r3, [r7, #23]
 8010776:	89ba      	ldrh	r2, [r7, #12]
 8010778:	7bf9      	ldrb	r1, [r7, #15]
 801077a:	6a3b      	ldr	r3, [r7, #32]
 801077c:	9301      	str	r3, [sp, #4]
 801077e:	687b      	ldr	r3, [r7, #4]
 8010780:	9300      	str	r3, [sp, #0]
 8010782:	4613      	mov	r3, r2
 8010784:	68ba      	ldr	r2, [r7, #8]
 8010786:	4806      	ldr	r0, [pc, #24]	@ (80107a0 <WIFI_ReceiveData+0x40>)
 8010788:	f7f4 ff88 	bl	800569c <ES_WIFI_ReceiveData>
 801078c:	4603      	mov	r3, r0
 801078e:	2b00      	cmp	r3, #0
 8010790:	d101      	bne.n	8010796 <WIFI_ReceiveData+0x36>
 8010792:	2300      	movs	r3, #0
 8010794:	75fb      	strb	r3, [r7, #23]
 8010796:	7dfb      	ldrb	r3, [r7, #23]
 8010798:	4618      	mov	r0, r3
 801079a:	3718      	adds	r7, #24
 801079c:	46bd      	mov	sp, r7
 801079e:	bd80      	pop	{r7, pc}
 80107a0:	200065d0 	.word	0x200065d0

080107a4 <WIFI_ReceiveDataFrom>:
 80107a4:	b580      	push	{r7, lr}
 80107a6:	b08a      	sub	sp, #40	@ 0x28
 80107a8:	af04      	add	r7, sp, #16
 80107aa:	60b9      	str	r1, [r7, #8]
 80107ac:	607b      	str	r3, [r7, #4]
 80107ae:	4603      	mov	r3, r0
 80107b0:	73fb      	strb	r3, [r7, #15]
 80107b2:	4613      	mov	r3, r2
 80107b4:	81bb      	strh	r3, [r7, #12]
 80107b6:	2301      	movs	r3, #1
 80107b8:	75fb      	strb	r3, [r7, #23]
 80107ba:	89ba      	ldrh	r2, [r7, #12]
 80107bc:	7bf9      	ldrb	r1, [r7, #15]
 80107be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80107c0:	9303      	str	r3, [sp, #12]
 80107c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80107c4:	9302      	str	r3, [sp, #8]
 80107c6:	6a3b      	ldr	r3, [r7, #32]
 80107c8:	9301      	str	r3, [sp, #4]
 80107ca:	687b      	ldr	r3, [r7, #4]
 80107cc:	9300      	str	r3, [sp, #0]
 80107ce:	4613      	mov	r3, r2
 80107d0:	68ba      	ldr	r2, [r7, #8]
 80107d2:	4806      	ldr	r0, [pc, #24]	@ (80107ec <WIFI_ReceiveDataFrom+0x48>)
 80107d4:	f7f5 f81a 	bl	800580c <ES_WIFI_ReceiveDataFrom>
 80107d8:	4603      	mov	r3, r0
 80107da:	2b00      	cmp	r3, #0
 80107dc:	d101      	bne.n	80107e2 <WIFI_ReceiveDataFrom+0x3e>
 80107de:	2300      	movs	r3, #0
 80107e0:	75fb      	strb	r3, [r7, #23]
 80107e2:	7dfb      	ldrb	r3, [r7, #23]
 80107e4:	4618      	mov	r0, r3
 80107e6:	3718      	adds	r7, #24
 80107e8:	46bd      	mov	sp, r7
 80107ea:	bd80      	pop	{r7, pc}
 80107ec:	200065d0 	.word	0x200065d0

080107f0 <WIFI_GetModuleFwRevision>:
 80107f0:	b580      	push	{r7, lr}
 80107f2:	b084      	sub	sp, #16
 80107f4:	af00      	add	r7, sp, #0
 80107f6:	6078      	str	r0, [r7, #4]
 80107f8:	2301      	movs	r3, #1
 80107fa:	73fb      	strb	r3, [r7, #15]
 80107fc:	2218      	movs	r2, #24
 80107fe:	4905      	ldr	r1, [pc, #20]	@ (8010814 <WIFI_GetModuleFwRevision+0x24>)
 8010800:	6878      	ldr	r0, [r7, #4]
 8010802:	f001 f8e9 	bl	80119d8 <strncpy>
 8010806:	2300      	movs	r3, #0
 8010808:	73fb      	strb	r3, [r7, #15]
 801080a:	7bfb      	ldrb	r3, [r7, #15]
 801080c:	4618      	mov	r0, r3
 801080e:	3710      	adds	r7, #16
 8010810:	46bd      	mov	sp, r7
 8010812:	bd80      	pop	{r7, pc}
 8010814:	200065f0 	.word	0x200065f0

08010818 <WIFI_GetModuleID>:
 8010818:	b580      	push	{r7, lr}
 801081a:	b084      	sub	sp, #16
 801081c:	af00      	add	r7, sp, #0
 801081e:	6078      	str	r0, [r7, #4]
 8010820:	2301      	movs	r3, #1
 8010822:	73fb      	strb	r3, [r7, #15]
 8010824:	2220      	movs	r2, #32
 8010826:	4905      	ldr	r1, [pc, #20]	@ (801083c <WIFI_GetModuleID+0x24>)
 8010828:	6878      	ldr	r0, [r7, #4]
 801082a:	f001 f8d5 	bl	80119d8 <strncpy>
 801082e:	2300      	movs	r3, #0
 8010830:	73fb      	strb	r3, [r7, #15]
 8010832:	7bfb      	ldrb	r3, [r7, #15]
 8010834:	4618      	mov	r0, r3
 8010836:	3710      	adds	r7, #16
 8010838:	46bd      	mov	sp, r7
 801083a:	bd80      	pop	{r7, pc}
 801083c:	200065d0 	.word	0x200065d0

08010840 <WIFI_GetModuleName>:
 8010840:	b580      	push	{r7, lr}
 8010842:	b084      	sub	sp, #16
 8010844:	af00      	add	r7, sp, #0
 8010846:	6078      	str	r0, [r7, #4]
 8010848:	2301      	movs	r3, #1
 801084a:	73fb      	strb	r3, [r7, #15]
 801084c:	2220      	movs	r2, #32
 801084e:	4905      	ldr	r1, [pc, #20]	@ (8010864 <WIFI_GetModuleName+0x24>)
 8010850:	6878      	ldr	r0, [r7, #4]
 8010852:	f001 f8c1 	bl	80119d8 <strncpy>
 8010856:	2300      	movs	r3, #0
 8010858:	73fb      	strb	r3, [r7, #15]
 801085a:	7bfb      	ldrb	r3, [r7, #15]
 801085c:	4618      	mov	r0, r3
 801085e:	3710      	adds	r7, #16
 8010860:	46bd      	mov	sp, r7
 8010862:	bd80      	pop	{r7, pc}
 8010864:	20006638 	.word	0x20006638

08010868 <atoi>:
 8010868:	220a      	movs	r2, #10
 801086a:	2100      	movs	r1, #0
 801086c:	f000 b97c 	b.w	8010b68 <strtol>

08010870 <_calloc_r>:
 8010870:	b570      	push	{r4, r5, r6, lr}
 8010872:	fba1 5402 	umull	r5, r4, r1, r2
 8010876:	b93c      	cbnz	r4, 8010888 <_calloc_r+0x18>
 8010878:	4629      	mov	r1, r5
 801087a:	f000 f83f 	bl	80108fc <_malloc_r>
 801087e:	4606      	mov	r6, r0
 8010880:	b928      	cbnz	r0, 801088e <_calloc_r+0x1e>
 8010882:	2600      	movs	r6, #0
 8010884:	4630      	mov	r0, r6
 8010886:	bd70      	pop	{r4, r5, r6, pc}
 8010888:	220c      	movs	r2, #12
 801088a:	6002      	str	r2, [r0, #0]
 801088c:	e7f9      	b.n	8010882 <_calloc_r+0x12>
 801088e:	462a      	mov	r2, r5
 8010890:	4621      	mov	r1, r4
 8010892:	f001 f887 	bl	80119a4 <memset>
 8010896:	e7f5      	b.n	8010884 <_calloc_r+0x14>

08010898 <malloc>:
 8010898:	4b02      	ldr	r3, [pc, #8]	@ (80108a4 <malloc+0xc>)
 801089a:	4601      	mov	r1, r0
 801089c:	6818      	ldr	r0, [r3, #0]
 801089e:	f000 b82d 	b.w	80108fc <_malloc_r>
 80108a2:	bf00      	nop
 80108a4:	200001f0 	.word	0x200001f0

080108a8 <free>:
 80108a8:	4b02      	ldr	r3, [pc, #8]	@ (80108b4 <free+0xc>)
 80108aa:	4601      	mov	r1, r0
 80108ac:	6818      	ldr	r0, [r3, #0]
 80108ae:	f002 b86b 	b.w	8012988 <_free_r>
 80108b2:	bf00      	nop
 80108b4:	200001f0 	.word	0x200001f0

080108b8 <sbrk_aligned>:
 80108b8:	b570      	push	{r4, r5, r6, lr}
 80108ba:	4e0f      	ldr	r6, [pc, #60]	@ (80108f8 <sbrk_aligned+0x40>)
 80108bc:	460c      	mov	r4, r1
 80108be:	6831      	ldr	r1, [r6, #0]
 80108c0:	4605      	mov	r5, r0
 80108c2:	b911      	cbnz	r1, 80108ca <sbrk_aligned+0x12>
 80108c4:	f001 f99c 	bl	8011c00 <_sbrk_r>
 80108c8:	6030      	str	r0, [r6, #0]
 80108ca:	4621      	mov	r1, r4
 80108cc:	4628      	mov	r0, r5
 80108ce:	f001 f997 	bl	8011c00 <_sbrk_r>
 80108d2:	1c43      	adds	r3, r0, #1
 80108d4:	d103      	bne.n	80108de <sbrk_aligned+0x26>
 80108d6:	f04f 34ff 	mov.w	r4, #4294967295
 80108da:	4620      	mov	r0, r4
 80108dc:	bd70      	pop	{r4, r5, r6, pc}
 80108de:	1cc4      	adds	r4, r0, #3
 80108e0:	f024 0403 	bic.w	r4, r4, #3
 80108e4:	42a0      	cmp	r0, r4
 80108e6:	d0f8      	beq.n	80108da <sbrk_aligned+0x22>
 80108e8:	1a21      	subs	r1, r4, r0
 80108ea:	4628      	mov	r0, r5
 80108ec:	f001 f988 	bl	8011c00 <_sbrk_r>
 80108f0:	3001      	adds	r0, #1
 80108f2:	d1f2      	bne.n	80108da <sbrk_aligned+0x22>
 80108f4:	e7ef      	b.n	80108d6 <sbrk_aligned+0x1e>
 80108f6:	bf00      	nop
 80108f8:	20006c78 	.word	0x20006c78

080108fc <_malloc_r>:
 80108fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010900:	1ccd      	adds	r5, r1, #3
 8010902:	f025 0503 	bic.w	r5, r5, #3
 8010906:	3508      	adds	r5, #8
 8010908:	2d0c      	cmp	r5, #12
 801090a:	bf38      	it	cc
 801090c:	250c      	movcc	r5, #12
 801090e:	2d00      	cmp	r5, #0
 8010910:	4606      	mov	r6, r0
 8010912:	db01      	blt.n	8010918 <_malloc_r+0x1c>
 8010914:	42a9      	cmp	r1, r5
 8010916:	d904      	bls.n	8010922 <_malloc_r+0x26>
 8010918:	230c      	movs	r3, #12
 801091a:	6033      	str	r3, [r6, #0]
 801091c:	2000      	movs	r0, #0
 801091e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010922:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80109f8 <_malloc_r+0xfc>
 8010926:	f000 f869 	bl	80109fc <__malloc_lock>
 801092a:	f8d8 3000 	ldr.w	r3, [r8]
 801092e:	461c      	mov	r4, r3
 8010930:	bb44      	cbnz	r4, 8010984 <_malloc_r+0x88>
 8010932:	4629      	mov	r1, r5
 8010934:	4630      	mov	r0, r6
 8010936:	f7ff ffbf 	bl	80108b8 <sbrk_aligned>
 801093a:	1c43      	adds	r3, r0, #1
 801093c:	4604      	mov	r4, r0
 801093e:	d158      	bne.n	80109f2 <_malloc_r+0xf6>
 8010940:	f8d8 4000 	ldr.w	r4, [r8]
 8010944:	4627      	mov	r7, r4
 8010946:	2f00      	cmp	r7, #0
 8010948:	d143      	bne.n	80109d2 <_malloc_r+0xd6>
 801094a:	2c00      	cmp	r4, #0
 801094c:	d04b      	beq.n	80109e6 <_malloc_r+0xea>
 801094e:	6823      	ldr	r3, [r4, #0]
 8010950:	4639      	mov	r1, r7
 8010952:	4630      	mov	r0, r6
 8010954:	eb04 0903 	add.w	r9, r4, r3
 8010958:	f001 f952 	bl	8011c00 <_sbrk_r>
 801095c:	4581      	cmp	r9, r0
 801095e:	d142      	bne.n	80109e6 <_malloc_r+0xea>
 8010960:	6821      	ldr	r1, [r4, #0]
 8010962:	1a6d      	subs	r5, r5, r1
 8010964:	4629      	mov	r1, r5
 8010966:	4630      	mov	r0, r6
 8010968:	f7ff ffa6 	bl	80108b8 <sbrk_aligned>
 801096c:	3001      	adds	r0, #1
 801096e:	d03a      	beq.n	80109e6 <_malloc_r+0xea>
 8010970:	6823      	ldr	r3, [r4, #0]
 8010972:	442b      	add	r3, r5
 8010974:	6023      	str	r3, [r4, #0]
 8010976:	f8d8 3000 	ldr.w	r3, [r8]
 801097a:	685a      	ldr	r2, [r3, #4]
 801097c:	bb62      	cbnz	r2, 80109d8 <_malloc_r+0xdc>
 801097e:	f8c8 7000 	str.w	r7, [r8]
 8010982:	e00f      	b.n	80109a4 <_malloc_r+0xa8>
 8010984:	6822      	ldr	r2, [r4, #0]
 8010986:	1b52      	subs	r2, r2, r5
 8010988:	d420      	bmi.n	80109cc <_malloc_r+0xd0>
 801098a:	2a0b      	cmp	r2, #11
 801098c:	d917      	bls.n	80109be <_malloc_r+0xc2>
 801098e:	1961      	adds	r1, r4, r5
 8010990:	42a3      	cmp	r3, r4
 8010992:	6025      	str	r5, [r4, #0]
 8010994:	bf18      	it	ne
 8010996:	6059      	strne	r1, [r3, #4]
 8010998:	6863      	ldr	r3, [r4, #4]
 801099a:	bf08      	it	eq
 801099c:	f8c8 1000 	streq.w	r1, [r8]
 80109a0:	5162      	str	r2, [r4, r5]
 80109a2:	604b      	str	r3, [r1, #4]
 80109a4:	4630      	mov	r0, r6
 80109a6:	f000 f82f 	bl	8010a08 <__malloc_unlock>
 80109aa:	f104 000b 	add.w	r0, r4, #11
 80109ae:	1d23      	adds	r3, r4, #4
 80109b0:	f020 0007 	bic.w	r0, r0, #7
 80109b4:	1ac2      	subs	r2, r0, r3
 80109b6:	bf1c      	itt	ne
 80109b8:	1a1b      	subne	r3, r3, r0
 80109ba:	50a3      	strne	r3, [r4, r2]
 80109bc:	e7af      	b.n	801091e <_malloc_r+0x22>
 80109be:	6862      	ldr	r2, [r4, #4]
 80109c0:	42a3      	cmp	r3, r4
 80109c2:	bf0c      	ite	eq
 80109c4:	f8c8 2000 	streq.w	r2, [r8]
 80109c8:	605a      	strne	r2, [r3, #4]
 80109ca:	e7eb      	b.n	80109a4 <_malloc_r+0xa8>
 80109cc:	4623      	mov	r3, r4
 80109ce:	6864      	ldr	r4, [r4, #4]
 80109d0:	e7ae      	b.n	8010930 <_malloc_r+0x34>
 80109d2:	463c      	mov	r4, r7
 80109d4:	687f      	ldr	r7, [r7, #4]
 80109d6:	e7b6      	b.n	8010946 <_malloc_r+0x4a>
 80109d8:	461a      	mov	r2, r3
 80109da:	685b      	ldr	r3, [r3, #4]
 80109dc:	42a3      	cmp	r3, r4
 80109de:	d1fb      	bne.n	80109d8 <_malloc_r+0xdc>
 80109e0:	2300      	movs	r3, #0
 80109e2:	6053      	str	r3, [r2, #4]
 80109e4:	e7de      	b.n	80109a4 <_malloc_r+0xa8>
 80109e6:	230c      	movs	r3, #12
 80109e8:	6033      	str	r3, [r6, #0]
 80109ea:	4630      	mov	r0, r6
 80109ec:	f000 f80c 	bl	8010a08 <__malloc_unlock>
 80109f0:	e794      	b.n	801091c <_malloc_r+0x20>
 80109f2:	6005      	str	r5, [r0, #0]
 80109f4:	e7d6      	b.n	80109a4 <_malloc_r+0xa8>
 80109f6:	bf00      	nop
 80109f8:	20006c7c 	.word	0x20006c7c

080109fc <__malloc_lock>:
 80109fc:	4801      	ldr	r0, [pc, #4]	@ (8010a04 <__malloc_lock+0x8>)
 80109fe:	f7f3 bb77 	b.w	80040f0 <__retarget_lock_acquire_recursive>
 8010a02:	bf00      	nop
 8010a04:	2000150c 	.word	0x2000150c

08010a08 <__malloc_unlock>:
 8010a08:	4801      	ldr	r0, [pc, #4]	@ (8010a10 <__malloc_unlock+0x8>)
 8010a0a:	f7f3 bb86 	b.w	800411a <__retarget_lock_release_recursive>
 8010a0e:	bf00      	nop
 8010a10:	2000150c 	.word	0x2000150c

08010a14 <_realloc_r>:
 8010a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a18:	4680      	mov	r8, r0
 8010a1a:	4615      	mov	r5, r2
 8010a1c:	460c      	mov	r4, r1
 8010a1e:	b921      	cbnz	r1, 8010a2a <_realloc_r+0x16>
 8010a20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010a24:	4611      	mov	r1, r2
 8010a26:	f7ff bf69 	b.w	80108fc <_malloc_r>
 8010a2a:	b92a      	cbnz	r2, 8010a38 <_realloc_r+0x24>
 8010a2c:	f001 ffac 	bl	8012988 <_free_r>
 8010a30:	2400      	movs	r4, #0
 8010a32:	4620      	mov	r0, r4
 8010a34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a38:	f002 fb84 	bl	8013144 <_malloc_usable_size_r>
 8010a3c:	4285      	cmp	r5, r0
 8010a3e:	4606      	mov	r6, r0
 8010a40:	d802      	bhi.n	8010a48 <_realloc_r+0x34>
 8010a42:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8010a46:	d8f4      	bhi.n	8010a32 <_realloc_r+0x1e>
 8010a48:	4629      	mov	r1, r5
 8010a4a:	4640      	mov	r0, r8
 8010a4c:	f7ff ff56 	bl	80108fc <_malloc_r>
 8010a50:	4607      	mov	r7, r0
 8010a52:	2800      	cmp	r0, #0
 8010a54:	d0ec      	beq.n	8010a30 <_realloc_r+0x1c>
 8010a56:	42b5      	cmp	r5, r6
 8010a58:	462a      	mov	r2, r5
 8010a5a:	4621      	mov	r1, r4
 8010a5c:	bf28      	it	cs
 8010a5e:	4632      	movcs	r2, r6
 8010a60:	f001 f91a 	bl	8011c98 <memcpy>
 8010a64:	4621      	mov	r1, r4
 8010a66:	4640      	mov	r0, r8
 8010a68:	f001 ff8e 	bl	8012988 <_free_r>
 8010a6c:	463c      	mov	r4, r7
 8010a6e:	e7e0      	b.n	8010a32 <_realloc_r+0x1e>

08010a70 <_strtol_l.constprop.0>:
 8010a70:	2b24      	cmp	r3, #36	@ 0x24
 8010a72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010a76:	4686      	mov	lr, r0
 8010a78:	4690      	mov	r8, r2
 8010a7a:	d801      	bhi.n	8010a80 <_strtol_l.constprop.0+0x10>
 8010a7c:	2b01      	cmp	r3, #1
 8010a7e:	d106      	bne.n	8010a8e <_strtol_l.constprop.0+0x1e>
 8010a80:	f001 f8e0 	bl	8011c44 <__errno>
 8010a84:	2316      	movs	r3, #22
 8010a86:	6003      	str	r3, [r0, #0]
 8010a88:	2000      	movs	r0, #0
 8010a8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010a8e:	4834      	ldr	r0, [pc, #208]	@ (8010b60 <_strtol_l.constprop.0+0xf0>)
 8010a90:	460d      	mov	r5, r1
 8010a92:	462a      	mov	r2, r5
 8010a94:	f815 4b01 	ldrb.w	r4, [r5], #1
 8010a98:	5d06      	ldrb	r6, [r0, r4]
 8010a9a:	f016 0608 	ands.w	r6, r6, #8
 8010a9e:	d1f8      	bne.n	8010a92 <_strtol_l.constprop.0+0x22>
 8010aa0:	2c2d      	cmp	r4, #45	@ 0x2d
 8010aa2:	d12d      	bne.n	8010b00 <_strtol_l.constprop.0+0x90>
 8010aa4:	782c      	ldrb	r4, [r5, #0]
 8010aa6:	2601      	movs	r6, #1
 8010aa8:	1c95      	adds	r5, r2, #2
 8010aaa:	f033 0210 	bics.w	r2, r3, #16
 8010aae:	d109      	bne.n	8010ac4 <_strtol_l.constprop.0+0x54>
 8010ab0:	2c30      	cmp	r4, #48	@ 0x30
 8010ab2:	d12a      	bne.n	8010b0a <_strtol_l.constprop.0+0x9a>
 8010ab4:	782a      	ldrb	r2, [r5, #0]
 8010ab6:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8010aba:	2a58      	cmp	r2, #88	@ 0x58
 8010abc:	d125      	bne.n	8010b0a <_strtol_l.constprop.0+0x9a>
 8010abe:	786c      	ldrb	r4, [r5, #1]
 8010ac0:	2310      	movs	r3, #16
 8010ac2:	3502      	adds	r5, #2
 8010ac4:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8010ac8:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010acc:	2200      	movs	r2, #0
 8010ace:	fbbc f9f3 	udiv	r9, ip, r3
 8010ad2:	4610      	mov	r0, r2
 8010ad4:	fb03 ca19 	mls	sl, r3, r9, ip
 8010ad8:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8010adc:	2f09      	cmp	r7, #9
 8010ade:	d81b      	bhi.n	8010b18 <_strtol_l.constprop.0+0xa8>
 8010ae0:	463c      	mov	r4, r7
 8010ae2:	42a3      	cmp	r3, r4
 8010ae4:	dd27      	ble.n	8010b36 <_strtol_l.constprop.0+0xc6>
 8010ae6:	1c57      	adds	r7, r2, #1
 8010ae8:	d007      	beq.n	8010afa <_strtol_l.constprop.0+0x8a>
 8010aea:	4581      	cmp	r9, r0
 8010aec:	d320      	bcc.n	8010b30 <_strtol_l.constprop.0+0xc0>
 8010aee:	d101      	bne.n	8010af4 <_strtol_l.constprop.0+0x84>
 8010af0:	45a2      	cmp	sl, r4
 8010af2:	db1d      	blt.n	8010b30 <_strtol_l.constprop.0+0xc0>
 8010af4:	fb00 4003 	mla	r0, r0, r3, r4
 8010af8:	2201      	movs	r2, #1
 8010afa:	f815 4b01 	ldrb.w	r4, [r5], #1
 8010afe:	e7eb      	b.n	8010ad8 <_strtol_l.constprop.0+0x68>
 8010b00:	2c2b      	cmp	r4, #43	@ 0x2b
 8010b02:	bf04      	itt	eq
 8010b04:	782c      	ldrbeq	r4, [r5, #0]
 8010b06:	1c95      	addeq	r5, r2, #2
 8010b08:	e7cf      	b.n	8010aaa <_strtol_l.constprop.0+0x3a>
 8010b0a:	2b00      	cmp	r3, #0
 8010b0c:	d1da      	bne.n	8010ac4 <_strtol_l.constprop.0+0x54>
 8010b0e:	2c30      	cmp	r4, #48	@ 0x30
 8010b10:	bf0c      	ite	eq
 8010b12:	2308      	moveq	r3, #8
 8010b14:	230a      	movne	r3, #10
 8010b16:	e7d5      	b.n	8010ac4 <_strtol_l.constprop.0+0x54>
 8010b18:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8010b1c:	2f19      	cmp	r7, #25
 8010b1e:	d801      	bhi.n	8010b24 <_strtol_l.constprop.0+0xb4>
 8010b20:	3c37      	subs	r4, #55	@ 0x37
 8010b22:	e7de      	b.n	8010ae2 <_strtol_l.constprop.0+0x72>
 8010b24:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8010b28:	2f19      	cmp	r7, #25
 8010b2a:	d804      	bhi.n	8010b36 <_strtol_l.constprop.0+0xc6>
 8010b2c:	3c57      	subs	r4, #87	@ 0x57
 8010b2e:	e7d8      	b.n	8010ae2 <_strtol_l.constprop.0+0x72>
 8010b30:	f04f 32ff 	mov.w	r2, #4294967295
 8010b34:	e7e1      	b.n	8010afa <_strtol_l.constprop.0+0x8a>
 8010b36:	1c53      	adds	r3, r2, #1
 8010b38:	d108      	bne.n	8010b4c <_strtol_l.constprop.0+0xdc>
 8010b3a:	2322      	movs	r3, #34	@ 0x22
 8010b3c:	f8ce 3000 	str.w	r3, [lr]
 8010b40:	4660      	mov	r0, ip
 8010b42:	f1b8 0f00 	cmp.w	r8, #0
 8010b46:	d0a0      	beq.n	8010a8a <_strtol_l.constprop.0+0x1a>
 8010b48:	1e69      	subs	r1, r5, #1
 8010b4a:	e006      	b.n	8010b5a <_strtol_l.constprop.0+0xea>
 8010b4c:	b106      	cbz	r6, 8010b50 <_strtol_l.constprop.0+0xe0>
 8010b4e:	4240      	negs	r0, r0
 8010b50:	f1b8 0f00 	cmp.w	r8, #0
 8010b54:	d099      	beq.n	8010a8a <_strtol_l.constprop.0+0x1a>
 8010b56:	2a00      	cmp	r2, #0
 8010b58:	d1f6      	bne.n	8010b48 <_strtol_l.constprop.0+0xd8>
 8010b5a:	f8c8 1000 	str.w	r1, [r8]
 8010b5e:	e794      	b.n	8010a8a <_strtol_l.constprop.0+0x1a>
 8010b60:	0801568d 	.word	0x0801568d

08010b64 <_strtol_r>:
 8010b64:	f7ff bf84 	b.w	8010a70 <_strtol_l.constprop.0>

08010b68 <strtol>:
 8010b68:	4613      	mov	r3, r2
 8010b6a:	460a      	mov	r2, r1
 8010b6c:	4601      	mov	r1, r0
 8010b6e:	4802      	ldr	r0, [pc, #8]	@ (8010b78 <strtol+0x10>)
 8010b70:	6800      	ldr	r0, [r0, #0]
 8010b72:	f7ff bf7d 	b.w	8010a70 <_strtol_l.constprop.0>
 8010b76:	bf00      	nop
 8010b78:	200001f0 	.word	0x200001f0

08010b7c <__cvt>:
 8010b7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010b80:	ec57 6b10 	vmov	r6, r7, d0
 8010b84:	2f00      	cmp	r7, #0
 8010b86:	460c      	mov	r4, r1
 8010b88:	4619      	mov	r1, r3
 8010b8a:	463b      	mov	r3, r7
 8010b8c:	bfbb      	ittet	lt
 8010b8e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8010b92:	461f      	movlt	r7, r3
 8010b94:	2300      	movge	r3, #0
 8010b96:	232d      	movlt	r3, #45	@ 0x2d
 8010b98:	700b      	strb	r3, [r1, #0]
 8010b9a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010b9c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8010ba0:	4691      	mov	r9, r2
 8010ba2:	f023 0820 	bic.w	r8, r3, #32
 8010ba6:	bfbc      	itt	lt
 8010ba8:	4632      	movlt	r2, r6
 8010baa:	4616      	movlt	r6, r2
 8010bac:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8010bb0:	d005      	beq.n	8010bbe <__cvt+0x42>
 8010bb2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8010bb6:	d100      	bne.n	8010bba <__cvt+0x3e>
 8010bb8:	3401      	adds	r4, #1
 8010bba:	2102      	movs	r1, #2
 8010bbc:	e000      	b.n	8010bc0 <__cvt+0x44>
 8010bbe:	2103      	movs	r1, #3
 8010bc0:	ab03      	add	r3, sp, #12
 8010bc2:	9301      	str	r3, [sp, #4]
 8010bc4:	ab02      	add	r3, sp, #8
 8010bc6:	9300      	str	r3, [sp, #0]
 8010bc8:	ec47 6b10 	vmov	d0, r6, r7
 8010bcc:	4653      	mov	r3, sl
 8010bce:	4622      	mov	r2, r4
 8010bd0:	f001 f916 	bl	8011e00 <_dtoa_r>
 8010bd4:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8010bd8:	4605      	mov	r5, r0
 8010bda:	d119      	bne.n	8010c10 <__cvt+0x94>
 8010bdc:	f019 0f01 	tst.w	r9, #1
 8010be0:	d00e      	beq.n	8010c00 <__cvt+0x84>
 8010be2:	eb00 0904 	add.w	r9, r0, r4
 8010be6:	2200      	movs	r2, #0
 8010be8:	2300      	movs	r3, #0
 8010bea:	4630      	mov	r0, r6
 8010bec:	4639      	mov	r1, r7
 8010bee:	f7ef ff7b 	bl	8000ae8 <__aeabi_dcmpeq>
 8010bf2:	b108      	cbz	r0, 8010bf8 <__cvt+0x7c>
 8010bf4:	f8cd 900c 	str.w	r9, [sp, #12]
 8010bf8:	2230      	movs	r2, #48	@ 0x30
 8010bfa:	9b03      	ldr	r3, [sp, #12]
 8010bfc:	454b      	cmp	r3, r9
 8010bfe:	d31e      	bcc.n	8010c3e <__cvt+0xc2>
 8010c00:	9b03      	ldr	r3, [sp, #12]
 8010c02:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8010c04:	1b5b      	subs	r3, r3, r5
 8010c06:	4628      	mov	r0, r5
 8010c08:	6013      	str	r3, [r2, #0]
 8010c0a:	b004      	add	sp, #16
 8010c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010c10:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8010c14:	eb00 0904 	add.w	r9, r0, r4
 8010c18:	d1e5      	bne.n	8010be6 <__cvt+0x6a>
 8010c1a:	7803      	ldrb	r3, [r0, #0]
 8010c1c:	2b30      	cmp	r3, #48	@ 0x30
 8010c1e:	d10a      	bne.n	8010c36 <__cvt+0xba>
 8010c20:	2200      	movs	r2, #0
 8010c22:	2300      	movs	r3, #0
 8010c24:	4630      	mov	r0, r6
 8010c26:	4639      	mov	r1, r7
 8010c28:	f7ef ff5e 	bl	8000ae8 <__aeabi_dcmpeq>
 8010c2c:	b918      	cbnz	r0, 8010c36 <__cvt+0xba>
 8010c2e:	f1c4 0401 	rsb	r4, r4, #1
 8010c32:	f8ca 4000 	str.w	r4, [sl]
 8010c36:	f8da 3000 	ldr.w	r3, [sl]
 8010c3a:	4499      	add	r9, r3
 8010c3c:	e7d3      	b.n	8010be6 <__cvt+0x6a>
 8010c3e:	1c59      	adds	r1, r3, #1
 8010c40:	9103      	str	r1, [sp, #12]
 8010c42:	701a      	strb	r2, [r3, #0]
 8010c44:	e7d9      	b.n	8010bfa <__cvt+0x7e>

08010c46 <__exponent>:
 8010c46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010c48:	2900      	cmp	r1, #0
 8010c4a:	bfba      	itte	lt
 8010c4c:	4249      	neglt	r1, r1
 8010c4e:	232d      	movlt	r3, #45	@ 0x2d
 8010c50:	232b      	movge	r3, #43	@ 0x2b
 8010c52:	2909      	cmp	r1, #9
 8010c54:	7002      	strb	r2, [r0, #0]
 8010c56:	7043      	strb	r3, [r0, #1]
 8010c58:	dd29      	ble.n	8010cae <__exponent+0x68>
 8010c5a:	f10d 0307 	add.w	r3, sp, #7
 8010c5e:	461d      	mov	r5, r3
 8010c60:	270a      	movs	r7, #10
 8010c62:	461a      	mov	r2, r3
 8010c64:	fbb1 f6f7 	udiv	r6, r1, r7
 8010c68:	fb07 1416 	mls	r4, r7, r6, r1
 8010c6c:	3430      	adds	r4, #48	@ 0x30
 8010c6e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8010c72:	460c      	mov	r4, r1
 8010c74:	2c63      	cmp	r4, #99	@ 0x63
 8010c76:	f103 33ff 	add.w	r3, r3, #4294967295
 8010c7a:	4631      	mov	r1, r6
 8010c7c:	dcf1      	bgt.n	8010c62 <__exponent+0x1c>
 8010c7e:	3130      	adds	r1, #48	@ 0x30
 8010c80:	1e94      	subs	r4, r2, #2
 8010c82:	f803 1c01 	strb.w	r1, [r3, #-1]
 8010c86:	1c41      	adds	r1, r0, #1
 8010c88:	4623      	mov	r3, r4
 8010c8a:	42ab      	cmp	r3, r5
 8010c8c:	d30a      	bcc.n	8010ca4 <__exponent+0x5e>
 8010c8e:	f10d 0309 	add.w	r3, sp, #9
 8010c92:	1a9b      	subs	r3, r3, r2
 8010c94:	42ac      	cmp	r4, r5
 8010c96:	bf88      	it	hi
 8010c98:	2300      	movhi	r3, #0
 8010c9a:	3302      	adds	r3, #2
 8010c9c:	4403      	add	r3, r0
 8010c9e:	1a18      	subs	r0, r3, r0
 8010ca0:	b003      	add	sp, #12
 8010ca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ca4:	f813 6b01 	ldrb.w	r6, [r3], #1
 8010ca8:	f801 6f01 	strb.w	r6, [r1, #1]!
 8010cac:	e7ed      	b.n	8010c8a <__exponent+0x44>
 8010cae:	2330      	movs	r3, #48	@ 0x30
 8010cb0:	3130      	adds	r1, #48	@ 0x30
 8010cb2:	7083      	strb	r3, [r0, #2]
 8010cb4:	70c1      	strb	r1, [r0, #3]
 8010cb6:	1d03      	adds	r3, r0, #4
 8010cb8:	e7f1      	b.n	8010c9e <__exponent+0x58>
	...

08010cbc <_printf_float>:
 8010cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cc0:	b08d      	sub	sp, #52	@ 0x34
 8010cc2:	460c      	mov	r4, r1
 8010cc4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8010cc8:	4616      	mov	r6, r2
 8010cca:	461f      	mov	r7, r3
 8010ccc:	4605      	mov	r5, r0
 8010cce:	f000 ff09 	bl	8011ae4 <_localeconv_r>
 8010cd2:	6803      	ldr	r3, [r0, #0]
 8010cd4:	9304      	str	r3, [sp, #16]
 8010cd6:	4618      	mov	r0, r3
 8010cd8:	f7ef fada 	bl	8000290 <strlen>
 8010cdc:	2300      	movs	r3, #0
 8010cde:	930a      	str	r3, [sp, #40]	@ 0x28
 8010ce0:	f8d8 3000 	ldr.w	r3, [r8]
 8010ce4:	9005      	str	r0, [sp, #20]
 8010ce6:	3307      	adds	r3, #7
 8010ce8:	f023 0307 	bic.w	r3, r3, #7
 8010cec:	f103 0208 	add.w	r2, r3, #8
 8010cf0:	f894 a018 	ldrb.w	sl, [r4, #24]
 8010cf4:	f8d4 b000 	ldr.w	fp, [r4]
 8010cf8:	f8c8 2000 	str.w	r2, [r8]
 8010cfc:	e9d3 8900 	ldrd	r8, r9, [r3]
 8010d00:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8010d04:	9307      	str	r3, [sp, #28]
 8010d06:	f8cd 8018 	str.w	r8, [sp, #24]
 8010d0a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8010d0e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010d12:	4b9c      	ldr	r3, [pc, #624]	@ (8010f84 <_printf_float+0x2c8>)
 8010d14:	f04f 32ff 	mov.w	r2, #4294967295
 8010d18:	f7ef ff18 	bl	8000b4c <__aeabi_dcmpun>
 8010d1c:	bb70      	cbnz	r0, 8010d7c <_printf_float+0xc0>
 8010d1e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010d22:	4b98      	ldr	r3, [pc, #608]	@ (8010f84 <_printf_float+0x2c8>)
 8010d24:	f04f 32ff 	mov.w	r2, #4294967295
 8010d28:	f7ef fef2 	bl	8000b10 <__aeabi_dcmple>
 8010d2c:	bb30      	cbnz	r0, 8010d7c <_printf_float+0xc0>
 8010d2e:	2200      	movs	r2, #0
 8010d30:	2300      	movs	r3, #0
 8010d32:	4640      	mov	r0, r8
 8010d34:	4649      	mov	r1, r9
 8010d36:	f7ef fee1 	bl	8000afc <__aeabi_dcmplt>
 8010d3a:	b110      	cbz	r0, 8010d42 <_printf_float+0x86>
 8010d3c:	232d      	movs	r3, #45	@ 0x2d
 8010d3e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8010d42:	4a91      	ldr	r2, [pc, #580]	@ (8010f88 <_printf_float+0x2cc>)
 8010d44:	4b91      	ldr	r3, [pc, #580]	@ (8010f8c <_printf_float+0x2d0>)
 8010d46:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8010d4a:	bf94      	ite	ls
 8010d4c:	4690      	movls	r8, r2
 8010d4e:	4698      	movhi	r8, r3
 8010d50:	2303      	movs	r3, #3
 8010d52:	6123      	str	r3, [r4, #16]
 8010d54:	f02b 0304 	bic.w	r3, fp, #4
 8010d58:	6023      	str	r3, [r4, #0]
 8010d5a:	f04f 0900 	mov.w	r9, #0
 8010d5e:	9700      	str	r7, [sp, #0]
 8010d60:	4633      	mov	r3, r6
 8010d62:	aa0b      	add	r2, sp, #44	@ 0x2c
 8010d64:	4621      	mov	r1, r4
 8010d66:	4628      	mov	r0, r5
 8010d68:	f000 f9d2 	bl	8011110 <_printf_common>
 8010d6c:	3001      	adds	r0, #1
 8010d6e:	f040 808d 	bne.w	8010e8c <_printf_float+0x1d0>
 8010d72:	f04f 30ff 	mov.w	r0, #4294967295
 8010d76:	b00d      	add	sp, #52	@ 0x34
 8010d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d7c:	4642      	mov	r2, r8
 8010d7e:	464b      	mov	r3, r9
 8010d80:	4640      	mov	r0, r8
 8010d82:	4649      	mov	r1, r9
 8010d84:	f7ef fee2 	bl	8000b4c <__aeabi_dcmpun>
 8010d88:	b140      	cbz	r0, 8010d9c <_printf_float+0xe0>
 8010d8a:	464b      	mov	r3, r9
 8010d8c:	2b00      	cmp	r3, #0
 8010d8e:	bfbc      	itt	lt
 8010d90:	232d      	movlt	r3, #45	@ 0x2d
 8010d92:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8010d96:	4a7e      	ldr	r2, [pc, #504]	@ (8010f90 <_printf_float+0x2d4>)
 8010d98:	4b7e      	ldr	r3, [pc, #504]	@ (8010f94 <_printf_float+0x2d8>)
 8010d9a:	e7d4      	b.n	8010d46 <_printf_float+0x8a>
 8010d9c:	6863      	ldr	r3, [r4, #4]
 8010d9e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8010da2:	9206      	str	r2, [sp, #24]
 8010da4:	1c5a      	adds	r2, r3, #1
 8010da6:	d13b      	bne.n	8010e20 <_printf_float+0x164>
 8010da8:	2306      	movs	r3, #6
 8010daa:	6063      	str	r3, [r4, #4]
 8010dac:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8010db0:	2300      	movs	r3, #0
 8010db2:	6022      	str	r2, [r4, #0]
 8010db4:	9303      	str	r3, [sp, #12]
 8010db6:	ab0a      	add	r3, sp, #40	@ 0x28
 8010db8:	e9cd a301 	strd	sl, r3, [sp, #4]
 8010dbc:	ab09      	add	r3, sp, #36	@ 0x24
 8010dbe:	9300      	str	r3, [sp, #0]
 8010dc0:	6861      	ldr	r1, [r4, #4]
 8010dc2:	ec49 8b10 	vmov	d0, r8, r9
 8010dc6:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8010dca:	4628      	mov	r0, r5
 8010dcc:	f7ff fed6 	bl	8010b7c <__cvt>
 8010dd0:	9b06      	ldr	r3, [sp, #24]
 8010dd2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8010dd4:	2b47      	cmp	r3, #71	@ 0x47
 8010dd6:	4680      	mov	r8, r0
 8010dd8:	d129      	bne.n	8010e2e <_printf_float+0x172>
 8010dda:	1cc8      	adds	r0, r1, #3
 8010ddc:	db02      	blt.n	8010de4 <_printf_float+0x128>
 8010dde:	6863      	ldr	r3, [r4, #4]
 8010de0:	4299      	cmp	r1, r3
 8010de2:	dd41      	ble.n	8010e68 <_printf_float+0x1ac>
 8010de4:	f1aa 0a02 	sub.w	sl, sl, #2
 8010de8:	fa5f fa8a 	uxtb.w	sl, sl
 8010dec:	3901      	subs	r1, #1
 8010dee:	4652      	mov	r2, sl
 8010df0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8010df4:	9109      	str	r1, [sp, #36]	@ 0x24
 8010df6:	f7ff ff26 	bl	8010c46 <__exponent>
 8010dfa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010dfc:	1813      	adds	r3, r2, r0
 8010dfe:	2a01      	cmp	r2, #1
 8010e00:	4681      	mov	r9, r0
 8010e02:	6123      	str	r3, [r4, #16]
 8010e04:	dc02      	bgt.n	8010e0c <_printf_float+0x150>
 8010e06:	6822      	ldr	r2, [r4, #0]
 8010e08:	07d2      	lsls	r2, r2, #31
 8010e0a:	d501      	bpl.n	8010e10 <_printf_float+0x154>
 8010e0c:	3301      	adds	r3, #1
 8010e0e:	6123      	str	r3, [r4, #16]
 8010e10:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8010e14:	2b00      	cmp	r3, #0
 8010e16:	d0a2      	beq.n	8010d5e <_printf_float+0xa2>
 8010e18:	232d      	movs	r3, #45	@ 0x2d
 8010e1a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8010e1e:	e79e      	b.n	8010d5e <_printf_float+0xa2>
 8010e20:	9a06      	ldr	r2, [sp, #24]
 8010e22:	2a47      	cmp	r2, #71	@ 0x47
 8010e24:	d1c2      	bne.n	8010dac <_printf_float+0xf0>
 8010e26:	2b00      	cmp	r3, #0
 8010e28:	d1c0      	bne.n	8010dac <_printf_float+0xf0>
 8010e2a:	2301      	movs	r3, #1
 8010e2c:	e7bd      	b.n	8010daa <_printf_float+0xee>
 8010e2e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8010e32:	d9db      	bls.n	8010dec <_printf_float+0x130>
 8010e34:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8010e38:	d118      	bne.n	8010e6c <_printf_float+0x1b0>
 8010e3a:	2900      	cmp	r1, #0
 8010e3c:	6863      	ldr	r3, [r4, #4]
 8010e3e:	dd0b      	ble.n	8010e58 <_printf_float+0x19c>
 8010e40:	6121      	str	r1, [r4, #16]
 8010e42:	b913      	cbnz	r3, 8010e4a <_printf_float+0x18e>
 8010e44:	6822      	ldr	r2, [r4, #0]
 8010e46:	07d0      	lsls	r0, r2, #31
 8010e48:	d502      	bpl.n	8010e50 <_printf_float+0x194>
 8010e4a:	3301      	adds	r3, #1
 8010e4c:	440b      	add	r3, r1
 8010e4e:	6123      	str	r3, [r4, #16]
 8010e50:	65a1      	str	r1, [r4, #88]	@ 0x58
 8010e52:	f04f 0900 	mov.w	r9, #0
 8010e56:	e7db      	b.n	8010e10 <_printf_float+0x154>
 8010e58:	b913      	cbnz	r3, 8010e60 <_printf_float+0x1a4>
 8010e5a:	6822      	ldr	r2, [r4, #0]
 8010e5c:	07d2      	lsls	r2, r2, #31
 8010e5e:	d501      	bpl.n	8010e64 <_printf_float+0x1a8>
 8010e60:	3302      	adds	r3, #2
 8010e62:	e7f4      	b.n	8010e4e <_printf_float+0x192>
 8010e64:	2301      	movs	r3, #1
 8010e66:	e7f2      	b.n	8010e4e <_printf_float+0x192>
 8010e68:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8010e6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8010e6e:	4299      	cmp	r1, r3
 8010e70:	db05      	blt.n	8010e7e <_printf_float+0x1c2>
 8010e72:	6823      	ldr	r3, [r4, #0]
 8010e74:	6121      	str	r1, [r4, #16]
 8010e76:	07d8      	lsls	r0, r3, #31
 8010e78:	d5ea      	bpl.n	8010e50 <_printf_float+0x194>
 8010e7a:	1c4b      	adds	r3, r1, #1
 8010e7c:	e7e7      	b.n	8010e4e <_printf_float+0x192>
 8010e7e:	2900      	cmp	r1, #0
 8010e80:	bfd4      	ite	le
 8010e82:	f1c1 0202 	rsble	r2, r1, #2
 8010e86:	2201      	movgt	r2, #1
 8010e88:	4413      	add	r3, r2
 8010e8a:	e7e0      	b.n	8010e4e <_printf_float+0x192>
 8010e8c:	6823      	ldr	r3, [r4, #0]
 8010e8e:	055a      	lsls	r2, r3, #21
 8010e90:	d407      	bmi.n	8010ea2 <_printf_float+0x1e6>
 8010e92:	6923      	ldr	r3, [r4, #16]
 8010e94:	4642      	mov	r2, r8
 8010e96:	4631      	mov	r1, r6
 8010e98:	4628      	mov	r0, r5
 8010e9a:	47b8      	blx	r7
 8010e9c:	3001      	adds	r0, #1
 8010e9e:	d12b      	bne.n	8010ef8 <_printf_float+0x23c>
 8010ea0:	e767      	b.n	8010d72 <_printf_float+0xb6>
 8010ea2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8010ea6:	f240 80dd 	bls.w	8011064 <_printf_float+0x3a8>
 8010eaa:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8010eae:	2200      	movs	r2, #0
 8010eb0:	2300      	movs	r3, #0
 8010eb2:	f7ef fe19 	bl	8000ae8 <__aeabi_dcmpeq>
 8010eb6:	2800      	cmp	r0, #0
 8010eb8:	d033      	beq.n	8010f22 <_printf_float+0x266>
 8010eba:	4a37      	ldr	r2, [pc, #220]	@ (8010f98 <_printf_float+0x2dc>)
 8010ebc:	2301      	movs	r3, #1
 8010ebe:	4631      	mov	r1, r6
 8010ec0:	4628      	mov	r0, r5
 8010ec2:	47b8      	blx	r7
 8010ec4:	3001      	adds	r0, #1
 8010ec6:	f43f af54 	beq.w	8010d72 <_printf_float+0xb6>
 8010eca:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8010ece:	4543      	cmp	r3, r8
 8010ed0:	db02      	blt.n	8010ed8 <_printf_float+0x21c>
 8010ed2:	6823      	ldr	r3, [r4, #0]
 8010ed4:	07d8      	lsls	r0, r3, #31
 8010ed6:	d50f      	bpl.n	8010ef8 <_printf_float+0x23c>
 8010ed8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010edc:	4631      	mov	r1, r6
 8010ede:	4628      	mov	r0, r5
 8010ee0:	47b8      	blx	r7
 8010ee2:	3001      	adds	r0, #1
 8010ee4:	f43f af45 	beq.w	8010d72 <_printf_float+0xb6>
 8010ee8:	f04f 0900 	mov.w	r9, #0
 8010eec:	f108 38ff 	add.w	r8, r8, #4294967295
 8010ef0:	f104 0a1a 	add.w	sl, r4, #26
 8010ef4:	45c8      	cmp	r8, r9
 8010ef6:	dc09      	bgt.n	8010f0c <_printf_float+0x250>
 8010ef8:	6823      	ldr	r3, [r4, #0]
 8010efa:	079b      	lsls	r3, r3, #30
 8010efc:	f100 8103 	bmi.w	8011106 <_printf_float+0x44a>
 8010f00:	68e0      	ldr	r0, [r4, #12]
 8010f02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010f04:	4298      	cmp	r0, r3
 8010f06:	bfb8      	it	lt
 8010f08:	4618      	movlt	r0, r3
 8010f0a:	e734      	b.n	8010d76 <_printf_float+0xba>
 8010f0c:	2301      	movs	r3, #1
 8010f0e:	4652      	mov	r2, sl
 8010f10:	4631      	mov	r1, r6
 8010f12:	4628      	mov	r0, r5
 8010f14:	47b8      	blx	r7
 8010f16:	3001      	adds	r0, #1
 8010f18:	f43f af2b 	beq.w	8010d72 <_printf_float+0xb6>
 8010f1c:	f109 0901 	add.w	r9, r9, #1
 8010f20:	e7e8      	b.n	8010ef4 <_printf_float+0x238>
 8010f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f24:	2b00      	cmp	r3, #0
 8010f26:	dc39      	bgt.n	8010f9c <_printf_float+0x2e0>
 8010f28:	4a1b      	ldr	r2, [pc, #108]	@ (8010f98 <_printf_float+0x2dc>)
 8010f2a:	2301      	movs	r3, #1
 8010f2c:	4631      	mov	r1, r6
 8010f2e:	4628      	mov	r0, r5
 8010f30:	47b8      	blx	r7
 8010f32:	3001      	adds	r0, #1
 8010f34:	f43f af1d 	beq.w	8010d72 <_printf_float+0xb6>
 8010f38:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8010f3c:	ea59 0303 	orrs.w	r3, r9, r3
 8010f40:	d102      	bne.n	8010f48 <_printf_float+0x28c>
 8010f42:	6823      	ldr	r3, [r4, #0]
 8010f44:	07d9      	lsls	r1, r3, #31
 8010f46:	d5d7      	bpl.n	8010ef8 <_printf_float+0x23c>
 8010f48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8010f4c:	4631      	mov	r1, r6
 8010f4e:	4628      	mov	r0, r5
 8010f50:	47b8      	blx	r7
 8010f52:	3001      	adds	r0, #1
 8010f54:	f43f af0d 	beq.w	8010d72 <_printf_float+0xb6>
 8010f58:	f04f 0a00 	mov.w	sl, #0
 8010f5c:	f104 0b1a 	add.w	fp, r4, #26
 8010f60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f62:	425b      	negs	r3, r3
 8010f64:	4553      	cmp	r3, sl
 8010f66:	dc01      	bgt.n	8010f6c <_printf_float+0x2b0>
 8010f68:	464b      	mov	r3, r9
 8010f6a:	e793      	b.n	8010e94 <_printf_float+0x1d8>
 8010f6c:	2301      	movs	r3, #1
 8010f6e:	465a      	mov	r2, fp
 8010f70:	4631      	mov	r1, r6
 8010f72:	4628      	mov	r0, r5
 8010f74:	47b8      	blx	r7
 8010f76:	3001      	adds	r0, #1
 8010f78:	f43f aefb 	beq.w	8010d72 <_printf_float+0xb6>
 8010f7c:	f10a 0a01 	add.w	sl, sl, #1
 8010f80:	e7ee      	b.n	8010f60 <_printf_float+0x2a4>
 8010f82:	bf00      	nop
 8010f84:	7fefffff 	.word	0x7fefffff
 8010f88:	0801578d 	.word	0x0801578d
 8010f8c:	08015791 	.word	0x08015791
 8010f90:	08015795 	.word	0x08015795
 8010f94:	08015799 	.word	0x08015799
 8010f98:	08015a6f 	.word	0x08015a6f
 8010f9c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8010f9e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8010fa2:	4553      	cmp	r3, sl
 8010fa4:	bfa8      	it	ge
 8010fa6:	4653      	movge	r3, sl
 8010fa8:	2b00      	cmp	r3, #0
 8010faa:	4699      	mov	r9, r3
 8010fac:	dc36      	bgt.n	801101c <_printf_float+0x360>
 8010fae:	f04f 0b00 	mov.w	fp, #0
 8010fb2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8010fb6:	f104 021a 	add.w	r2, r4, #26
 8010fba:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8010fbc:	9306      	str	r3, [sp, #24]
 8010fbe:	eba3 0309 	sub.w	r3, r3, r9
 8010fc2:	455b      	cmp	r3, fp
 8010fc4:	dc31      	bgt.n	801102a <_printf_float+0x36e>
 8010fc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010fc8:	459a      	cmp	sl, r3
 8010fca:	dc3a      	bgt.n	8011042 <_printf_float+0x386>
 8010fcc:	6823      	ldr	r3, [r4, #0]
 8010fce:	07da      	lsls	r2, r3, #31
 8010fd0:	d437      	bmi.n	8011042 <_printf_float+0x386>
 8010fd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010fd4:	ebaa 0903 	sub.w	r9, sl, r3
 8010fd8:	9b06      	ldr	r3, [sp, #24]
 8010fda:	ebaa 0303 	sub.w	r3, sl, r3
 8010fde:	4599      	cmp	r9, r3
 8010fe0:	bfa8      	it	ge
 8010fe2:	4699      	movge	r9, r3
 8010fe4:	f1b9 0f00 	cmp.w	r9, #0
 8010fe8:	dc33      	bgt.n	8011052 <_printf_float+0x396>
 8010fea:	f04f 0800 	mov.w	r8, #0
 8010fee:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8010ff2:	f104 0b1a 	add.w	fp, r4, #26
 8010ff6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010ff8:	ebaa 0303 	sub.w	r3, sl, r3
 8010ffc:	eba3 0309 	sub.w	r3, r3, r9
 8011000:	4543      	cmp	r3, r8
 8011002:	f77f af79 	ble.w	8010ef8 <_printf_float+0x23c>
 8011006:	2301      	movs	r3, #1
 8011008:	465a      	mov	r2, fp
 801100a:	4631      	mov	r1, r6
 801100c:	4628      	mov	r0, r5
 801100e:	47b8      	blx	r7
 8011010:	3001      	adds	r0, #1
 8011012:	f43f aeae 	beq.w	8010d72 <_printf_float+0xb6>
 8011016:	f108 0801 	add.w	r8, r8, #1
 801101a:	e7ec      	b.n	8010ff6 <_printf_float+0x33a>
 801101c:	4642      	mov	r2, r8
 801101e:	4631      	mov	r1, r6
 8011020:	4628      	mov	r0, r5
 8011022:	47b8      	blx	r7
 8011024:	3001      	adds	r0, #1
 8011026:	d1c2      	bne.n	8010fae <_printf_float+0x2f2>
 8011028:	e6a3      	b.n	8010d72 <_printf_float+0xb6>
 801102a:	2301      	movs	r3, #1
 801102c:	4631      	mov	r1, r6
 801102e:	4628      	mov	r0, r5
 8011030:	9206      	str	r2, [sp, #24]
 8011032:	47b8      	blx	r7
 8011034:	3001      	adds	r0, #1
 8011036:	f43f ae9c 	beq.w	8010d72 <_printf_float+0xb6>
 801103a:	9a06      	ldr	r2, [sp, #24]
 801103c:	f10b 0b01 	add.w	fp, fp, #1
 8011040:	e7bb      	b.n	8010fba <_printf_float+0x2fe>
 8011042:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8011046:	4631      	mov	r1, r6
 8011048:	4628      	mov	r0, r5
 801104a:	47b8      	blx	r7
 801104c:	3001      	adds	r0, #1
 801104e:	d1c0      	bne.n	8010fd2 <_printf_float+0x316>
 8011050:	e68f      	b.n	8010d72 <_printf_float+0xb6>
 8011052:	9a06      	ldr	r2, [sp, #24]
 8011054:	464b      	mov	r3, r9
 8011056:	4442      	add	r2, r8
 8011058:	4631      	mov	r1, r6
 801105a:	4628      	mov	r0, r5
 801105c:	47b8      	blx	r7
 801105e:	3001      	adds	r0, #1
 8011060:	d1c3      	bne.n	8010fea <_printf_float+0x32e>
 8011062:	e686      	b.n	8010d72 <_printf_float+0xb6>
 8011064:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8011068:	f1ba 0f01 	cmp.w	sl, #1
 801106c:	dc01      	bgt.n	8011072 <_printf_float+0x3b6>
 801106e:	07db      	lsls	r3, r3, #31
 8011070:	d536      	bpl.n	80110e0 <_printf_float+0x424>
 8011072:	2301      	movs	r3, #1
 8011074:	4642      	mov	r2, r8
 8011076:	4631      	mov	r1, r6
 8011078:	4628      	mov	r0, r5
 801107a:	47b8      	blx	r7
 801107c:	3001      	adds	r0, #1
 801107e:	f43f ae78 	beq.w	8010d72 <_printf_float+0xb6>
 8011082:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8011086:	4631      	mov	r1, r6
 8011088:	4628      	mov	r0, r5
 801108a:	47b8      	blx	r7
 801108c:	3001      	adds	r0, #1
 801108e:	f43f ae70 	beq.w	8010d72 <_printf_float+0xb6>
 8011092:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8011096:	2200      	movs	r2, #0
 8011098:	2300      	movs	r3, #0
 801109a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801109e:	f7ef fd23 	bl	8000ae8 <__aeabi_dcmpeq>
 80110a2:	b9c0      	cbnz	r0, 80110d6 <_printf_float+0x41a>
 80110a4:	4653      	mov	r3, sl
 80110a6:	f108 0201 	add.w	r2, r8, #1
 80110aa:	4631      	mov	r1, r6
 80110ac:	4628      	mov	r0, r5
 80110ae:	47b8      	blx	r7
 80110b0:	3001      	adds	r0, #1
 80110b2:	d10c      	bne.n	80110ce <_printf_float+0x412>
 80110b4:	e65d      	b.n	8010d72 <_printf_float+0xb6>
 80110b6:	2301      	movs	r3, #1
 80110b8:	465a      	mov	r2, fp
 80110ba:	4631      	mov	r1, r6
 80110bc:	4628      	mov	r0, r5
 80110be:	47b8      	blx	r7
 80110c0:	3001      	adds	r0, #1
 80110c2:	f43f ae56 	beq.w	8010d72 <_printf_float+0xb6>
 80110c6:	f108 0801 	add.w	r8, r8, #1
 80110ca:	45d0      	cmp	r8, sl
 80110cc:	dbf3      	blt.n	80110b6 <_printf_float+0x3fa>
 80110ce:	464b      	mov	r3, r9
 80110d0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80110d4:	e6df      	b.n	8010e96 <_printf_float+0x1da>
 80110d6:	f04f 0800 	mov.w	r8, #0
 80110da:	f104 0b1a 	add.w	fp, r4, #26
 80110de:	e7f4      	b.n	80110ca <_printf_float+0x40e>
 80110e0:	2301      	movs	r3, #1
 80110e2:	4642      	mov	r2, r8
 80110e4:	e7e1      	b.n	80110aa <_printf_float+0x3ee>
 80110e6:	2301      	movs	r3, #1
 80110e8:	464a      	mov	r2, r9
 80110ea:	4631      	mov	r1, r6
 80110ec:	4628      	mov	r0, r5
 80110ee:	47b8      	blx	r7
 80110f0:	3001      	adds	r0, #1
 80110f2:	f43f ae3e 	beq.w	8010d72 <_printf_float+0xb6>
 80110f6:	f108 0801 	add.w	r8, r8, #1
 80110fa:	68e3      	ldr	r3, [r4, #12]
 80110fc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80110fe:	1a5b      	subs	r3, r3, r1
 8011100:	4543      	cmp	r3, r8
 8011102:	dcf0      	bgt.n	80110e6 <_printf_float+0x42a>
 8011104:	e6fc      	b.n	8010f00 <_printf_float+0x244>
 8011106:	f04f 0800 	mov.w	r8, #0
 801110a:	f104 0919 	add.w	r9, r4, #25
 801110e:	e7f4      	b.n	80110fa <_printf_float+0x43e>

08011110 <_printf_common>:
 8011110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011114:	4616      	mov	r6, r2
 8011116:	4698      	mov	r8, r3
 8011118:	688a      	ldr	r2, [r1, #8]
 801111a:	690b      	ldr	r3, [r1, #16]
 801111c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8011120:	4293      	cmp	r3, r2
 8011122:	bfb8      	it	lt
 8011124:	4613      	movlt	r3, r2
 8011126:	6033      	str	r3, [r6, #0]
 8011128:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801112c:	4607      	mov	r7, r0
 801112e:	460c      	mov	r4, r1
 8011130:	b10a      	cbz	r2, 8011136 <_printf_common+0x26>
 8011132:	3301      	adds	r3, #1
 8011134:	6033      	str	r3, [r6, #0]
 8011136:	6823      	ldr	r3, [r4, #0]
 8011138:	0699      	lsls	r1, r3, #26
 801113a:	bf42      	ittt	mi
 801113c:	6833      	ldrmi	r3, [r6, #0]
 801113e:	3302      	addmi	r3, #2
 8011140:	6033      	strmi	r3, [r6, #0]
 8011142:	6825      	ldr	r5, [r4, #0]
 8011144:	f015 0506 	ands.w	r5, r5, #6
 8011148:	d106      	bne.n	8011158 <_printf_common+0x48>
 801114a:	f104 0a19 	add.w	sl, r4, #25
 801114e:	68e3      	ldr	r3, [r4, #12]
 8011150:	6832      	ldr	r2, [r6, #0]
 8011152:	1a9b      	subs	r3, r3, r2
 8011154:	42ab      	cmp	r3, r5
 8011156:	dc26      	bgt.n	80111a6 <_printf_common+0x96>
 8011158:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801115c:	6822      	ldr	r2, [r4, #0]
 801115e:	3b00      	subs	r3, #0
 8011160:	bf18      	it	ne
 8011162:	2301      	movne	r3, #1
 8011164:	0692      	lsls	r2, r2, #26
 8011166:	d42b      	bmi.n	80111c0 <_printf_common+0xb0>
 8011168:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801116c:	4641      	mov	r1, r8
 801116e:	4638      	mov	r0, r7
 8011170:	47c8      	blx	r9
 8011172:	3001      	adds	r0, #1
 8011174:	d01e      	beq.n	80111b4 <_printf_common+0xa4>
 8011176:	6823      	ldr	r3, [r4, #0]
 8011178:	6922      	ldr	r2, [r4, #16]
 801117a:	f003 0306 	and.w	r3, r3, #6
 801117e:	2b04      	cmp	r3, #4
 8011180:	bf02      	ittt	eq
 8011182:	68e5      	ldreq	r5, [r4, #12]
 8011184:	6833      	ldreq	r3, [r6, #0]
 8011186:	1aed      	subeq	r5, r5, r3
 8011188:	68a3      	ldr	r3, [r4, #8]
 801118a:	bf0c      	ite	eq
 801118c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8011190:	2500      	movne	r5, #0
 8011192:	4293      	cmp	r3, r2
 8011194:	bfc4      	itt	gt
 8011196:	1a9b      	subgt	r3, r3, r2
 8011198:	18ed      	addgt	r5, r5, r3
 801119a:	2600      	movs	r6, #0
 801119c:	341a      	adds	r4, #26
 801119e:	42b5      	cmp	r5, r6
 80111a0:	d11a      	bne.n	80111d8 <_printf_common+0xc8>
 80111a2:	2000      	movs	r0, #0
 80111a4:	e008      	b.n	80111b8 <_printf_common+0xa8>
 80111a6:	2301      	movs	r3, #1
 80111a8:	4652      	mov	r2, sl
 80111aa:	4641      	mov	r1, r8
 80111ac:	4638      	mov	r0, r7
 80111ae:	47c8      	blx	r9
 80111b0:	3001      	adds	r0, #1
 80111b2:	d103      	bne.n	80111bc <_printf_common+0xac>
 80111b4:	f04f 30ff 	mov.w	r0, #4294967295
 80111b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80111bc:	3501      	adds	r5, #1
 80111be:	e7c6      	b.n	801114e <_printf_common+0x3e>
 80111c0:	18e1      	adds	r1, r4, r3
 80111c2:	1c5a      	adds	r2, r3, #1
 80111c4:	2030      	movs	r0, #48	@ 0x30
 80111c6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80111ca:	4422      	add	r2, r4
 80111cc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80111d0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80111d4:	3302      	adds	r3, #2
 80111d6:	e7c7      	b.n	8011168 <_printf_common+0x58>
 80111d8:	2301      	movs	r3, #1
 80111da:	4622      	mov	r2, r4
 80111dc:	4641      	mov	r1, r8
 80111de:	4638      	mov	r0, r7
 80111e0:	47c8      	blx	r9
 80111e2:	3001      	adds	r0, #1
 80111e4:	d0e6      	beq.n	80111b4 <_printf_common+0xa4>
 80111e6:	3601      	adds	r6, #1
 80111e8:	e7d9      	b.n	801119e <_printf_common+0x8e>
	...

080111ec <_printf_i>:
 80111ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80111f0:	7e0f      	ldrb	r7, [r1, #24]
 80111f2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80111f4:	2f78      	cmp	r7, #120	@ 0x78
 80111f6:	4691      	mov	r9, r2
 80111f8:	4680      	mov	r8, r0
 80111fa:	460c      	mov	r4, r1
 80111fc:	469a      	mov	sl, r3
 80111fe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8011202:	d807      	bhi.n	8011214 <_printf_i+0x28>
 8011204:	2f62      	cmp	r7, #98	@ 0x62
 8011206:	d80a      	bhi.n	801121e <_printf_i+0x32>
 8011208:	2f00      	cmp	r7, #0
 801120a:	f000 80d2 	beq.w	80113b2 <_printf_i+0x1c6>
 801120e:	2f58      	cmp	r7, #88	@ 0x58
 8011210:	f000 80b9 	beq.w	8011386 <_printf_i+0x19a>
 8011214:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8011218:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801121c:	e03a      	b.n	8011294 <_printf_i+0xa8>
 801121e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8011222:	2b15      	cmp	r3, #21
 8011224:	d8f6      	bhi.n	8011214 <_printf_i+0x28>
 8011226:	a101      	add	r1, pc, #4	@ (adr r1, 801122c <_printf_i+0x40>)
 8011228:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801122c:	08011285 	.word	0x08011285
 8011230:	08011299 	.word	0x08011299
 8011234:	08011215 	.word	0x08011215
 8011238:	08011215 	.word	0x08011215
 801123c:	08011215 	.word	0x08011215
 8011240:	08011215 	.word	0x08011215
 8011244:	08011299 	.word	0x08011299
 8011248:	08011215 	.word	0x08011215
 801124c:	08011215 	.word	0x08011215
 8011250:	08011215 	.word	0x08011215
 8011254:	08011215 	.word	0x08011215
 8011258:	08011399 	.word	0x08011399
 801125c:	080112c3 	.word	0x080112c3
 8011260:	08011353 	.word	0x08011353
 8011264:	08011215 	.word	0x08011215
 8011268:	08011215 	.word	0x08011215
 801126c:	080113bb 	.word	0x080113bb
 8011270:	08011215 	.word	0x08011215
 8011274:	080112c3 	.word	0x080112c3
 8011278:	08011215 	.word	0x08011215
 801127c:	08011215 	.word	0x08011215
 8011280:	0801135b 	.word	0x0801135b
 8011284:	6833      	ldr	r3, [r6, #0]
 8011286:	1d1a      	adds	r2, r3, #4
 8011288:	681b      	ldr	r3, [r3, #0]
 801128a:	6032      	str	r2, [r6, #0]
 801128c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8011290:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8011294:	2301      	movs	r3, #1
 8011296:	e09d      	b.n	80113d4 <_printf_i+0x1e8>
 8011298:	6833      	ldr	r3, [r6, #0]
 801129a:	6820      	ldr	r0, [r4, #0]
 801129c:	1d19      	adds	r1, r3, #4
 801129e:	6031      	str	r1, [r6, #0]
 80112a0:	0606      	lsls	r6, r0, #24
 80112a2:	d501      	bpl.n	80112a8 <_printf_i+0xbc>
 80112a4:	681d      	ldr	r5, [r3, #0]
 80112a6:	e003      	b.n	80112b0 <_printf_i+0xc4>
 80112a8:	0645      	lsls	r5, r0, #25
 80112aa:	d5fb      	bpl.n	80112a4 <_printf_i+0xb8>
 80112ac:	f9b3 5000 	ldrsh.w	r5, [r3]
 80112b0:	2d00      	cmp	r5, #0
 80112b2:	da03      	bge.n	80112bc <_printf_i+0xd0>
 80112b4:	232d      	movs	r3, #45	@ 0x2d
 80112b6:	426d      	negs	r5, r5
 80112b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80112bc:	4859      	ldr	r0, [pc, #356]	@ (8011424 <_printf_i+0x238>)
 80112be:	230a      	movs	r3, #10
 80112c0:	e011      	b.n	80112e6 <_printf_i+0xfa>
 80112c2:	6821      	ldr	r1, [r4, #0]
 80112c4:	6833      	ldr	r3, [r6, #0]
 80112c6:	0608      	lsls	r0, r1, #24
 80112c8:	f853 5b04 	ldr.w	r5, [r3], #4
 80112cc:	d402      	bmi.n	80112d4 <_printf_i+0xe8>
 80112ce:	0649      	lsls	r1, r1, #25
 80112d0:	bf48      	it	mi
 80112d2:	b2ad      	uxthmi	r5, r5
 80112d4:	2f6f      	cmp	r7, #111	@ 0x6f
 80112d6:	4853      	ldr	r0, [pc, #332]	@ (8011424 <_printf_i+0x238>)
 80112d8:	6033      	str	r3, [r6, #0]
 80112da:	bf14      	ite	ne
 80112dc:	230a      	movne	r3, #10
 80112de:	2308      	moveq	r3, #8
 80112e0:	2100      	movs	r1, #0
 80112e2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80112e6:	6866      	ldr	r6, [r4, #4]
 80112e8:	60a6      	str	r6, [r4, #8]
 80112ea:	2e00      	cmp	r6, #0
 80112ec:	bfa2      	ittt	ge
 80112ee:	6821      	ldrge	r1, [r4, #0]
 80112f0:	f021 0104 	bicge.w	r1, r1, #4
 80112f4:	6021      	strge	r1, [r4, #0]
 80112f6:	b90d      	cbnz	r5, 80112fc <_printf_i+0x110>
 80112f8:	2e00      	cmp	r6, #0
 80112fa:	d04b      	beq.n	8011394 <_printf_i+0x1a8>
 80112fc:	4616      	mov	r6, r2
 80112fe:	fbb5 f1f3 	udiv	r1, r5, r3
 8011302:	fb03 5711 	mls	r7, r3, r1, r5
 8011306:	5dc7      	ldrb	r7, [r0, r7]
 8011308:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801130c:	462f      	mov	r7, r5
 801130e:	42bb      	cmp	r3, r7
 8011310:	460d      	mov	r5, r1
 8011312:	d9f4      	bls.n	80112fe <_printf_i+0x112>
 8011314:	2b08      	cmp	r3, #8
 8011316:	d10b      	bne.n	8011330 <_printf_i+0x144>
 8011318:	6823      	ldr	r3, [r4, #0]
 801131a:	07df      	lsls	r7, r3, #31
 801131c:	d508      	bpl.n	8011330 <_printf_i+0x144>
 801131e:	6923      	ldr	r3, [r4, #16]
 8011320:	6861      	ldr	r1, [r4, #4]
 8011322:	4299      	cmp	r1, r3
 8011324:	bfde      	ittt	le
 8011326:	2330      	movle	r3, #48	@ 0x30
 8011328:	f806 3c01 	strble.w	r3, [r6, #-1]
 801132c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8011330:	1b92      	subs	r2, r2, r6
 8011332:	6122      	str	r2, [r4, #16]
 8011334:	f8cd a000 	str.w	sl, [sp]
 8011338:	464b      	mov	r3, r9
 801133a:	aa03      	add	r2, sp, #12
 801133c:	4621      	mov	r1, r4
 801133e:	4640      	mov	r0, r8
 8011340:	f7ff fee6 	bl	8011110 <_printf_common>
 8011344:	3001      	adds	r0, #1
 8011346:	d14a      	bne.n	80113de <_printf_i+0x1f2>
 8011348:	f04f 30ff 	mov.w	r0, #4294967295
 801134c:	b004      	add	sp, #16
 801134e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011352:	6823      	ldr	r3, [r4, #0]
 8011354:	f043 0320 	orr.w	r3, r3, #32
 8011358:	6023      	str	r3, [r4, #0]
 801135a:	4833      	ldr	r0, [pc, #204]	@ (8011428 <_printf_i+0x23c>)
 801135c:	2778      	movs	r7, #120	@ 0x78
 801135e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8011362:	6823      	ldr	r3, [r4, #0]
 8011364:	6831      	ldr	r1, [r6, #0]
 8011366:	061f      	lsls	r7, r3, #24
 8011368:	f851 5b04 	ldr.w	r5, [r1], #4
 801136c:	d402      	bmi.n	8011374 <_printf_i+0x188>
 801136e:	065f      	lsls	r7, r3, #25
 8011370:	bf48      	it	mi
 8011372:	b2ad      	uxthmi	r5, r5
 8011374:	6031      	str	r1, [r6, #0]
 8011376:	07d9      	lsls	r1, r3, #31
 8011378:	bf44      	itt	mi
 801137a:	f043 0320 	orrmi.w	r3, r3, #32
 801137e:	6023      	strmi	r3, [r4, #0]
 8011380:	b11d      	cbz	r5, 801138a <_printf_i+0x19e>
 8011382:	2310      	movs	r3, #16
 8011384:	e7ac      	b.n	80112e0 <_printf_i+0xf4>
 8011386:	4827      	ldr	r0, [pc, #156]	@ (8011424 <_printf_i+0x238>)
 8011388:	e7e9      	b.n	801135e <_printf_i+0x172>
 801138a:	6823      	ldr	r3, [r4, #0]
 801138c:	f023 0320 	bic.w	r3, r3, #32
 8011390:	6023      	str	r3, [r4, #0]
 8011392:	e7f6      	b.n	8011382 <_printf_i+0x196>
 8011394:	4616      	mov	r6, r2
 8011396:	e7bd      	b.n	8011314 <_printf_i+0x128>
 8011398:	6833      	ldr	r3, [r6, #0]
 801139a:	6825      	ldr	r5, [r4, #0]
 801139c:	6961      	ldr	r1, [r4, #20]
 801139e:	1d18      	adds	r0, r3, #4
 80113a0:	6030      	str	r0, [r6, #0]
 80113a2:	062e      	lsls	r6, r5, #24
 80113a4:	681b      	ldr	r3, [r3, #0]
 80113a6:	d501      	bpl.n	80113ac <_printf_i+0x1c0>
 80113a8:	6019      	str	r1, [r3, #0]
 80113aa:	e002      	b.n	80113b2 <_printf_i+0x1c6>
 80113ac:	0668      	lsls	r0, r5, #25
 80113ae:	d5fb      	bpl.n	80113a8 <_printf_i+0x1bc>
 80113b0:	8019      	strh	r1, [r3, #0]
 80113b2:	2300      	movs	r3, #0
 80113b4:	6123      	str	r3, [r4, #16]
 80113b6:	4616      	mov	r6, r2
 80113b8:	e7bc      	b.n	8011334 <_printf_i+0x148>
 80113ba:	6833      	ldr	r3, [r6, #0]
 80113bc:	1d1a      	adds	r2, r3, #4
 80113be:	6032      	str	r2, [r6, #0]
 80113c0:	681e      	ldr	r6, [r3, #0]
 80113c2:	6862      	ldr	r2, [r4, #4]
 80113c4:	2100      	movs	r1, #0
 80113c6:	4630      	mov	r0, r6
 80113c8:	f7ee ff12 	bl	80001f0 <memchr>
 80113cc:	b108      	cbz	r0, 80113d2 <_printf_i+0x1e6>
 80113ce:	1b80      	subs	r0, r0, r6
 80113d0:	6060      	str	r0, [r4, #4]
 80113d2:	6863      	ldr	r3, [r4, #4]
 80113d4:	6123      	str	r3, [r4, #16]
 80113d6:	2300      	movs	r3, #0
 80113d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80113dc:	e7aa      	b.n	8011334 <_printf_i+0x148>
 80113de:	6923      	ldr	r3, [r4, #16]
 80113e0:	4632      	mov	r2, r6
 80113e2:	4649      	mov	r1, r9
 80113e4:	4640      	mov	r0, r8
 80113e6:	47d0      	blx	sl
 80113e8:	3001      	adds	r0, #1
 80113ea:	d0ad      	beq.n	8011348 <_printf_i+0x15c>
 80113ec:	6823      	ldr	r3, [r4, #0]
 80113ee:	079b      	lsls	r3, r3, #30
 80113f0:	d413      	bmi.n	801141a <_printf_i+0x22e>
 80113f2:	68e0      	ldr	r0, [r4, #12]
 80113f4:	9b03      	ldr	r3, [sp, #12]
 80113f6:	4298      	cmp	r0, r3
 80113f8:	bfb8      	it	lt
 80113fa:	4618      	movlt	r0, r3
 80113fc:	e7a6      	b.n	801134c <_printf_i+0x160>
 80113fe:	2301      	movs	r3, #1
 8011400:	4632      	mov	r2, r6
 8011402:	4649      	mov	r1, r9
 8011404:	4640      	mov	r0, r8
 8011406:	47d0      	blx	sl
 8011408:	3001      	adds	r0, #1
 801140a:	d09d      	beq.n	8011348 <_printf_i+0x15c>
 801140c:	3501      	adds	r5, #1
 801140e:	68e3      	ldr	r3, [r4, #12]
 8011410:	9903      	ldr	r1, [sp, #12]
 8011412:	1a5b      	subs	r3, r3, r1
 8011414:	42ab      	cmp	r3, r5
 8011416:	dcf2      	bgt.n	80113fe <_printf_i+0x212>
 8011418:	e7eb      	b.n	80113f2 <_printf_i+0x206>
 801141a:	2500      	movs	r5, #0
 801141c:	f104 0619 	add.w	r6, r4, #25
 8011420:	e7f5      	b.n	801140e <_printf_i+0x222>
 8011422:	bf00      	nop
 8011424:	0801579d 	.word	0x0801579d
 8011428:	080157ae 	.word	0x080157ae

0801142c <std>:
 801142c:	2300      	movs	r3, #0
 801142e:	b510      	push	{r4, lr}
 8011430:	4604      	mov	r4, r0
 8011432:	e9c0 3300 	strd	r3, r3, [r0]
 8011436:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801143a:	6083      	str	r3, [r0, #8]
 801143c:	8181      	strh	r1, [r0, #12]
 801143e:	6643      	str	r3, [r0, #100]	@ 0x64
 8011440:	81c2      	strh	r2, [r0, #14]
 8011442:	6183      	str	r3, [r0, #24]
 8011444:	4619      	mov	r1, r3
 8011446:	2208      	movs	r2, #8
 8011448:	305c      	adds	r0, #92	@ 0x5c
 801144a:	f000 faab 	bl	80119a4 <memset>
 801144e:	4b0d      	ldr	r3, [pc, #52]	@ (8011484 <std+0x58>)
 8011450:	6263      	str	r3, [r4, #36]	@ 0x24
 8011452:	4b0d      	ldr	r3, [pc, #52]	@ (8011488 <std+0x5c>)
 8011454:	62a3      	str	r3, [r4, #40]	@ 0x28
 8011456:	4b0d      	ldr	r3, [pc, #52]	@ (801148c <std+0x60>)
 8011458:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801145a:	4b0d      	ldr	r3, [pc, #52]	@ (8011490 <std+0x64>)
 801145c:	6323      	str	r3, [r4, #48]	@ 0x30
 801145e:	4b0d      	ldr	r3, [pc, #52]	@ (8011494 <std+0x68>)
 8011460:	6224      	str	r4, [r4, #32]
 8011462:	429c      	cmp	r4, r3
 8011464:	d006      	beq.n	8011474 <std+0x48>
 8011466:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801146a:	4294      	cmp	r4, r2
 801146c:	d002      	beq.n	8011474 <std+0x48>
 801146e:	33d0      	adds	r3, #208	@ 0xd0
 8011470:	429c      	cmp	r4, r3
 8011472:	d105      	bne.n	8011480 <std+0x54>
 8011474:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8011478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801147c:	f7f2 be11 	b.w	80040a2 <__retarget_lock_init_recursive>
 8011480:	bd10      	pop	{r4, pc}
 8011482:	bf00      	nop
 8011484:	0801179d 	.word	0x0801179d
 8011488:	080117c3 	.word	0x080117c3
 801148c:	080117fb 	.word	0x080117fb
 8011490:	0801181f 	.word	0x0801181f
 8011494:	20006c80 	.word	0x20006c80

08011498 <stdio_exit_handler>:
 8011498:	4a02      	ldr	r2, [pc, #8]	@ (80114a4 <stdio_exit_handler+0xc>)
 801149a:	4903      	ldr	r1, [pc, #12]	@ (80114a8 <stdio_exit_handler+0x10>)
 801149c:	4803      	ldr	r0, [pc, #12]	@ (80114ac <stdio_exit_handler+0x14>)
 801149e:	f000 b869 	b.w	8011574 <_fwalk_sglue>
 80114a2:	bf00      	nop
 80114a4:	20000078 	.word	0x20000078
 80114a8:	08013ebd 	.word	0x08013ebd
 80114ac:	200001f4 	.word	0x200001f4

080114b0 <cleanup_stdio>:
 80114b0:	6841      	ldr	r1, [r0, #4]
 80114b2:	4b0c      	ldr	r3, [pc, #48]	@ (80114e4 <cleanup_stdio+0x34>)
 80114b4:	4299      	cmp	r1, r3
 80114b6:	b510      	push	{r4, lr}
 80114b8:	4604      	mov	r4, r0
 80114ba:	d001      	beq.n	80114c0 <cleanup_stdio+0x10>
 80114bc:	f002 fcfe 	bl	8013ebc <_fflush_r>
 80114c0:	68a1      	ldr	r1, [r4, #8]
 80114c2:	4b09      	ldr	r3, [pc, #36]	@ (80114e8 <cleanup_stdio+0x38>)
 80114c4:	4299      	cmp	r1, r3
 80114c6:	d002      	beq.n	80114ce <cleanup_stdio+0x1e>
 80114c8:	4620      	mov	r0, r4
 80114ca:	f002 fcf7 	bl	8013ebc <_fflush_r>
 80114ce:	68e1      	ldr	r1, [r4, #12]
 80114d0:	4b06      	ldr	r3, [pc, #24]	@ (80114ec <cleanup_stdio+0x3c>)
 80114d2:	4299      	cmp	r1, r3
 80114d4:	d004      	beq.n	80114e0 <cleanup_stdio+0x30>
 80114d6:	4620      	mov	r0, r4
 80114d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114dc:	f002 bcee 	b.w	8013ebc <_fflush_r>
 80114e0:	bd10      	pop	{r4, pc}
 80114e2:	bf00      	nop
 80114e4:	20006c80 	.word	0x20006c80
 80114e8:	20006ce8 	.word	0x20006ce8
 80114ec:	20006d50 	.word	0x20006d50

080114f0 <global_stdio_init.part.0>:
 80114f0:	b510      	push	{r4, lr}
 80114f2:	4b0b      	ldr	r3, [pc, #44]	@ (8011520 <global_stdio_init.part.0+0x30>)
 80114f4:	4c0b      	ldr	r4, [pc, #44]	@ (8011524 <global_stdio_init.part.0+0x34>)
 80114f6:	4a0c      	ldr	r2, [pc, #48]	@ (8011528 <global_stdio_init.part.0+0x38>)
 80114f8:	601a      	str	r2, [r3, #0]
 80114fa:	4620      	mov	r0, r4
 80114fc:	2200      	movs	r2, #0
 80114fe:	2104      	movs	r1, #4
 8011500:	f7ff ff94 	bl	801142c <std>
 8011504:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8011508:	2201      	movs	r2, #1
 801150a:	2109      	movs	r1, #9
 801150c:	f7ff ff8e 	bl	801142c <std>
 8011510:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8011514:	2202      	movs	r2, #2
 8011516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801151a:	2112      	movs	r1, #18
 801151c:	f7ff bf86 	b.w	801142c <std>
 8011520:	20006db8 	.word	0x20006db8
 8011524:	20006c80 	.word	0x20006c80
 8011528:	08011499 	.word	0x08011499

0801152c <__sfp_lock_acquire>:
 801152c:	4801      	ldr	r0, [pc, #4]	@ (8011534 <__sfp_lock_acquire+0x8>)
 801152e:	f7f2 bddf 	b.w	80040f0 <__retarget_lock_acquire_recursive>
 8011532:	bf00      	nop
 8011534:	20001500 	.word	0x20001500

08011538 <__sfp_lock_release>:
 8011538:	4801      	ldr	r0, [pc, #4]	@ (8011540 <__sfp_lock_release+0x8>)
 801153a:	f7f2 bdee 	b.w	800411a <__retarget_lock_release_recursive>
 801153e:	bf00      	nop
 8011540:	20001500 	.word	0x20001500

08011544 <__sinit>:
 8011544:	b510      	push	{r4, lr}
 8011546:	4604      	mov	r4, r0
 8011548:	f7ff fff0 	bl	801152c <__sfp_lock_acquire>
 801154c:	6a23      	ldr	r3, [r4, #32]
 801154e:	b11b      	cbz	r3, 8011558 <__sinit+0x14>
 8011550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011554:	f7ff bff0 	b.w	8011538 <__sfp_lock_release>
 8011558:	4b04      	ldr	r3, [pc, #16]	@ (801156c <__sinit+0x28>)
 801155a:	6223      	str	r3, [r4, #32]
 801155c:	4b04      	ldr	r3, [pc, #16]	@ (8011570 <__sinit+0x2c>)
 801155e:	681b      	ldr	r3, [r3, #0]
 8011560:	2b00      	cmp	r3, #0
 8011562:	d1f5      	bne.n	8011550 <__sinit+0xc>
 8011564:	f7ff ffc4 	bl	80114f0 <global_stdio_init.part.0>
 8011568:	e7f2      	b.n	8011550 <__sinit+0xc>
 801156a:	bf00      	nop
 801156c:	080114b1 	.word	0x080114b1
 8011570:	20006db8 	.word	0x20006db8

08011574 <_fwalk_sglue>:
 8011574:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011578:	4607      	mov	r7, r0
 801157a:	4688      	mov	r8, r1
 801157c:	4614      	mov	r4, r2
 801157e:	2600      	movs	r6, #0
 8011580:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8011584:	f1b9 0901 	subs.w	r9, r9, #1
 8011588:	d505      	bpl.n	8011596 <_fwalk_sglue+0x22>
 801158a:	6824      	ldr	r4, [r4, #0]
 801158c:	2c00      	cmp	r4, #0
 801158e:	d1f7      	bne.n	8011580 <_fwalk_sglue+0xc>
 8011590:	4630      	mov	r0, r6
 8011592:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011596:	89ab      	ldrh	r3, [r5, #12]
 8011598:	2b01      	cmp	r3, #1
 801159a:	d907      	bls.n	80115ac <_fwalk_sglue+0x38>
 801159c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80115a0:	3301      	adds	r3, #1
 80115a2:	d003      	beq.n	80115ac <_fwalk_sglue+0x38>
 80115a4:	4629      	mov	r1, r5
 80115a6:	4638      	mov	r0, r7
 80115a8:	47c0      	blx	r8
 80115aa:	4306      	orrs	r6, r0
 80115ac:	3568      	adds	r5, #104	@ 0x68
 80115ae:	e7e9      	b.n	8011584 <_fwalk_sglue+0x10>

080115b0 <iprintf>:
 80115b0:	b40f      	push	{r0, r1, r2, r3}
 80115b2:	b507      	push	{r0, r1, r2, lr}
 80115b4:	4906      	ldr	r1, [pc, #24]	@ (80115d0 <iprintf+0x20>)
 80115b6:	ab04      	add	r3, sp, #16
 80115b8:	6808      	ldr	r0, [r1, #0]
 80115ba:	f853 2b04 	ldr.w	r2, [r3], #4
 80115be:	6881      	ldr	r1, [r0, #8]
 80115c0:	9301      	str	r3, [sp, #4]
 80115c2:	f002 f991 	bl	80138e8 <_vfiprintf_r>
 80115c6:	b003      	add	sp, #12
 80115c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80115cc:	b004      	add	sp, #16
 80115ce:	4770      	bx	lr
 80115d0:	200001f0 	.word	0x200001f0

080115d4 <putchar>:
 80115d4:	4b02      	ldr	r3, [pc, #8]	@ (80115e0 <putchar+0xc>)
 80115d6:	4601      	mov	r1, r0
 80115d8:	6818      	ldr	r0, [r3, #0]
 80115da:	6882      	ldr	r2, [r0, #8]
 80115dc:	f002 bd0a 	b.w	8013ff4 <_putc_r>
 80115e0:	200001f0 	.word	0x200001f0

080115e4 <_puts_r>:
 80115e4:	6a03      	ldr	r3, [r0, #32]
 80115e6:	b570      	push	{r4, r5, r6, lr}
 80115e8:	6884      	ldr	r4, [r0, #8]
 80115ea:	4605      	mov	r5, r0
 80115ec:	460e      	mov	r6, r1
 80115ee:	b90b      	cbnz	r3, 80115f4 <_puts_r+0x10>
 80115f0:	f7ff ffa8 	bl	8011544 <__sinit>
 80115f4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80115f6:	07db      	lsls	r3, r3, #31
 80115f8:	d405      	bmi.n	8011606 <_puts_r+0x22>
 80115fa:	89a3      	ldrh	r3, [r4, #12]
 80115fc:	0598      	lsls	r0, r3, #22
 80115fe:	d402      	bmi.n	8011606 <_puts_r+0x22>
 8011600:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8011602:	f7f2 fd75 	bl	80040f0 <__retarget_lock_acquire_recursive>
 8011606:	89a3      	ldrh	r3, [r4, #12]
 8011608:	0719      	lsls	r1, r3, #28
 801160a:	d502      	bpl.n	8011612 <_puts_r+0x2e>
 801160c:	6923      	ldr	r3, [r4, #16]
 801160e:	2b00      	cmp	r3, #0
 8011610:	d135      	bne.n	801167e <_puts_r+0x9a>
 8011612:	4621      	mov	r1, r4
 8011614:	4628      	mov	r0, r5
 8011616:	f000 f945 	bl	80118a4 <__swsetup_r>
 801161a:	b380      	cbz	r0, 801167e <_puts_r+0x9a>
 801161c:	f04f 35ff 	mov.w	r5, #4294967295
 8011620:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011622:	07da      	lsls	r2, r3, #31
 8011624:	d405      	bmi.n	8011632 <_puts_r+0x4e>
 8011626:	89a3      	ldrh	r3, [r4, #12]
 8011628:	059b      	lsls	r3, r3, #22
 801162a:	d402      	bmi.n	8011632 <_puts_r+0x4e>
 801162c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801162e:	f7f2 fd74 	bl	800411a <__retarget_lock_release_recursive>
 8011632:	4628      	mov	r0, r5
 8011634:	bd70      	pop	{r4, r5, r6, pc}
 8011636:	2b00      	cmp	r3, #0
 8011638:	da04      	bge.n	8011644 <_puts_r+0x60>
 801163a:	69a2      	ldr	r2, [r4, #24]
 801163c:	429a      	cmp	r2, r3
 801163e:	dc17      	bgt.n	8011670 <_puts_r+0x8c>
 8011640:	290a      	cmp	r1, #10
 8011642:	d015      	beq.n	8011670 <_puts_r+0x8c>
 8011644:	6823      	ldr	r3, [r4, #0]
 8011646:	1c5a      	adds	r2, r3, #1
 8011648:	6022      	str	r2, [r4, #0]
 801164a:	7019      	strb	r1, [r3, #0]
 801164c:	68a3      	ldr	r3, [r4, #8]
 801164e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8011652:	3b01      	subs	r3, #1
 8011654:	60a3      	str	r3, [r4, #8]
 8011656:	2900      	cmp	r1, #0
 8011658:	d1ed      	bne.n	8011636 <_puts_r+0x52>
 801165a:	2b00      	cmp	r3, #0
 801165c:	da11      	bge.n	8011682 <_puts_r+0x9e>
 801165e:	4622      	mov	r2, r4
 8011660:	210a      	movs	r1, #10
 8011662:	4628      	mov	r0, r5
 8011664:	f000 f8df 	bl	8011826 <__swbuf_r>
 8011668:	3001      	adds	r0, #1
 801166a:	d0d7      	beq.n	801161c <_puts_r+0x38>
 801166c:	250a      	movs	r5, #10
 801166e:	e7d7      	b.n	8011620 <_puts_r+0x3c>
 8011670:	4622      	mov	r2, r4
 8011672:	4628      	mov	r0, r5
 8011674:	f000 f8d7 	bl	8011826 <__swbuf_r>
 8011678:	3001      	adds	r0, #1
 801167a:	d1e7      	bne.n	801164c <_puts_r+0x68>
 801167c:	e7ce      	b.n	801161c <_puts_r+0x38>
 801167e:	3e01      	subs	r6, #1
 8011680:	e7e4      	b.n	801164c <_puts_r+0x68>
 8011682:	6823      	ldr	r3, [r4, #0]
 8011684:	1c5a      	adds	r2, r3, #1
 8011686:	6022      	str	r2, [r4, #0]
 8011688:	220a      	movs	r2, #10
 801168a:	701a      	strb	r2, [r3, #0]
 801168c:	e7ee      	b.n	801166c <_puts_r+0x88>
	...

08011690 <puts>:
 8011690:	4b02      	ldr	r3, [pc, #8]	@ (801169c <puts+0xc>)
 8011692:	4601      	mov	r1, r0
 8011694:	6818      	ldr	r0, [r3, #0]
 8011696:	f7ff bfa5 	b.w	80115e4 <_puts_r>
 801169a:	bf00      	nop
 801169c:	200001f0 	.word	0x200001f0

080116a0 <sniprintf>:
 80116a0:	b40c      	push	{r2, r3}
 80116a2:	b530      	push	{r4, r5, lr}
 80116a4:	4b17      	ldr	r3, [pc, #92]	@ (8011704 <sniprintf+0x64>)
 80116a6:	1e0c      	subs	r4, r1, #0
 80116a8:	681d      	ldr	r5, [r3, #0]
 80116aa:	b09d      	sub	sp, #116	@ 0x74
 80116ac:	da08      	bge.n	80116c0 <sniprintf+0x20>
 80116ae:	238b      	movs	r3, #139	@ 0x8b
 80116b0:	602b      	str	r3, [r5, #0]
 80116b2:	f04f 30ff 	mov.w	r0, #4294967295
 80116b6:	b01d      	add	sp, #116	@ 0x74
 80116b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80116bc:	b002      	add	sp, #8
 80116be:	4770      	bx	lr
 80116c0:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80116c4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80116c8:	bf14      	ite	ne
 80116ca:	f104 33ff 	addne.w	r3, r4, #4294967295
 80116ce:	4623      	moveq	r3, r4
 80116d0:	9304      	str	r3, [sp, #16]
 80116d2:	9307      	str	r3, [sp, #28]
 80116d4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80116d8:	9002      	str	r0, [sp, #8]
 80116da:	9006      	str	r0, [sp, #24]
 80116dc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80116e0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80116e2:	ab21      	add	r3, sp, #132	@ 0x84
 80116e4:	a902      	add	r1, sp, #8
 80116e6:	4628      	mov	r0, r5
 80116e8:	9301      	str	r3, [sp, #4]
 80116ea:	f001 fe0b 	bl	8013304 <_svfiprintf_r>
 80116ee:	1c43      	adds	r3, r0, #1
 80116f0:	bfbc      	itt	lt
 80116f2:	238b      	movlt	r3, #139	@ 0x8b
 80116f4:	602b      	strlt	r3, [r5, #0]
 80116f6:	2c00      	cmp	r4, #0
 80116f8:	d0dd      	beq.n	80116b6 <sniprintf+0x16>
 80116fa:	9b02      	ldr	r3, [sp, #8]
 80116fc:	2200      	movs	r2, #0
 80116fe:	701a      	strb	r2, [r3, #0]
 8011700:	e7d9      	b.n	80116b6 <sniprintf+0x16>
 8011702:	bf00      	nop
 8011704:	200001f0 	.word	0x200001f0

08011708 <siprintf>:
 8011708:	b40e      	push	{r1, r2, r3}
 801170a:	b500      	push	{lr}
 801170c:	b09c      	sub	sp, #112	@ 0x70
 801170e:	ab1d      	add	r3, sp, #116	@ 0x74
 8011710:	9002      	str	r0, [sp, #8]
 8011712:	9006      	str	r0, [sp, #24]
 8011714:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8011718:	4809      	ldr	r0, [pc, #36]	@ (8011740 <siprintf+0x38>)
 801171a:	9107      	str	r1, [sp, #28]
 801171c:	9104      	str	r1, [sp, #16]
 801171e:	4909      	ldr	r1, [pc, #36]	@ (8011744 <siprintf+0x3c>)
 8011720:	f853 2b04 	ldr.w	r2, [r3], #4
 8011724:	9105      	str	r1, [sp, #20]
 8011726:	6800      	ldr	r0, [r0, #0]
 8011728:	9301      	str	r3, [sp, #4]
 801172a:	a902      	add	r1, sp, #8
 801172c:	f001 fdea 	bl	8013304 <_svfiprintf_r>
 8011730:	9b02      	ldr	r3, [sp, #8]
 8011732:	2200      	movs	r2, #0
 8011734:	701a      	strb	r2, [r3, #0]
 8011736:	b01c      	add	sp, #112	@ 0x70
 8011738:	f85d eb04 	ldr.w	lr, [sp], #4
 801173c:	b003      	add	sp, #12
 801173e:	4770      	bx	lr
 8011740:	200001f0 	.word	0x200001f0
 8011744:	ffff0208 	.word	0xffff0208

08011748 <siscanf>:
 8011748:	b40e      	push	{r1, r2, r3}
 801174a:	b530      	push	{r4, r5, lr}
 801174c:	b09c      	sub	sp, #112	@ 0x70
 801174e:	ac1f      	add	r4, sp, #124	@ 0x7c
 8011750:	f44f 7201 	mov.w	r2, #516	@ 0x204
 8011754:	f854 5b04 	ldr.w	r5, [r4], #4
 8011758:	f8ad 2014 	strh.w	r2, [sp, #20]
 801175c:	9002      	str	r0, [sp, #8]
 801175e:	9006      	str	r0, [sp, #24]
 8011760:	f7ee fd96 	bl	8000290 <strlen>
 8011764:	4b0b      	ldr	r3, [pc, #44]	@ (8011794 <siscanf+0x4c>)
 8011766:	9003      	str	r0, [sp, #12]
 8011768:	9007      	str	r0, [sp, #28]
 801176a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801176c:	480a      	ldr	r0, [pc, #40]	@ (8011798 <siscanf+0x50>)
 801176e:	9401      	str	r4, [sp, #4]
 8011770:	2300      	movs	r3, #0
 8011772:	930f      	str	r3, [sp, #60]	@ 0x3c
 8011774:	9314      	str	r3, [sp, #80]	@ 0x50
 8011776:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801177a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801177e:	462a      	mov	r2, r5
 8011780:	4623      	mov	r3, r4
 8011782:	a902      	add	r1, sp, #8
 8011784:	6800      	ldr	r0, [r0, #0]
 8011786:	f001 ff11 	bl	80135ac <__ssvfiscanf_r>
 801178a:	b01c      	add	sp, #112	@ 0x70
 801178c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011790:	b003      	add	sp, #12
 8011792:	4770      	bx	lr
 8011794:	080117bf 	.word	0x080117bf
 8011798:	200001f0 	.word	0x200001f0

0801179c <__sread>:
 801179c:	b510      	push	{r4, lr}
 801179e:	460c      	mov	r4, r1
 80117a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80117a4:	f000 fa1a 	bl	8011bdc <_read_r>
 80117a8:	2800      	cmp	r0, #0
 80117aa:	bfab      	itete	ge
 80117ac:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80117ae:	89a3      	ldrhlt	r3, [r4, #12]
 80117b0:	181b      	addge	r3, r3, r0
 80117b2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80117b6:	bfac      	ite	ge
 80117b8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80117ba:	81a3      	strhlt	r3, [r4, #12]
 80117bc:	bd10      	pop	{r4, pc}

080117be <__seofread>:
 80117be:	2000      	movs	r0, #0
 80117c0:	4770      	bx	lr

080117c2 <__swrite>:
 80117c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117c6:	461f      	mov	r7, r3
 80117c8:	898b      	ldrh	r3, [r1, #12]
 80117ca:	05db      	lsls	r3, r3, #23
 80117cc:	4605      	mov	r5, r0
 80117ce:	460c      	mov	r4, r1
 80117d0:	4616      	mov	r6, r2
 80117d2:	d505      	bpl.n	80117e0 <__swrite+0x1e>
 80117d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80117d8:	2302      	movs	r3, #2
 80117da:	2200      	movs	r2, #0
 80117dc:	f000 f9ec 	bl	8011bb8 <_lseek_r>
 80117e0:	89a3      	ldrh	r3, [r4, #12]
 80117e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80117e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80117ea:	81a3      	strh	r3, [r4, #12]
 80117ec:	4632      	mov	r2, r6
 80117ee:	463b      	mov	r3, r7
 80117f0:	4628      	mov	r0, r5
 80117f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80117f6:	f000 ba13 	b.w	8011c20 <_write_r>

080117fa <__sseek>:
 80117fa:	b510      	push	{r4, lr}
 80117fc:	460c      	mov	r4, r1
 80117fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011802:	f000 f9d9 	bl	8011bb8 <_lseek_r>
 8011806:	1c43      	adds	r3, r0, #1
 8011808:	89a3      	ldrh	r3, [r4, #12]
 801180a:	bf15      	itete	ne
 801180c:	6560      	strne	r0, [r4, #84]	@ 0x54
 801180e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8011812:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8011816:	81a3      	strheq	r3, [r4, #12]
 8011818:	bf18      	it	ne
 801181a:	81a3      	strhne	r3, [r4, #12]
 801181c:	bd10      	pop	{r4, pc}

0801181e <__sclose>:
 801181e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011822:	f000 b963 	b.w	8011aec <_close_r>

08011826 <__swbuf_r>:
 8011826:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011828:	460e      	mov	r6, r1
 801182a:	4614      	mov	r4, r2
 801182c:	4605      	mov	r5, r0
 801182e:	b118      	cbz	r0, 8011838 <__swbuf_r+0x12>
 8011830:	6a03      	ldr	r3, [r0, #32]
 8011832:	b90b      	cbnz	r3, 8011838 <__swbuf_r+0x12>
 8011834:	f7ff fe86 	bl	8011544 <__sinit>
 8011838:	69a3      	ldr	r3, [r4, #24]
 801183a:	60a3      	str	r3, [r4, #8]
 801183c:	89a3      	ldrh	r3, [r4, #12]
 801183e:	071a      	lsls	r2, r3, #28
 8011840:	d501      	bpl.n	8011846 <__swbuf_r+0x20>
 8011842:	6923      	ldr	r3, [r4, #16]
 8011844:	b943      	cbnz	r3, 8011858 <__swbuf_r+0x32>
 8011846:	4621      	mov	r1, r4
 8011848:	4628      	mov	r0, r5
 801184a:	f000 f82b 	bl	80118a4 <__swsetup_r>
 801184e:	b118      	cbz	r0, 8011858 <__swbuf_r+0x32>
 8011850:	f04f 37ff 	mov.w	r7, #4294967295
 8011854:	4638      	mov	r0, r7
 8011856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011858:	6823      	ldr	r3, [r4, #0]
 801185a:	6922      	ldr	r2, [r4, #16]
 801185c:	1a98      	subs	r0, r3, r2
 801185e:	6963      	ldr	r3, [r4, #20]
 8011860:	b2f6      	uxtb	r6, r6
 8011862:	4283      	cmp	r3, r0
 8011864:	4637      	mov	r7, r6
 8011866:	dc05      	bgt.n	8011874 <__swbuf_r+0x4e>
 8011868:	4621      	mov	r1, r4
 801186a:	4628      	mov	r0, r5
 801186c:	f002 fb26 	bl	8013ebc <_fflush_r>
 8011870:	2800      	cmp	r0, #0
 8011872:	d1ed      	bne.n	8011850 <__swbuf_r+0x2a>
 8011874:	68a3      	ldr	r3, [r4, #8]
 8011876:	3b01      	subs	r3, #1
 8011878:	60a3      	str	r3, [r4, #8]
 801187a:	6823      	ldr	r3, [r4, #0]
 801187c:	1c5a      	adds	r2, r3, #1
 801187e:	6022      	str	r2, [r4, #0]
 8011880:	701e      	strb	r6, [r3, #0]
 8011882:	6962      	ldr	r2, [r4, #20]
 8011884:	1c43      	adds	r3, r0, #1
 8011886:	429a      	cmp	r2, r3
 8011888:	d004      	beq.n	8011894 <__swbuf_r+0x6e>
 801188a:	89a3      	ldrh	r3, [r4, #12]
 801188c:	07db      	lsls	r3, r3, #31
 801188e:	d5e1      	bpl.n	8011854 <__swbuf_r+0x2e>
 8011890:	2e0a      	cmp	r6, #10
 8011892:	d1df      	bne.n	8011854 <__swbuf_r+0x2e>
 8011894:	4621      	mov	r1, r4
 8011896:	4628      	mov	r0, r5
 8011898:	f002 fb10 	bl	8013ebc <_fflush_r>
 801189c:	2800      	cmp	r0, #0
 801189e:	d0d9      	beq.n	8011854 <__swbuf_r+0x2e>
 80118a0:	e7d6      	b.n	8011850 <__swbuf_r+0x2a>
	...

080118a4 <__swsetup_r>:
 80118a4:	b538      	push	{r3, r4, r5, lr}
 80118a6:	4b29      	ldr	r3, [pc, #164]	@ (801194c <__swsetup_r+0xa8>)
 80118a8:	4605      	mov	r5, r0
 80118aa:	6818      	ldr	r0, [r3, #0]
 80118ac:	460c      	mov	r4, r1
 80118ae:	b118      	cbz	r0, 80118b8 <__swsetup_r+0x14>
 80118b0:	6a03      	ldr	r3, [r0, #32]
 80118b2:	b90b      	cbnz	r3, 80118b8 <__swsetup_r+0x14>
 80118b4:	f7ff fe46 	bl	8011544 <__sinit>
 80118b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80118bc:	0719      	lsls	r1, r3, #28
 80118be:	d422      	bmi.n	8011906 <__swsetup_r+0x62>
 80118c0:	06da      	lsls	r2, r3, #27
 80118c2:	d407      	bmi.n	80118d4 <__swsetup_r+0x30>
 80118c4:	2209      	movs	r2, #9
 80118c6:	602a      	str	r2, [r5, #0]
 80118c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80118cc:	81a3      	strh	r3, [r4, #12]
 80118ce:	f04f 30ff 	mov.w	r0, #4294967295
 80118d2:	e033      	b.n	801193c <__swsetup_r+0x98>
 80118d4:	0758      	lsls	r0, r3, #29
 80118d6:	d512      	bpl.n	80118fe <__swsetup_r+0x5a>
 80118d8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80118da:	b141      	cbz	r1, 80118ee <__swsetup_r+0x4a>
 80118dc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80118e0:	4299      	cmp	r1, r3
 80118e2:	d002      	beq.n	80118ea <__swsetup_r+0x46>
 80118e4:	4628      	mov	r0, r5
 80118e6:	f001 f84f 	bl	8012988 <_free_r>
 80118ea:	2300      	movs	r3, #0
 80118ec:	6363      	str	r3, [r4, #52]	@ 0x34
 80118ee:	89a3      	ldrh	r3, [r4, #12]
 80118f0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80118f4:	81a3      	strh	r3, [r4, #12]
 80118f6:	2300      	movs	r3, #0
 80118f8:	6063      	str	r3, [r4, #4]
 80118fa:	6923      	ldr	r3, [r4, #16]
 80118fc:	6023      	str	r3, [r4, #0]
 80118fe:	89a3      	ldrh	r3, [r4, #12]
 8011900:	f043 0308 	orr.w	r3, r3, #8
 8011904:	81a3      	strh	r3, [r4, #12]
 8011906:	6923      	ldr	r3, [r4, #16]
 8011908:	b94b      	cbnz	r3, 801191e <__swsetup_r+0x7a>
 801190a:	89a3      	ldrh	r3, [r4, #12]
 801190c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8011910:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011914:	d003      	beq.n	801191e <__swsetup_r+0x7a>
 8011916:	4621      	mov	r1, r4
 8011918:	4628      	mov	r0, r5
 801191a:	f002 fb2f 	bl	8013f7c <__smakebuf_r>
 801191e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011922:	f013 0201 	ands.w	r2, r3, #1
 8011926:	d00a      	beq.n	801193e <__swsetup_r+0x9a>
 8011928:	2200      	movs	r2, #0
 801192a:	60a2      	str	r2, [r4, #8]
 801192c:	6962      	ldr	r2, [r4, #20]
 801192e:	4252      	negs	r2, r2
 8011930:	61a2      	str	r2, [r4, #24]
 8011932:	6922      	ldr	r2, [r4, #16]
 8011934:	b942      	cbnz	r2, 8011948 <__swsetup_r+0xa4>
 8011936:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801193a:	d1c5      	bne.n	80118c8 <__swsetup_r+0x24>
 801193c:	bd38      	pop	{r3, r4, r5, pc}
 801193e:	0799      	lsls	r1, r3, #30
 8011940:	bf58      	it	pl
 8011942:	6962      	ldrpl	r2, [r4, #20]
 8011944:	60a2      	str	r2, [r4, #8]
 8011946:	e7f4      	b.n	8011932 <__swsetup_r+0x8e>
 8011948:	2000      	movs	r0, #0
 801194a:	e7f7      	b.n	801193c <__swsetup_r+0x98>
 801194c:	200001f0 	.word	0x200001f0

08011950 <memcmp>:
 8011950:	b510      	push	{r4, lr}
 8011952:	3901      	subs	r1, #1
 8011954:	4402      	add	r2, r0
 8011956:	4290      	cmp	r0, r2
 8011958:	d101      	bne.n	801195e <memcmp+0xe>
 801195a:	2000      	movs	r0, #0
 801195c:	e005      	b.n	801196a <memcmp+0x1a>
 801195e:	7803      	ldrb	r3, [r0, #0]
 8011960:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8011964:	42a3      	cmp	r3, r4
 8011966:	d001      	beq.n	801196c <memcmp+0x1c>
 8011968:	1b18      	subs	r0, r3, r4
 801196a:	bd10      	pop	{r4, pc}
 801196c:	3001      	adds	r0, #1
 801196e:	e7f2      	b.n	8011956 <memcmp+0x6>

08011970 <memmove>:
 8011970:	4288      	cmp	r0, r1
 8011972:	b510      	push	{r4, lr}
 8011974:	eb01 0402 	add.w	r4, r1, r2
 8011978:	d902      	bls.n	8011980 <memmove+0x10>
 801197a:	4284      	cmp	r4, r0
 801197c:	4623      	mov	r3, r4
 801197e:	d807      	bhi.n	8011990 <memmove+0x20>
 8011980:	1e43      	subs	r3, r0, #1
 8011982:	42a1      	cmp	r1, r4
 8011984:	d008      	beq.n	8011998 <memmove+0x28>
 8011986:	f811 2b01 	ldrb.w	r2, [r1], #1
 801198a:	f803 2f01 	strb.w	r2, [r3, #1]!
 801198e:	e7f8      	b.n	8011982 <memmove+0x12>
 8011990:	4402      	add	r2, r0
 8011992:	4601      	mov	r1, r0
 8011994:	428a      	cmp	r2, r1
 8011996:	d100      	bne.n	801199a <memmove+0x2a>
 8011998:	bd10      	pop	{r4, pc}
 801199a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801199e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80119a2:	e7f7      	b.n	8011994 <memmove+0x24>

080119a4 <memset>:
 80119a4:	4402      	add	r2, r0
 80119a6:	4603      	mov	r3, r0
 80119a8:	4293      	cmp	r3, r2
 80119aa:	d100      	bne.n	80119ae <memset+0xa>
 80119ac:	4770      	bx	lr
 80119ae:	f803 1b01 	strb.w	r1, [r3], #1
 80119b2:	e7f9      	b.n	80119a8 <memset+0x4>

080119b4 <strncmp>:
 80119b4:	b510      	push	{r4, lr}
 80119b6:	b16a      	cbz	r2, 80119d4 <strncmp+0x20>
 80119b8:	3901      	subs	r1, #1
 80119ba:	1884      	adds	r4, r0, r2
 80119bc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80119c0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80119c4:	429a      	cmp	r2, r3
 80119c6:	d103      	bne.n	80119d0 <strncmp+0x1c>
 80119c8:	42a0      	cmp	r0, r4
 80119ca:	d001      	beq.n	80119d0 <strncmp+0x1c>
 80119cc:	2a00      	cmp	r2, #0
 80119ce:	d1f5      	bne.n	80119bc <strncmp+0x8>
 80119d0:	1ad0      	subs	r0, r2, r3
 80119d2:	bd10      	pop	{r4, pc}
 80119d4:	4610      	mov	r0, r2
 80119d6:	e7fc      	b.n	80119d2 <strncmp+0x1e>

080119d8 <strncpy>:
 80119d8:	b510      	push	{r4, lr}
 80119da:	3901      	subs	r1, #1
 80119dc:	4603      	mov	r3, r0
 80119de:	b132      	cbz	r2, 80119ee <strncpy+0x16>
 80119e0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80119e4:	f803 4b01 	strb.w	r4, [r3], #1
 80119e8:	3a01      	subs	r2, #1
 80119ea:	2c00      	cmp	r4, #0
 80119ec:	d1f7      	bne.n	80119de <strncpy+0x6>
 80119ee:	441a      	add	r2, r3
 80119f0:	2100      	movs	r1, #0
 80119f2:	4293      	cmp	r3, r2
 80119f4:	d100      	bne.n	80119f8 <strncpy+0x20>
 80119f6:	bd10      	pop	{r4, pc}
 80119f8:	f803 1b01 	strb.w	r1, [r3], #1
 80119fc:	e7f9      	b.n	80119f2 <strncpy+0x1a>
	...

08011a00 <strtok>:
 8011a00:	4b16      	ldr	r3, [pc, #88]	@ (8011a5c <strtok+0x5c>)
 8011a02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a06:	681f      	ldr	r7, [r3, #0]
 8011a08:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 8011a0a:	4605      	mov	r5, r0
 8011a0c:	460e      	mov	r6, r1
 8011a0e:	b9ec      	cbnz	r4, 8011a4c <strtok+0x4c>
 8011a10:	2050      	movs	r0, #80	@ 0x50
 8011a12:	f7fe ff41 	bl	8010898 <malloc>
 8011a16:	4602      	mov	r2, r0
 8011a18:	6478      	str	r0, [r7, #68]	@ 0x44
 8011a1a:	b920      	cbnz	r0, 8011a26 <strtok+0x26>
 8011a1c:	4b10      	ldr	r3, [pc, #64]	@ (8011a60 <strtok+0x60>)
 8011a1e:	4811      	ldr	r0, [pc, #68]	@ (8011a64 <strtok+0x64>)
 8011a20:	215b      	movs	r1, #91	@ 0x5b
 8011a22:	f000 f947 	bl	8011cb4 <__assert_func>
 8011a26:	e9c0 4400 	strd	r4, r4, [r0]
 8011a2a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8011a2e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8011a32:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 8011a36:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 8011a3a:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 8011a3e:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 8011a42:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 8011a46:	6184      	str	r4, [r0, #24]
 8011a48:	7704      	strb	r4, [r0, #28]
 8011a4a:	6244      	str	r4, [r0, #36]	@ 0x24
 8011a4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8011a4e:	4631      	mov	r1, r6
 8011a50:	4628      	mov	r0, r5
 8011a52:	2301      	movs	r3, #1
 8011a54:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011a58:	f000 b806 	b.w	8011a68 <__strtok_r>
 8011a5c:	200001f0 	.word	0x200001f0
 8011a60:	080157bf 	.word	0x080157bf
 8011a64:	080157d6 	.word	0x080157d6

08011a68 <__strtok_r>:
 8011a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a6a:	4604      	mov	r4, r0
 8011a6c:	b908      	cbnz	r0, 8011a72 <__strtok_r+0xa>
 8011a6e:	6814      	ldr	r4, [r2, #0]
 8011a70:	b144      	cbz	r4, 8011a84 <__strtok_r+0x1c>
 8011a72:	4620      	mov	r0, r4
 8011a74:	f814 5b01 	ldrb.w	r5, [r4], #1
 8011a78:	460f      	mov	r7, r1
 8011a7a:	f817 6b01 	ldrb.w	r6, [r7], #1
 8011a7e:	b91e      	cbnz	r6, 8011a88 <__strtok_r+0x20>
 8011a80:	b965      	cbnz	r5, 8011a9c <__strtok_r+0x34>
 8011a82:	6015      	str	r5, [r2, #0]
 8011a84:	2000      	movs	r0, #0
 8011a86:	e005      	b.n	8011a94 <__strtok_r+0x2c>
 8011a88:	42b5      	cmp	r5, r6
 8011a8a:	d1f6      	bne.n	8011a7a <__strtok_r+0x12>
 8011a8c:	2b00      	cmp	r3, #0
 8011a8e:	d1f0      	bne.n	8011a72 <__strtok_r+0xa>
 8011a90:	6014      	str	r4, [r2, #0]
 8011a92:	7003      	strb	r3, [r0, #0]
 8011a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a96:	461c      	mov	r4, r3
 8011a98:	e00c      	b.n	8011ab4 <__strtok_r+0x4c>
 8011a9a:	b915      	cbnz	r5, 8011aa2 <__strtok_r+0x3a>
 8011a9c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011aa0:	460e      	mov	r6, r1
 8011aa2:	f816 5b01 	ldrb.w	r5, [r6], #1
 8011aa6:	42ab      	cmp	r3, r5
 8011aa8:	d1f7      	bne.n	8011a9a <__strtok_r+0x32>
 8011aaa:	2b00      	cmp	r3, #0
 8011aac:	d0f3      	beq.n	8011a96 <__strtok_r+0x2e>
 8011aae:	2300      	movs	r3, #0
 8011ab0:	f804 3c01 	strb.w	r3, [r4, #-1]
 8011ab4:	6014      	str	r4, [r2, #0]
 8011ab6:	e7ed      	b.n	8011a94 <__strtok_r+0x2c>

08011ab8 <strstr>:
 8011ab8:	780a      	ldrb	r2, [r1, #0]
 8011aba:	b570      	push	{r4, r5, r6, lr}
 8011abc:	b96a      	cbnz	r2, 8011ada <strstr+0x22>
 8011abe:	bd70      	pop	{r4, r5, r6, pc}
 8011ac0:	429a      	cmp	r2, r3
 8011ac2:	d109      	bne.n	8011ad8 <strstr+0x20>
 8011ac4:	460c      	mov	r4, r1
 8011ac6:	4605      	mov	r5, r0
 8011ac8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011acc:	2b00      	cmp	r3, #0
 8011ace:	d0f6      	beq.n	8011abe <strstr+0x6>
 8011ad0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8011ad4:	429e      	cmp	r6, r3
 8011ad6:	d0f7      	beq.n	8011ac8 <strstr+0x10>
 8011ad8:	3001      	adds	r0, #1
 8011ada:	7803      	ldrb	r3, [r0, #0]
 8011adc:	2b00      	cmp	r3, #0
 8011ade:	d1ef      	bne.n	8011ac0 <strstr+0x8>
 8011ae0:	4618      	mov	r0, r3
 8011ae2:	e7ec      	b.n	8011abe <strstr+0x6>

08011ae4 <_localeconv_r>:
 8011ae4:	4800      	ldr	r0, [pc, #0]	@ (8011ae8 <_localeconv_r+0x4>)
 8011ae6:	4770      	bx	lr
 8011ae8:	20000174 	.word	0x20000174

08011aec <_close_r>:
 8011aec:	b538      	push	{r3, r4, r5, lr}
 8011aee:	4d06      	ldr	r5, [pc, #24]	@ (8011b08 <_close_r+0x1c>)
 8011af0:	2300      	movs	r3, #0
 8011af2:	4604      	mov	r4, r0
 8011af4:	4608      	mov	r0, r1
 8011af6:	602b      	str	r3, [r5, #0]
 8011af8:	f7f1 fe3c 	bl	8003774 <_close>
 8011afc:	1c43      	adds	r3, r0, #1
 8011afe:	d102      	bne.n	8011b06 <_close_r+0x1a>
 8011b00:	682b      	ldr	r3, [r5, #0]
 8011b02:	b103      	cbz	r3, 8011b06 <_close_r+0x1a>
 8011b04:	6023      	str	r3, [r4, #0]
 8011b06:	bd38      	pop	{r3, r4, r5, pc}
 8011b08:	20006dbc 	.word	0x20006dbc

08011b0c <_reclaim_reent>:
 8011b0c:	4b29      	ldr	r3, [pc, #164]	@ (8011bb4 <_reclaim_reent+0xa8>)
 8011b0e:	681b      	ldr	r3, [r3, #0]
 8011b10:	4283      	cmp	r3, r0
 8011b12:	b570      	push	{r4, r5, r6, lr}
 8011b14:	4604      	mov	r4, r0
 8011b16:	d04b      	beq.n	8011bb0 <_reclaim_reent+0xa4>
 8011b18:	69c3      	ldr	r3, [r0, #28]
 8011b1a:	b1ab      	cbz	r3, 8011b48 <_reclaim_reent+0x3c>
 8011b1c:	68db      	ldr	r3, [r3, #12]
 8011b1e:	b16b      	cbz	r3, 8011b3c <_reclaim_reent+0x30>
 8011b20:	2500      	movs	r5, #0
 8011b22:	69e3      	ldr	r3, [r4, #28]
 8011b24:	68db      	ldr	r3, [r3, #12]
 8011b26:	5959      	ldr	r1, [r3, r5]
 8011b28:	2900      	cmp	r1, #0
 8011b2a:	d13b      	bne.n	8011ba4 <_reclaim_reent+0x98>
 8011b2c:	3504      	adds	r5, #4
 8011b2e:	2d80      	cmp	r5, #128	@ 0x80
 8011b30:	d1f7      	bne.n	8011b22 <_reclaim_reent+0x16>
 8011b32:	69e3      	ldr	r3, [r4, #28]
 8011b34:	4620      	mov	r0, r4
 8011b36:	68d9      	ldr	r1, [r3, #12]
 8011b38:	f000 ff26 	bl	8012988 <_free_r>
 8011b3c:	69e3      	ldr	r3, [r4, #28]
 8011b3e:	6819      	ldr	r1, [r3, #0]
 8011b40:	b111      	cbz	r1, 8011b48 <_reclaim_reent+0x3c>
 8011b42:	4620      	mov	r0, r4
 8011b44:	f000 ff20 	bl	8012988 <_free_r>
 8011b48:	6961      	ldr	r1, [r4, #20]
 8011b4a:	b111      	cbz	r1, 8011b52 <_reclaim_reent+0x46>
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	f000 ff1b 	bl	8012988 <_free_r>
 8011b52:	69e1      	ldr	r1, [r4, #28]
 8011b54:	b111      	cbz	r1, 8011b5c <_reclaim_reent+0x50>
 8011b56:	4620      	mov	r0, r4
 8011b58:	f000 ff16 	bl	8012988 <_free_r>
 8011b5c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011b5e:	b111      	cbz	r1, 8011b66 <_reclaim_reent+0x5a>
 8011b60:	4620      	mov	r0, r4
 8011b62:	f000 ff11 	bl	8012988 <_free_r>
 8011b66:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8011b68:	b111      	cbz	r1, 8011b70 <_reclaim_reent+0x64>
 8011b6a:	4620      	mov	r0, r4
 8011b6c:	f000 ff0c 	bl	8012988 <_free_r>
 8011b70:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8011b72:	b111      	cbz	r1, 8011b7a <_reclaim_reent+0x6e>
 8011b74:	4620      	mov	r0, r4
 8011b76:	f000 ff07 	bl	8012988 <_free_r>
 8011b7a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8011b7c:	b111      	cbz	r1, 8011b84 <_reclaim_reent+0x78>
 8011b7e:	4620      	mov	r0, r4
 8011b80:	f000 ff02 	bl	8012988 <_free_r>
 8011b84:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8011b86:	b111      	cbz	r1, 8011b8e <_reclaim_reent+0x82>
 8011b88:	4620      	mov	r0, r4
 8011b8a:	f000 fefd 	bl	8012988 <_free_r>
 8011b8e:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8011b90:	b111      	cbz	r1, 8011b98 <_reclaim_reent+0x8c>
 8011b92:	4620      	mov	r0, r4
 8011b94:	f000 fef8 	bl	8012988 <_free_r>
 8011b98:	6a23      	ldr	r3, [r4, #32]
 8011b9a:	b14b      	cbz	r3, 8011bb0 <_reclaim_reent+0xa4>
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ba2:	4718      	bx	r3
 8011ba4:	680e      	ldr	r6, [r1, #0]
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	f000 feee 	bl	8012988 <_free_r>
 8011bac:	4631      	mov	r1, r6
 8011bae:	e7bb      	b.n	8011b28 <_reclaim_reent+0x1c>
 8011bb0:	bd70      	pop	{r4, r5, r6, pc}
 8011bb2:	bf00      	nop
 8011bb4:	200001f0 	.word	0x200001f0

08011bb8 <_lseek_r>:
 8011bb8:	b538      	push	{r3, r4, r5, lr}
 8011bba:	4d07      	ldr	r5, [pc, #28]	@ (8011bd8 <_lseek_r+0x20>)
 8011bbc:	4604      	mov	r4, r0
 8011bbe:	4608      	mov	r0, r1
 8011bc0:	4611      	mov	r1, r2
 8011bc2:	2200      	movs	r2, #0
 8011bc4:	602a      	str	r2, [r5, #0]
 8011bc6:	461a      	mov	r2, r3
 8011bc8:	f7f1 fdfb 	bl	80037c2 <_lseek>
 8011bcc:	1c43      	adds	r3, r0, #1
 8011bce:	d102      	bne.n	8011bd6 <_lseek_r+0x1e>
 8011bd0:	682b      	ldr	r3, [r5, #0]
 8011bd2:	b103      	cbz	r3, 8011bd6 <_lseek_r+0x1e>
 8011bd4:	6023      	str	r3, [r4, #0]
 8011bd6:	bd38      	pop	{r3, r4, r5, pc}
 8011bd8:	20006dbc 	.word	0x20006dbc

08011bdc <_read_r>:
 8011bdc:	b538      	push	{r3, r4, r5, lr}
 8011bde:	4d07      	ldr	r5, [pc, #28]	@ (8011bfc <_read_r+0x20>)
 8011be0:	4604      	mov	r4, r0
 8011be2:	4608      	mov	r0, r1
 8011be4:	4611      	mov	r1, r2
 8011be6:	2200      	movs	r2, #0
 8011be8:	602a      	str	r2, [r5, #0]
 8011bea:	461a      	mov	r2, r3
 8011bec:	f7f1 fda5 	bl	800373a <_read>
 8011bf0:	1c43      	adds	r3, r0, #1
 8011bf2:	d102      	bne.n	8011bfa <_read_r+0x1e>
 8011bf4:	682b      	ldr	r3, [r5, #0]
 8011bf6:	b103      	cbz	r3, 8011bfa <_read_r+0x1e>
 8011bf8:	6023      	str	r3, [r4, #0]
 8011bfa:	bd38      	pop	{r3, r4, r5, pc}
 8011bfc:	20006dbc 	.word	0x20006dbc

08011c00 <_sbrk_r>:
 8011c00:	b538      	push	{r3, r4, r5, lr}
 8011c02:	4d06      	ldr	r5, [pc, #24]	@ (8011c1c <_sbrk_r+0x1c>)
 8011c04:	2300      	movs	r3, #0
 8011c06:	4604      	mov	r4, r0
 8011c08:	4608      	mov	r0, r1
 8011c0a:	602b      	str	r3, [r5, #0]
 8011c0c:	f7f1 fde6 	bl	80037dc <_sbrk>
 8011c10:	1c43      	adds	r3, r0, #1
 8011c12:	d102      	bne.n	8011c1a <_sbrk_r+0x1a>
 8011c14:	682b      	ldr	r3, [r5, #0]
 8011c16:	b103      	cbz	r3, 8011c1a <_sbrk_r+0x1a>
 8011c18:	6023      	str	r3, [r4, #0]
 8011c1a:	bd38      	pop	{r3, r4, r5, pc}
 8011c1c:	20006dbc 	.word	0x20006dbc

08011c20 <_write_r>:
 8011c20:	b538      	push	{r3, r4, r5, lr}
 8011c22:	4d07      	ldr	r5, [pc, #28]	@ (8011c40 <_write_r+0x20>)
 8011c24:	4604      	mov	r4, r0
 8011c26:	4608      	mov	r0, r1
 8011c28:	4611      	mov	r1, r2
 8011c2a:	2200      	movs	r2, #0
 8011c2c:	602a      	str	r2, [r5, #0]
 8011c2e:	461a      	mov	r2, r3
 8011c30:	f7f0 fc42 	bl	80024b8 <_write>
 8011c34:	1c43      	adds	r3, r0, #1
 8011c36:	d102      	bne.n	8011c3e <_write_r+0x1e>
 8011c38:	682b      	ldr	r3, [r5, #0]
 8011c3a:	b103      	cbz	r3, 8011c3e <_write_r+0x1e>
 8011c3c:	6023      	str	r3, [r4, #0]
 8011c3e:	bd38      	pop	{r3, r4, r5, pc}
 8011c40:	20006dbc 	.word	0x20006dbc

08011c44 <__errno>:
 8011c44:	4b01      	ldr	r3, [pc, #4]	@ (8011c4c <__errno+0x8>)
 8011c46:	6818      	ldr	r0, [r3, #0]
 8011c48:	4770      	bx	lr
 8011c4a:	bf00      	nop
 8011c4c:	200001f0 	.word	0x200001f0

08011c50 <__libc_init_array>:
 8011c50:	b570      	push	{r4, r5, r6, lr}
 8011c52:	4d0d      	ldr	r5, [pc, #52]	@ (8011c88 <__libc_init_array+0x38>)
 8011c54:	4c0d      	ldr	r4, [pc, #52]	@ (8011c8c <__libc_init_array+0x3c>)
 8011c56:	1b64      	subs	r4, r4, r5
 8011c58:	10a4      	asrs	r4, r4, #2
 8011c5a:	2600      	movs	r6, #0
 8011c5c:	42a6      	cmp	r6, r4
 8011c5e:	d109      	bne.n	8011c74 <__libc_init_array+0x24>
 8011c60:	4d0b      	ldr	r5, [pc, #44]	@ (8011c90 <__libc_init_array+0x40>)
 8011c62:	4c0c      	ldr	r4, [pc, #48]	@ (8011c94 <__libc_init_array+0x44>)
 8011c64:	f002 fadc 	bl	8014220 <_init>
 8011c68:	1b64      	subs	r4, r4, r5
 8011c6a:	10a4      	asrs	r4, r4, #2
 8011c6c:	2600      	movs	r6, #0
 8011c6e:	42a6      	cmp	r6, r4
 8011c70:	d105      	bne.n	8011c7e <__libc_init_array+0x2e>
 8011c72:	bd70      	pop	{r4, r5, r6, pc}
 8011c74:	f855 3b04 	ldr.w	r3, [r5], #4
 8011c78:	4798      	blx	r3
 8011c7a:	3601      	adds	r6, #1
 8011c7c:	e7ee      	b.n	8011c5c <__libc_init_array+0xc>
 8011c7e:	f855 3b04 	ldr.w	r3, [r5], #4
 8011c82:	4798      	blx	r3
 8011c84:	3601      	adds	r6, #1
 8011c86:	e7f2      	b.n	8011c6e <__libc_init_array+0x1e>
 8011c88:	08015a7c 	.word	0x08015a7c
 8011c8c:	08015a7c 	.word	0x08015a7c
 8011c90:	08015a7c 	.word	0x08015a7c
 8011c94:	08015a80 	.word	0x08015a80

08011c98 <memcpy>:
 8011c98:	440a      	add	r2, r1
 8011c9a:	4291      	cmp	r1, r2
 8011c9c:	f100 33ff 	add.w	r3, r0, #4294967295
 8011ca0:	d100      	bne.n	8011ca4 <memcpy+0xc>
 8011ca2:	4770      	bx	lr
 8011ca4:	b510      	push	{r4, lr}
 8011ca6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011caa:	f803 4f01 	strb.w	r4, [r3, #1]!
 8011cae:	4291      	cmp	r1, r2
 8011cb0:	d1f9      	bne.n	8011ca6 <memcpy+0xe>
 8011cb2:	bd10      	pop	{r4, pc}

08011cb4 <__assert_func>:
 8011cb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011cb6:	4614      	mov	r4, r2
 8011cb8:	461a      	mov	r2, r3
 8011cba:	4b09      	ldr	r3, [pc, #36]	@ (8011ce0 <__assert_func+0x2c>)
 8011cbc:	681b      	ldr	r3, [r3, #0]
 8011cbe:	4605      	mov	r5, r0
 8011cc0:	68d8      	ldr	r0, [r3, #12]
 8011cc2:	b954      	cbnz	r4, 8011cda <__assert_func+0x26>
 8011cc4:	4b07      	ldr	r3, [pc, #28]	@ (8011ce4 <__assert_func+0x30>)
 8011cc6:	461c      	mov	r4, r3
 8011cc8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011ccc:	9100      	str	r1, [sp, #0]
 8011cce:	462b      	mov	r3, r5
 8011cd0:	4905      	ldr	r1, [pc, #20]	@ (8011ce8 <__assert_func+0x34>)
 8011cd2:	f002 f91b 	bl	8013f0c <fiprintf>
 8011cd6:	f002 fa57 	bl	8014188 <abort>
 8011cda:	4b04      	ldr	r3, [pc, #16]	@ (8011cec <__assert_func+0x38>)
 8011cdc:	e7f4      	b.n	8011cc8 <__assert_func+0x14>
 8011cde:	bf00      	nop
 8011ce0:	200001f0 	.word	0x200001f0
 8011ce4:	08015875 	.word	0x08015875
 8011ce8:	08015847 	.word	0x08015847
 8011cec:	0801583a 	.word	0x0801583a

08011cf0 <quorem>:
 8011cf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cf4:	6903      	ldr	r3, [r0, #16]
 8011cf6:	690c      	ldr	r4, [r1, #16]
 8011cf8:	42a3      	cmp	r3, r4
 8011cfa:	4607      	mov	r7, r0
 8011cfc:	db7e      	blt.n	8011dfc <quorem+0x10c>
 8011cfe:	3c01      	subs	r4, #1
 8011d00:	f101 0814 	add.w	r8, r1, #20
 8011d04:	00a3      	lsls	r3, r4, #2
 8011d06:	f100 0514 	add.w	r5, r0, #20
 8011d0a:	9300      	str	r3, [sp, #0]
 8011d0c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8011d10:	9301      	str	r3, [sp, #4]
 8011d12:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8011d16:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8011d1a:	3301      	adds	r3, #1
 8011d1c:	429a      	cmp	r2, r3
 8011d1e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8011d22:	fbb2 f6f3 	udiv	r6, r2, r3
 8011d26:	d32e      	bcc.n	8011d86 <quorem+0x96>
 8011d28:	f04f 0a00 	mov.w	sl, #0
 8011d2c:	46c4      	mov	ip, r8
 8011d2e:	46ae      	mov	lr, r5
 8011d30:	46d3      	mov	fp, sl
 8011d32:	f85c 3b04 	ldr.w	r3, [ip], #4
 8011d36:	b298      	uxth	r0, r3
 8011d38:	fb06 a000 	mla	r0, r6, r0, sl
 8011d3c:	0c02      	lsrs	r2, r0, #16
 8011d3e:	0c1b      	lsrs	r3, r3, #16
 8011d40:	fb06 2303 	mla	r3, r6, r3, r2
 8011d44:	f8de 2000 	ldr.w	r2, [lr]
 8011d48:	b280      	uxth	r0, r0
 8011d4a:	b292      	uxth	r2, r2
 8011d4c:	1a12      	subs	r2, r2, r0
 8011d4e:	445a      	add	r2, fp
 8011d50:	f8de 0000 	ldr.w	r0, [lr]
 8011d54:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8011d58:	b29b      	uxth	r3, r3
 8011d5a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8011d5e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8011d62:	b292      	uxth	r2, r2
 8011d64:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8011d68:	45e1      	cmp	r9, ip
 8011d6a:	f84e 2b04 	str.w	r2, [lr], #4
 8011d6e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8011d72:	d2de      	bcs.n	8011d32 <quorem+0x42>
 8011d74:	9b00      	ldr	r3, [sp, #0]
 8011d76:	58eb      	ldr	r3, [r5, r3]
 8011d78:	b92b      	cbnz	r3, 8011d86 <quorem+0x96>
 8011d7a:	9b01      	ldr	r3, [sp, #4]
 8011d7c:	3b04      	subs	r3, #4
 8011d7e:	429d      	cmp	r5, r3
 8011d80:	461a      	mov	r2, r3
 8011d82:	d32f      	bcc.n	8011de4 <quorem+0xf4>
 8011d84:	613c      	str	r4, [r7, #16]
 8011d86:	4638      	mov	r0, r7
 8011d88:	f001 f8d4 	bl	8012f34 <__mcmp>
 8011d8c:	2800      	cmp	r0, #0
 8011d8e:	db25      	blt.n	8011ddc <quorem+0xec>
 8011d90:	4629      	mov	r1, r5
 8011d92:	2000      	movs	r0, #0
 8011d94:	f858 2b04 	ldr.w	r2, [r8], #4
 8011d98:	f8d1 c000 	ldr.w	ip, [r1]
 8011d9c:	fa1f fe82 	uxth.w	lr, r2
 8011da0:	fa1f f38c 	uxth.w	r3, ip
 8011da4:	eba3 030e 	sub.w	r3, r3, lr
 8011da8:	4403      	add	r3, r0
 8011daa:	0c12      	lsrs	r2, r2, #16
 8011dac:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8011db0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8011db4:	b29b      	uxth	r3, r3
 8011db6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011dba:	45c1      	cmp	r9, r8
 8011dbc:	f841 3b04 	str.w	r3, [r1], #4
 8011dc0:	ea4f 4022 	mov.w	r0, r2, asr #16
 8011dc4:	d2e6      	bcs.n	8011d94 <quorem+0xa4>
 8011dc6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8011dca:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8011dce:	b922      	cbnz	r2, 8011dda <quorem+0xea>
 8011dd0:	3b04      	subs	r3, #4
 8011dd2:	429d      	cmp	r5, r3
 8011dd4:	461a      	mov	r2, r3
 8011dd6:	d30b      	bcc.n	8011df0 <quorem+0x100>
 8011dd8:	613c      	str	r4, [r7, #16]
 8011dda:	3601      	adds	r6, #1
 8011ddc:	4630      	mov	r0, r6
 8011dde:	b003      	add	sp, #12
 8011de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011de4:	6812      	ldr	r2, [r2, #0]
 8011de6:	3b04      	subs	r3, #4
 8011de8:	2a00      	cmp	r2, #0
 8011dea:	d1cb      	bne.n	8011d84 <quorem+0x94>
 8011dec:	3c01      	subs	r4, #1
 8011dee:	e7c6      	b.n	8011d7e <quorem+0x8e>
 8011df0:	6812      	ldr	r2, [r2, #0]
 8011df2:	3b04      	subs	r3, #4
 8011df4:	2a00      	cmp	r2, #0
 8011df6:	d1ef      	bne.n	8011dd8 <quorem+0xe8>
 8011df8:	3c01      	subs	r4, #1
 8011dfa:	e7ea      	b.n	8011dd2 <quorem+0xe2>
 8011dfc:	2000      	movs	r0, #0
 8011dfe:	e7ee      	b.n	8011dde <quorem+0xee>

08011e00 <_dtoa_r>:
 8011e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e04:	69c7      	ldr	r7, [r0, #28]
 8011e06:	b099      	sub	sp, #100	@ 0x64
 8011e08:	ed8d 0b02 	vstr	d0, [sp, #8]
 8011e0c:	ec55 4b10 	vmov	r4, r5, d0
 8011e10:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8011e12:	9109      	str	r1, [sp, #36]	@ 0x24
 8011e14:	4683      	mov	fp, r0
 8011e16:	920e      	str	r2, [sp, #56]	@ 0x38
 8011e18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011e1a:	b97f      	cbnz	r7, 8011e3c <_dtoa_r+0x3c>
 8011e1c:	2010      	movs	r0, #16
 8011e1e:	f7fe fd3b 	bl	8010898 <malloc>
 8011e22:	4602      	mov	r2, r0
 8011e24:	f8cb 001c 	str.w	r0, [fp, #28]
 8011e28:	b920      	cbnz	r0, 8011e34 <_dtoa_r+0x34>
 8011e2a:	4ba7      	ldr	r3, [pc, #668]	@ (80120c8 <_dtoa_r+0x2c8>)
 8011e2c:	21ef      	movs	r1, #239	@ 0xef
 8011e2e:	48a7      	ldr	r0, [pc, #668]	@ (80120cc <_dtoa_r+0x2cc>)
 8011e30:	f7ff ff40 	bl	8011cb4 <__assert_func>
 8011e34:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8011e38:	6007      	str	r7, [r0, #0]
 8011e3a:	60c7      	str	r7, [r0, #12]
 8011e3c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8011e40:	6819      	ldr	r1, [r3, #0]
 8011e42:	b159      	cbz	r1, 8011e5c <_dtoa_r+0x5c>
 8011e44:	685a      	ldr	r2, [r3, #4]
 8011e46:	604a      	str	r2, [r1, #4]
 8011e48:	2301      	movs	r3, #1
 8011e4a:	4093      	lsls	r3, r2
 8011e4c:	608b      	str	r3, [r1, #8]
 8011e4e:	4658      	mov	r0, fp
 8011e50:	f000 fe36 	bl	8012ac0 <_Bfree>
 8011e54:	f8db 301c 	ldr.w	r3, [fp, #28]
 8011e58:	2200      	movs	r2, #0
 8011e5a:	601a      	str	r2, [r3, #0]
 8011e5c:	1e2b      	subs	r3, r5, #0
 8011e5e:	bfb9      	ittee	lt
 8011e60:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8011e64:	9303      	strlt	r3, [sp, #12]
 8011e66:	2300      	movge	r3, #0
 8011e68:	6033      	strge	r3, [r6, #0]
 8011e6a:	9f03      	ldr	r7, [sp, #12]
 8011e6c:	4b98      	ldr	r3, [pc, #608]	@ (80120d0 <_dtoa_r+0x2d0>)
 8011e6e:	bfbc      	itt	lt
 8011e70:	2201      	movlt	r2, #1
 8011e72:	6032      	strlt	r2, [r6, #0]
 8011e74:	43bb      	bics	r3, r7
 8011e76:	d112      	bne.n	8011e9e <_dtoa_r+0x9e>
 8011e78:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011e7a:	f242 730f 	movw	r3, #9999	@ 0x270f
 8011e7e:	6013      	str	r3, [r2, #0]
 8011e80:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8011e84:	4323      	orrs	r3, r4
 8011e86:	f000 854d 	beq.w	8012924 <_dtoa_r+0xb24>
 8011e8a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8011e8c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80120e4 <_dtoa_r+0x2e4>
 8011e90:	2b00      	cmp	r3, #0
 8011e92:	f000 854f 	beq.w	8012934 <_dtoa_r+0xb34>
 8011e96:	f10a 0303 	add.w	r3, sl, #3
 8011e9a:	f000 bd49 	b.w	8012930 <_dtoa_r+0xb30>
 8011e9e:	ed9d 7b02 	vldr	d7, [sp, #8]
 8011ea2:	2200      	movs	r2, #0
 8011ea4:	ec51 0b17 	vmov	r0, r1, d7
 8011ea8:	2300      	movs	r3, #0
 8011eaa:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8011eae:	f7ee fe1b 	bl	8000ae8 <__aeabi_dcmpeq>
 8011eb2:	4680      	mov	r8, r0
 8011eb4:	b158      	cbz	r0, 8011ece <_dtoa_r+0xce>
 8011eb6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011eb8:	2301      	movs	r3, #1
 8011eba:	6013      	str	r3, [r2, #0]
 8011ebc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8011ebe:	b113      	cbz	r3, 8011ec6 <_dtoa_r+0xc6>
 8011ec0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8011ec2:	4b84      	ldr	r3, [pc, #528]	@ (80120d4 <_dtoa_r+0x2d4>)
 8011ec4:	6013      	str	r3, [r2, #0]
 8011ec6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 80120e8 <_dtoa_r+0x2e8>
 8011eca:	f000 bd33 	b.w	8012934 <_dtoa_r+0xb34>
 8011ece:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8011ed2:	aa16      	add	r2, sp, #88	@ 0x58
 8011ed4:	a917      	add	r1, sp, #92	@ 0x5c
 8011ed6:	4658      	mov	r0, fp
 8011ed8:	f001 f8dc 	bl	8013094 <__d2b>
 8011edc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8011ee0:	4681      	mov	r9, r0
 8011ee2:	2e00      	cmp	r6, #0
 8011ee4:	d077      	beq.n	8011fd6 <_dtoa_r+0x1d6>
 8011ee6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011ee8:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8011eec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8011ef0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8011ef4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8011ef8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8011efc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8011f00:	4619      	mov	r1, r3
 8011f02:	2200      	movs	r2, #0
 8011f04:	4b74      	ldr	r3, [pc, #464]	@ (80120d8 <_dtoa_r+0x2d8>)
 8011f06:	f7ee f9cf 	bl	80002a8 <__aeabi_dsub>
 8011f0a:	a369      	add	r3, pc, #420	@ (adr r3, 80120b0 <_dtoa_r+0x2b0>)
 8011f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011f10:	f7ee fb82 	bl	8000618 <__aeabi_dmul>
 8011f14:	a368      	add	r3, pc, #416	@ (adr r3, 80120b8 <_dtoa_r+0x2b8>)
 8011f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011f1a:	f7ee f9c7 	bl	80002ac <__adddf3>
 8011f1e:	4604      	mov	r4, r0
 8011f20:	4630      	mov	r0, r6
 8011f22:	460d      	mov	r5, r1
 8011f24:	f7ee fb0e 	bl	8000544 <__aeabi_i2d>
 8011f28:	a365      	add	r3, pc, #404	@ (adr r3, 80120c0 <_dtoa_r+0x2c0>)
 8011f2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011f2e:	f7ee fb73 	bl	8000618 <__aeabi_dmul>
 8011f32:	4602      	mov	r2, r0
 8011f34:	460b      	mov	r3, r1
 8011f36:	4620      	mov	r0, r4
 8011f38:	4629      	mov	r1, r5
 8011f3a:	f7ee f9b7 	bl	80002ac <__adddf3>
 8011f3e:	4604      	mov	r4, r0
 8011f40:	460d      	mov	r5, r1
 8011f42:	f7ee fe19 	bl	8000b78 <__aeabi_d2iz>
 8011f46:	2200      	movs	r2, #0
 8011f48:	4607      	mov	r7, r0
 8011f4a:	2300      	movs	r3, #0
 8011f4c:	4620      	mov	r0, r4
 8011f4e:	4629      	mov	r1, r5
 8011f50:	f7ee fdd4 	bl	8000afc <__aeabi_dcmplt>
 8011f54:	b140      	cbz	r0, 8011f68 <_dtoa_r+0x168>
 8011f56:	4638      	mov	r0, r7
 8011f58:	f7ee faf4 	bl	8000544 <__aeabi_i2d>
 8011f5c:	4622      	mov	r2, r4
 8011f5e:	462b      	mov	r3, r5
 8011f60:	f7ee fdc2 	bl	8000ae8 <__aeabi_dcmpeq>
 8011f64:	b900      	cbnz	r0, 8011f68 <_dtoa_r+0x168>
 8011f66:	3f01      	subs	r7, #1
 8011f68:	2f16      	cmp	r7, #22
 8011f6a:	d851      	bhi.n	8012010 <_dtoa_r+0x210>
 8011f6c:	4b5b      	ldr	r3, [pc, #364]	@ (80120dc <_dtoa_r+0x2dc>)
 8011f6e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8011f72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011f76:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8011f7a:	f7ee fdbf 	bl	8000afc <__aeabi_dcmplt>
 8011f7e:	2800      	cmp	r0, #0
 8011f80:	d048      	beq.n	8012014 <_dtoa_r+0x214>
 8011f82:	3f01      	subs	r7, #1
 8011f84:	2300      	movs	r3, #0
 8011f86:	9312      	str	r3, [sp, #72]	@ 0x48
 8011f88:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8011f8a:	1b9b      	subs	r3, r3, r6
 8011f8c:	1e5a      	subs	r2, r3, #1
 8011f8e:	bf44      	itt	mi
 8011f90:	f1c3 0801 	rsbmi	r8, r3, #1
 8011f94:	2300      	movmi	r3, #0
 8011f96:	9208      	str	r2, [sp, #32]
 8011f98:	bf54      	ite	pl
 8011f9a:	f04f 0800 	movpl.w	r8, #0
 8011f9e:	9308      	strmi	r3, [sp, #32]
 8011fa0:	2f00      	cmp	r7, #0
 8011fa2:	db39      	blt.n	8012018 <_dtoa_r+0x218>
 8011fa4:	9b08      	ldr	r3, [sp, #32]
 8011fa6:	970f      	str	r7, [sp, #60]	@ 0x3c
 8011fa8:	443b      	add	r3, r7
 8011faa:	9308      	str	r3, [sp, #32]
 8011fac:	2300      	movs	r3, #0
 8011fae:	930a      	str	r3, [sp, #40]	@ 0x28
 8011fb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011fb2:	2b09      	cmp	r3, #9
 8011fb4:	d864      	bhi.n	8012080 <_dtoa_r+0x280>
 8011fb6:	2b05      	cmp	r3, #5
 8011fb8:	bfc4      	itt	gt
 8011fba:	3b04      	subgt	r3, #4
 8011fbc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8011fbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011fc0:	f1a3 0302 	sub.w	r3, r3, #2
 8011fc4:	bfcc      	ite	gt
 8011fc6:	2400      	movgt	r4, #0
 8011fc8:	2401      	movle	r4, #1
 8011fca:	2b03      	cmp	r3, #3
 8011fcc:	d863      	bhi.n	8012096 <_dtoa_r+0x296>
 8011fce:	e8df f003 	tbb	[pc, r3]
 8011fd2:	372a      	.short	0x372a
 8011fd4:	5535      	.short	0x5535
 8011fd6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8011fda:	441e      	add	r6, r3
 8011fdc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8011fe0:	2b20      	cmp	r3, #32
 8011fe2:	bfc1      	itttt	gt
 8011fe4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8011fe8:	409f      	lslgt	r7, r3
 8011fea:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8011fee:	fa24 f303 	lsrgt.w	r3, r4, r3
 8011ff2:	bfd6      	itet	le
 8011ff4:	f1c3 0320 	rsble	r3, r3, #32
 8011ff8:	ea47 0003 	orrgt.w	r0, r7, r3
 8011ffc:	fa04 f003 	lslle.w	r0, r4, r3
 8012000:	f7ee fa90 	bl	8000524 <__aeabi_ui2d>
 8012004:	2201      	movs	r2, #1
 8012006:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801200a:	3e01      	subs	r6, #1
 801200c:	9214      	str	r2, [sp, #80]	@ 0x50
 801200e:	e777      	b.n	8011f00 <_dtoa_r+0x100>
 8012010:	2301      	movs	r3, #1
 8012012:	e7b8      	b.n	8011f86 <_dtoa_r+0x186>
 8012014:	9012      	str	r0, [sp, #72]	@ 0x48
 8012016:	e7b7      	b.n	8011f88 <_dtoa_r+0x188>
 8012018:	427b      	negs	r3, r7
 801201a:	930a      	str	r3, [sp, #40]	@ 0x28
 801201c:	2300      	movs	r3, #0
 801201e:	eba8 0807 	sub.w	r8, r8, r7
 8012022:	930f      	str	r3, [sp, #60]	@ 0x3c
 8012024:	e7c4      	b.n	8011fb0 <_dtoa_r+0x1b0>
 8012026:	2300      	movs	r3, #0
 8012028:	930b      	str	r3, [sp, #44]	@ 0x2c
 801202a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801202c:	2b00      	cmp	r3, #0
 801202e:	dc35      	bgt.n	801209c <_dtoa_r+0x29c>
 8012030:	2301      	movs	r3, #1
 8012032:	9300      	str	r3, [sp, #0]
 8012034:	9307      	str	r3, [sp, #28]
 8012036:	461a      	mov	r2, r3
 8012038:	920e      	str	r2, [sp, #56]	@ 0x38
 801203a:	e00b      	b.n	8012054 <_dtoa_r+0x254>
 801203c:	2301      	movs	r3, #1
 801203e:	e7f3      	b.n	8012028 <_dtoa_r+0x228>
 8012040:	2300      	movs	r3, #0
 8012042:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012044:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012046:	18fb      	adds	r3, r7, r3
 8012048:	9300      	str	r3, [sp, #0]
 801204a:	3301      	adds	r3, #1
 801204c:	2b01      	cmp	r3, #1
 801204e:	9307      	str	r3, [sp, #28]
 8012050:	bfb8      	it	lt
 8012052:	2301      	movlt	r3, #1
 8012054:	f8db 001c 	ldr.w	r0, [fp, #28]
 8012058:	2100      	movs	r1, #0
 801205a:	2204      	movs	r2, #4
 801205c:	f102 0514 	add.w	r5, r2, #20
 8012060:	429d      	cmp	r5, r3
 8012062:	d91f      	bls.n	80120a4 <_dtoa_r+0x2a4>
 8012064:	6041      	str	r1, [r0, #4]
 8012066:	4658      	mov	r0, fp
 8012068:	f000 fcea 	bl	8012a40 <_Balloc>
 801206c:	4682      	mov	sl, r0
 801206e:	2800      	cmp	r0, #0
 8012070:	d13c      	bne.n	80120ec <_dtoa_r+0x2ec>
 8012072:	4b1b      	ldr	r3, [pc, #108]	@ (80120e0 <_dtoa_r+0x2e0>)
 8012074:	4602      	mov	r2, r0
 8012076:	f240 11af 	movw	r1, #431	@ 0x1af
 801207a:	e6d8      	b.n	8011e2e <_dtoa_r+0x2e>
 801207c:	2301      	movs	r3, #1
 801207e:	e7e0      	b.n	8012042 <_dtoa_r+0x242>
 8012080:	2401      	movs	r4, #1
 8012082:	2300      	movs	r3, #0
 8012084:	9309      	str	r3, [sp, #36]	@ 0x24
 8012086:	940b      	str	r4, [sp, #44]	@ 0x2c
 8012088:	f04f 33ff 	mov.w	r3, #4294967295
 801208c:	9300      	str	r3, [sp, #0]
 801208e:	9307      	str	r3, [sp, #28]
 8012090:	2200      	movs	r2, #0
 8012092:	2312      	movs	r3, #18
 8012094:	e7d0      	b.n	8012038 <_dtoa_r+0x238>
 8012096:	2301      	movs	r3, #1
 8012098:	930b      	str	r3, [sp, #44]	@ 0x2c
 801209a:	e7f5      	b.n	8012088 <_dtoa_r+0x288>
 801209c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801209e:	9300      	str	r3, [sp, #0]
 80120a0:	9307      	str	r3, [sp, #28]
 80120a2:	e7d7      	b.n	8012054 <_dtoa_r+0x254>
 80120a4:	3101      	adds	r1, #1
 80120a6:	0052      	lsls	r2, r2, #1
 80120a8:	e7d8      	b.n	801205c <_dtoa_r+0x25c>
 80120aa:	bf00      	nop
 80120ac:	f3af 8000 	nop.w
 80120b0:	636f4361 	.word	0x636f4361
 80120b4:	3fd287a7 	.word	0x3fd287a7
 80120b8:	8b60c8b3 	.word	0x8b60c8b3
 80120bc:	3fc68a28 	.word	0x3fc68a28
 80120c0:	509f79fb 	.word	0x509f79fb
 80120c4:	3fd34413 	.word	0x3fd34413
 80120c8:	080157bf 	.word	0x080157bf
 80120cc:	08015883 	.word	0x08015883
 80120d0:	7ff00000 	.word	0x7ff00000
 80120d4:	08015a70 	.word	0x08015a70
 80120d8:	3ff80000 	.word	0x3ff80000
 80120dc:	08015980 	.word	0x08015980
 80120e0:	080158db 	.word	0x080158db
 80120e4:	0801587f 	.word	0x0801587f
 80120e8:	08015a6f 	.word	0x08015a6f
 80120ec:	f8db 301c 	ldr.w	r3, [fp, #28]
 80120f0:	6018      	str	r0, [r3, #0]
 80120f2:	9b07      	ldr	r3, [sp, #28]
 80120f4:	2b0e      	cmp	r3, #14
 80120f6:	f200 80a4 	bhi.w	8012242 <_dtoa_r+0x442>
 80120fa:	2c00      	cmp	r4, #0
 80120fc:	f000 80a1 	beq.w	8012242 <_dtoa_r+0x442>
 8012100:	2f00      	cmp	r7, #0
 8012102:	dd33      	ble.n	801216c <_dtoa_r+0x36c>
 8012104:	4bad      	ldr	r3, [pc, #692]	@ (80123bc <_dtoa_r+0x5bc>)
 8012106:	f007 020f 	and.w	r2, r7, #15
 801210a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801210e:	ed93 7b00 	vldr	d7, [r3]
 8012112:	05f8      	lsls	r0, r7, #23
 8012114:	ed8d 7b04 	vstr	d7, [sp, #16]
 8012118:	ea4f 1427 	mov.w	r4, r7, asr #4
 801211c:	d516      	bpl.n	801214c <_dtoa_r+0x34c>
 801211e:	4ba8      	ldr	r3, [pc, #672]	@ (80123c0 <_dtoa_r+0x5c0>)
 8012120:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8012124:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8012128:	f7ee fba0 	bl	800086c <__aeabi_ddiv>
 801212c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8012130:	f004 040f 	and.w	r4, r4, #15
 8012134:	2603      	movs	r6, #3
 8012136:	4da2      	ldr	r5, [pc, #648]	@ (80123c0 <_dtoa_r+0x5c0>)
 8012138:	b954      	cbnz	r4, 8012150 <_dtoa_r+0x350>
 801213a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801213e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8012142:	f7ee fb93 	bl	800086c <__aeabi_ddiv>
 8012146:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801214a:	e028      	b.n	801219e <_dtoa_r+0x39e>
 801214c:	2602      	movs	r6, #2
 801214e:	e7f2      	b.n	8012136 <_dtoa_r+0x336>
 8012150:	07e1      	lsls	r1, r4, #31
 8012152:	d508      	bpl.n	8012166 <_dtoa_r+0x366>
 8012154:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8012158:	e9d5 2300 	ldrd	r2, r3, [r5]
 801215c:	f7ee fa5c 	bl	8000618 <__aeabi_dmul>
 8012160:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012164:	3601      	adds	r6, #1
 8012166:	1064      	asrs	r4, r4, #1
 8012168:	3508      	adds	r5, #8
 801216a:	e7e5      	b.n	8012138 <_dtoa_r+0x338>
 801216c:	f000 80d2 	beq.w	8012314 <_dtoa_r+0x514>
 8012170:	427c      	negs	r4, r7
 8012172:	4b92      	ldr	r3, [pc, #584]	@ (80123bc <_dtoa_r+0x5bc>)
 8012174:	4d92      	ldr	r5, [pc, #584]	@ (80123c0 <_dtoa_r+0x5c0>)
 8012176:	f004 020f 	and.w	r2, r4, #15
 801217a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801217e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012182:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8012186:	f7ee fa47 	bl	8000618 <__aeabi_dmul>
 801218a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801218e:	1124      	asrs	r4, r4, #4
 8012190:	2300      	movs	r3, #0
 8012192:	2602      	movs	r6, #2
 8012194:	2c00      	cmp	r4, #0
 8012196:	f040 80b2 	bne.w	80122fe <_dtoa_r+0x4fe>
 801219a:	2b00      	cmp	r3, #0
 801219c:	d1d3      	bne.n	8012146 <_dtoa_r+0x346>
 801219e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80121a0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80121a4:	2b00      	cmp	r3, #0
 80121a6:	f000 80b7 	beq.w	8012318 <_dtoa_r+0x518>
 80121aa:	4b86      	ldr	r3, [pc, #536]	@ (80123c4 <_dtoa_r+0x5c4>)
 80121ac:	2200      	movs	r2, #0
 80121ae:	4620      	mov	r0, r4
 80121b0:	4629      	mov	r1, r5
 80121b2:	f7ee fca3 	bl	8000afc <__aeabi_dcmplt>
 80121b6:	2800      	cmp	r0, #0
 80121b8:	f000 80ae 	beq.w	8012318 <_dtoa_r+0x518>
 80121bc:	9b07      	ldr	r3, [sp, #28]
 80121be:	2b00      	cmp	r3, #0
 80121c0:	f000 80aa 	beq.w	8012318 <_dtoa_r+0x518>
 80121c4:	9b00      	ldr	r3, [sp, #0]
 80121c6:	2b00      	cmp	r3, #0
 80121c8:	dd37      	ble.n	801223a <_dtoa_r+0x43a>
 80121ca:	1e7b      	subs	r3, r7, #1
 80121cc:	9304      	str	r3, [sp, #16]
 80121ce:	4620      	mov	r0, r4
 80121d0:	4b7d      	ldr	r3, [pc, #500]	@ (80123c8 <_dtoa_r+0x5c8>)
 80121d2:	2200      	movs	r2, #0
 80121d4:	4629      	mov	r1, r5
 80121d6:	f7ee fa1f 	bl	8000618 <__aeabi_dmul>
 80121da:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80121de:	9c00      	ldr	r4, [sp, #0]
 80121e0:	3601      	adds	r6, #1
 80121e2:	4630      	mov	r0, r6
 80121e4:	f7ee f9ae 	bl	8000544 <__aeabi_i2d>
 80121e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80121ec:	f7ee fa14 	bl	8000618 <__aeabi_dmul>
 80121f0:	4b76      	ldr	r3, [pc, #472]	@ (80123cc <_dtoa_r+0x5cc>)
 80121f2:	2200      	movs	r2, #0
 80121f4:	f7ee f85a 	bl	80002ac <__adddf3>
 80121f8:	4605      	mov	r5, r0
 80121fa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80121fe:	2c00      	cmp	r4, #0
 8012200:	f040 808d 	bne.w	801231e <_dtoa_r+0x51e>
 8012204:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8012208:	4b71      	ldr	r3, [pc, #452]	@ (80123d0 <_dtoa_r+0x5d0>)
 801220a:	2200      	movs	r2, #0
 801220c:	f7ee f84c 	bl	80002a8 <__aeabi_dsub>
 8012210:	4602      	mov	r2, r0
 8012212:	460b      	mov	r3, r1
 8012214:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8012218:	462a      	mov	r2, r5
 801221a:	4633      	mov	r3, r6
 801221c:	f7ee fc8c 	bl	8000b38 <__aeabi_dcmpgt>
 8012220:	2800      	cmp	r0, #0
 8012222:	f040 828b 	bne.w	801273c <_dtoa_r+0x93c>
 8012226:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801222a:	462a      	mov	r2, r5
 801222c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8012230:	f7ee fc64 	bl	8000afc <__aeabi_dcmplt>
 8012234:	2800      	cmp	r0, #0
 8012236:	f040 8128 	bne.w	801248a <_dtoa_r+0x68a>
 801223a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 801223e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8012242:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8012244:	2b00      	cmp	r3, #0
 8012246:	f2c0 815a 	blt.w	80124fe <_dtoa_r+0x6fe>
 801224a:	2f0e      	cmp	r7, #14
 801224c:	f300 8157 	bgt.w	80124fe <_dtoa_r+0x6fe>
 8012250:	4b5a      	ldr	r3, [pc, #360]	@ (80123bc <_dtoa_r+0x5bc>)
 8012252:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8012256:	ed93 7b00 	vldr	d7, [r3]
 801225a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801225c:	2b00      	cmp	r3, #0
 801225e:	ed8d 7b00 	vstr	d7, [sp]
 8012262:	da03      	bge.n	801226c <_dtoa_r+0x46c>
 8012264:	9b07      	ldr	r3, [sp, #28]
 8012266:	2b00      	cmp	r3, #0
 8012268:	f340 8101 	ble.w	801246e <_dtoa_r+0x66e>
 801226c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8012270:	4656      	mov	r6, sl
 8012272:	e9dd 2300 	ldrd	r2, r3, [sp]
 8012276:	4620      	mov	r0, r4
 8012278:	4629      	mov	r1, r5
 801227a:	f7ee faf7 	bl	800086c <__aeabi_ddiv>
 801227e:	f7ee fc7b 	bl	8000b78 <__aeabi_d2iz>
 8012282:	4680      	mov	r8, r0
 8012284:	f7ee f95e 	bl	8000544 <__aeabi_i2d>
 8012288:	e9dd 2300 	ldrd	r2, r3, [sp]
 801228c:	f7ee f9c4 	bl	8000618 <__aeabi_dmul>
 8012290:	4602      	mov	r2, r0
 8012292:	460b      	mov	r3, r1
 8012294:	4620      	mov	r0, r4
 8012296:	4629      	mov	r1, r5
 8012298:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801229c:	f7ee f804 	bl	80002a8 <__aeabi_dsub>
 80122a0:	f806 4b01 	strb.w	r4, [r6], #1
 80122a4:	9d07      	ldr	r5, [sp, #28]
 80122a6:	eba6 040a 	sub.w	r4, r6, sl
 80122aa:	42a5      	cmp	r5, r4
 80122ac:	4602      	mov	r2, r0
 80122ae:	460b      	mov	r3, r1
 80122b0:	f040 8117 	bne.w	80124e2 <_dtoa_r+0x6e2>
 80122b4:	f7ed fffa 	bl	80002ac <__adddf3>
 80122b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80122bc:	4604      	mov	r4, r0
 80122be:	460d      	mov	r5, r1
 80122c0:	f7ee fc3a 	bl	8000b38 <__aeabi_dcmpgt>
 80122c4:	2800      	cmp	r0, #0
 80122c6:	f040 80f9 	bne.w	80124bc <_dtoa_r+0x6bc>
 80122ca:	e9dd 2300 	ldrd	r2, r3, [sp]
 80122ce:	4620      	mov	r0, r4
 80122d0:	4629      	mov	r1, r5
 80122d2:	f7ee fc09 	bl	8000ae8 <__aeabi_dcmpeq>
 80122d6:	b118      	cbz	r0, 80122e0 <_dtoa_r+0x4e0>
 80122d8:	f018 0f01 	tst.w	r8, #1
 80122dc:	f040 80ee 	bne.w	80124bc <_dtoa_r+0x6bc>
 80122e0:	4649      	mov	r1, r9
 80122e2:	4658      	mov	r0, fp
 80122e4:	f000 fbec 	bl	8012ac0 <_Bfree>
 80122e8:	2300      	movs	r3, #0
 80122ea:	7033      	strb	r3, [r6, #0]
 80122ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80122ee:	3701      	adds	r7, #1
 80122f0:	601f      	str	r7, [r3, #0]
 80122f2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80122f4:	2b00      	cmp	r3, #0
 80122f6:	f000 831d 	beq.w	8012934 <_dtoa_r+0xb34>
 80122fa:	601e      	str	r6, [r3, #0]
 80122fc:	e31a      	b.n	8012934 <_dtoa_r+0xb34>
 80122fe:	07e2      	lsls	r2, r4, #31
 8012300:	d505      	bpl.n	801230e <_dtoa_r+0x50e>
 8012302:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012306:	f7ee f987 	bl	8000618 <__aeabi_dmul>
 801230a:	3601      	adds	r6, #1
 801230c:	2301      	movs	r3, #1
 801230e:	1064      	asrs	r4, r4, #1
 8012310:	3508      	adds	r5, #8
 8012312:	e73f      	b.n	8012194 <_dtoa_r+0x394>
 8012314:	2602      	movs	r6, #2
 8012316:	e742      	b.n	801219e <_dtoa_r+0x39e>
 8012318:	9c07      	ldr	r4, [sp, #28]
 801231a:	9704      	str	r7, [sp, #16]
 801231c:	e761      	b.n	80121e2 <_dtoa_r+0x3e2>
 801231e:	4b27      	ldr	r3, [pc, #156]	@ (80123bc <_dtoa_r+0x5bc>)
 8012320:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012322:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8012326:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801232a:	4454      	add	r4, sl
 801232c:	2900      	cmp	r1, #0
 801232e:	d053      	beq.n	80123d8 <_dtoa_r+0x5d8>
 8012330:	4928      	ldr	r1, [pc, #160]	@ (80123d4 <_dtoa_r+0x5d4>)
 8012332:	2000      	movs	r0, #0
 8012334:	f7ee fa9a 	bl	800086c <__aeabi_ddiv>
 8012338:	4633      	mov	r3, r6
 801233a:	462a      	mov	r2, r5
 801233c:	f7ed ffb4 	bl	80002a8 <__aeabi_dsub>
 8012340:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8012344:	4656      	mov	r6, sl
 8012346:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801234a:	f7ee fc15 	bl	8000b78 <__aeabi_d2iz>
 801234e:	4605      	mov	r5, r0
 8012350:	f7ee f8f8 	bl	8000544 <__aeabi_i2d>
 8012354:	4602      	mov	r2, r0
 8012356:	460b      	mov	r3, r1
 8012358:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801235c:	f7ed ffa4 	bl	80002a8 <__aeabi_dsub>
 8012360:	3530      	adds	r5, #48	@ 0x30
 8012362:	4602      	mov	r2, r0
 8012364:	460b      	mov	r3, r1
 8012366:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801236a:	f806 5b01 	strb.w	r5, [r6], #1
 801236e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8012372:	f7ee fbc3 	bl	8000afc <__aeabi_dcmplt>
 8012376:	2800      	cmp	r0, #0
 8012378:	d171      	bne.n	801245e <_dtoa_r+0x65e>
 801237a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801237e:	4911      	ldr	r1, [pc, #68]	@ (80123c4 <_dtoa_r+0x5c4>)
 8012380:	2000      	movs	r0, #0
 8012382:	f7ed ff91 	bl	80002a8 <__aeabi_dsub>
 8012386:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801238a:	f7ee fbb7 	bl	8000afc <__aeabi_dcmplt>
 801238e:	2800      	cmp	r0, #0
 8012390:	f040 8095 	bne.w	80124be <_dtoa_r+0x6be>
 8012394:	42a6      	cmp	r6, r4
 8012396:	f43f af50 	beq.w	801223a <_dtoa_r+0x43a>
 801239a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801239e:	4b0a      	ldr	r3, [pc, #40]	@ (80123c8 <_dtoa_r+0x5c8>)
 80123a0:	2200      	movs	r2, #0
 80123a2:	f7ee f939 	bl	8000618 <__aeabi_dmul>
 80123a6:	4b08      	ldr	r3, [pc, #32]	@ (80123c8 <_dtoa_r+0x5c8>)
 80123a8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80123ac:	2200      	movs	r2, #0
 80123ae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80123b2:	f7ee f931 	bl	8000618 <__aeabi_dmul>
 80123b6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80123ba:	e7c4      	b.n	8012346 <_dtoa_r+0x546>
 80123bc:	08015980 	.word	0x08015980
 80123c0:	08015958 	.word	0x08015958
 80123c4:	3ff00000 	.word	0x3ff00000
 80123c8:	40240000 	.word	0x40240000
 80123cc:	401c0000 	.word	0x401c0000
 80123d0:	40140000 	.word	0x40140000
 80123d4:	3fe00000 	.word	0x3fe00000
 80123d8:	4631      	mov	r1, r6
 80123da:	4628      	mov	r0, r5
 80123dc:	f7ee f91c 	bl	8000618 <__aeabi_dmul>
 80123e0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80123e4:	9415      	str	r4, [sp, #84]	@ 0x54
 80123e6:	4656      	mov	r6, sl
 80123e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80123ec:	f7ee fbc4 	bl	8000b78 <__aeabi_d2iz>
 80123f0:	4605      	mov	r5, r0
 80123f2:	f7ee f8a7 	bl	8000544 <__aeabi_i2d>
 80123f6:	4602      	mov	r2, r0
 80123f8:	460b      	mov	r3, r1
 80123fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80123fe:	f7ed ff53 	bl	80002a8 <__aeabi_dsub>
 8012402:	3530      	adds	r5, #48	@ 0x30
 8012404:	f806 5b01 	strb.w	r5, [r6], #1
 8012408:	4602      	mov	r2, r0
 801240a:	460b      	mov	r3, r1
 801240c:	42a6      	cmp	r6, r4
 801240e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8012412:	f04f 0200 	mov.w	r2, #0
 8012416:	d124      	bne.n	8012462 <_dtoa_r+0x662>
 8012418:	4bac      	ldr	r3, [pc, #688]	@ (80126cc <_dtoa_r+0x8cc>)
 801241a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801241e:	f7ed ff45 	bl	80002ac <__adddf3>
 8012422:	4602      	mov	r2, r0
 8012424:	460b      	mov	r3, r1
 8012426:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801242a:	f7ee fb85 	bl	8000b38 <__aeabi_dcmpgt>
 801242e:	2800      	cmp	r0, #0
 8012430:	d145      	bne.n	80124be <_dtoa_r+0x6be>
 8012432:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8012436:	49a5      	ldr	r1, [pc, #660]	@ (80126cc <_dtoa_r+0x8cc>)
 8012438:	2000      	movs	r0, #0
 801243a:	f7ed ff35 	bl	80002a8 <__aeabi_dsub>
 801243e:	4602      	mov	r2, r0
 8012440:	460b      	mov	r3, r1
 8012442:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8012446:	f7ee fb59 	bl	8000afc <__aeabi_dcmplt>
 801244a:	2800      	cmp	r0, #0
 801244c:	f43f aef5 	beq.w	801223a <_dtoa_r+0x43a>
 8012450:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8012452:	1e73      	subs	r3, r6, #1
 8012454:	9315      	str	r3, [sp, #84]	@ 0x54
 8012456:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 801245a:	2b30      	cmp	r3, #48	@ 0x30
 801245c:	d0f8      	beq.n	8012450 <_dtoa_r+0x650>
 801245e:	9f04      	ldr	r7, [sp, #16]
 8012460:	e73e      	b.n	80122e0 <_dtoa_r+0x4e0>
 8012462:	4b9b      	ldr	r3, [pc, #620]	@ (80126d0 <_dtoa_r+0x8d0>)
 8012464:	f7ee f8d8 	bl	8000618 <__aeabi_dmul>
 8012468:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801246c:	e7bc      	b.n	80123e8 <_dtoa_r+0x5e8>
 801246e:	d10c      	bne.n	801248a <_dtoa_r+0x68a>
 8012470:	4b98      	ldr	r3, [pc, #608]	@ (80126d4 <_dtoa_r+0x8d4>)
 8012472:	2200      	movs	r2, #0
 8012474:	e9dd 0100 	ldrd	r0, r1, [sp]
 8012478:	f7ee f8ce 	bl	8000618 <__aeabi_dmul>
 801247c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8012480:	f7ee fb50 	bl	8000b24 <__aeabi_dcmpge>
 8012484:	2800      	cmp	r0, #0
 8012486:	f000 8157 	beq.w	8012738 <_dtoa_r+0x938>
 801248a:	2400      	movs	r4, #0
 801248c:	4625      	mov	r5, r4
 801248e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012490:	43db      	mvns	r3, r3
 8012492:	9304      	str	r3, [sp, #16]
 8012494:	4656      	mov	r6, sl
 8012496:	2700      	movs	r7, #0
 8012498:	4621      	mov	r1, r4
 801249a:	4658      	mov	r0, fp
 801249c:	f000 fb10 	bl	8012ac0 <_Bfree>
 80124a0:	2d00      	cmp	r5, #0
 80124a2:	d0dc      	beq.n	801245e <_dtoa_r+0x65e>
 80124a4:	b12f      	cbz	r7, 80124b2 <_dtoa_r+0x6b2>
 80124a6:	42af      	cmp	r7, r5
 80124a8:	d003      	beq.n	80124b2 <_dtoa_r+0x6b2>
 80124aa:	4639      	mov	r1, r7
 80124ac:	4658      	mov	r0, fp
 80124ae:	f000 fb07 	bl	8012ac0 <_Bfree>
 80124b2:	4629      	mov	r1, r5
 80124b4:	4658      	mov	r0, fp
 80124b6:	f000 fb03 	bl	8012ac0 <_Bfree>
 80124ba:	e7d0      	b.n	801245e <_dtoa_r+0x65e>
 80124bc:	9704      	str	r7, [sp, #16]
 80124be:	4633      	mov	r3, r6
 80124c0:	461e      	mov	r6, r3
 80124c2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80124c6:	2a39      	cmp	r2, #57	@ 0x39
 80124c8:	d107      	bne.n	80124da <_dtoa_r+0x6da>
 80124ca:	459a      	cmp	sl, r3
 80124cc:	d1f8      	bne.n	80124c0 <_dtoa_r+0x6c0>
 80124ce:	9a04      	ldr	r2, [sp, #16]
 80124d0:	3201      	adds	r2, #1
 80124d2:	9204      	str	r2, [sp, #16]
 80124d4:	2230      	movs	r2, #48	@ 0x30
 80124d6:	f88a 2000 	strb.w	r2, [sl]
 80124da:	781a      	ldrb	r2, [r3, #0]
 80124dc:	3201      	adds	r2, #1
 80124de:	701a      	strb	r2, [r3, #0]
 80124e0:	e7bd      	b.n	801245e <_dtoa_r+0x65e>
 80124e2:	4b7b      	ldr	r3, [pc, #492]	@ (80126d0 <_dtoa_r+0x8d0>)
 80124e4:	2200      	movs	r2, #0
 80124e6:	f7ee f897 	bl	8000618 <__aeabi_dmul>
 80124ea:	2200      	movs	r2, #0
 80124ec:	2300      	movs	r3, #0
 80124ee:	4604      	mov	r4, r0
 80124f0:	460d      	mov	r5, r1
 80124f2:	f7ee faf9 	bl	8000ae8 <__aeabi_dcmpeq>
 80124f6:	2800      	cmp	r0, #0
 80124f8:	f43f aebb 	beq.w	8012272 <_dtoa_r+0x472>
 80124fc:	e6f0      	b.n	80122e0 <_dtoa_r+0x4e0>
 80124fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012500:	2a00      	cmp	r2, #0
 8012502:	f000 80db 	beq.w	80126bc <_dtoa_r+0x8bc>
 8012506:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012508:	2a01      	cmp	r2, #1
 801250a:	f300 80bf 	bgt.w	801268c <_dtoa_r+0x88c>
 801250e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012510:	2a00      	cmp	r2, #0
 8012512:	f000 80b7 	beq.w	8012684 <_dtoa_r+0x884>
 8012516:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 801251a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801251c:	4646      	mov	r6, r8
 801251e:	9a08      	ldr	r2, [sp, #32]
 8012520:	2101      	movs	r1, #1
 8012522:	441a      	add	r2, r3
 8012524:	4658      	mov	r0, fp
 8012526:	4498      	add	r8, r3
 8012528:	9208      	str	r2, [sp, #32]
 801252a:	f000 fb7d 	bl	8012c28 <__i2b>
 801252e:	4605      	mov	r5, r0
 8012530:	b15e      	cbz	r6, 801254a <_dtoa_r+0x74a>
 8012532:	9b08      	ldr	r3, [sp, #32]
 8012534:	2b00      	cmp	r3, #0
 8012536:	dd08      	ble.n	801254a <_dtoa_r+0x74a>
 8012538:	42b3      	cmp	r3, r6
 801253a:	9a08      	ldr	r2, [sp, #32]
 801253c:	bfa8      	it	ge
 801253e:	4633      	movge	r3, r6
 8012540:	eba8 0803 	sub.w	r8, r8, r3
 8012544:	1af6      	subs	r6, r6, r3
 8012546:	1ad3      	subs	r3, r2, r3
 8012548:	9308      	str	r3, [sp, #32]
 801254a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801254c:	b1f3      	cbz	r3, 801258c <_dtoa_r+0x78c>
 801254e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012550:	2b00      	cmp	r3, #0
 8012552:	f000 80b7 	beq.w	80126c4 <_dtoa_r+0x8c4>
 8012556:	b18c      	cbz	r4, 801257c <_dtoa_r+0x77c>
 8012558:	4629      	mov	r1, r5
 801255a:	4622      	mov	r2, r4
 801255c:	4658      	mov	r0, fp
 801255e:	f000 fc23 	bl	8012da8 <__pow5mult>
 8012562:	464a      	mov	r2, r9
 8012564:	4601      	mov	r1, r0
 8012566:	4605      	mov	r5, r0
 8012568:	4658      	mov	r0, fp
 801256a:	f000 fb73 	bl	8012c54 <__multiply>
 801256e:	4649      	mov	r1, r9
 8012570:	9004      	str	r0, [sp, #16]
 8012572:	4658      	mov	r0, fp
 8012574:	f000 faa4 	bl	8012ac0 <_Bfree>
 8012578:	9b04      	ldr	r3, [sp, #16]
 801257a:	4699      	mov	r9, r3
 801257c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801257e:	1b1a      	subs	r2, r3, r4
 8012580:	d004      	beq.n	801258c <_dtoa_r+0x78c>
 8012582:	4649      	mov	r1, r9
 8012584:	4658      	mov	r0, fp
 8012586:	f000 fc0f 	bl	8012da8 <__pow5mult>
 801258a:	4681      	mov	r9, r0
 801258c:	2101      	movs	r1, #1
 801258e:	4658      	mov	r0, fp
 8012590:	f000 fb4a 	bl	8012c28 <__i2b>
 8012594:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012596:	4604      	mov	r4, r0
 8012598:	2b00      	cmp	r3, #0
 801259a:	f000 81cf 	beq.w	801293c <_dtoa_r+0xb3c>
 801259e:	461a      	mov	r2, r3
 80125a0:	4601      	mov	r1, r0
 80125a2:	4658      	mov	r0, fp
 80125a4:	f000 fc00 	bl	8012da8 <__pow5mult>
 80125a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80125aa:	2b01      	cmp	r3, #1
 80125ac:	4604      	mov	r4, r0
 80125ae:	f300 8095 	bgt.w	80126dc <_dtoa_r+0x8dc>
 80125b2:	9b02      	ldr	r3, [sp, #8]
 80125b4:	2b00      	cmp	r3, #0
 80125b6:	f040 8087 	bne.w	80126c8 <_dtoa_r+0x8c8>
 80125ba:	9b03      	ldr	r3, [sp, #12]
 80125bc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80125c0:	2b00      	cmp	r3, #0
 80125c2:	f040 8089 	bne.w	80126d8 <_dtoa_r+0x8d8>
 80125c6:	9b03      	ldr	r3, [sp, #12]
 80125c8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80125cc:	0d1b      	lsrs	r3, r3, #20
 80125ce:	051b      	lsls	r3, r3, #20
 80125d0:	b12b      	cbz	r3, 80125de <_dtoa_r+0x7de>
 80125d2:	9b08      	ldr	r3, [sp, #32]
 80125d4:	3301      	adds	r3, #1
 80125d6:	9308      	str	r3, [sp, #32]
 80125d8:	f108 0801 	add.w	r8, r8, #1
 80125dc:	2301      	movs	r3, #1
 80125de:	930a      	str	r3, [sp, #40]	@ 0x28
 80125e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80125e2:	2b00      	cmp	r3, #0
 80125e4:	f000 81b0 	beq.w	8012948 <_dtoa_r+0xb48>
 80125e8:	6923      	ldr	r3, [r4, #16]
 80125ea:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80125ee:	6918      	ldr	r0, [r3, #16]
 80125f0:	f000 face 	bl	8012b90 <__hi0bits>
 80125f4:	f1c0 0020 	rsb	r0, r0, #32
 80125f8:	9b08      	ldr	r3, [sp, #32]
 80125fa:	4418      	add	r0, r3
 80125fc:	f010 001f 	ands.w	r0, r0, #31
 8012600:	d077      	beq.n	80126f2 <_dtoa_r+0x8f2>
 8012602:	f1c0 0320 	rsb	r3, r0, #32
 8012606:	2b04      	cmp	r3, #4
 8012608:	dd6b      	ble.n	80126e2 <_dtoa_r+0x8e2>
 801260a:	9b08      	ldr	r3, [sp, #32]
 801260c:	f1c0 001c 	rsb	r0, r0, #28
 8012610:	4403      	add	r3, r0
 8012612:	4480      	add	r8, r0
 8012614:	4406      	add	r6, r0
 8012616:	9308      	str	r3, [sp, #32]
 8012618:	f1b8 0f00 	cmp.w	r8, #0
 801261c:	dd05      	ble.n	801262a <_dtoa_r+0x82a>
 801261e:	4649      	mov	r1, r9
 8012620:	4642      	mov	r2, r8
 8012622:	4658      	mov	r0, fp
 8012624:	f000 fc1a 	bl	8012e5c <__lshift>
 8012628:	4681      	mov	r9, r0
 801262a:	9b08      	ldr	r3, [sp, #32]
 801262c:	2b00      	cmp	r3, #0
 801262e:	dd05      	ble.n	801263c <_dtoa_r+0x83c>
 8012630:	4621      	mov	r1, r4
 8012632:	461a      	mov	r2, r3
 8012634:	4658      	mov	r0, fp
 8012636:	f000 fc11 	bl	8012e5c <__lshift>
 801263a:	4604      	mov	r4, r0
 801263c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801263e:	2b00      	cmp	r3, #0
 8012640:	d059      	beq.n	80126f6 <_dtoa_r+0x8f6>
 8012642:	4621      	mov	r1, r4
 8012644:	4648      	mov	r0, r9
 8012646:	f000 fc75 	bl	8012f34 <__mcmp>
 801264a:	2800      	cmp	r0, #0
 801264c:	da53      	bge.n	80126f6 <_dtoa_r+0x8f6>
 801264e:	1e7b      	subs	r3, r7, #1
 8012650:	9304      	str	r3, [sp, #16]
 8012652:	4649      	mov	r1, r9
 8012654:	2300      	movs	r3, #0
 8012656:	220a      	movs	r2, #10
 8012658:	4658      	mov	r0, fp
 801265a:	f000 fa53 	bl	8012b04 <__multadd>
 801265e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012660:	4681      	mov	r9, r0
 8012662:	2b00      	cmp	r3, #0
 8012664:	f000 8172 	beq.w	801294c <_dtoa_r+0xb4c>
 8012668:	2300      	movs	r3, #0
 801266a:	4629      	mov	r1, r5
 801266c:	220a      	movs	r2, #10
 801266e:	4658      	mov	r0, fp
 8012670:	f000 fa48 	bl	8012b04 <__multadd>
 8012674:	9b00      	ldr	r3, [sp, #0]
 8012676:	2b00      	cmp	r3, #0
 8012678:	4605      	mov	r5, r0
 801267a:	dc67      	bgt.n	801274c <_dtoa_r+0x94c>
 801267c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801267e:	2b02      	cmp	r3, #2
 8012680:	dc41      	bgt.n	8012706 <_dtoa_r+0x906>
 8012682:	e063      	b.n	801274c <_dtoa_r+0x94c>
 8012684:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8012686:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 801268a:	e746      	b.n	801251a <_dtoa_r+0x71a>
 801268c:	9b07      	ldr	r3, [sp, #28]
 801268e:	1e5c      	subs	r4, r3, #1
 8012690:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012692:	42a3      	cmp	r3, r4
 8012694:	bfbf      	itttt	lt
 8012696:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8012698:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 801269a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 801269c:	1ae3      	sublt	r3, r4, r3
 801269e:	bfb4      	ite	lt
 80126a0:	18d2      	addlt	r2, r2, r3
 80126a2:	1b1c      	subge	r4, r3, r4
 80126a4:	9b07      	ldr	r3, [sp, #28]
 80126a6:	bfbc      	itt	lt
 80126a8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 80126aa:	2400      	movlt	r4, #0
 80126ac:	2b00      	cmp	r3, #0
 80126ae:	bfb5      	itete	lt
 80126b0:	eba8 0603 	sublt.w	r6, r8, r3
 80126b4:	9b07      	ldrge	r3, [sp, #28]
 80126b6:	2300      	movlt	r3, #0
 80126b8:	4646      	movge	r6, r8
 80126ba:	e730      	b.n	801251e <_dtoa_r+0x71e>
 80126bc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80126be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80126c0:	4646      	mov	r6, r8
 80126c2:	e735      	b.n	8012530 <_dtoa_r+0x730>
 80126c4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80126c6:	e75c      	b.n	8012582 <_dtoa_r+0x782>
 80126c8:	2300      	movs	r3, #0
 80126ca:	e788      	b.n	80125de <_dtoa_r+0x7de>
 80126cc:	3fe00000 	.word	0x3fe00000
 80126d0:	40240000 	.word	0x40240000
 80126d4:	40140000 	.word	0x40140000
 80126d8:	9b02      	ldr	r3, [sp, #8]
 80126da:	e780      	b.n	80125de <_dtoa_r+0x7de>
 80126dc:	2300      	movs	r3, #0
 80126de:	930a      	str	r3, [sp, #40]	@ 0x28
 80126e0:	e782      	b.n	80125e8 <_dtoa_r+0x7e8>
 80126e2:	d099      	beq.n	8012618 <_dtoa_r+0x818>
 80126e4:	9a08      	ldr	r2, [sp, #32]
 80126e6:	331c      	adds	r3, #28
 80126e8:	441a      	add	r2, r3
 80126ea:	4498      	add	r8, r3
 80126ec:	441e      	add	r6, r3
 80126ee:	9208      	str	r2, [sp, #32]
 80126f0:	e792      	b.n	8012618 <_dtoa_r+0x818>
 80126f2:	4603      	mov	r3, r0
 80126f4:	e7f6      	b.n	80126e4 <_dtoa_r+0x8e4>
 80126f6:	9b07      	ldr	r3, [sp, #28]
 80126f8:	9704      	str	r7, [sp, #16]
 80126fa:	2b00      	cmp	r3, #0
 80126fc:	dc20      	bgt.n	8012740 <_dtoa_r+0x940>
 80126fe:	9300      	str	r3, [sp, #0]
 8012700:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012702:	2b02      	cmp	r3, #2
 8012704:	dd1e      	ble.n	8012744 <_dtoa_r+0x944>
 8012706:	9b00      	ldr	r3, [sp, #0]
 8012708:	2b00      	cmp	r3, #0
 801270a:	f47f aec0 	bne.w	801248e <_dtoa_r+0x68e>
 801270e:	4621      	mov	r1, r4
 8012710:	2205      	movs	r2, #5
 8012712:	4658      	mov	r0, fp
 8012714:	f000 f9f6 	bl	8012b04 <__multadd>
 8012718:	4601      	mov	r1, r0
 801271a:	4604      	mov	r4, r0
 801271c:	4648      	mov	r0, r9
 801271e:	f000 fc09 	bl	8012f34 <__mcmp>
 8012722:	2800      	cmp	r0, #0
 8012724:	f77f aeb3 	ble.w	801248e <_dtoa_r+0x68e>
 8012728:	4656      	mov	r6, sl
 801272a:	2331      	movs	r3, #49	@ 0x31
 801272c:	f806 3b01 	strb.w	r3, [r6], #1
 8012730:	9b04      	ldr	r3, [sp, #16]
 8012732:	3301      	adds	r3, #1
 8012734:	9304      	str	r3, [sp, #16]
 8012736:	e6ae      	b.n	8012496 <_dtoa_r+0x696>
 8012738:	9c07      	ldr	r4, [sp, #28]
 801273a:	9704      	str	r7, [sp, #16]
 801273c:	4625      	mov	r5, r4
 801273e:	e7f3      	b.n	8012728 <_dtoa_r+0x928>
 8012740:	9b07      	ldr	r3, [sp, #28]
 8012742:	9300      	str	r3, [sp, #0]
 8012744:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012746:	2b00      	cmp	r3, #0
 8012748:	f000 8104 	beq.w	8012954 <_dtoa_r+0xb54>
 801274c:	2e00      	cmp	r6, #0
 801274e:	dd05      	ble.n	801275c <_dtoa_r+0x95c>
 8012750:	4629      	mov	r1, r5
 8012752:	4632      	mov	r2, r6
 8012754:	4658      	mov	r0, fp
 8012756:	f000 fb81 	bl	8012e5c <__lshift>
 801275a:	4605      	mov	r5, r0
 801275c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801275e:	2b00      	cmp	r3, #0
 8012760:	d05a      	beq.n	8012818 <_dtoa_r+0xa18>
 8012762:	6869      	ldr	r1, [r5, #4]
 8012764:	4658      	mov	r0, fp
 8012766:	f000 f96b 	bl	8012a40 <_Balloc>
 801276a:	4606      	mov	r6, r0
 801276c:	b928      	cbnz	r0, 801277a <_dtoa_r+0x97a>
 801276e:	4b84      	ldr	r3, [pc, #528]	@ (8012980 <_dtoa_r+0xb80>)
 8012770:	4602      	mov	r2, r0
 8012772:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8012776:	f7ff bb5a 	b.w	8011e2e <_dtoa_r+0x2e>
 801277a:	692a      	ldr	r2, [r5, #16]
 801277c:	3202      	adds	r2, #2
 801277e:	0092      	lsls	r2, r2, #2
 8012780:	f105 010c 	add.w	r1, r5, #12
 8012784:	300c      	adds	r0, #12
 8012786:	f7ff fa87 	bl	8011c98 <memcpy>
 801278a:	2201      	movs	r2, #1
 801278c:	4631      	mov	r1, r6
 801278e:	4658      	mov	r0, fp
 8012790:	f000 fb64 	bl	8012e5c <__lshift>
 8012794:	f10a 0301 	add.w	r3, sl, #1
 8012798:	9307      	str	r3, [sp, #28]
 801279a:	9b00      	ldr	r3, [sp, #0]
 801279c:	4453      	add	r3, sl
 801279e:	930b      	str	r3, [sp, #44]	@ 0x2c
 80127a0:	9b02      	ldr	r3, [sp, #8]
 80127a2:	f003 0301 	and.w	r3, r3, #1
 80127a6:	462f      	mov	r7, r5
 80127a8:	930a      	str	r3, [sp, #40]	@ 0x28
 80127aa:	4605      	mov	r5, r0
 80127ac:	9b07      	ldr	r3, [sp, #28]
 80127ae:	4621      	mov	r1, r4
 80127b0:	3b01      	subs	r3, #1
 80127b2:	4648      	mov	r0, r9
 80127b4:	9300      	str	r3, [sp, #0]
 80127b6:	f7ff fa9b 	bl	8011cf0 <quorem>
 80127ba:	4639      	mov	r1, r7
 80127bc:	9002      	str	r0, [sp, #8]
 80127be:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80127c2:	4648      	mov	r0, r9
 80127c4:	f000 fbb6 	bl	8012f34 <__mcmp>
 80127c8:	462a      	mov	r2, r5
 80127ca:	9008      	str	r0, [sp, #32]
 80127cc:	4621      	mov	r1, r4
 80127ce:	4658      	mov	r0, fp
 80127d0:	f000 fbcc 	bl	8012f6c <__mdiff>
 80127d4:	68c2      	ldr	r2, [r0, #12]
 80127d6:	4606      	mov	r6, r0
 80127d8:	bb02      	cbnz	r2, 801281c <_dtoa_r+0xa1c>
 80127da:	4601      	mov	r1, r0
 80127dc:	4648      	mov	r0, r9
 80127de:	f000 fba9 	bl	8012f34 <__mcmp>
 80127e2:	4602      	mov	r2, r0
 80127e4:	4631      	mov	r1, r6
 80127e6:	4658      	mov	r0, fp
 80127e8:	920e      	str	r2, [sp, #56]	@ 0x38
 80127ea:	f000 f969 	bl	8012ac0 <_Bfree>
 80127ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80127f0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80127f2:	9e07      	ldr	r6, [sp, #28]
 80127f4:	ea43 0102 	orr.w	r1, r3, r2
 80127f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80127fa:	4319      	orrs	r1, r3
 80127fc:	d110      	bne.n	8012820 <_dtoa_r+0xa20>
 80127fe:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8012802:	d029      	beq.n	8012858 <_dtoa_r+0xa58>
 8012804:	9b08      	ldr	r3, [sp, #32]
 8012806:	2b00      	cmp	r3, #0
 8012808:	dd02      	ble.n	8012810 <_dtoa_r+0xa10>
 801280a:	9b02      	ldr	r3, [sp, #8]
 801280c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8012810:	9b00      	ldr	r3, [sp, #0]
 8012812:	f883 8000 	strb.w	r8, [r3]
 8012816:	e63f      	b.n	8012498 <_dtoa_r+0x698>
 8012818:	4628      	mov	r0, r5
 801281a:	e7bb      	b.n	8012794 <_dtoa_r+0x994>
 801281c:	2201      	movs	r2, #1
 801281e:	e7e1      	b.n	80127e4 <_dtoa_r+0x9e4>
 8012820:	9b08      	ldr	r3, [sp, #32]
 8012822:	2b00      	cmp	r3, #0
 8012824:	db04      	blt.n	8012830 <_dtoa_r+0xa30>
 8012826:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8012828:	430b      	orrs	r3, r1
 801282a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801282c:	430b      	orrs	r3, r1
 801282e:	d120      	bne.n	8012872 <_dtoa_r+0xa72>
 8012830:	2a00      	cmp	r2, #0
 8012832:	dded      	ble.n	8012810 <_dtoa_r+0xa10>
 8012834:	4649      	mov	r1, r9
 8012836:	2201      	movs	r2, #1
 8012838:	4658      	mov	r0, fp
 801283a:	f000 fb0f 	bl	8012e5c <__lshift>
 801283e:	4621      	mov	r1, r4
 8012840:	4681      	mov	r9, r0
 8012842:	f000 fb77 	bl	8012f34 <__mcmp>
 8012846:	2800      	cmp	r0, #0
 8012848:	dc03      	bgt.n	8012852 <_dtoa_r+0xa52>
 801284a:	d1e1      	bne.n	8012810 <_dtoa_r+0xa10>
 801284c:	f018 0f01 	tst.w	r8, #1
 8012850:	d0de      	beq.n	8012810 <_dtoa_r+0xa10>
 8012852:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8012856:	d1d8      	bne.n	801280a <_dtoa_r+0xa0a>
 8012858:	9a00      	ldr	r2, [sp, #0]
 801285a:	2339      	movs	r3, #57	@ 0x39
 801285c:	7013      	strb	r3, [r2, #0]
 801285e:	4633      	mov	r3, r6
 8012860:	461e      	mov	r6, r3
 8012862:	3b01      	subs	r3, #1
 8012864:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8012868:	2a39      	cmp	r2, #57	@ 0x39
 801286a:	d052      	beq.n	8012912 <_dtoa_r+0xb12>
 801286c:	3201      	adds	r2, #1
 801286e:	701a      	strb	r2, [r3, #0]
 8012870:	e612      	b.n	8012498 <_dtoa_r+0x698>
 8012872:	2a00      	cmp	r2, #0
 8012874:	dd07      	ble.n	8012886 <_dtoa_r+0xa86>
 8012876:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801287a:	d0ed      	beq.n	8012858 <_dtoa_r+0xa58>
 801287c:	9a00      	ldr	r2, [sp, #0]
 801287e:	f108 0301 	add.w	r3, r8, #1
 8012882:	7013      	strb	r3, [r2, #0]
 8012884:	e608      	b.n	8012498 <_dtoa_r+0x698>
 8012886:	9b07      	ldr	r3, [sp, #28]
 8012888:	9a07      	ldr	r2, [sp, #28]
 801288a:	f803 8c01 	strb.w	r8, [r3, #-1]
 801288e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012890:	4293      	cmp	r3, r2
 8012892:	d028      	beq.n	80128e6 <_dtoa_r+0xae6>
 8012894:	4649      	mov	r1, r9
 8012896:	2300      	movs	r3, #0
 8012898:	220a      	movs	r2, #10
 801289a:	4658      	mov	r0, fp
 801289c:	f000 f932 	bl	8012b04 <__multadd>
 80128a0:	42af      	cmp	r7, r5
 80128a2:	4681      	mov	r9, r0
 80128a4:	f04f 0300 	mov.w	r3, #0
 80128a8:	f04f 020a 	mov.w	r2, #10
 80128ac:	4639      	mov	r1, r7
 80128ae:	4658      	mov	r0, fp
 80128b0:	d107      	bne.n	80128c2 <_dtoa_r+0xac2>
 80128b2:	f000 f927 	bl	8012b04 <__multadd>
 80128b6:	4607      	mov	r7, r0
 80128b8:	4605      	mov	r5, r0
 80128ba:	9b07      	ldr	r3, [sp, #28]
 80128bc:	3301      	adds	r3, #1
 80128be:	9307      	str	r3, [sp, #28]
 80128c0:	e774      	b.n	80127ac <_dtoa_r+0x9ac>
 80128c2:	f000 f91f 	bl	8012b04 <__multadd>
 80128c6:	4629      	mov	r1, r5
 80128c8:	4607      	mov	r7, r0
 80128ca:	2300      	movs	r3, #0
 80128cc:	220a      	movs	r2, #10
 80128ce:	4658      	mov	r0, fp
 80128d0:	f000 f918 	bl	8012b04 <__multadd>
 80128d4:	4605      	mov	r5, r0
 80128d6:	e7f0      	b.n	80128ba <_dtoa_r+0xaba>
 80128d8:	9b00      	ldr	r3, [sp, #0]
 80128da:	2b00      	cmp	r3, #0
 80128dc:	bfcc      	ite	gt
 80128de:	461e      	movgt	r6, r3
 80128e0:	2601      	movle	r6, #1
 80128e2:	4456      	add	r6, sl
 80128e4:	2700      	movs	r7, #0
 80128e6:	4649      	mov	r1, r9
 80128e8:	2201      	movs	r2, #1
 80128ea:	4658      	mov	r0, fp
 80128ec:	f000 fab6 	bl	8012e5c <__lshift>
 80128f0:	4621      	mov	r1, r4
 80128f2:	4681      	mov	r9, r0
 80128f4:	f000 fb1e 	bl	8012f34 <__mcmp>
 80128f8:	2800      	cmp	r0, #0
 80128fa:	dcb0      	bgt.n	801285e <_dtoa_r+0xa5e>
 80128fc:	d102      	bne.n	8012904 <_dtoa_r+0xb04>
 80128fe:	f018 0f01 	tst.w	r8, #1
 8012902:	d1ac      	bne.n	801285e <_dtoa_r+0xa5e>
 8012904:	4633      	mov	r3, r6
 8012906:	461e      	mov	r6, r3
 8012908:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801290c:	2a30      	cmp	r2, #48	@ 0x30
 801290e:	d0fa      	beq.n	8012906 <_dtoa_r+0xb06>
 8012910:	e5c2      	b.n	8012498 <_dtoa_r+0x698>
 8012912:	459a      	cmp	sl, r3
 8012914:	d1a4      	bne.n	8012860 <_dtoa_r+0xa60>
 8012916:	9b04      	ldr	r3, [sp, #16]
 8012918:	3301      	adds	r3, #1
 801291a:	9304      	str	r3, [sp, #16]
 801291c:	2331      	movs	r3, #49	@ 0x31
 801291e:	f88a 3000 	strb.w	r3, [sl]
 8012922:	e5b9      	b.n	8012498 <_dtoa_r+0x698>
 8012924:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8012926:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8012984 <_dtoa_r+0xb84>
 801292a:	b11b      	cbz	r3, 8012934 <_dtoa_r+0xb34>
 801292c:	f10a 0308 	add.w	r3, sl, #8
 8012930:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8012932:	6013      	str	r3, [r2, #0]
 8012934:	4650      	mov	r0, sl
 8012936:	b019      	add	sp, #100	@ 0x64
 8012938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801293c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801293e:	2b01      	cmp	r3, #1
 8012940:	f77f ae37 	ble.w	80125b2 <_dtoa_r+0x7b2>
 8012944:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012946:	930a      	str	r3, [sp, #40]	@ 0x28
 8012948:	2001      	movs	r0, #1
 801294a:	e655      	b.n	80125f8 <_dtoa_r+0x7f8>
 801294c:	9b00      	ldr	r3, [sp, #0]
 801294e:	2b00      	cmp	r3, #0
 8012950:	f77f aed6 	ble.w	8012700 <_dtoa_r+0x900>
 8012954:	4656      	mov	r6, sl
 8012956:	4621      	mov	r1, r4
 8012958:	4648      	mov	r0, r9
 801295a:	f7ff f9c9 	bl	8011cf0 <quorem>
 801295e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8012962:	f806 8b01 	strb.w	r8, [r6], #1
 8012966:	9b00      	ldr	r3, [sp, #0]
 8012968:	eba6 020a 	sub.w	r2, r6, sl
 801296c:	4293      	cmp	r3, r2
 801296e:	ddb3      	ble.n	80128d8 <_dtoa_r+0xad8>
 8012970:	4649      	mov	r1, r9
 8012972:	2300      	movs	r3, #0
 8012974:	220a      	movs	r2, #10
 8012976:	4658      	mov	r0, fp
 8012978:	f000 f8c4 	bl	8012b04 <__multadd>
 801297c:	4681      	mov	r9, r0
 801297e:	e7ea      	b.n	8012956 <_dtoa_r+0xb56>
 8012980:	080158db 	.word	0x080158db
 8012984:	08015876 	.word	0x08015876

08012988 <_free_r>:
 8012988:	b538      	push	{r3, r4, r5, lr}
 801298a:	4605      	mov	r5, r0
 801298c:	2900      	cmp	r1, #0
 801298e:	d041      	beq.n	8012a14 <_free_r+0x8c>
 8012990:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8012994:	1f0c      	subs	r4, r1, #4
 8012996:	2b00      	cmp	r3, #0
 8012998:	bfb8      	it	lt
 801299a:	18e4      	addlt	r4, r4, r3
 801299c:	f7fe f82e 	bl	80109fc <__malloc_lock>
 80129a0:	4a1d      	ldr	r2, [pc, #116]	@ (8012a18 <_free_r+0x90>)
 80129a2:	6813      	ldr	r3, [r2, #0]
 80129a4:	b933      	cbnz	r3, 80129b4 <_free_r+0x2c>
 80129a6:	6063      	str	r3, [r4, #4]
 80129a8:	6014      	str	r4, [r2, #0]
 80129aa:	4628      	mov	r0, r5
 80129ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80129b0:	f7fe b82a 	b.w	8010a08 <__malloc_unlock>
 80129b4:	42a3      	cmp	r3, r4
 80129b6:	d908      	bls.n	80129ca <_free_r+0x42>
 80129b8:	6820      	ldr	r0, [r4, #0]
 80129ba:	1821      	adds	r1, r4, r0
 80129bc:	428b      	cmp	r3, r1
 80129be:	bf01      	itttt	eq
 80129c0:	6819      	ldreq	r1, [r3, #0]
 80129c2:	685b      	ldreq	r3, [r3, #4]
 80129c4:	1809      	addeq	r1, r1, r0
 80129c6:	6021      	streq	r1, [r4, #0]
 80129c8:	e7ed      	b.n	80129a6 <_free_r+0x1e>
 80129ca:	461a      	mov	r2, r3
 80129cc:	685b      	ldr	r3, [r3, #4]
 80129ce:	b10b      	cbz	r3, 80129d4 <_free_r+0x4c>
 80129d0:	42a3      	cmp	r3, r4
 80129d2:	d9fa      	bls.n	80129ca <_free_r+0x42>
 80129d4:	6811      	ldr	r1, [r2, #0]
 80129d6:	1850      	adds	r0, r2, r1
 80129d8:	42a0      	cmp	r0, r4
 80129da:	d10b      	bne.n	80129f4 <_free_r+0x6c>
 80129dc:	6820      	ldr	r0, [r4, #0]
 80129de:	4401      	add	r1, r0
 80129e0:	1850      	adds	r0, r2, r1
 80129e2:	4283      	cmp	r3, r0
 80129e4:	6011      	str	r1, [r2, #0]
 80129e6:	d1e0      	bne.n	80129aa <_free_r+0x22>
 80129e8:	6818      	ldr	r0, [r3, #0]
 80129ea:	685b      	ldr	r3, [r3, #4]
 80129ec:	6053      	str	r3, [r2, #4]
 80129ee:	4408      	add	r0, r1
 80129f0:	6010      	str	r0, [r2, #0]
 80129f2:	e7da      	b.n	80129aa <_free_r+0x22>
 80129f4:	d902      	bls.n	80129fc <_free_r+0x74>
 80129f6:	230c      	movs	r3, #12
 80129f8:	602b      	str	r3, [r5, #0]
 80129fa:	e7d6      	b.n	80129aa <_free_r+0x22>
 80129fc:	6820      	ldr	r0, [r4, #0]
 80129fe:	1821      	adds	r1, r4, r0
 8012a00:	428b      	cmp	r3, r1
 8012a02:	bf04      	itt	eq
 8012a04:	6819      	ldreq	r1, [r3, #0]
 8012a06:	685b      	ldreq	r3, [r3, #4]
 8012a08:	6063      	str	r3, [r4, #4]
 8012a0a:	bf04      	itt	eq
 8012a0c:	1809      	addeq	r1, r1, r0
 8012a0e:	6021      	streq	r1, [r4, #0]
 8012a10:	6054      	str	r4, [r2, #4]
 8012a12:	e7ca      	b.n	80129aa <_free_r+0x22>
 8012a14:	bd38      	pop	{r3, r4, r5, pc}
 8012a16:	bf00      	nop
 8012a18:	20006c7c 	.word	0x20006c7c

08012a1c <__ascii_mbtowc>:
 8012a1c:	b082      	sub	sp, #8
 8012a1e:	b901      	cbnz	r1, 8012a22 <__ascii_mbtowc+0x6>
 8012a20:	a901      	add	r1, sp, #4
 8012a22:	b142      	cbz	r2, 8012a36 <__ascii_mbtowc+0x1a>
 8012a24:	b14b      	cbz	r3, 8012a3a <__ascii_mbtowc+0x1e>
 8012a26:	7813      	ldrb	r3, [r2, #0]
 8012a28:	600b      	str	r3, [r1, #0]
 8012a2a:	7812      	ldrb	r2, [r2, #0]
 8012a2c:	1e10      	subs	r0, r2, #0
 8012a2e:	bf18      	it	ne
 8012a30:	2001      	movne	r0, #1
 8012a32:	b002      	add	sp, #8
 8012a34:	4770      	bx	lr
 8012a36:	4610      	mov	r0, r2
 8012a38:	e7fb      	b.n	8012a32 <__ascii_mbtowc+0x16>
 8012a3a:	f06f 0001 	mvn.w	r0, #1
 8012a3e:	e7f8      	b.n	8012a32 <__ascii_mbtowc+0x16>

08012a40 <_Balloc>:
 8012a40:	b570      	push	{r4, r5, r6, lr}
 8012a42:	69c6      	ldr	r6, [r0, #28]
 8012a44:	4604      	mov	r4, r0
 8012a46:	460d      	mov	r5, r1
 8012a48:	b976      	cbnz	r6, 8012a68 <_Balloc+0x28>
 8012a4a:	2010      	movs	r0, #16
 8012a4c:	f7fd ff24 	bl	8010898 <malloc>
 8012a50:	4602      	mov	r2, r0
 8012a52:	61e0      	str	r0, [r4, #28]
 8012a54:	b920      	cbnz	r0, 8012a60 <_Balloc+0x20>
 8012a56:	4b18      	ldr	r3, [pc, #96]	@ (8012ab8 <_Balloc+0x78>)
 8012a58:	4818      	ldr	r0, [pc, #96]	@ (8012abc <_Balloc+0x7c>)
 8012a5a:	216b      	movs	r1, #107	@ 0x6b
 8012a5c:	f7ff f92a 	bl	8011cb4 <__assert_func>
 8012a60:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8012a64:	6006      	str	r6, [r0, #0]
 8012a66:	60c6      	str	r6, [r0, #12]
 8012a68:	69e6      	ldr	r6, [r4, #28]
 8012a6a:	68f3      	ldr	r3, [r6, #12]
 8012a6c:	b183      	cbz	r3, 8012a90 <_Balloc+0x50>
 8012a6e:	69e3      	ldr	r3, [r4, #28]
 8012a70:	68db      	ldr	r3, [r3, #12]
 8012a72:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8012a76:	b9b8      	cbnz	r0, 8012aa8 <_Balloc+0x68>
 8012a78:	2101      	movs	r1, #1
 8012a7a:	fa01 f605 	lsl.w	r6, r1, r5
 8012a7e:	1d72      	adds	r2, r6, #5
 8012a80:	0092      	lsls	r2, r2, #2
 8012a82:	4620      	mov	r0, r4
 8012a84:	f7fd fef4 	bl	8010870 <_calloc_r>
 8012a88:	b160      	cbz	r0, 8012aa4 <_Balloc+0x64>
 8012a8a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8012a8e:	e00e      	b.n	8012aae <_Balloc+0x6e>
 8012a90:	2221      	movs	r2, #33	@ 0x21
 8012a92:	2104      	movs	r1, #4
 8012a94:	4620      	mov	r0, r4
 8012a96:	f7fd feeb 	bl	8010870 <_calloc_r>
 8012a9a:	69e3      	ldr	r3, [r4, #28]
 8012a9c:	60f0      	str	r0, [r6, #12]
 8012a9e:	68db      	ldr	r3, [r3, #12]
 8012aa0:	2b00      	cmp	r3, #0
 8012aa2:	d1e4      	bne.n	8012a6e <_Balloc+0x2e>
 8012aa4:	2000      	movs	r0, #0
 8012aa6:	bd70      	pop	{r4, r5, r6, pc}
 8012aa8:	6802      	ldr	r2, [r0, #0]
 8012aaa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8012aae:	2300      	movs	r3, #0
 8012ab0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012ab4:	e7f7      	b.n	8012aa6 <_Balloc+0x66>
 8012ab6:	bf00      	nop
 8012ab8:	080157bf 	.word	0x080157bf
 8012abc:	080158ec 	.word	0x080158ec

08012ac0 <_Bfree>:
 8012ac0:	b570      	push	{r4, r5, r6, lr}
 8012ac2:	69c6      	ldr	r6, [r0, #28]
 8012ac4:	4605      	mov	r5, r0
 8012ac6:	460c      	mov	r4, r1
 8012ac8:	b976      	cbnz	r6, 8012ae8 <_Bfree+0x28>
 8012aca:	2010      	movs	r0, #16
 8012acc:	f7fd fee4 	bl	8010898 <malloc>
 8012ad0:	4602      	mov	r2, r0
 8012ad2:	61e8      	str	r0, [r5, #28]
 8012ad4:	b920      	cbnz	r0, 8012ae0 <_Bfree+0x20>
 8012ad6:	4b09      	ldr	r3, [pc, #36]	@ (8012afc <_Bfree+0x3c>)
 8012ad8:	4809      	ldr	r0, [pc, #36]	@ (8012b00 <_Bfree+0x40>)
 8012ada:	218f      	movs	r1, #143	@ 0x8f
 8012adc:	f7ff f8ea 	bl	8011cb4 <__assert_func>
 8012ae0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8012ae4:	6006      	str	r6, [r0, #0]
 8012ae6:	60c6      	str	r6, [r0, #12]
 8012ae8:	b13c      	cbz	r4, 8012afa <_Bfree+0x3a>
 8012aea:	69eb      	ldr	r3, [r5, #28]
 8012aec:	6862      	ldr	r2, [r4, #4]
 8012aee:	68db      	ldr	r3, [r3, #12]
 8012af0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8012af4:	6021      	str	r1, [r4, #0]
 8012af6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8012afa:	bd70      	pop	{r4, r5, r6, pc}
 8012afc:	080157bf 	.word	0x080157bf
 8012b00:	080158ec 	.word	0x080158ec

08012b04 <__multadd>:
 8012b04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b08:	690d      	ldr	r5, [r1, #16]
 8012b0a:	4607      	mov	r7, r0
 8012b0c:	460c      	mov	r4, r1
 8012b0e:	461e      	mov	r6, r3
 8012b10:	f101 0c14 	add.w	ip, r1, #20
 8012b14:	2000      	movs	r0, #0
 8012b16:	f8dc 3000 	ldr.w	r3, [ip]
 8012b1a:	b299      	uxth	r1, r3
 8012b1c:	fb02 6101 	mla	r1, r2, r1, r6
 8012b20:	0c1e      	lsrs	r6, r3, #16
 8012b22:	0c0b      	lsrs	r3, r1, #16
 8012b24:	fb02 3306 	mla	r3, r2, r6, r3
 8012b28:	b289      	uxth	r1, r1
 8012b2a:	3001      	adds	r0, #1
 8012b2c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8012b30:	4285      	cmp	r5, r0
 8012b32:	f84c 1b04 	str.w	r1, [ip], #4
 8012b36:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8012b3a:	dcec      	bgt.n	8012b16 <__multadd+0x12>
 8012b3c:	b30e      	cbz	r6, 8012b82 <__multadd+0x7e>
 8012b3e:	68a3      	ldr	r3, [r4, #8]
 8012b40:	42ab      	cmp	r3, r5
 8012b42:	dc19      	bgt.n	8012b78 <__multadd+0x74>
 8012b44:	6861      	ldr	r1, [r4, #4]
 8012b46:	4638      	mov	r0, r7
 8012b48:	3101      	adds	r1, #1
 8012b4a:	f7ff ff79 	bl	8012a40 <_Balloc>
 8012b4e:	4680      	mov	r8, r0
 8012b50:	b928      	cbnz	r0, 8012b5e <__multadd+0x5a>
 8012b52:	4602      	mov	r2, r0
 8012b54:	4b0c      	ldr	r3, [pc, #48]	@ (8012b88 <__multadd+0x84>)
 8012b56:	480d      	ldr	r0, [pc, #52]	@ (8012b8c <__multadd+0x88>)
 8012b58:	21ba      	movs	r1, #186	@ 0xba
 8012b5a:	f7ff f8ab 	bl	8011cb4 <__assert_func>
 8012b5e:	6922      	ldr	r2, [r4, #16]
 8012b60:	3202      	adds	r2, #2
 8012b62:	f104 010c 	add.w	r1, r4, #12
 8012b66:	0092      	lsls	r2, r2, #2
 8012b68:	300c      	adds	r0, #12
 8012b6a:	f7ff f895 	bl	8011c98 <memcpy>
 8012b6e:	4621      	mov	r1, r4
 8012b70:	4638      	mov	r0, r7
 8012b72:	f7ff ffa5 	bl	8012ac0 <_Bfree>
 8012b76:	4644      	mov	r4, r8
 8012b78:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8012b7c:	3501      	adds	r5, #1
 8012b7e:	615e      	str	r6, [r3, #20]
 8012b80:	6125      	str	r5, [r4, #16]
 8012b82:	4620      	mov	r0, r4
 8012b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b88:	080158db 	.word	0x080158db
 8012b8c:	080158ec 	.word	0x080158ec

08012b90 <__hi0bits>:
 8012b90:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8012b94:	4603      	mov	r3, r0
 8012b96:	bf36      	itet	cc
 8012b98:	0403      	lslcc	r3, r0, #16
 8012b9a:	2000      	movcs	r0, #0
 8012b9c:	2010      	movcc	r0, #16
 8012b9e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8012ba2:	bf3c      	itt	cc
 8012ba4:	021b      	lslcc	r3, r3, #8
 8012ba6:	3008      	addcc	r0, #8
 8012ba8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8012bac:	bf3c      	itt	cc
 8012bae:	011b      	lslcc	r3, r3, #4
 8012bb0:	3004      	addcc	r0, #4
 8012bb2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8012bb6:	bf3c      	itt	cc
 8012bb8:	009b      	lslcc	r3, r3, #2
 8012bba:	3002      	addcc	r0, #2
 8012bbc:	2b00      	cmp	r3, #0
 8012bbe:	db05      	blt.n	8012bcc <__hi0bits+0x3c>
 8012bc0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8012bc4:	f100 0001 	add.w	r0, r0, #1
 8012bc8:	bf08      	it	eq
 8012bca:	2020      	moveq	r0, #32
 8012bcc:	4770      	bx	lr

08012bce <__lo0bits>:
 8012bce:	6803      	ldr	r3, [r0, #0]
 8012bd0:	4602      	mov	r2, r0
 8012bd2:	f013 0007 	ands.w	r0, r3, #7
 8012bd6:	d00b      	beq.n	8012bf0 <__lo0bits+0x22>
 8012bd8:	07d9      	lsls	r1, r3, #31
 8012bda:	d421      	bmi.n	8012c20 <__lo0bits+0x52>
 8012bdc:	0798      	lsls	r0, r3, #30
 8012bde:	bf49      	itett	mi
 8012be0:	085b      	lsrmi	r3, r3, #1
 8012be2:	089b      	lsrpl	r3, r3, #2
 8012be4:	2001      	movmi	r0, #1
 8012be6:	6013      	strmi	r3, [r2, #0]
 8012be8:	bf5c      	itt	pl
 8012bea:	6013      	strpl	r3, [r2, #0]
 8012bec:	2002      	movpl	r0, #2
 8012bee:	4770      	bx	lr
 8012bf0:	b299      	uxth	r1, r3
 8012bf2:	b909      	cbnz	r1, 8012bf8 <__lo0bits+0x2a>
 8012bf4:	0c1b      	lsrs	r3, r3, #16
 8012bf6:	2010      	movs	r0, #16
 8012bf8:	b2d9      	uxtb	r1, r3
 8012bfa:	b909      	cbnz	r1, 8012c00 <__lo0bits+0x32>
 8012bfc:	3008      	adds	r0, #8
 8012bfe:	0a1b      	lsrs	r3, r3, #8
 8012c00:	0719      	lsls	r1, r3, #28
 8012c02:	bf04      	itt	eq
 8012c04:	091b      	lsreq	r3, r3, #4
 8012c06:	3004      	addeq	r0, #4
 8012c08:	0799      	lsls	r1, r3, #30
 8012c0a:	bf04      	itt	eq
 8012c0c:	089b      	lsreq	r3, r3, #2
 8012c0e:	3002      	addeq	r0, #2
 8012c10:	07d9      	lsls	r1, r3, #31
 8012c12:	d403      	bmi.n	8012c1c <__lo0bits+0x4e>
 8012c14:	085b      	lsrs	r3, r3, #1
 8012c16:	f100 0001 	add.w	r0, r0, #1
 8012c1a:	d003      	beq.n	8012c24 <__lo0bits+0x56>
 8012c1c:	6013      	str	r3, [r2, #0]
 8012c1e:	4770      	bx	lr
 8012c20:	2000      	movs	r0, #0
 8012c22:	4770      	bx	lr
 8012c24:	2020      	movs	r0, #32
 8012c26:	4770      	bx	lr

08012c28 <__i2b>:
 8012c28:	b510      	push	{r4, lr}
 8012c2a:	460c      	mov	r4, r1
 8012c2c:	2101      	movs	r1, #1
 8012c2e:	f7ff ff07 	bl	8012a40 <_Balloc>
 8012c32:	4602      	mov	r2, r0
 8012c34:	b928      	cbnz	r0, 8012c42 <__i2b+0x1a>
 8012c36:	4b05      	ldr	r3, [pc, #20]	@ (8012c4c <__i2b+0x24>)
 8012c38:	4805      	ldr	r0, [pc, #20]	@ (8012c50 <__i2b+0x28>)
 8012c3a:	f240 1145 	movw	r1, #325	@ 0x145
 8012c3e:	f7ff f839 	bl	8011cb4 <__assert_func>
 8012c42:	2301      	movs	r3, #1
 8012c44:	6144      	str	r4, [r0, #20]
 8012c46:	6103      	str	r3, [r0, #16]
 8012c48:	bd10      	pop	{r4, pc}
 8012c4a:	bf00      	nop
 8012c4c:	080158db 	.word	0x080158db
 8012c50:	080158ec 	.word	0x080158ec

08012c54 <__multiply>:
 8012c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c58:	4614      	mov	r4, r2
 8012c5a:	690a      	ldr	r2, [r1, #16]
 8012c5c:	6923      	ldr	r3, [r4, #16]
 8012c5e:	429a      	cmp	r2, r3
 8012c60:	bfa8      	it	ge
 8012c62:	4623      	movge	r3, r4
 8012c64:	460f      	mov	r7, r1
 8012c66:	bfa4      	itt	ge
 8012c68:	460c      	movge	r4, r1
 8012c6a:	461f      	movge	r7, r3
 8012c6c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8012c70:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8012c74:	68a3      	ldr	r3, [r4, #8]
 8012c76:	6861      	ldr	r1, [r4, #4]
 8012c78:	eb0a 0609 	add.w	r6, sl, r9
 8012c7c:	42b3      	cmp	r3, r6
 8012c7e:	b085      	sub	sp, #20
 8012c80:	bfb8      	it	lt
 8012c82:	3101      	addlt	r1, #1
 8012c84:	f7ff fedc 	bl	8012a40 <_Balloc>
 8012c88:	b930      	cbnz	r0, 8012c98 <__multiply+0x44>
 8012c8a:	4602      	mov	r2, r0
 8012c8c:	4b44      	ldr	r3, [pc, #272]	@ (8012da0 <__multiply+0x14c>)
 8012c8e:	4845      	ldr	r0, [pc, #276]	@ (8012da4 <__multiply+0x150>)
 8012c90:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8012c94:	f7ff f80e 	bl	8011cb4 <__assert_func>
 8012c98:	f100 0514 	add.w	r5, r0, #20
 8012c9c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8012ca0:	462b      	mov	r3, r5
 8012ca2:	2200      	movs	r2, #0
 8012ca4:	4543      	cmp	r3, r8
 8012ca6:	d321      	bcc.n	8012cec <__multiply+0x98>
 8012ca8:	f107 0114 	add.w	r1, r7, #20
 8012cac:	f104 0214 	add.w	r2, r4, #20
 8012cb0:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8012cb4:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8012cb8:	9302      	str	r3, [sp, #8]
 8012cba:	1b13      	subs	r3, r2, r4
 8012cbc:	3b15      	subs	r3, #21
 8012cbe:	f023 0303 	bic.w	r3, r3, #3
 8012cc2:	3304      	adds	r3, #4
 8012cc4:	f104 0715 	add.w	r7, r4, #21
 8012cc8:	42ba      	cmp	r2, r7
 8012cca:	bf38      	it	cc
 8012ccc:	2304      	movcc	r3, #4
 8012cce:	9301      	str	r3, [sp, #4]
 8012cd0:	9b02      	ldr	r3, [sp, #8]
 8012cd2:	9103      	str	r1, [sp, #12]
 8012cd4:	428b      	cmp	r3, r1
 8012cd6:	d80c      	bhi.n	8012cf2 <__multiply+0x9e>
 8012cd8:	2e00      	cmp	r6, #0
 8012cda:	dd03      	ble.n	8012ce4 <__multiply+0x90>
 8012cdc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8012ce0:	2b00      	cmp	r3, #0
 8012ce2:	d05b      	beq.n	8012d9c <__multiply+0x148>
 8012ce4:	6106      	str	r6, [r0, #16]
 8012ce6:	b005      	add	sp, #20
 8012ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012cec:	f843 2b04 	str.w	r2, [r3], #4
 8012cf0:	e7d8      	b.n	8012ca4 <__multiply+0x50>
 8012cf2:	f8b1 a000 	ldrh.w	sl, [r1]
 8012cf6:	f1ba 0f00 	cmp.w	sl, #0
 8012cfa:	d024      	beq.n	8012d46 <__multiply+0xf2>
 8012cfc:	f104 0e14 	add.w	lr, r4, #20
 8012d00:	46a9      	mov	r9, r5
 8012d02:	f04f 0c00 	mov.w	ip, #0
 8012d06:	f85e 7b04 	ldr.w	r7, [lr], #4
 8012d0a:	f8d9 3000 	ldr.w	r3, [r9]
 8012d0e:	fa1f fb87 	uxth.w	fp, r7
 8012d12:	b29b      	uxth	r3, r3
 8012d14:	fb0a 330b 	mla	r3, sl, fp, r3
 8012d18:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8012d1c:	f8d9 7000 	ldr.w	r7, [r9]
 8012d20:	4463      	add	r3, ip
 8012d22:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8012d26:	fb0a c70b 	mla	r7, sl, fp, ip
 8012d2a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8012d2e:	b29b      	uxth	r3, r3
 8012d30:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8012d34:	4572      	cmp	r2, lr
 8012d36:	f849 3b04 	str.w	r3, [r9], #4
 8012d3a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8012d3e:	d8e2      	bhi.n	8012d06 <__multiply+0xb2>
 8012d40:	9b01      	ldr	r3, [sp, #4]
 8012d42:	f845 c003 	str.w	ip, [r5, r3]
 8012d46:	9b03      	ldr	r3, [sp, #12]
 8012d48:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8012d4c:	3104      	adds	r1, #4
 8012d4e:	f1b9 0f00 	cmp.w	r9, #0
 8012d52:	d021      	beq.n	8012d98 <__multiply+0x144>
 8012d54:	682b      	ldr	r3, [r5, #0]
 8012d56:	f104 0c14 	add.w	ip, r4, #20
 8012d5a:	46ae      	mov	lr, r5
 8012d5c:	f04f 0a00 	mov.w	sl, #0
 8012d60:	f8bc b000 	ldrh.w	fp, [ip]
 8012d64:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8012d68:	fb09 770b 	mla	r7, r9, fp, r7
 8012d6c:	4457      	add	r7, sl
 8012d6e:	b29b      	uxth	r3, r3
 8012d70:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8012d74:	f84e 3b04 	str.w	r3, [lr], #4
 8012d78:	f85c 3b04 	ldr.w	r3, [ip], #4
 8012d7c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8012d80:	f8be 3000 	ldrh.w	r3, [lr]
 8012d84:	fb09 330a 	mla	r3, r9, sl, r3
 8012d88:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8012d8c:	4562      	cmp	r2, ip
 8012d8e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8012d92:	d8e5      	bhi.n	8012d60 <__multiply+0x10c>
 8012d94:	9f01      	ldr	r7, [sp, #4]
 8012d96:	51eb      	str	r3, [r5, r7]
 8012d98:	3504      	adds	r5, #4
 8012d9a:	e799      	b.n	8012cd0 <__multiply+0x7c>
 8012d9c:	3e01      	subs	r6, #1
 8012d9e:	e79b      	b.n	8012cd8 <__multiply+0x84>
 8012da0:	080158db 	.word	0x080158db
 8012da4:	080158ec 	.word	0x080158ec

08012da8 <__pow5mult>:
 8012da8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012dac:	4615      	mov	r5, r2
 8012dae:	f012 0203 	ands.w	r2, r2, #3
 8012db2:	4607      	mov	r7, r0
 8012db4:	460e      	mov	r6, r1
 8012db6:	d007      	beq.n	8012dc8 <__pow5mult+0x20>
 8012db8:	4c25      	ldr	r4, [pc, #148]	@ (8012e50 <__pow5mult+0xa8>)
 8012dba:	3a01      	subs	r2, #1
 8012dbc:	2300      	movs	r3, #0
 8012dbe:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8012dc2:	f7ff fe9f 	bl	8012b04 <__multadd>
 8012dc6:	4606      	mov	r6, r0
 8012dc8:	10ad      	asrs	r5, r5, #2
 8012dca:	d03d      	beq.n	8012e48 <__pow5mult+0xa0>
 8012dcc:	69fc      	ldr	r4, [r7, #28]
 8012dce:	b97c      	cbnz	r4, 8012df0 <__pow5mult+0x48>
 8012dd0:	2010      	movs	r0, #16
 8012dd2:	f7fd fd61 	bl	8010898 <malloc>
 8012dd6:	4602      	mov	r2, r0
 8012dd8:	61f8      	str	r0, [r7, #28]
 8012dda:	b928      	cbnz	r0, 8012de8 <__pow5mult+0x40>
 8012ddc:	4b1d      	ldr	r3, [pc, #116]	@ (8012e54 <__pow5mult+0xac>)
 8012dde:	481e      	ldr	r0, [pc, #120]	@ (8012e58 <__pow5mult+0xb0>)
 8012de0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8012de4:	f7fe ff66 	bl	8011cb4 <__assert_func>
 8012de8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8012dec:	6004      	str	r4, [r0, #0]
 8012dee:	60c4      	str	r4, [r0, #12]
 8012df0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8012df4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8012df8:	b94c      	cbnz	r4, 8012e0e <__pow5mult+0x66>
 8012dfa:	f240 2171 	movw	r1, #625	@ 0x271
 8012dfe:	4638      	mov	r0, r7
 8012e00:	f7ff ff12 	bl	8012c28 <__i2b>
 8012e04:	2300      	movs	r3, #0
 8012e06:	f8c8 0008 	str.w	r0, [r8, #8]
 8012e0a:	4604      	mov	r4, r0
 8012e0c:	6003      	str	r3, [r0, #0]
 8012e0e:	f04f 0900 	mov.w	r9, #0
 8012e12:	07eb      	lsls	r3, r5, #31
 8012e14:	d50a      	bpl.n	8012e2c <__pow5mult+0x84>
 8012e16:	4631      	mov	r1, r6
 8012e18:	4622      	mov	r2, r4
 8012e1a:	4638      	mov	r0, r7
 8012e1c:	f7ff ff1a 	bl	8012c54 <__multiply>
 8012e20:	4631      	mov	r1, r6
 8012e22:	4680      	mov	r8, r0
 8012e24:	4638      	mov	r0, r7
 8012e26:	f7ff fe4b 	bl	8012ac0 <_Bfree>
 8012e2a:	4646      	mov	r6, r8
 8012e2c:	106d      	asrs	r5, r5, #1
 8012e2e:	d00b      	beq.n	8012e48 <__pow5mult+0xa0>
 8012e30:	6820      	ldr	r0, [r4, #0]
 8012e32:	b938      	cbnz	r0, 8012e44 <__pow5mult+0x9c>
 8012e34:	4622      	mov	r2, r4
 8012e36:	4621      	mov	r1, r4
 8012e38:	4638      	mov	r0, r7
 8012e3a:	f7ff ff0b 	bl	8012c54 <__multiply>
 8012e3e:	6020      	str	r0, [r4, #0]
 8012e40:	f8c0 9000 	str.w	r9, [r0]
 8012e44:	4604      	mov	r4, r0
 8012e46:	e7e4      	b.n	8012e12 <__pow5mult+0x6a>
 8012e48:	4630      	mov	r0, r6
 8012e4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012e4e:	bf00      	nop
 8012e50:	08015948 	.word	0x08015948
 8012e54:	080157bf 	.word	0x080157bf
 8012e58:	080158ec 	.word	0x080158ec

08012e5c <__lshift>:
 8012e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e60:	460c      	mov	r4, r1
 8012e62:	6849      	ldr	r1, [r1, #4]
 8012e64:	6923      	ldr	r3, [r4, #16]
 8012e66:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8012e6a:	68a3      	ldr	r3, [r4, #8]
 8012e6c:	4607      	mov	r7, r0
 8012e6e:	4691      	mov	r9, r2
 8012e70:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8012e74:	f108 0601 	add.w	r6, r8, #1
 8012e78:	42b3      	cmp	r3, r6
 8012e7a:	db0b      	blt.n	8012e94 <__lshift+0x38>
 8012e7c:	4638      	mov	r0, r7
 8012e7e:	f7ff fddf 	bl	8012a40 <_Balloc>
 8012e82:	4605      	mov	r5, r0
 8012e84:	b948      	cbnz	r0, 8012e9a <__lshift+0x3e>
 8012e86:	4602      	mov	r2, r0
 8012e88:	4b28      	ldr	r3, [pc, #160]	@ (8012f2c <__lshift+0xd0>)
 8012e8a:	4829      	ldr	r0, [pc, #164]	@ (8012f30 <__lshift+0xd4>)
 8012e8c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8012e90:	f7fe ff10 	bl	8011cb4 <__assert_func>
 8012e94:	3101      	adds	r1, #1
 8012e96:	005b      	lsls	r3, r3, #1
 8012e98:	e7ee      	b.n	8012e78 <__lshift+0x1c>
 8012e9a:	2300      	movs	r3, #0
 8012e9c:	f100 0114 	add.w	r1, r0, #20
 8012ea0:	f100 0210 	add.w	r2, r0, #16
 8012ea4:	4618      	mov	r0, r3
 8012ea6:	4553      	cmp	r3, sl
 8012ea8:	db33      	blt.n	8012f12 <__lshift+0xb6>
 8012eaa:	6920      	ldr	r0, [r4, #16]
 8012eac:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8012eb0:	f104 0314 	add.w	r3, r4, #20
 8012eb4:	f019 091f 	ands.w	r9, r9, #31
 8012eb8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8012ebc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8012ec0:	d02b      	beq.n	8012f1a <__lshift+0xbe>
 8012ec2:	f1c9 0e20 	rsb	lr, r9, #32
 8012ec6:	468a      	mov	sl, r1
 8012ec8:	2200      	movs	r2, #0
 8012eca:	6818      	ldr	r0, [r3, #0]
 8012ecc:	fa00 f009 	lsl.w	r0, r0, r9
 8012ed0:	4310      	orrs	r0, r2
 8012ed2:	f84a 0b04 	str.w	r0, [sl], #4
 8012ed6:	f853 2b04 	ldr.w	r2, [r3], #4
 8012eda:	459c      	cmp	ip, r3
 8012edc:	fa22 f20e 	lsr.w	r2, r2, lr
 8012ee0:	d8f3      	bhi.n	8012eca <__lshift+0x6e>
 8012ee2:	ebac 0304 	sub.w	r3, ip, r4
 8012ee6:	3b15      	subs	r3, #21
 8012ee8:	f023 0303 	bic.w	r3, r3, #3
 8012eec:	3304      	adds	r3, #4
 8012eee:	f104 0015 	add.w	r0, r4, #21
 8012ef2:	4584      	cmp	ip, r0
 8012ef4:	bf38      	it	cc
 8012ef6:	2304      	movcc	r3, #4
 8012ef8:	50ca      	str	r2, [r1, r3]
 8012efa:	b10a      	cbz	r2, 8012f00 <__lshift+0xa4>
 8012efc:	f108 0602 	add.w	r6, r8, #2
 8012f00:	3e01      	subs	r6, #1
 8012f02:	4638      	mov	r0, r7
 8012f04:	612e      	str	r6, [r5, #16]
 8012f06:	4621      	mov	r1, r4
 8012f08:	f7ff fdda 	bl	8012ac0 <_Bfree>
 8012f0c:	4628      	mov	r0, r5
 8012f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012f12:	f842 0f04 	str.w	r0, [r2, #4]!
 8012f16:	3301      	adds	r3, #1
 8012f18:	e7c5      	b.n	8012ea6 <__lshift+0x4a>
 8012f1a:	3904      	subs	r1, #4
 8012f1c:	f853 2b04 	ldr.w	r2, [r3], #4
 8012f20:	f841 2f04 	str.w	r2, [r1, #4]!
 8012f24:	459c      	cmp	ip, r3
 8012f26:	d8f9      	bhi.n	8012f1c <__lshift+0xc0>
 8012f28:	e7ea      	b.n	8012f00 <__lshift+0xa4>
 8012f2a:	bf00      	nop
 8012f2c:	080158db 	.word	0x080158db
 8012f30:	080158ec 	.word	0x080158ec

08012f34 <__mcmp>:
 8012f34:	690a      	ldr	r2, [r1, #16]
 8012f36:	4603      	mov	r3, r0
 8012f38:	6900      	ldr	r0, [r0, #16]
 8012f3a:	1a80      	subs	r0, r0, r2
 8012f3c:	b530      	push	{r4, r5, lr}
 8012f3e:	d10e      	bne.n	8012f5e <__mcmp+0x2a>
 8012f40:	3314      	adds	r3, #20
 8012f42:	3114      	adds	r1, #20
 8012f44:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8012f48:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8012f4c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8012f50:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8012f54:	4295      	cmp	r5, r2
 8012f56:	d003      	beq.n	8012f60 <__mcmp+0x2c>
 8012f58:	d205      	bcs.n	8012f66 <__mcmp+0x32>
 8012f5a:	f04f 30ff 	mov.w	r0, #4294967295
 8012f5e:	bd30      	pop	{r4, r5, pc}
 8012f60:	42a3      	cmp	r3, r4
 8012f62:	d3f3      	bcc.n	8012f4c <__mcmp+0x18>
 8012f64:	e7fb      	b.n	8012f5e <__mcmp+0x2a>
 8012f66:	2001      	movs	r0, #1
 8012f68:	e7f9      	b.n	8012f5e <__mcmp+0x2a>
	...

08012f6c <__mdiff>:
 8012f6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f70:	4689      	mov	r9, r1
 8012f72:	4606      	mov	r6, r0
 8012f74:	4611      	mov	r1, r2
 8012f76:	4648      	mov	r0, r9
 8012f78:	4614      	mov	r4, r2
 8012f7a:	f7ff ffdb 	bl	8012f34 <__mcmp>
 8012f7e:	1e05      	subs	r5, r0, #0
 8012f80:	d112      	bne.n	8012fa8 <__mdiff+0x3c>
 8012f82:	4629      	mov	r1, r5
 8012f84:	4630      	mov	r0, r6
 8012f86:	f7ff fd5b 	bl	8012a40 <_Balloc>
 8012f8a:	4602      	mov	r2, r0
 8012f8c:	b928      	cbnz	r0, 8012f9a <__mdiff+0x2e>
 8012f8e:	4b3f      	ldr	r3, [pc, #252]	@ (801308c <__mdiff+0x120>)
 8012f90:	f240 2137 	movw	r1, #567	@ 0x237
 8012f94:	483e      	ldr	r0, [pc, #248]	@ (8013090 <__mdiff+0x124>)
 8012f96:	f7fe fe8d 	bl	8011cb4 <__assert_func>
 8012f9a:	2301      	movs	r3, #1
 8012f9c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8012fa0:	4610      	mov	r0, r2
 8012fa2:	b003      	add	sp, #12
 8012fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fa8:	bfbc      	itt	lt
 8012faa:	464b      	movlt	r3, r9
 8012fac:	46a1      	movlt	r9, r4
 8012fae:	4630      	mov	r0, r6
 8012fb0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012fb4:	bfba      	itte	lt
 8012fb6:	461c      	movlt	r4, r3
 8012fb8:	2501      	movlt	r5, #1
 8012fba:	2500      	movge	r5, #0
 8012fbc:	f7ff fd40 	bl	8012a40 <_Balloc>
 8012fc0:	4602      	mov	r2, r0
 8012fc2:	b918      	cbnz	r0, 8012fcc <__mdiff+0x60>
 8012fc4:	4b31      	ldr	r3, [pc, #196]	@ (801308c <__mdiff+0x120>)
 8012fc6:	f240 2145 	movw	r1, #581	@ 0x245
 8012fca:	e7e3      	b.n	8012f94 <__mdiff+0x28>
 8012fcc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8012fd0:	6926      	ldr	r6, [r4, #16]
 8012fd2:	60c5      	str	r5, [r0, #12]
 8012fd4:	f109 0310 	add.w	r3, r9, #16
 8012fd8:	f109 0514 	add.w	r5, r9, #20
 8012fdc:	f104 0e14 	add.w	lr, r4, #20
 8012fe0:	f100 0b14 	add.w	fp, r0, #20
 8012fe4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8012fe8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8012fec:	9301      	str	r3, [sp, #4]
 8012fee:	46d9      	mov	r9, fp
 8012ff0:	f04f 0c00 	mov.w	ip, #0
 8012ff4:	9b01      	ldr	r3, [sp, #4]
 8012ff6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8012ffa:	f853 af04 	ldr.w	sl, [r3, #4]!
 8012ffe:	9301      	str	r3, [sp, #4]
 8013000:	fa1f f38a 	uxth.w	r3, sl
 8013004:	4619      	mov	r1, r3
 8013006:	b283      	uxth	r3, r0
 8013008:	1acb      	subs	r3, r1, r3
 801300a:	0c00      	lsrs	r0, r0, #16
 801300c:	4463      	add	r3, ip
 801300e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8013012:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8013016:	b29b      	uxth	r3, r3
 8013018:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801301c:	4576      	cmp	r6, lr
 801301e:	f849 3b04 	str.w	r3, [r9], #4
 8013022:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8013026:	d8e5      	bhi.n	8012ff4 <__mdiff+0x88>
 8013028:	1b33      	subs	r3, r6, r4
 801302a:	3b15      	subs	r3, #21
 801302c:	f023 0303 	bic.w	r3, r3, #3
 8013030:	3415      	adds	r4, #21
 8013032:	3304      	adds	r3, #4
 8013034:	42a6      	cmp	r6, r4
 8013036:	bf38      	it	cc
 8013038:	2304      	movcc	r3, #4
 801303a:	441d      	add	r5, r3
 801303c:	445b      	add	r3, fp
 801303e:	461e      	mov	r6, r3
 8013040:	462c      	mov	r4, r5
 8013042:	4544      	cmp	r4, r8
 8013044:	d30e      	bcc.n	8013064 <__mdiff+0xf8>
 8013046:	f108 0103 	add.w	r1, r8, #3
 801304a:	1b49      	subs	r1, r1, r5
 801304c:	f021 0103 	bic.w	r1, r1, #3
 8013050:	3d03      	subs	r5, #3
 8013052:	45a8      	cmp	r8, r5
 8013054:	bf38      	it	cc
 8013056:	2100      	movcc	r1, #0
 8013058:	440b      	add	r3, r1
 801305a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801305e:	b191      	cbz	r1, 8013086 <__mdiff+0x11a>
 8013060:	6117      	str	r7, [r2, #16]
 8013062:	e79d      	b.n	8012fa0 <__mdiff+0x34>
 8013064:	f854 1b04 	ldr.w	r1, [r4], #4
 8013068:	46e6      	mov	lr, ip
 801306a:	0c08      	lsrs	r0, r1, #16
 801306c:	fa1c fc81 	uxtah	ip, ip, r1
 8013070:	4471      	add	r1, lr
 8013072:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8013076:	b289      	uxth	r1, r1
 8013078:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 801307c:	f846 1b04 	str.w	r1, [r6], #4
 8013080:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8013084:	e7dd      	b.n	8013042 <__mdiff+0xd6>
 8013086:	3f01      	subs	r7, #1
 8013088:	e7e7      	b.n	801305a <__mdiff+0xee>
 801308a:	bf00      	nop
 801308c:	080158db 	.word	0x080158db
 8013090:	080158ec 	.word	0x080158ec

08013094 <__d2b>:
 8013094:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013098:	460f      	mov	r7, r1
 801309a:	2101      	movs	r1, #1
 801309c:	ec59 8b10 	vmov	r8, r9, d0
 80130a0:	4616      	mov	r6, r2
 80130a2:	f7ff fccd 	bl	8012a40 <_Balloc>
 80130a6:	4604      	mov	r4, r0
 80130a8:	b930      	cbnz	r0, 80130b8 <__d2b+0x24>
 80130aa:	4602      	mov	r2, r0
 80130ac:	4b23      	ldr	r3, [pc, #140]	@ (801313c <__d2b+0xa8>)
 80130ae:	4824      	ldr	r0, [pc, #144]	@ (8013140 <__d2b+0xac>)
 80130b0:	f240 310f 	movw	r1, #783	@ 0x30f
 80130b4:	f7fe fdfe 	bl	8011cb4 <__assert_func>
 80130b8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80130bc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80130c0:	b10d      	cbz	r5, 80130c6 <__d2b+0x32>
 80130c2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80130c6:	9301      	str	r3, [sp, #4]
 80130c8:	f1b8 0300 	subs.w	r3, r8, #0
 80130cc:	d023      	beq.n	8013116 <__d2b+0x82>
 80130ce:	4668      	mov	r0, sp
 80130d0:	9300      	str	r3, [sp, #0]
 80130d2:	f7ff fd7c 	bl	8012bce <__lo0bits>
 80130d6:	e9dd 1200 	ldrd	r1, r2, [sp]
 80130da:	b1d0      	cbz	r0, 8013112 <__d2b+0x7e>
 80130dc:	f1c0 0320 	rsb	r3, r0, #32
 80130e0:	fa02 f303 	lsl.w	r3, r2, r3
 80130e4:	430b      	orrs	r3, r1
 80130e6:	40c2      	lsrs	r2, r0
 80130e8:	6163      	str	r3, [r4, #20]
 80130ea:	9201      	str	r2, [sp, #4]
 80130ec:	9b01      	ldr	r3, [sp, #4]
 80130ee:	61a3      	str	r3, [r4, #24]
 80130f0:	2b00      	cmp	r3, #0
 80130f2:	bf0c      	ite	eq
 80130f4:	2201      	moveq	r2, #1
 80130f6:	2202      	movne	r2, #2
 80130f8:	6122      	str	r2, [r4, #16]
 80130fa:	b1a5      	cbz	r5, 8013126 <__d2b+0x92>
 80130fc:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8013100:	4405      	add	r5, r0
 8013102:	603d      	str	r5, [r7, #0]
 8013104:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8013108:	6030      	str	r0, [r6, #0]
 801310a:	4620      	mov	r0, r4
 801310c:	b003      	add	sp, #12
 801310e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013112:	6161      	str	r1, [r4, #20]
 8013114:	e7ea      	b.n	80130ec <__d2b+0x58>
 8013116:	a801      	add	r0, sp, #4
 8013118:	f7ff fd59 	bl	8012bce <__lo0bits>
 801311c:	9b01      	ldr	r3, [sp, #4]
 801311e:	6163      	str	r3, [r4, #20]
 8013120:	3020      	adds	r0, #32
 8013122:	2201      	movs	r2, #1
 8013124:	e7e8      	b.n	80130f8 <__d2b+0x64>
 8013126:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801312a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 801312e:	6038      	str	r0, [r7, #0]
 8013130:	6918      	ldr	r0, [r3, #16]
 8013132:	f7ff fd2d 	bl	8012b90 <__hi0bits>
 8013136:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801313a:	e7e5      	b.n	8013108 <__d2b+0x74>
 801313c:	080158db 	.word	0x080158db
 8013140:	080158ec 	.word	0x080158ec

08013144 <_malloc_usable_size_r>:
 8013144:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8013148:	1f18      	subs	r0, r3, #4
 801314a:	2b00      	cmp	r3, #0
 801314c:	bfbc      	itt	lt
 801314e:	580b      	ldrlt	r3, [r1, r0]
 8013150:	18c0      	addlt	r0, r0, r3
 8013152:	4770      	bx	lr

08013154 <_strtoul_l.constprop.0>:
 8013154:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013158:	4e34      	ldr	r6, [pc, #208]	@ (801322c <_strtoul_l.constprop.0+0xd8>)
 801315a:	4686      	mov	lr, r0
 801315c:	460d      	mov	r5, r1
 801315e:	4628      	mov	r0, r5
 8013160:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013164:	5d37      	ldrb	r7, [r6, r4]
 8013166:	f017 0708 	ands.w	r7, r7, #8
 801316a:	d1f8      	bne.n	801315e <_strtoul_l.constprop.0+0xa>
 801316c:	2c2d      	cmp	r4, #45	@ 0x2d
 801316e:	d12f      	bne.n	80131d0 <_strtoul_l.constprop.0+0x7c>
 8013170:	782c      	ldrb	r4, [r5, #0]
 8013172:	2701      	movs	r7, #1
 8013174:	1c85      	adds	r5, r0, #2
 8013176:	f033 0010 	bics.w	r0, r3, #16
 801317a:	d109      	bne.n	8013190 <_strtoul_l.constprop.0+0x3c>
 801317c:	2c30      	cmp	r4, #48	@ 0x30
 801317e:	d12c      	bne.n	80131da <_strtoul_l.constprop.0+0x86>
 8013180:	7828      	ldrb	r0, [r5, #0]
 8013182:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
 8013186:	2858      	cmp	r0, #88	@ 0x58
 8013188:	d127      	bne.n	80131da <_strtoul_l.constprop.0+0x86>
 801318a:	786c      	ldrb	r4, [r5, #1]
 801318c:	2310      	movs	r3, #16
 801318e:	3502      	adds	r5, #2
 8013190:	f04f 38ff 	mov.w	r8, #4294967295
 8013194:	2600      	movs	r6, #0
 8013196:	fbb8 f8f3 	udiv	r8, r8, r3
 801319a:	fb03 f908 	mul.w	r9, r3, r8
 801319e:	ea6f 0909 	mvn.w	r9, r9
 80131a2:	4630      	mov	r0, r6
 80131a4:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 80131a8:	f1bc 0f09 	cmp.w	ip, #9
 80131ac:	d81c      	bhi.n	80131e8 <_strtoul_l.constprop.0+0x94>
 80131ae:	4664      	mov	r4, ip
 80131b0:	42a3      	cmp	r3, r4
 80131b2:	dd2a      	ble.n	801320a <_strtoul_l.constprop.0+0xb6>
 80131b4:	f1b6 3fff 	cmp.w	r6, #4294967295
 80131b8:	d007      	beq.n	80131ca <_strtoul_l.constprop.0+0x76>
 80131ba:	4580      	cmp	r8, r0
 80131bc:	d322      	bcc.n	8013204 <_strtoul_l.constprop.0+0xb0>
 80131be:	d101      	bne.n	80131c4 <_strtoul_l.constprop.0+0x70>
 80131c0:	45a1      	cmp	r9, r4
 80131c2:	db1f      	blt.n	8013204 <_strtoul_l.constprop.0+0xb0>
 80131c4:	fb00 4003 	mla	r0, r0, r3, r4
 80131c8:	2601      	movs	r6, #1
 80131ca:	f815 4b01 	ldrb.w	r4, [r5], #1
 80131ce:	e7e9      	b.n	80131a4 <_strtoul_l.constprop.0+0x50>
 80131d0:	2c2b      	cmp	r4, #43	@ 0x2b
 80131d2:	bf04      	itt	eq
 80131d4:	782c      	ldrbeq	r4, [r5, #0]
 80131d6:	1c85      	addeq	r5, r0, #2
 80131d8:	e7cd      	b.n	8013176 <_strtoul_l.constprop.0+0x22>
 80131da:	2b00      	cmp	r3, #0
 80131dc:	d1d8      	bne.n	8013190 <_strtoul_l.constprop.0+0x3c>
 80131de:	2c30      	cmp	r4, #48	@ 0x30
 80131e0:	bf0c      	ite	eq
 80131e2:	2308      	moveq	r3, #8
 80131e4:	230a      	movne	r3, #10
 80131e6:	e7d3      	b.n	8013190 <_strtoul_l.constprop.0+0x3c>
 80131e8:	f1a4 0c41 	sub.w	ip, r4, #65	@ 0x41
 80131ec:	f1bc 0f19 	cmp.w	ip, #25
 80131f0:	d801      	bhi.n	80131f6 <_strtoul_l.constprop.0+0xa2>
 80131f2:	3c37      	subs	r4, #55	@ 0x37
 80131f4:	e7dc      	b.n	80131b0 <_strtoul_l.constprop.0+0x5c>
 80131f6:	f1a4 0c61 	sub.w	ip, r4, #97	@ 0x61
 80131fa:	f1bc 0f19 	cmp.w	ip, #25
 80131fe:	d804      	bhi.n	801320a <_strtoul_l.constprop.0+0xb6>
 8013200:	3c57      	subs	r4, #87	@ 0x57
 8013202:	e7d5      	b.n	80131b0 <_strtoul_l.constprop.0+0x5c>
 8013204:	f04f 36ff 	mov.w	r6, #4294967295
 8013208:	e7df      	b.n	80131ca <_strtoul_l.constprop.0+0x76>
 801320a:	1c73      	adds	r3, r6, #1
 801320c:	d106      	bne.n	801321c <_strtoul_l.constprop.0+0xc8>
 801320e:	2322      	movs	r3, #34	@ 0x22
 8013210:	f8ce 3000 	str.w	r3, [lr]
 8013214:	4630      	mov	r0, r6
 8013216:	b932      	cbnz	r2, 8013226 <_strtoul_l.constprop.0+0xd2>
 8013218:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801321c:	b107      	cbz	r7, 8013220 <_strtoul_l.constprop.0+0xcc>
 801321e:	4240      	negs	r0, r0
 8013220:	2a00      	cmp	r2, #0
 8013222:	d0f9      	beq.n	8013218 <_strtoul_l.constprop.0+0xc4>
 8013224:	b106      	cbz	r6, 8013228 <_strtoul_l.constprop.0+0xd4>
 8013226:	1e69      	subs	r1, r5, #1
 8013228:	6011      	str	r1, [r2, #0]
 801322a:	e7f5      	b.n	8013218 <_strtoul_l.constprop.0+0xc4>
 801322c:	0801568d 	.word	0x0801568d

08013230 <_strtoul_r>:
 8013230:	f7ff bf90 	b.w	8013154 <_strtoul_l.constprop.0>

08013234 <__ascii_wctomb>:
 8013234:	4603      	mov	r3, r0
 8013236:	4608      	mov	r0, r1
 8013238:	b141      	cbz	r1, 801324c <__ascii_wctomb+0x18>
 801323a:	2aff      	cmp	r2, #255	@ 0xff
 801323c:	d904      	bls.n	8013248 <__ascii_wctomb+0x14>
 801323e:	228a      	movs	r2, #138	@ 0x8a
 8013240:	601a      	str	r2, [r3, #0]
 8013242:	f04f 30ff 	mov.w	r0, #4294967295
 8013246:	4770      	bx	lr
 8013248:	700a      	strb	r2, [r1, #0]
 801324a:	2001      	movs	r0, #1
 801324c:	4770      	bx	lr

0801324e <__ssputs_r>:
 801324e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013252:	688e      	ldr	r6, [r1, #8]
 8013254:	461f      	mov	r7, r3
 8013256:	42be      	cmp	r6, r7
 8013258:	680b      	ldr	r3, [r1, #0]
 801325a:	4682      	mov	sl, r0
 801325c:	460c      	mov	r4, r1
 801325e:	4690      	mov	r8, r2
 8013260:	d82d      	bhi.n	80132be <__ssputs_r+0x70>
 8013262:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8013266:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801326a:	d026      	beq.n	80132ba <__ssputs_r+0x6c>
 801326c:	6965      	ldr	r5, [r4, #20]
 801326e:	6909      	ldr	r1, [r1, #16]
 8013270:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013274:	eba3 0901 	sub.w	r9, r3, r1
 8013278:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801327c:	1c7b      	adds	r3, r7, #1
 801327e:	444b      	add	r3, r9
 8013280:	106d      	asrs	r5, r5, #1
 8013282:	429d      	cmp	r5, r3
 8013284:	bf38      	it	cc
 8013286:	461d      	movcc	r5, r3
 8013288:	0553      	lsls	r3, r2, #21
 801328a:	d527      	bpl.n	80132dc <__ssputs_r+0x8e>
 801328c:	4629      	mov	r1, r5
 801328e:	f7fd fb35 	bl	80108fc <_malloc_r>
 8013292:	4606      	mov	r6, r0
 8013294:	b360      	cbz	r0, 80132f0 <__ssputs_r+0xa2>
 8013296:	6921      	ldr	r1, [r4, #16]
 8013298:	464a      	mov	r2, r9
 801329a:	f7fe fcfd 	bl	8011c98 <memcpy>
 801329e:	89a3      	ldrh	r3, [r4, #12]
 80132a0:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80132a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80132a8:	81a3      	strh	r3, [r4, #12]
 80132aa:	6126      	str	r6, [r4, #16]
 80132ac:	6165      	str	r5, [r4, #20]
 80132ae:	444e      	add	r6, r9
 80132b0:	eba5 0509 	sub.w	r5, r5, r9
 80132b4:	6026      	str	r6, [r4, #0]
 80132b6:	60a5      	str	r5, [r4, #8]
 80132b8:	463e      	mov	r6, r7
 80132ba:	42be      	cmp	r6, r7
 80132bc:	d900      	bls.n	80132c0 <__ssputs_r+0x72>
 80132be:	463e      	mov	r6, r7
 80132c0:	6820      	ldr	r0, [r4, #0]
 80132c2:	4632      	mov	r2, r6
 80132c4:	4641      	mov	r1, r8
 80132c6:	f7fe fb53 	bl	8011970 <memmove>
 80132ca:	68a3      	ldr	r3, [r4, #8]
 80132cc:	1b9b      	subs	r3, r3, r6
 80132ce:	60a3      	str	r3, [r4, #8]
 80132d0:	6823      	ldr	r3, [r4, #0]
 80132d2:	4433      	add	r3, r6
 80132d4:	6023      	str	r3, [r4, #0]
 80132d6:	2000      	movs	r0, #0
 80132d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80132dc:	462a      	mov	r2, r5
 80132de:	f7fd fb99 	bl	8010a14 <_realloc_r>
 80132e2:	4606      	mov	r6, r0
 80132e4:	2800      	cmp	r0, #0
 80132e6:	d1e0      	bne.n	80132aa <__ssputs_r+0x5c>
 80132e8:	6921      	ldr	r1, [r4, #16]
 80132ea:	4650      	mov	r0, sl
 80132ec:	f7ff fb4c 	bl	8012988 <_free_r>
 80132f0:	230c      	movs	r3, #12
 80132f2:	f8ca 3000 	str.w	r3, [sl]
 80132f6:	89a3      	ldrh	r3, [r4, #12]
 80132f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80132fc:	81a3      	strh	r3, [r4, #12]
 80132fe:	f04f 30ff 	mov.w	r0, #4294967295
 8013302:	e7e9      	b.n	80132d8 <__ssputs_r+0x8a>

08013304 <_svfiprintf_r>:
 8013304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013308:	4698      	mov	r8, r3
 801330a:	898b      	ldrh	r3, [r1, #12]
 801330c:	061b      	lsls	r3, r3, #24
 801330e:	b09d      	sub	sp, #116	@ 0x74
 8013310:	4607      	mov	r7, r0
 8013312:	460d      	mov	r5, r1
 8013314:	4614      	mov	r4, r2
 8013316:	d510      	bpl.n	801333a <_svfiprintf_r+0x36>
 8013318:	690b      	ldr	r3, [r1, #16]
 801331a:	b973      	cbnz	r3, 801333a <_svfiprintf_r+0x36>
 801331c:	2140      	movs	r1, #64	@ 0x40
 801331e:	f7fd faed 	bl	80108fc <_malloc_r>
 8013322:	6028      	str	r0, [r5, #0]
 8013324:	6128      	str	r0, [r5, #16]
 8013326:	b930      	cbnz	r0, 8013336 <_svfiprintf_r+0x32>
 8013328:	230c      	movs	r3, #12
 801332a:	603b      	str	r3, [r7, #0]
 801332c:	f04f 30ff 	mov.w	r0, #4294967295
 8013330:	b01d      	add	sp, #116	@ 0x74
 8013332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013336:	2340      	movs	r3, #64	@ 0x40
 8013338:	616b      	str	r3, [r5, #20]
 801333a:	2300      	movs	r3, #0
 801333c:	9309      	str	r3, [sp, #36]	@ 0x24
 801333e:	2320      	movs	r3, #32
 8013340:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8013344:	f8cd 800c 	str.w	r8, [sp, #12]
 8013348:	2330      	movs	r3, #48	@ 0x30
 801334a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80134e8 <_svfiprintf_r+0x1e4>
 801334e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8013352:	f04f 0901 	mov.w	r9, #1
 8013356:	4623      	mov	r3, r4
 8013358:	469a      	mov	sl, r3
 801335a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801335e:	b10a      	cbz	r2, 8013364 <_svfiprintf_r+0x60>
 8013360:	2a25      	cmp	r2, #37	@ 0x25
 8013362:	d1f9      	bne.n	8013358 <_svfiprintf_r+0x54>
 8013364:	ebba 0b04 	subs.w	fp, sl, r4
 8013368:	d00b      	beq.n	8013382 <_svfiprintf_r+0x7e>
 801336a:	465b      	mov	r3, fp
 801336c:	4622      	mov	r2, r4
 801336e:	4629      	mov	r1, r5
 8013370:	4638      	mov	r0, r7
 8013372:	f7ff ff6c 	bl	801324e <__ssputs_r>
 8013376:	3001      	adds	r0, #1
 8013378:	f000 80a7 	beq.w	80134ca <_svfiprintf_r+0x1c6>
 801337c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801337e:	445a      	add	r2, fp
 8013380:	9209      	str	r2, [sp, #36]	@ 0x24
 8013382:	f89a 3000 	ldrb.w	r3, [sl]
 8013386:	2b00      	cmp	r3, #0
 8013388:	f000 809f 	beq.w	80134ca <_svfiprintf_r+0x1c6>
 801338c:	2300      	movs	r3, #0
 801338e:	f04f 32ff 	mov.w	r2, #4294967295
 8013392:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8013396:	f10a 0a01 	add.w	sl, sl, #1
 801339a:	9304      	str	r3, [sp, #16]
 801339c:	9307      	str	r3, [sp, #28]
 801339e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80133a2:	931a      	str	r3, [sp, #104]	@ 0x68
 80133a4:	4654      	mov	r4, sl
 80133a6:	2205      	movs	r2, #5
 80133a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80133ac:	484e      	ldr	r0, [pc, #312]	@ (80134e8 <_svfiprintf_r+0x1e4>)
 80133ae:	f7ec ff1f 	bl	80001f0 <memchr>
 80133b2:	9a04      	ldr	r2, [sp, #16]
 80133b4:	b9d8      	cbnz	r0, 80133ee <_svfiprintf_r+0xea>
 80133b6:	06d0      	lsls	r0, r2, #27
 80133b8:	bf44      	itt	mi
 80133ba:	2320      	movmi	r3, #32
 80133bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80133c0:	0711      	lsls	r1, r2, #28
 80133c2:	bf44      	itt	mi
 80133c4:	232b      	movmi	r3, #43	@ 0x2b
 80133c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80133ca:	f89a 3000 	ldrb.w	r3, [sl]
 80133ce:	2b2a      	cmp	r3, #42	@ 0x2a
 80133d0:	d015      	beq.n	80133fe <_svfiprintf_r+0xfa>
 80133d2:	9a07      	ldr	r2, [sp, #28]
 80133d4:	4654      	mov	r4, sl
 80133d6:	2000      	movs	r0, #0
 80133d8:	f04f 0c0a 	mov.w	ip, #10
 80133dc:	4621      	mov	r1, r4
 80133de:	f811 3b01 	ldrb.w	r3, [r1], #1
 80133e2:	3b30      	subs	r3, #48	@ 0x30
 80133e4:	2b09      	cmp	r3, #9
 80133e6:	d94b      	bls.n	8013480 <_svfiprintf_r+0x17c>
 80133e8:	b1b0      	cbz	r0, 8013418 <_svfiprintf_r+0x114>
 80133ea:	9207      	str	r2, [sp, #28]
 80133ec:	e014      	b.n	8013418 <_svfiprintf_r+0x114>
 80133ee:	eba0 0308 	sub.w	r3, r0, r8
 80133f2:	fa09 f303 	lsl.w	r3, r9, r3
 80133f6:	4313      	orrs	r3, r2
 80133f8:	9304      	str	r3, [sp, #16]
 80133fa:	46a2      	mov	sl, r4
 80133fc:	e7d2      	b.n	80133a4 <_svfiprintf_r+0xa0>
 80133fe:	9b03      	ldr	r3, [sp, #12]
 8013400:	1d19      	adds	r1, r3, #4
 8013402:	681b      	ldr	r3, [r3, #0]
 8013404:	9103      	str	r1, [sp, #12]
 8013406:	2b00      	cmp	r3, #0
 8013408:	bfbb      	ittet	lt
 801340a:	425b      	neglt	r3, r3
 801340c:	f042 0202 	orrlt.w	r2, r2, #2
 8013410:	9307      	strge	r3, [sp, #28]
 8013412:	9307      	strlt	r3, [sp, #28]
 8013414:	bfb8      	it	lt
 8013416:	9204      	strlt	r2, [sp, #16]
 8013418:	7823      	ldrb	r3, [r4, #0]
 801341a:	2b2e      	cmp	r3, #46	@ 0x2e
 801341c:	d10a      	bne.n	8013434 <_svfiprintf_r+0x130>
 801341e:	7863      	ldrb	r3, [r4, #1]
 8013420:	2b2a      	cmp	r3, #42	@ 0x2a
 8013422:	d132      	bne.n	801348a <_svfiprintf_r+0x186>
 8013424:	9b03      	ldr	r3, [sp, #12]
 8013426:	1d1a      	adds	r2, r3, #4
 8013428:	681b      	ldr	r3, [r3, #0]
 801342a:	9203      	str	r2, [sp, #12]
 801342c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8013430:	3402      	adds	r4, #2
 8013432:	9305      	str	r3, [sp, #20]
 8013434:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80134f8 <_svfiprintf_r+0x1f4>
 8013438:	7821      	ldrb	r1, [r4, #0]
 801343a:	2203      	movs	r2, #3
 801343c:	4650      	mov	r0, sl
 801343e:	f7ec fed7 	bl	80001f0 <memchr>
 8013442:	b138      	cbz	r0, 8013454 <_svfiprintf_r+0x150>
 8013444:	9b04      	ldr	r3, [sp, #16]
 8013446:	eba0 000a 	sub.w	r0, r0, sl
 801344a:	2240      	movs	r2, #64	@ 0x40
 801344c:	4082      	lsls	r2, r0
 801344e:	4313      	orrs	r3, r2
 8013450:	3401      	adds	r4, #1
 8013452:	9304      	str	r3, [sp, #16]
 8013454:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013458:	4824      	ldr	r0, [pc, #144]	@ (80134ec <_svfiprintf_r+0x1e8>)
 801345a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801345e:	2206      	movs	r2, #6
 8013460:	f7ec fec6 	bl	80001f0 <memchr>
 8013464:	2800      	cmp	r0, #0
 8013466:	d036      	beq.n	80134d6 <_svfiprintf_r+0x1d2>
 8013468:	4b21      	ldr	r3, [pc, #132]	@ (80134f0 <_svfiprintf_r+0x1ec>)
 801346a:	bb1b      	cbnz	r3, 80134b4 <_svfiprintf_r+0x1b0>
 801346c:	9b03      	ldr	r3, [sp, #12]
 801346e:	3307      	adds	r3, #7
 8013470:	f023 0307 	bic.w	r3, r3, #7
 8013474:	3308      	adds	r3, #8
 8013476:	9303      	str	r3, [sp, #12]
 8013478:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801347a:	4433      	add	r3, r6
 801347c:	9309      	str	r3, [sp, #36]	@ 0x24
 801347e:	e76a      	b.n	8013356 <_svfiprintf_r+0x52>
 8013480:	fb0c 3202 	mla	r2, ip, r2, r3
 8013484:	460c      	mov	r4, r1
 8013486:	2001      	movs	r0, #1
 8013488:	e7a8      	b.n	80133dc <_svfiprintf_r+0xd8>
 801348a:	2300      	movs	r3, #0
 801348c:	3401      	adds	r4, #1
 801348e:	9305      	str	r3, [sp, #20]
 8013490:	4619      	mov	r1, r3
 8013492:	f04f 0c0a 	mov.w	ip, #10
 8013496:	4620      	mov	r0, r4
 8013498:	f810 2b01 	ldrb.w	r2, [r0], #1
 801349c:	3a30      	subs	r2, #48	@ 0x30
 801349e:	2a09      	cmp	r2, #9
 80134a0:	d903      	bls.n	80134aa <_svfiprintf_r+0x1a6>
 80134a2:	2b00      	cmp	r3, #0
 80134a4:	d0c6      	beq.n	8013434 <_svfiprintf_r+0x130>
 80134a6:	9105      	str	r1, [sp, #20]
 80134a8:	e7c4      	b.n	8013434 <_svfiprintf_r+0x130>
 80134aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80134ae:	4604      	mov	r4, r0
 80134b0:	2301      	movs	r3, #1
 80134b2:	e7f0      	b.n	8013496 <_svfiprintf_r+0x192>
 80134b4:	ab03      	add	r3, sp, #12
 80134b6:	9300      	str	r3, [sp, #0]
 80134b8:	462a      	mov	r2, r5
 80134ba:	4b0e      	ldr	r3, [pc, #56]	@ (80134f4 <_svfiprintf_r+0x1f0>)
 80134bc:	a904      	add	r1, sp, #16
 80134be:	4638      	mov	r0, r7
 80134c0:	f7fd fbfc 	bl	8010cbc <_printf_float>
 80134c4:	1c42      	adds	r2, r0, #1
 80134c6:	4606      	mov	r6, r0
 80134c8:	d1d6      	bne.n	8013478 <_svfiprintf_r+0x174>
 80134ca:	89ab      	ldrh	r3, [r5, #12]
 80134cc:	065b      	lsls	r3, r3, #25
 80134ce:	f53f af2d 	bmi.w	801332c <_svfiprintf_r+0x28>
 80134d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80134d4:	e72c      	b.n	8013330 <_svfiprintf_r+0x2c>
 80134d6:	ab03      	add	r3, sp, #12
 80134d8:	9300      	str	r3, [sp, #0]
 80134da:	462a      	mov	r2, r5
 80134dc:	4b05      	ldr	r3, [pc, #20]	@ (80134f4 <_svfiprintf_r+0x1f0>)
 80134de:	a904      	add	r1, sp, #16
 80134e0:	4638      	mov	r0, r7
 80134e2:	f7fd fe83 	bl	80111ec <_printf_i>
 80134e6:	e7ed      	b.n	80134c4 <_svfiprintf_r+0x1c0>
 80134e8:	08015a48 	.word	0x08015a48
 80134ec:	08015a52 	.word	0x08015a52
 80134f0:	08010cbd 	.word	0x08010cbd
 80134f4:	0801324f 	.word	0x0801324f
 80134f8:	08015a4e 	.word	0x08015a4e

080134fc <_sungetc_r>:
 80134fc:	b538      	push	{r3, r4, r5, lr}
 80134fe:	1c4b      	adds	r3, r1, #1
 8013500:	4614      	mov	r4, r2
 8013502:	d103      	bne.n	801350c <_sungetc_r+0x10>
 8013504:	f04f 35ff 	mov.w	r5, #4294967295
 8013508:	4628      	mov	r0, r5
 801350a:	bd38      	pop	{r3, r4, r5, pc}
 801350c:	8993      	ldrh	r3, [r2, #12]
 801350e:	f023 0320 	bic.w	r3, r3, #32
 8013512:	8193      	strh	r3, [r2, #12]
 8013514:	6853      	ldr	r3, [r2, #4]
 8013516:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8013518:	b2cd      	uxtb	r5, r1
 801351a:	b18a      	cbz	r2, 8013540 <_sungetc_r+0x44>
 801351c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 801351e:	429a      	cmp	r2, r3
 8013520:	dd08      	ble.n	8013534 <_sungetc_r+0x38>
 8013522:	6823      	ldr	r3, [r4, #0]
 8013524:	1e5a      	subs	r2, r3, #1
 8013526:	6022      	str	r2, [r4, #0]
 8013528:	f803 5c01 	strb.w	r5, [r3, #-1]
 801352c:	6863      	ldr	r3, [r4, #4]
 801352e:	3301      	adds	r3, #1
 8013530:	6063      	str	r3, [r4, #4]
 8013532:	e7e9      	b.n	8013508 <_sungetc_r+0xc>
 8013534:	4621      	mov	r1, r4
 8013536:	f000 fdca 	bl	80140ce <__submore>
 801353a:	2800      	cmp	r0, #0
 801353c:	d0f1      	beq.n	8013522 <_sungetc_r+0x26>
 801353e:	e7e1      	b.n	8013504 <_sungetc_r+0x8>
 8013540:	6921      	ldr	r1, [r4, #16]
 8013542:	6822      	ldr	r2, [r4, #0]
 8013544:	b141      	cbz	r1, 8013558 <_sungetc_r+0x5c>
 8013546:	4291      	cmp	r1, r2
 8013548:	d206      	bcs.n	8013558 <_sungetc_r+0x5c>
 801354a:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 801354e:	42a9      	cmp	r1, r5
 8013550:	d102      	bne.n	8013558 <_sungetc_r+0x5c>
 8013552:	3a01      	subs	r2, #1
 8013554:	6022      	str	r2, [r4, #0]
 8013556:	e7ea      	b.n	801352e <_sungetc_r+0x32>
 8013558:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 801355c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8013560:	6363      	str	r3, [r4, #52]	@ 0x34
 8013562:	2303      	movs	r3, #3
 8013564:	63a3      	str	r3, [r4, #56]	@ 0x38
 8013566:	4623      	mov	r3, r4
 8013568:	f803 5f46 	strb.w	r5, [r3, #70]!
 801356c:	6023      	str	r3, [r4, #0]
 801356e:	2301      	movs	r3, #1
 8013570:	e7de      	b.n	8013530 <_sungetc_r+0x34>

08013572 <__ssrefill_r>:
 8013572:	b510      	push	{r4, lr}
 8013574:	460c      	mov	r4, r1
 8013576:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8013578:	b169      	cbz	r1, 8013596 <__ssrefill_r+0x24>
 801357a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801357e:	4299      	cmp	r1, r3
 8013580:	d001      	beq.n	8013586 <__ssrefill_r+0x14>
 8013582:	f7ff fa01 	bl	8012988 <_free_r>
 8013586:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8013588:	6063      	str	r3, [r4, #4]
 801358a:	2000      	movs	r0, #0
 801358c:	6360      	str	r0, [r4, #52]	@ 0x34
 801358e:	b113      	cbz	r3, 8013596 <__ssrefill_r+0x24>
 8013590:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013592:	6023      	str	r3, [r4, #0]
 8013594:	bd10      	pop	{r4, pc}
 8013596:	6923      	ldr	r3, [r4, #16]
 8013598:	6023      	str	r3, [r4, #0]
 801359a:	2300      	movs	r3, #0
 801359c:	6063      	str	r3, [r4, #4]
 801359e:	89a3      	ldrh	r3, [r4, #12]
 80135a0:	f043 0320 	orr.w	r3, r3, #32
 80135a4:	81a3      	strh	r3, [r4, #12]
 80135a6:	f04f 30ff 	mov.w	r0, #4294967295
 80135aa:	e7f3      	b.n	8013594 <__ssrefill_r+0x22>

080135ac <__ssvfiscanf_r>:
 80135ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80135b0:	460c      	mov	r4, r1
 80135b2:	f5ad 7d22 	sub.w	sp, sp, #648	@ 0x288
 80135b6:	2100      	movs	r1, #0
 80135b8:	e9cd 1144 	strd	r1, r1, [sp, #272]	@ 0x110
 80135bc:	49a5      	ldr	r1, [pc, #660]	@ (8013854 <__ssvfiscanf_r+0x2a8>)
 80135be:	91a0      	str	r1, [sp, #640]	@ 0x280
 80135c0:	f10d 0804 	add.w	r8, sp, #4
 80135c4:	49a4      	ldr	r1, [pc, #656]	@ (8013858 <__ssvfiscanf_r+0x2ac>)
 80135c6:	4fa5      	ldr	r7, [pc, #660]	@ (801385c <__ssvfiscanf_r+0x2b0>)
 80135c8:	f8cd 8118 	str.w	r8, [sp, #280]	@ 0x118
 80135cc:	4606      	mov	r6, r0
 80135ce:	91a1      	str	r1, [sp, #644]	@ 0x284
 80135d0:	9300      	str	r3, [sp, #0]
 80135d2:	7813      	ldrb	r3, [r2, #0]
 80135d4:	2b00      	cmp	r3, #0
 80135d6:	f000 8158 	beq.w	801388a <__ssvfiscanf_r+0x2de>
 80135da:	5cf9      	ldrb	r1, [r7, r3]
 80135dc:	f011 0108 	ands.w	r1, r1, #8
 80135e0:	f102 0501 	add.w	r5, r2, #1
 80135e4:	d019      	beq.n	801361a <__ssvfiscanf_r+0x6e>
 80135e6:	6863      	ldr	r3, [r4, #4]
 80135e8:	2b00      	cmp	r3, #0
 80135ea:	dd0f      	ble.n	801360c <__ssvfiscanf_r+0x60>
 80135ec:	6823      	ldr	r3, [r4, #0]
 80135ee:	781a      	ldrb	r2, [r3, #0]
 80135f0:	5cba      	ldrb	r2, [r7, r2]
 80135f2:	0712      	lsls	r2, r2, #28
 80135f4:	d401      	bmi.n	80135fa <__ssvfiscanf_r+0x4e>
 80135f6:	462a      	mov	r2, r5
 80135f8:	e7eb      	b.n	80135d2 <__ssvfiscanf_r+0x26>
 80135fa:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 80135fc:	3201      	adds	r2, #1
 80135fe:	9245      	str	r2, [sp, #276]	@ 0x114
 8013600:	6862      	ldr	r2, [r4, #4]
 8013602:	3301      	adds	r3, #1
 8013604:	3a01      	subs	r2, #1
 8013606:	6062      	str	r2, [r4, #4]
 8013608:	6023      	str	r3, [r4, #0]
 801360a:	e7ec      	b.n	80135e6 <__ssvfiscanf_r+0x3a>
 801360c:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 801360e:	4621      	mov	r1, r4
 8013610:	4630      	mov	r0, r6
 8013612:	4798      	blx	r3
 8013614:	2800      	cmp	r0, #0
 8013616:	d0e9      	beq.n	80135ec <__ssvfiscanf_r+0x40>
 8013618:	e7ed      	b.n	80135f6 <__ssvfiscanf_r+0x4a>
 801361a:	2b25      	cmp	r3, #37	@ 0x25
 801361c:	d012      	beq.n	8013644 <__ssvfiscanf_r+0x98>
 801361e:	4699      	mov	r9, r3
 8013620:	6863      	ldr	r3, [r4, #4]
 8013622:	2b00      	cmp	r3, #0
 8013624:	f340 8093 	ble.w	801374e <__ssvfiscanf_r+0x1a2>
 8013628:	6822      	ldr	r2, [r4, #0]
 801362a:	7813      	ldrb	r3, [r2, #0]
 801362c:	454b      	cmp	r3, r9
 801362e:	f040 812c 	bne.w	801388a <__ssvfiscanf_r+0x2de>
 8013632:	6863      	ldr	r3, [r4, #4]
 8013634:	3b01      	subs	r3, #1
 8013636:	6063      	str	r3, [r4, #4]
 8013638:	9b45      	ldr	r3, [sp, #276]	@ 0x114
 801363a:	3201      	adds	r2, #1
 801363c:	3301      	adds	r3, #1
 801363e:	6022      	str	r2, [r4, #0]
 8013640:	9345      	str	r3, [sp, #276]	@ 0x114
 8013642:	e7d8      	b.n	80135f6 <__ssvfiscanf_r+0x4a>
 8013644:	9141      	str	r1, [sp, #260]	@ 0x104
 8013646:	9143      	str	r1, [sp, #268]	@ 0x10c
 8013648:	7853      	ldrb	r3, [r2, #1]
 801364a:	2b2a      	cmp	r3, #42	@ 0x2a
 801364c:	bf02      	ittt	eq
 801364e:	2310      	moveq	r3, #16
 8013650:	1c95      	addeq	r5, r2, #2
 8013652:	9341      	streq	r3, [sp, #260]	@ 0x104
 8013654:	220a      	movs	r2, #10
 8013656:	46a9      	mov	r9, r5
 8013658:	f819 1b01 	ldrb.w	r1, [r9], #1
 801365c:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 8013660:	2b09      	cmp	r3, #9
 8013662:	d91e      	bls.n	80136a2 <__ssvfiscanf_r+0xf6>
 8013664:	f8df a1f8 	ldr.w	sl, [pc, #504]	@ 8013860 <__ssvfiscanf_r+0x2b4>
 8013668:	2203      	movs	r2, #3
 801366a:	4650      	mov	r0, sl
 801366c:	f7ec fdc0 	bl	80001f0 <memchr>
 8013670:	b138      	cbz	r0, 8013682 <__ssvfiscanf_r+0xd6>
 8013672:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8013674:	eba0 000a 	sub.w	r0, r0, sl
 8013678:	2301      	movs	r3, #1
 801367a:	4083      	lsls	r3, r0
 801367c:	4313      	orrs	r3, r2
 801367e:	9341      	str	r3, [sp, #260]	@ 0x104
 8013680:	464d      	mov	r5, r9
 8013682:	f815 3b01 	ldrb.w	r3, [r5], #1
 8013686:	2b78      	cmp	r3, #120	@ 0x78
 8013688:	d806      	bhi.n	8013698 <__ssvfiscanf_r+0xec>
 801368a:	2b57      	cmp	r3, #87	@ 0x57
 801368c:	d810      	bhi.n	80136b0 <__ssvfiscanf_r+0x104>
 801368e:	2b25      	cmp	r3, #37	@ 0x25
 8013690:	d0c5      	beq.n	801361e <__ssvfiscanf_r+0x72>
 8013692:	d857      	bhi.n	8013744 <__ssvfiscanf_r+0x198>
 8013694:	2b00      	cmp	r3, #0
 8013696:	d065      	beq.n	8013764 <__ssvfiscanf_r+0x1b8>
 8013698:	2303      	movs	r3, #3
 801369a:	9347      	str	r3, [sp, #284]	@ 0x11c
 801369c:	230a      	movs	r3, #10
 801369e:	9342      	str	r3, [sp, #264]	@ 0x108
 80136a0:	e078      	b.n	8013794 <__ssvfiscanf_r+0x1e8>
 80136a2:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 80136a4:	fb02 1103 	mla	r1, r2, r3, r1
 80136a8:	3930      	subs	r1, #48	@ 0x30
 80136aa:	9143      	str	r1, [sp, #268]	@ 0x10c
 80136ac:	464d      	mov	r5, r9
 80136ae:	e7d2      	b.n	8013656 <__ssvfiscanf_r+0xaa>
 80136b0:	f1a3 0258 	sub.w	r2, r3, #88	@ 0x58
 80136b4:	2a20      	cmp	r2, #32
 80136b6:	d8ef      	bhi.n	8013698 <__ssvfiscanf_r+0xec>
 80136b8:	a101      	add	r1, pc, #4	@ (adr r1, 80136c0 <__ssvfiscanf_r+0x114>)
 80136ba:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80136be:	bf00      	nop
 80136c0:	08013773 	.word	0x08013773
 80136c4:	08013699 	.word	0x08013699
 80136c8:	08013699 	.word	0x08013699
 80136cc:	080137cd 	.word	0x080137cd
 80136d0:	08013699 	.word	0x08013699
 80136d4:	08013699 	.word	0x08013699
 80136d8:	08013699 	.word	0x08013699
 80136dc:	08013699 	.word	0x08013699
 80136e0:	08013699 	.word	0x08013699
 80136e4:	08013699 	.word	0x08013699
 80136e8:	08013699 	.word	0x08013699
 80136ec:	080137e3 	.word	0x080137e3
 80136f0:	080137c9 	.word	0x080137c9
 80136f4:	0801374b 	.word	0x0801374b
 80136f8:	0801374b 	.word	0x0801374b
 80136fc:	0801374b 	.word	0x0801374b
 8013700:	08013699 	.word	0x08013699
 8013704:	08013785 	.word	0x08013785
 8013708:	08013699 	.word	0x08013699
 801370c:	08013699 	.word	0x08013699
 8013710:	08013699 	.word	0x08013699
 8013714:	08013699 	.word	0x08013699
 8013718:	080137f3 	.word	0x080137f3
 801371c:	0801378d 	.word	0x0801378d
 8013720:	0801376b 	.word	0x0801376b
 8013724:	08013699 	.word	0x08013699
 8013728:	08013699 	.word	0x08013699
 801372c:	080137ef 	.word	0x080137ef
 8013730:	08013699 	.word	0x08013699
 8013734:	080137c9 	.word	0x080137c9
 8013738:	08013699 	.word	0x08013699
 801373c:	08013699 	.word	0x08013699
 8013740:	08013773 	.word	0x08013773
 8013744:	3b45      	subs	r3, #69	@ 0x45
 8013746:	2b02      	cmp	r3, #2
 8013748:	d8a6      	bhi.n	8013698 <__ssvfiscanf_r+0xec>
 801374a:	2305      	movs	r3, #5
 801374c:	e021      	b.n	8013792 <__ssvfiscanf_r+0x1e6>
 801374e:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8013750:	4621      	mov	r1, r4
 8013752:	4630      	mov	r0, r6
 8013754:	4798      	blx	r3
 8013756:	2800      	cmp	r0, #0
 8013758:	f43f af66 	beq.w	8013628 <__ssvfiscanf_r+0x7c>
 801375c:	9844      	ldr	r0, [sp, #272]	@ 0x110
 801375e:	2800      	cmp	r0, #0
 8013760:	f040 808b 	bne.w	801387a <__ssvfiscanf_r+0x2ce>
 8013764:	f04f 30ff 	mov.w	r0, #4294967295
 8013768:	e08b      	b.n	8013882 <__ssvfiscanf_r+0x2d6>
 801376a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 801376c:	f042 0220 	orr.w	r2, r2, #32
 8013770:	9241      	str	r2, [sp, #260]	@ 0x104
 8013772:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 8013774:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8013778:	9241      	str	r2, [sp, #260]	@ 0x104
 801377a:	2210      	movs	r2, #16
 801377c:	2b6e      	cmp	r3, #110	@ 0x6e
 801377e:	9242      	str	r2, [sp, #264]	@ 0x108
 8013780:	d902      	bls.n	8013788 <__ssvfiscanf_r+0x1dc>
 8013782:	e005      	b.n	8013790 <__ssvfiscanf_r+0x1e4>
 8013784:	2300      	movs	r3, #0
 8013786:	9342      	str	r3, [sp, #264]	@ 0x108
 8013788:	2303      	movs	r3, #3
 801378a:	e002      	b.n	8013792 <__ssvfiscanf_r+0x1e6>
 801378c:	2308      	movs	r3, #8
 801378e:	9342      	str	r3, [sp, #264]	@ 0x108
 8013790:	2304      	movs	r3, #4
 8013792:	9347      	str	r3, [sp, #284]	@ 0x11c
 8013794:	6863      	ldr	r3, [r4, #4]
 8013796:	2b00      	cmp	r3, #0
 8013798:	dd39      	ble.n	801380e <__ssvfiscanf_r+0x262>
 801379a:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 801379c:	0659      	lsls	r1, r3, #25
 801379e:	d404      	bmi.n	80137aa <__ssvfiscanf_r+0x1fe>
 80137a0:	6823      	ldr	r3, [r4, #0]
 80137a2:	781a      	ldrb	r2, [r3, #0]
 80137a4:	5cba      	ldrb	r2, [r7, r2]
 80137a6:	0712      	lsls	r2, r2, #28
 80137a8:	d438      	bmi.n	801381c <__ssvfiscanf_r+0x270>
 80137aa:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
 80137ac:	2b02      	cmp	r3, #2
 80137ae:	dc47      	bgt.n	8013840 <__ssvfiscanf_r+0x294>
 80137b0:	466b      	mov	r3, sp
 80137b2:	4622      	mov	r2, r4
 80137b4:	a941      	add	r1, sp, #260	@ 0x104
 80137b6:	4630      	mov	r0, r6
 80137b8:	f000 f9ae 	bl	8013b18 <_scanf_chars>
 80137bc:	2801      	cmp	r0, #1
 80137be:	d064      	beq.n	801388a <__ssvfiscanf_r+0x2de>
 80137c0:	2802      	cmp	r0, #2
 80137c2:	f47f af18 	bne.w	80135f6 <__ssvfiscanf_r+0x4a>
 80137c6:	e7c9      	b.n	801375c <__ssvfiscanf_r+0x1b0>
 80137c8:	220a      	movs	r2, #10
 80137ca:	e7d7      	b.n	801377c <__ssvfiscanf_r+0x1d0>
 80137cc:	4629      	mov	r1, r5
 80137ce:	4640      	mov	r0, r8
 80137d0:	f000 fc44 	bl	801405c <__sccl>
 80137d4:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 80137d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80137da:	9341      	str	r3, [sp, #260]	@ 0x104
 80137dc:	4605      	mov	r5, r0
 80137de:	2301      	movs	r3, #1
 80137e0:	e7d7      	b.n	8013792 <__ssvfiscanf_r+0x1e6>
 80137e2:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 80137e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80137e8:	9341      	str	r3, [sp, #260]	@ 0x104
 80137ea:	2300      	movs	r3, #0
 80137ec:	e7d1      	b.n	8013792 <__ssvfiscanf_r+0x1e6>
 80137ee:	2302      	movs	r3, #2
 80137f0:	e7cf      	b.n	8013792 <__ssvfiscanf_r+0x1e6>
 80137f2:	9841      	ldr	r0, [sp, #260]	@ 0x104
 80137f4:	06c3      	lsls	r3, r0, #27
 80137f6:	f53f aefe 	bmi.w	80135f6 <__ssvfiscanf_r+0x4a>
 80137fa:	9b00      	ldr	r3, [sp, #0]
 80137fc:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 80137fe:	1d19      	adds	r1, r3, #4
 8013800:	9100      	str	r1, [sp, #0]
 8013802:	681b      	ldr	r3, [r3, #0]
 8013804:	07c0      	lsls	r0, r0, #31
 8013806:	bf4c      	ite	mi
 8013808:	801a      	strhmi	r2, [r3, #0]
 801380a:	601a      	strpl	r2, [r3, #0]
 801380c:	e6f3      	b.n	80135f6 <__ssvfiscanf_r+0x4a>
 801380e:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8013810:	4621      	mov	r1, r4
 8013812:	4630      	mov	r0, r6
 8013814:	4798      	blx	r3
 8013816:	2800      	cmp	r0, #0
 8013818:	d0bf      	beq.n	801379a <__ssvfiscanf_r+0x1ee>
 801381a:	e79f      	b.n	801375c <__ssvfiscanf_r+0x1b0>
 801381c:	9a45      	ldr	r2, [sp, #276]	@ 0x114
 801381e:	3201      	adds	r2, #1
 8013820:	9245      	str	r2, [sp, #276]	@ 0x114
 8013822:	6862      	ldr	r2, [r4, #4]
 8013824:	3a01      	subs	r2, #1
 8013826:	2a00      	cmp	r2, #0
 8013828:	6062      	str	r2, [r4, #4]
 801382a:	dd02      	ble.n	8013832 <__ssvfiscanf_r+0x286>
 801382c:	3301      	adds	r3, #1
 801382e:	6023      	str	r3, [r4, #0]
 8013830:	e7b6      	b.n	80137a0 <__ssvfiscanf_r+0x1f4>
 8013832:	9ba1      	ldr	r3, [sp, #644]	@ 0x284
 8013834:	4621      	mov	r1, r4
 8013836:	4630      	mov	r0, r6
 8013838:	4798      	blx	r3
 801383a:	2800      	cmp	r0, #0
 801383c:	d0b0      	beq.n	80137a0 <__ssvfiscanf_r+0x1f4>
 801383e:	e78d      	b.n	801375c <__ssvfiscanf_r+0x1b0>
 8013840:	2b04      	cmp	r3, #4
 8013842:	dc0f      	bgt.n	8013864 <__ssvfiscanf_r+0x2b8>
 8013844:	466b      	mov	r3, sp
 8013846:	4622      	mov	r2, r4
 8013848:	a941      	add	r1, sp, #260	@ 0x104
 801384a:	4630      	mov	r0, r6
 801384c:	f000 f9be 	bl	8013bcc <_scanf_i>
 8013850:	e7b4      	b.n	80137bc <__ssvfiscanf_r+0x210>
 8013852:	bf00      	nop
 8013854:	080134fd 	.word	0x080134fd
 8013858:	08013573 	.word	0x08013573
 801385c:	0801568d 	.word	0x0801568d
 8013860:	08015a4e 	.word	0x08015a4e
 8013864:	4b0a      	ldr	r3, [pc, #40]	@ (8013890 <__ssvfiscanf_r+0x2e4>)
 8013866:	2b00      	cmp	r3, #0
 8013868:	f43f aec5 	beq.w	80135f6 <__ssvfiscanf_r+0x4a>
 801386c:	466b      	mov	r3, sp
 801386e:	4622      	mov	r2, r4
 8013870:	a941      	add	r1, sp, #260	@ 0x104
 8013872:	4630      	mov	r0, r6
 8013874:	f3af 8000 	nop.w
 8013878:	e7a0      	b.n	80137bc <__ssvfiscanf_r+0x210>
 801387a:	89a3      	ldrh	r3, [r4, #12]
 801387c:	065b      	lsls	r3, r3, #25
 801387e:	f53f af71 	bmi.w	8013764 <__ssvfiscanf_r+0x1b8>
 8013882:	f50d 7d22 	add.w	sp, sp, #648	@ 0x288
 8013886:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801388a:	9844      	ldr	r0, [sp, #272]	@ 0x110
 801388c:	e7f9      	b.n	8013882 <__ssvfiscanf_r+0x2d6>
 801388e:	bf00      	nop
 8013890:	00000000 	.word	0x00000000

08013894 <__sfputc_r>:
 8013894:	6893      	ldr	r3, [r2, #8]
 8013896:	3b01      	subs	r3, #1
 8013898:	2b00      	cmp	r3, #0
 801389a:	b410      	push	{r4}
 801389c:	6093      	str	r3, [r2, #8]
 801389e:	da08      	bge.n	80138b2 <__sfputc_r+0x1e>
 80138a0:	6994      	ldr	r4, [r2, #24]
 80138a2:	42a3      	cmp	r3, r4
 80138a4:	db01      	blt.n	80138aa <__sfputc_r+0x16>
 80138a6:	290a      	cmp	r1, #10
 80138a8:	d103      	bne.n	80138b2 <__sfputc_r+0x1e>
 80138aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80138ae:	f7fd bfba 	b.w	8011826 <__swbuf_r>
 80138b2:	6813      	ldr	r3, [r2, #0]
 80138b4:	1c58      	adds	r0, r3, #1
 80138b6:	6010      	str	r0, [r2, #0]
 80138b8:	7019      	strb	r1, [r3, #0]
 80138ba:	4608      	mov	r0, r1
 80138bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80138c0:	4770      	bx	lr

080138c2 <__sfputs_r>:
 80138c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80138c4:	4606      	mov	r6, r0
 80138c6:	460f      	mov	r7, r1
 80138c8:	4614      	mov	r4, r2
 80138ca:	18d5      	adds	r5, r2, r3
 80138cc:	42ac      	cmp	r4, r5
 80138ce:	d101      	bne.n	80138d4 <__sfputs_r+0x12>
 80138d0:	2000      	movs	r0, #0
 80138d2:	e007      	b.n	80138e4 <__sfputs_r+0x22>
 80138d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80138d8:	463a      	mov	r2, r7
 80138da:	4630      	mov	r0, r6
 80138dc:	f7ff ffda 	bl	8013894 <__sfputc_r>
 80138e0:	1c43      	adds	r3, r0, #1
 80138e2:	d1f3      	bne.n	80138cc <__sfputs_r+0xa>
 80138e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080138e8 <_vfiprintf_r>:
 80138e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138ec:	460d      	mov	r5, r1
 80138ee:	b09d      	sub	sp, #116	@ 0x74
 80138f0:	4614      	mov	r4, r2
 80138f2:	4698      	mov	r8, r3
 80138f4:	4606      	mov	r6, r0
 80138f6:	b118      	cbz	r0, 8013900 <_vfiprintf_r+0x18>
 80138f8:	6a03      	ldr	r3, [r0, #32]
 80138fa:	b90b      	cbnz	r3, 8013900 <_vfiprintf_r+0x18>
 80138fc:	f7fd fe22 	bl	8011544 <__sinit>
 8013900:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8013902:	07d9      	lsls	r1, r3, #31
 8013904:	d405      	bmi.n	8013912 <_vfiprintf_r+0x2a>
 8013906:	89ab      	ldrh	r3, [r5, #12]
 8013908:	059a      	lsls	r2, r3, #22
 801390a:	d402      	bmi.n	8013912 <_vfiprintf_r+0x2a>
 801390c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801390e:	f7f0 fbef 	bl	80040f0 <__retarget_lock_acquire_recursive>
 8013912:	89ab      	ldrh	r3, [r5, #12]
 8013914:	071b      	lsls	r3, r3, #28
 8013916:	d501      	bpl.n	801391c <_vfiprintf_r+0x34>
 8013918:	692b      	ldr	r3, [r5, #16]
 801391a:	b99b      	cbnz	r3, 8013944 <_vfiprintf_r+0x5c>
 801391c:	4629      	mov	r1, r5
 801391e:	4630      	mov	r0, r6
 8013920:	f7fd ffc0 	bl	80118a4 <__swsetup_r>
 8013924:	b170      	cbz	r0, 8013944 <_vfiprintf_r+0x5c>
 8013926:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8013928:	07dc      	lsls	r4, r3, #31
 801392a:	d504      	bpl.n	8013936 <_vfiprintf_r+0x4e>
 801392c:	f04f 30ff 	mov.w	r0, #4294967295
 8013930:	b01d      	add	sp, #116	@ 0x74
 8013932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013936:	89ab      	ldrh	r3, [r5, #12]
 8013938:	0598      	lsls	r0, r3, #22
 801393a:	d4f7      	bmi.n	801392c <_vfiprintf_r+0x44>
 801393c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801393e:	f7f0 fbec 	bl	800411a <__retarget_lock_release_recursive>
 8013942:	e7f3      	b.n	801392c <_vfiprintf_r+0x44>
 8013944:	2300      	movs	r3, #0
 8013946:	9309      	str	r3, [sp, #36]	@ 0x24
 8013948:	2320      	movs	r3, #32
 801394a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801394e:	f8cd 800c 	str.w	r8, [sp, #12]
 8013952:	2330      	movs	r3, #48	@ 0x30
 8013954:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8013b04 <_vfiprintf_r+0x21c>
 8013958:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801395c:	f04f 0901 	mov.w	r9, #1
 8013960:	4623      	mov	r3, r4
 8013962:	469a      	mov	sl, r3
 8013964:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013968:	b10a      	cbz	r2, 801396e <_vfiprintf_r+0x86>
 801396a:	2a25      	cmp	r2, #37	@ 0x25
 801396c:	d1f9      	bne.n	8013962 <_vfiprintf_r+0x7a>
 801396e:	ebba 0b04 	subs.w	fp, sl, r4
 8013972:	d00b      	beq.n	801398c <_vfiprintf_r+0xa4>
 8013974:	465b      	mov	r3, fp
 8013976:	4622      	mov	r2, r4
 8013978:	4629      	mov	r1, r5
 801397a:	4630      	mov	r0, r6
 801397c:	f7ff ffa1 	bl	80138c2 <__sfputs_r>
 8013980:	3001      	adds	r0, #1
 8013982:	f000 80a7 	beq.w	8013ad4 <_vfiprintf_r+0x1ec>
 8013986:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013988:	445a      	add	r2, fp
 801398a:	9209      	str	r2, [sp, #36]	@ 0x24
 801398c:	f89a 3000 	ldrb.w	r3, [sl]
 8013990:	2b00      	cmp	r3, #0
 8013992:	f000 809f 	beq.w	8013ad4 <_vfiprintf_r+0x1ec>
 8013996:	2300      	movs	r3, #0
 8013998:	f04f 32ff 	mov.w	r2, #4294967295
 801399c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80139a0:	f10a 0a01 	add.w	sl, sl, #1
 80139a4:	9304      	str	r3, [sp, #16]
 80139a6:	9307      	str	r3, [sp, #28]
 80139a8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80139ac:	931a      	str	r3, [sp, #104]	@ 0x68
 80139ae:	4654      	mov	r4, sl
 80139b0:	2205      	movs	r2, #5
 80139b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80139b6:	4853      	ldr	r0, [pc, #332]	@ (8013b04 <_vfiprintf_r+0x21c>)
 80139b8:	f7ec fc1a 	bl	80001f0 <memchr>
 80139bc:	9a04      	ldr	r2, [sp, #16]
 80139be:	b9d8      	cbnz	r0, 80139f8 <_vfiprintf_r+0x110>
 80139c0:	06d1      	lsls	r1, r2, #27
 80139c2:	bf44      	itt	mi
 80139c4:	2320      	movmi	r3, #32
 80139c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80139ca:	0713      	lsls	r3, r2, #28
 80139cc:	bf44      	itt	mi
 80139ce:	232b      	movmi	r3, #43	@ 0x2b
 80139d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80139d4:	f89a 3000 	ldrb.w	r3, [sl]
 80139d8:	2b2a      	cmp	r3, #42	@ 0x2a
 80139da:	d015      	beq.n	8013a08 <_vfiprintf_r+0x120>
 80139dc:	9a07      	ldr	r2, [sp, #28]
 80139de:	4654      	mov	r4, sl
 80139e0:	2000      	movs	r0, #0
 80139e2:	f04f 0c0a 	mov.w	ip, #10
 80139e6:	4621      	mov	r1, r4
 80139e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80139ec:	3b30      	subs	r3, #48	@ 0x30
 80139ee:	2b09      	cmp	r3, #9
 80139f0:	d94b      	bls.n	8013a8a <_vfiprintf_r+0x1a2>
 80139f2:	b1b0      	cbz	r0, 8013a22 <_vfiprintf_r+0x13a>
 80139f4:	9207      	str	r2, [sp, #28]
 80139f6:	e014      	b.n	8013a22 <_vfiprintf_r+0x13a>
 80139f8:	eba0 0308 	sub.w	r3, r0, r8
 80139fc:	fa09 f303 	lsl.w	r3, r9, r3
 8013a00:	4313      	orrs	r3, r2
 8013a02:	9304      	str	r3, [sp, #16]
 8013a04:	46a2      	mov	sl, r4
 8013a06:	e7d2      	b.n	80139ae <_vfiprintf_r+0xc6>
 8013a08:	9b03      	ldr	r3, [sp, #12]
 8013a0a:	1d19      	adds	r1, r3, #4
 8013a0c:	681b      	ldr	r3, [r3, #0]
 8013a0e:	9103      	str	r1, [sp, #12]
 8013a10:	2b00      	cmp	r3, #0
 8013a12:	bfbb      	ittet	lt
 8013a14:	425b      	neglt	r3, r3
 8013a16:	f042 0202 	orrlt.w	r2, r2, #2
 8013a1a:	9307      	strge	r3, [sp, #28]
 8013a1c:	9307      	strlt	r3, [sp, #28]
 8013a1e:	bfb8      	it	lt
 8013a20:	9204      	strlt	r2, [sp, #16]
 8013a22:	7823      	ldrb	r3, [r4, #0]
 8013a24:	2b2e      	cmp	r3, #46	@ 0x2e
 8013a26:	d10a      	bne.n	8013a3e <_vfiprintf_r+0x156>
 8013a28:	7863      	ldrb	r3, [r4, #1]
 8013a2a:	2b2a      	cmp	r3, #42	@ 0x2a
 8013a2c:	d132      	bne.n	8013a94 <_vfiprintf_r+0x1ac>
 8013a2e:	9b03      	ldr	r3, [sp, #12]
 8013a30:	1d1a      	adds	r2, r3, #4
 8013a32:	681b      	ldr	r3, [r3, #0]
 8013a34:	9203      	str	r2, [sp, #12]
 8013a36:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8013a3a:	3402      	adds	r4, #2
 8013a3c:	9305      	str	r3, [sp, #20]
 8013a3e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8013b14 <_vfiprintf_r+0x22c>
 8013a42:	7821      	ldrb	r1, [r4, #0]
 8013a44:	2203      	movs	r2, #3
 8013a46:	4650      	mov	r0, sl
 8013a48:	f7ec fbd2 	bl	80001f0 <memchr>
 8013a4c:	b138      	cbz	r0, 8013a5e <_vfiprintf_r+0x176>
 8013a4e:	9b04      	ldr	r3, [sp, #16]
 8013a50:	eba0 000a 	sub.w	r0, r0, sl
 8013a54:	2240      	movs	r2, #64	@ 0x40
 8013a56:	4082      	lsls	r2, r0
 8013a58:	4313      	orrs	r3, r2
 8013a5a:	3401      	adds	r4, #1
 8013a5c:	9304      	str	r3, [sp, #16]
 8013a5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013a62:	4829      	ldr	r0, [pc, #164]	@ (8013b08 <_vfiprintf_r+0x220>)
 8013a64:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8013a68:	2206      	movs	r2, #6
 8013a6a:	f7ec fbc1 	bl	80001f0 <memchr>
 8013a6e:	2800      	cmp	r0, #0
 8013a70:	d03f      	beq.n	8013af2 <_vfiprintf_r+0x20a>
 8013a72:	4b26      	ldr	r3, [pc, #152]	@ (8013b0c <_vfiprintf_r+0x224>)
 8013a74:	bb1b      	cbnz	r3, 8013abe <_vfiprintf_r+0x1d6>
 8013a76:	9b03      	ldr	r3, [sp, #12]
 8013a78:	3307      	adds	r3, #7
 8013a7a:	f023 0307 	bic.w	r3, r3, #7
 8013a7e:	3308      	adds	r3, #8
 8013a80:	9303      	str	r3, [sp, #12]
 8013a82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013a84:	443b      	add	r3, r7
 8013a86:	9309      	str	r3, [sp, #36]	@ 0x24
 8013a88:	e76a      	b.n	8013960 <_vfiprintf_r+0x78>
 8013a8a:	fb0c 3202 	mla	r2, ip, r2, r3
 8013a8e:	460c      	mov	r4, r1
 8013a90:	2001      	movs	r0, #1
 8013a92:	e7a8      	b.n	80139e6 <_vfiprintf_r+0xfe>
 8013a94:	2300      	movs	r3, #0
 8013a96:	3401      	adds	r4, #1
 8013a98:	9305      	str	r3, [sp, #20]
 8013a9a:	4619      	mov	r1, r3
 8013a9c:	f04f 0c0a 	mov.w	ip, #10
 8013aa0:	4620      	mov	r0, r4
 8013aa2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013aa6:	3a30      	subs	r2, #48	@ 0x30
 8013aa8:	2a09      	cmp	r2, #9
 8013aaa:	d903      	bls.n	8013ab4 <_vfiprintf_r+0x1cc>
 8013aac:	2b00      	cmp	r3, #0
 8013aae:	d0c6      	beq.n	8013a3e <_vfiprintf_r+0x156>
 8013ab0:	9105      	str	r1, [sp, #20]
 8013ab2:	e7c4      	b.n	8013a3e <_vfiprintf_r+0x156>
 8013ab4:	fb0c 2101 	mla	r1, ip, r1, r2
 8013ab8:	4604      	mov	r4, r0
 8013aba:	2301      	movs	r3, #1
 8013abc:	e7f0      	b.n	8013aa0 <_vfiprintf_r+0x1b8>
 8013abe:	ab03      	add	r3, sp, #12
 8013ac0:	9300      	str	r3, [sp, #0]
 8013ac2:	462a      	mov	r2, r5
 8013ac4:	4b12      	ldr	r3, [pc, #72]	@ (8013b10 <_vfiprintf_r+0x228>)
 8013ac6:	a904      	add	r1, sp, #16
 8013ac8:	4630      	mov	r0, r6
 8013aca:	f7fd f8f7 	bl	8010cbc <_printf_float>
 8013ace:	4607      	mov	r7, r0
 8013ad0:	1c78      	adds	r0, r7, #1
 8013ad2:	d1d6      	bne.n	8013a82 <_vfiprintf_r+0x19a>
 8013ad4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8013ad6:	07d9      	lsls	r1, r3, #31
 8013ad8:	d405      	bmi.n	8013ae6 <_vfiprintf_r+0x1fe>
 8013ada:	89ab      	ldrh	r3, [r5, #12]
 8013adc:	059a      	lsls	r2, r3, #22
 8013ade:	d402      	bmi.n	8013ae6 <_vfiprintf_r+0x1fe>
 8013ae0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8013ae2:	f7f0 fb1a 	bl	800411a <__retarget_lock_release_recursive>
 8013ae6:	89ab      	ldrh	r3, [r5, #12]
 8013ae8:	065b      	lsls	r3, r3, #25
 8013aea:	f53f af1f 	bmi.w	801392c <_vfiprintf_r+0x44>
 8013aee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013af0:	e71e      	b.n	8013930 <_vfiprintf_r+0x48>
 8013af2:	ab03      	add	r3, sp, #12
 8013af4:	9300      	str	r3, [sp, #0]
 8013af6:	462a      	mov	r2, r5
 8013af8:	4b05      	ldr	r3, [pc, #20]	@ (8013b10 <_vfiprintf_r+0x228>)
 8013afa:	a904      	add	r1, sp, #16
 8013afc:	4630      	mov	r0, r6
 8013afe:	f7fd fb75 	bl	80111ec <_printf_i>
 8013b02:	e7e4      	b.n	8013ace <_vfiprintf_r+0x1e6>
 8013b04:	08015a48 	.word	0x08015a48
 8013b08:	08015a52 	.word	0x08015a52
 8013b0c:	08010cbd 	.word	0x08010cbd
 8013b10:	080138c3 	.word	0x080138c3
 8013b14:	08015a4e 	.word	0x08015a4e

08013b18 <_scanf_chars>:
 8013b18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013b1c:	4615      	mov	r5, r2
 8013b1e:	688a      	ldr	r2, [r1, #8]
 8013b20:	4680      	mov	r8, r0
 8013b22:	460c      	mov	r4, r1
 8013b24:	b932      	cbnz	r2, 8013b34 <_scanf_chars+0x1c>
 8013b26:	698a      	ldr	r2, [r1, #24]
 8013b28:	2a00      	cmp	r2, #0
 8013b2a:	bf14      	ite	ne
 8013b2c:	f04f 32ff 	movne.w	r2, #4294967295
 8013b30:	2201      	moveq	r2, #1
 8013b32:	608a      	str	r2, [r1, #8]
 8013b34:	6822      	ldr	r2, [r4, #0]
 8013b36:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8013bc8 <_scanf_chars+0xb0>
 8013b3a:	06d1      	lsls	r1, r2, #27
 8013b3c:	bf5f      	itttt	pl
 8013b3e:	681a      	ldrpl	r2, [r3, #0]
 8013b40:	1d11      	addpl	r1, r2, #4
 8013b42:	6019      	strpl	r1, [r3, #0]
 8013b44:	6816      	ldrpl	r6, [r2, #0]
 8013b46:	2700      	movs	r7, #0
 8013b48:	69a0      	ldr	r0, [r4, #24]
 8013b4a:	b188      	cbz	r0, 8013b70 <_scanf_chars+0x58>
 8013b4c:	2801      	cmp	r0, #1
 8013b4e:	d107      	bne.n	8013b60 <_scanf_chars+0x48>
 8013b50:	682b      	ldr	r3, [r5, #0]
 8013b52:	781a      	ldrb	r2, [r3, #0]
 8013b54:	6963      	ldr	r3, [r4, #20]
 8013b56:	5c9b      	ldrb	r3, [r3, r2]
 8013b58:	b953      	cbnz	r3, 8013b70 <_scanf_chars+0x58>
 8013b5a:	2f00      	cmp	r7, #0
 8013b5c:	d031      	beq.n	8013bc2 <_scanf_chars+0xaa>
 8013b5e:	e022      	b.n	8013ba6 <_scanf_chars+0x8e>
 8013b60:	2802      	cmp	r0, #2
 8013b62:	d120      	bne.n	8013ba6 <_scanf_chars+0x8e>
 8013b64:	682b      	ldr	r3, [r5, #0]
 8013b66:	781b      	ldrb	r3, [r3, #0]
 8013b68:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013b6c:	071b      	lsls	r3, r3, #28
 8013b6e:	d41a      	bmi.n	8013ba6 <_scanf_chars+0x8e>
 8013b70:	6823      	ldr	r3, [r4, #0]
 8013b72:	06da      	lsls	r2, r3, #27
 8013b74:	bf5e      	ittt	pl
 8013b76:	682b      	ldrpl	r3, [r5, #0]
 8013b78:	781b      	ldrbpl	r3, [r3, #0]
 8013b7a:	f806 3b01 	strbpl.w	r3, [r6], #1
 8013b7e:	682a      	ldr	r2, [r5, #0]
 8013b80:	686b      	ldr	r3, [r5, #4]
 8013b82:	3201      	adds	r2, #1
 8013b84:	602a      	str	r2, [r5, #0]
 8013b86:	68a2      	ldr	r2, [r4, #8]
 8013b88:	3b01      	subs	r3, #1
 8013b8a:	3a01      	subs	r2, #1
 8013b8c:	606b      	str	r3, [r5, #4]
 8013b8e:	3701      	adds	r7, #1
 8013b90:	60a2      	str	r2, [r4, #8]
 8013b92:	b142      	cbz	r2, 8013ba6 <_scanf_chars+0x8e>
 8013b94:	2b00      	cmp	r3, #0
 8013b96:	dcd7      	bgt.n	8013b48 <_scanf_chars+0x30>
 8013b98:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8013b9c:	4629      	mov	r1, r5
 8013b9e:	4640      	mov	r0, r8
 8013ba0:	4798      	blx	r3
 8013ba2:	2800      	cmp	r0, #0
 8013ba4:	d0d0      	beq.n	8013b48 <_scanf_chars+0x30>
 8013ba6:	6823      	ldr	r3, [r4, #0]
 8013ba8:	f013 0310 	ands.w	r3, r3, #16
 8013bac:	d105      	bne.n	8013bba <_scanf_chars+0xa2>
 8013bae:	68e2      	ldr	r2, [r4, #12]
 8013bb0:	3201      	adds	r2, #1
 8013bb2:	60e2      	str	r2, [r4, #12]
 8013bb4:	69a2      	ldr	r2, [r4, #24]
 8013bb6:	b102      	cbz	r2, 8013bba <_scanf_chars+0xa2>
 8013bb8:	7033      	strb	r3, [r6, #0]
 8013bba:	6923      	ldr	r3, [r4, #16]
 8013bbc:	443b      	add	r3, r7
 8013bbe:	6123      	str	r3, [r4, #16]
 8013bc0:	2000      	movs	r0, #0
 8013bc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013bc6:	bf00      	nop
 8013bc8:	0801568d 	.word	0x0801568d

08013bcc <_scanf_i>:
 8013bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bd0:	4698      	mov	r8, r3
 8013bd2:	4b74      	ldr	r3, [pc, #464]	@ (8013da4 <_scanf_i+0x1d8>)
 8013bd4:	460c      	mov	r4, r1
 8013bd6:	4682      	mov	sl, r0
 8013bd8:	4616      	mov	r6, r2
 8013bda:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8013bde:	b087      	sub	sp, #28
 8013be0:	ab03      	add	r3, sp, #12
 8013be2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8013be6:	4b70      	ldr	r3, [pc, #448]	@ (8013da8 <_scanf_i+0x1dc>)
 8013be8:	69a1      	ldr	r1, [r4, #24]
 8013bea:	4a70      	ldr	r2, [pc, #448]	@ (8013dac <_scanf_i+0x1e0>)
 8013bec:	2903      	cmp	r1, #3
 8013bee:	bf08      	it	eq
 8013bf0:	461a      	moveq	r2, r3
 8013bf2:	68a3      	ldr	r3, [r4, #8]
 8013bf4:	9201      	str	r2, [sp, #4]
 8013bf6:	1e5a      	subs	r2, r3, #1
 8013bf8:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8013bfc:	bf88      	it	hi
 8013bfe:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8013c02:	4627      	mov	r7, r4
 8013c04:	bf82      	ittt	hi
 8013c06:	eb03 0905 	addhi.w	r9, r3, r5
 8013c0a:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8013c0e:	60a3      	strhi	r3, [r4, #8]
 8013c10:	f857 3b1c 	ldr.w	r3, [r7], #28
 8013c14:	f443 6350 	orr.w	r3, r3, #3328	@ 0xd00
 8013c18:	bf98      	it	ls
 8013c1a:	f04f 0900 	movls.w	r9, #0
 8013c1e:	6023      	str	r3, [r4, #0]
 8013c20:	463d      	mov	r5, r7
 8013c22:	f04f 0b00 	mov.w	fp, #0
 8013c26:	6831      	ldr	r1, [r6, #0]
 8013c28:	ab03      	add	r3, sp, #12
 8013c2a:	7809      	ldrb	r1, [r1, #0]
 8013c2c:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8013c30:	2202      	movs	r2, #2
 8013c32:	f7ec fadd 	bl	80001f0 <memchr>
 8013c36:	b328      	cbz	r0, 8013c84 <_scanf_i+0xb8>
 8013c38:	f1bb 0f01 	cmp.w	fp, #1
 8013c3c:	d159      	bne.n	8013cf2 <_scanf_i+0x126>
 8013c3e:	6862      	ldr	r2, [r4, #4]
 8013c40:	b92a      	cbnz	r2, 8013c4e <_scanf_i+0x82>
 8013c42:	6822      	ldr	r2, [r4, #0]
 8013c44:	2108      	movs	r1, #8
 8013c46:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8013c4a:	6061      	str	r1, [r4, #4]
 8013c4c:	6022      	str	r2, [r4, #0]
 8013c4e:	6822      	ldr	r2, [r4, #0]
 8013c50:	f422 62a0 	bic.w	r2, r2, #1280	@ 0x500
 8013c54:	6022      	str	r2, [r4, #0]
 8013c56:	68a2      	ldr	r2, [r4, #8]
 8013c58:	1e51      	subs	r1, r2, #1
 8013c5a:	60a1      	str	r1, [r4, #8]
 8013c5c:	b192      	cbz	r2, 8013c84 <_scanf_i+0xb8>
 8013c5e:	6832      	ldr	r2, [r6, #0]
 8013c60:	1c51      	adds	r1, r2, #1
 8013c62:	6031      	str	r1, [r6, #0]
 8013c64:	7812      	ldrb	r2, [r2, #0]
 8013c66:	f805 2b01 	strb.w	r2, [r5], #1
 8013c6a:	6872      	ldr	r2, [r6, #4]
 8013c6c:	3a01      	subs	r2, #1
 8013c6e:	2a00      	cmp	r2, #0
 8013c70:	6072      	str	r2, [r6, #4]
 8013c72:	dc07      	bgt.n	8013c84 <_scanf_i+0xb8>
 8013c74:	f8d4 2180 	ldr.w	r2, [r4, #384]	@ 0x180
 8013c78:	4631      	mov	r1, r6
 8013c7a:	4650      	mov	r0, sl
 8013c7c:	4790      	blx	r2
 8013c7e:	2800      	cmp	r0, #0
 8013c80:	f040 8085 	bne.w	8013d8e <_scanf_i+0x1c2>
 8013c84:	f10b 0b01 	add.w	fp, fp, #1
 8013c88:	f1bb 0f03 	cmp.w	fp, #3
 8013c8c:	d1cb      	bne.n	8013c26 <_scanf_i+0x5a>
 8013c8e:	6863      	ldr	r3, [r4, #4]
 8013c90:	b90b      	cbnz	r3, 8013c96 <_scanf_i+0xca>
 8013c92:	230a      	movs	r3, #10
 8013c94:	6063      	str	r3, [r4, #4]
 8013c96:	6863      	ldr	r3, [r4, #4]
 8013c98:	4945      	ldr	r1, [pc, #276]	@ (8013db0 <_scanf_i+0x1e4>)
 8013c9a:	6960      	ldr	r0, [r4, #20]
 8013c9c:	1ac9      	subs	r1, r1, r3
 8013c9e:	f000 f9dd 	bl	801405c <__sccl>
 8013ca2:	f04f 0b00 	mov.w	fp, #0
 8013ca6:	68a3      	ldr	r3, [r4, #8]
 8013ca8:	6822      	ldr	r2, [r4, #0]
 8013caa:	2b00      	cmp	r3, #0
 8013cac:	d03d      	beq.n	8013d2a <_scanf_i+0x15e>
 8013cae:	6831      	ldr	r1, [r6, #0]
 8013cb0:	6960      	ldr	r0, [r4, #20]
 8013cb2:	f891 c000 	ldrb.w	ip, [r1]
 8013cb6:	f810 000c 	ldrb.w	r0, [r0, ip]
 8013cba:	2800      	cmp	r0, #0
 8013cbc:	d035      	beq.n	8013d2a <_scanf_i+0x15e>
 8013cbe:	f1bc 0f30 	cmp.w	ip, #48	@ 0x30
 8013cc2:	d124      	bne.n	8013d0e <_scanf_i+0x142>
 8013cc4:	0510      	lsls	r0, r2, #20
 8013cc6:	d522      	bpl.n	8013d0e <_scanf_i+0x142>
 8013cc8:	f10b 0b01 	add.w	fp, fp, #1
 8013ccc:	f1b9 0f00 	cmp.w	r9, #0
 8013cd0:	d003      	beq.n	8013cda <_scanf_i+0x10e>
 8013cd2:	3301      	adds	r3, #1
 8013cd4:	f109 39ff 	add.w	r9, r9, #4294967295
 8013cd8:	60a3      	str	r3, [r4, #8]
 8013cda:	6873      	ldr	r3, [r6, #4]
 8013cdc:	3b01      	subs	r3, #1
 8013cde:	2b00      	cmp	r3, #0
 8013ce0:	6073      	str	r3, [r6, #4]
 8013ce2:	dd1b      	ble.n	8013d1c <_scanf_i+0x150>
 8013ce4:	6833      	ldr	r3, [r6, #0]
 8013ce6:	3301      	adds	r3, #1
 8013ce8:	6033      	str	r3, [r6, #0]
 8013cea:	68a3      	ldr	r3, [r4, #8]
 8013cec:	3b01      	subs	r3, #1
 8013cee:	60a3      	str	r3, [r4, #8]
 8013cf0:	e7d9      	b.n	8013ca6 <_scanf_i+0xda>
 8013cf2:	f1bb 0f02 	cmp.w	fp, #2
 8013cf6:	d1ae      	bne.n	8013c56 <_scanf_i+0x8a>
 8013cf8:	6822      	ldr	r2, [r4, #0]
 8013cfa:	f402 61c0 	and.w	r1, r2, #1536	@ 0x600
 8013cfe:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8013d02:	d1bf      	bne.n	8013c84 <_scanf_i+0xb8>
 8013d04:	2110      	movs	r1, #16
 8013d06:	6061      	str	r1, [r4, #4]
 8013d08:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8013d0c:	e7a2      	b.n	8013c54 <_scanf_i+0x88>
 8013d0e:	f422 6210 	bic.w	r2, r2, #2304	@ 0x900
 8013d12:	6022      	str	r2, [r4, #0]
 8013d14:	780b      	ldrb	r3, [r1, #0]
 8013d16:	f805 3b01 	strb.w	r3, [r5], #1
 8013d1a:	e7de      	b.n	8013cda <_scanf_i+0x10e>
 8013d1c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8013d20:	4631      	mov	r1, r6
 8013d22:	4650      	mov	r0, sl
 8013d24:	4798      	blx	r3
 8013d26:	2800      	cmp	r0, #0
 8013d28:	d0df      	beq.n	8013cea <_scanf_i+0x11e>
 8013d2a:	6823      	ldr	r3, [r4, #0]
 8013d2c:	05d9      	lsls	r1, r3, #23
 8013d2e:	d50d      	bpl.n	8013d4c <_scanf_i+0x180>
 8013d30:	42bd      	cmp	r5, r7
 8013d32:	d909      	bls.n	8013d48 <_scanf_i+0x17c>
 8013d34:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8013d38:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8013d3c:	4632      	mov	r2, r6
 8013d3e:	4650      	mov	r0, sl
 8013d40:	4798      	blx	r3
 8013d42:	f105 39ff 	add.w	r9, r5, #4294967295
 8013d46:	464d      	mov	r5, r9
 8013d48:	42bd      	cmp	r5, r7
 8013d4a:	d028      	beq.n	8013d9e <_scanf_i+0x1d2>
 8013d4c:	6822      	ldr	r2, [r4, #0]
 8013d4e:	f012 0210 	ands.w	r2, r2, #16
 8013d52:	d113      	bne.n	8013d7c <_scanf_i+0x1b0>
 8013d54:	702a      	strb	r2, [r5, #0]
 8013d56:	6863      	ldr	r3, [r4, #4]
 8013d58:	9e01      	ldr	r6, [sp, #4]
 8013d5a:	4639      	mov	r1, r7
 8013d5c:	4650      	mov	r0, sl
 8013d5e:	47b0      	blx	r6
 8013d60:	f8d8 3000 	ldr.w	r3, [r8]
 8013d64:	6821      	ldr	r1, [r4, #0]
 8013d66:	1d1a      	adds	r2, r3, #4
 8013d68:	f8c8 2000 	str.w	r2, [r8]
 8013d6c:	f011 0f20 	tst.w	r1, #32
 8013d70:	681b      	ldr	r3, [r3, #0]
 8013d72:	d00f      	beq.n	8013d94 <_scanf_i+0x1c8>
 8013d74:	6018      	str	r0, [r3, #0]
 8013d76:	68e3      	ldr	r3, [r4, #12]
 8013d78:	3301      	adds	r3, #1
 8013d7a:	60e3      	str	r3, [r4, #12]
 8013d7c:	6923      	ldr	r3, [r4, #16]
 8013d7e:	1bed      	subs	r5, r5, r7
 8013d80:	445d      	add	r5, fp
 8013d82:	442b      	add	r3, r5
 8013d84:	6123      	str	r3, [r4, #16]
 8013d86:	2000      	movs	r0, #0
 8013d88:	b007      	add	sp, #28
 8013d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d8e:	f04f 0b00 	mov.w	fp, #0
 8013d92:	e7ca      	b.n	8013d2a <_scanf_i+0x15e>
 8013d94:	07ca      	lsls	r2, r1, #31
 8013d96:	bf4c      	ite	mi
 8013d98:	8018      	strhmi	r0, [r3, #0]
 8013d9a:	6018      	strpl	r0, [r3, #0]
 8013d9c:	e7eb      	b.n	8013d76 <_scanf_i+0x1aa>
 8013d9e:	2001      	movs	r0, #1
 8013da0:	e7f2      	b.n	8013d88 <_scanf_i+0x1bc>
 8013da2:	bf00      	nop
 8013da4:	08015504 	.word	0x08015504
 8013da8:	08010b65 	.word	0x08010b65
 8013dac:	08013231 	.word	0x08013231
 8013db0:	08015a69 	.word	0x08015a69

08013db4 <__sflush_r>:
 8013db4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8013db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dbc:	0716      	lsls	r6, r2, #28
 8013dbe:	4605      	mov	r5, r0
 8013dc0:	460c      	mov	r4, r1
 8013dc2:	d454      	bmi.n	8013e6e <__sflush_r+0xba>
 8013dc4:	684b      	ldr	r3, [r1, #4]
 8013dc6:	2b00      	cmp	r3, #0
 8013dc8:	dc02      	bgt.n	8013dd0 <__sflush_r+0x1c>
 8013dca:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8013dcc:	2b00      	cmp	r3, #0
 8013dce:	dd48      	ble.n	8013e62 <__sflush_r+0xae>
 8013dd0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8013dd2:	2e00      	cmp	r6, #0
 8013dd4:	d045      	beq.n	8013e62 <__sflush_r+0xae>
 8013dd6:	2300      	movs	r3, #0
 8013dd8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8013ddc:	682f      	ldr	r7, [r5, #0]
 8013dde:	6a21      	ldr	r1, [r4, #32]
 8013de0:	602b      	str	r3, [r5, #0]
 8013de2:	d030      	beq.n	8013e46 <__sflush_r+0x92>
 8013de4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8013de6:	89a3      	ldrh	r3, [r4, #12]
 8013de8:	0759      	lsls	r1, r3, #29
 8013dea:	d505      	bpl.n	8013df8 <__sflush_r+0x44>
 8013dec:	6863      	ldr	r3, [r4, #4]
 8013dee:	1ad2      	subs	r2, r2, r3
 8013df0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8013df2:	b10b      	cbz	r3, 8013df8 <__sflush_r+0x44>
 8013df4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8013df6:	1ad2      	subs	r2, r2, r3
 8013df8:	2300      	movs	r3, #0
 8013dfa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8013dfc:	6a21      	ldr	r1, [r4, #32]
 8013dfe:	4628      	mov	r0, r5
 8013e00:	47b0      	blx	r6
 8013e02:	1c43      	adds	r3, r0, #1
 8013e04:	89a3      	ldrh	r3, [r4, #12]
 8013e06:	d106      	bne.n	8013e16 <__sflush_r+0x62>
 8013e08:	6829      	ldr	r1, [r5, #0]
 8013e0a:	291d      	cmp	r1, #29
 8013e0c:	d82b      	bhi.n	8013e66 <__sflush_r+0xb2>
 8013e0e:	4a2a      	ldr	r2, [pc, #168]	@ (8013eb8 <__sflush_r+0x104>)
 8013e10:	410a      	asrs	r2, r1
 8013e12:	07d6      	lsls	r6, r2, #31
 8013e14:	d427      	bmi.n	8013e66 <__sflush_r+0xb2>
 8013e16:	2200      	movs	r2, #0
 8013e18:	6062      	str	r2, [r4, #4]
 8013e1a:	04d9      	lsls	r1, r3, #19
 8013e1c:	6922      	ldr	r2, [r4, #16]
 8013e1e:	6022      	str	r2, [r4, #0]
 8013e20:	d504      	bpl.n	8013e2c <__sflush_r+0x78>
 8013e22:	1c42      	adds	r2, r0, #1
 8013e24:	d101      	bne.n	8013e2a <__sflush_r+0x76>
 8013e26:	682b      	ldr	r3, [r5, #0]
 8013e28:	b903      	cbnz	r3, 8013e2c <__sflush_r+0x78>
 8013e2a:	6560      	str	r0, [r4, #84]	@ 0x54
 8013e2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8013e2e:	602f      	str	r7, [r5, #0]
 8013e30:	b1b9      	cbz	r1, 8013e62 <__sflush_r+0xae>
 8013e32:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8013e36:	4299      	cmp	r1, r3
 8013e38:	d002      	beq.n	8013e40 <__sflush_r+0x8c>
 8013e3a:	4628      	mov	r0, r5
 8013e3c:	f7fe fda4 	bl	8012988 <_free_r>
 8013e40:	2300      	movs	r3, #0
 8013e42:	6363      	str	r3, [r4, #52]	@ 0x34
 8013e44:	e00d      	b.n	8013e62 <__sflush_r+0xae>
 8013e46:	2301      	movs	r3, #1
 8013e48:	4628      	mov	r0, r5
 8013e4a:	47b0      	blx	r6
 8013e4c:	4602      	mov	r2, r0
 8013e4e:	1c50      	adds	r0, r2, #1
 8013e50:	d1c9      	bne.n	8013de6 <__sflush_r+0x32>
 8013e52:	682b      	ldr	r3, [r5, #0]
 8013e54:	2b00      	cmp	r3, #0
 8013e56:	d0c6      	beq.n	8013de6 <__sflush_r+0x32>
 8013e58:	2b1d      	cmp	r3, #29
 8013e5a:	d001      	beq.n	8013e60 <__sflush_r+0xac>
 8013e5c:	2b16      	cmp	r3, #22
 8013e5e:	d11e      	bne.n	8013e9e <__sflush_r+0xea>
 8013e60:	602f      	str	r7, [r5, #0]
 8013e62:	2000      	movs	r0, #0
 8013e64:	e022      	b.n	8013eac <__sflush_r+0xf8>
 8013e66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8013e6a:	b21b      	sxth	r3, r3
 8013e6c:	e01b      	b.n	8013ea6 <__sflush_r+0xf2>
 8013e6e:	690f      	ldr	r7, [r1, #16]
 8013e70:	2f00      	cmp	r7, #0
 8013e72:	d0f6      	beq.n	8013e62 <__sflush_r+0xae>
 8013e74:	0793      	lsls	r3, r2, #30
 8013e76:	680e      	ldr	r6, [r1, #0]
 8013e78:	bf08      	it	eq
 8013e7a:	694b      	ldreq	r3, [r1, #20]
 8013e7c:	600f      	str	r7, [r1, #0]
 8013e7e:	bf18      	it	ne
 8013e80:	2300      	movne	r3, #0
 8013e82:	eba6 0807 	sub.w	r8, r6, r7
 8013e86:	608b      	str	r3, [r1, #8]
 8013e88:	f1b8 0f00 	cmp.w	r8, #0
 8013e8c:	dde9      	ble.n	8013e62 <__sflush_r+0xae>
 8013e8e:	6a21      	ldr	r1, [r4, #32]
 8013e90:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8013e92:	4643      	mov	r3, r8
 8013e94:	463a      	mov	r2, r7
 8013e96:	4628      	mov	r0, r5
 8013e98:	47b0      	blx	r6
 8013e9a:	2800      	cmp	r0, #0
 8013e9c:	dc08      	bgt.n	8013eb0 <__sflush_r+0xfc>
 8013e9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013ea2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8013ea6:	81a3      	strh	r3, [r4, #12]
 8013ea8:	f04f 30ff 	mov.w	r0, #4294967295
 8013eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013eb0:	4407      	add	r7, r0
 8013eb2:	eba8 0800 	sub.w	r8, r8, r0
 8013eb6:	e7e7      	b.n	8013e88 <__sflush_r+0xd4>
 8013eb8:	dfbffffe 	.word	0xdfbffffe

08013ebc <_fflush_r>:
 8013ebc:	b538      	push	{r3, r4, r5, lr}
 8013ebe:	690b      	ldr	r3, [r1, #16]
 8013ec0:	4605      	mov	r5, r0
 8013ec2:	460c      	mov	r4, r1
 8013ec4:	b913      	cbnz	r3, 8013ecc <_fflush_r+0x10>
 8013ec6:	2500      	movs	r5, #0
 8013ec8:	4628      	mov	r0, r5
 8013eca:	bd38      	pop	{r3, r4, r5, pc}
 8013ecc:	b118      	cbz	r0, 8013ed6 <_fflush_r+0x1a>
 8013ece:	6a03      	ldr	r3, [r0, #32]
 8013ed0:	b90b      	cbnz	r3, 8013ed6 <_fflush_r+0x1a>
 8013ed2:	f7fd fb37 	bl	8011544 <__sinit>
 8013ed6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013eda:	2b00      	cmp	r3, #0
 8013edc:	d0f3      	beq.n	8013ec6 <_fflush_r+0xa>
 8013ede:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8013ee0:	07d0      	lsls	r0, r2, #31
 8013ee2:	d404      	bmi.n	8013eee <_fflush_r+0x32>
 8013ee4:	0599      	lsls	r1, r3, #22
 8013ee6:	d402      	bmi.n	8013eee <_fflush_r+0x32>
 8013ee8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8013eea:	f7f0 f901 	bl	80040f0 <__retarget_lock_acquire_recursive>
 8013eee:	4628      	mov	r0, r5
 8013ef0:	4621      	mov	r1, r4
 8013ef2:	f7ff ff5f 	bl	8013db4 <__sflush_r>
 8013ef6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8013ef8:	07da      	lsls	r2, r3, #31
 8013efa:	4605      	mov	r5, r0
 8013efc:	d4e4      	bmi.n	8013ec8 <_fflush_r+0xc>
 8013efe:	89a3      	ldrh	r3, [r4, #12]
 8013f00:	059b      	lsls	r3, r3, #22
 8013f02:	d4e1      	bmi.n	8013ec8 <_fflush_r+0xc>
 8013f04:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8013f06:	f7f0 f908 	bl	800411a <__retarget_lock_release_recursive>
 8013f0a:	e7dd      	b.n	8013ec8 <_fflush_r+0xc>

08013f0c <fiprintf>:
 8013f0c:	b40e      	push	{r1, r2, r3}
 8013f0e:	b503      	push	{r0, r1, lr}
 8013f10:	4601      	mov	r1, r0
 8013f12:	ab03      	add	r3, sp, #12
 8013f14:	4805      	ldr	r0, [pc, #20]	@ (8013f2c <fiprintf+0x20>)
 8013f16:	f853 2b04 	ldr.w	r2, [r3], #4
 8013f1a:	6800      	ldr	r0, [r0, #0]
 8013f1c:	9301      	str	r3, [sp, #4]
 8013f1e:	f7ff fce3 	bl	80138e8 <_vfiprintf_r>
 8013f22:	b002      	add	sp, #8
 8013f24:	f85d eb04 	ldr.w	lr, [sp], #4
 8013f28:	b003      	add	sp, #12
 8013f2a:	4770      	bx	lr
 8013f2c:	200001f0 	.word	0x200001f0

08013f30 <__swhatbuf_r>:
 8013f30:	b570      	push	{r4, r5, r6, lr}
 8013f32:	460c      	mov	r4, r1
 8013f34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8013f38:	2900      	cmp	r1, #0
 8013f3a:	b096      	sub	sp, #88	@ 0x58
 8013f3c:	4615      	mov	r5, r2
 8013f3e:	461e      	mov	r6, r3
 8013f40:	da0d      	bge.n	8013f5e <__swhatbuf_r+0x2e>
 8013f42:	89a3      	ldrh	r3, [r4, #12]
 8013f44:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8013f48:	f04f 0100 	mov.w	r1, #0
 8013f4c:	bf14      	ite	ne
 8013f4e:	2340      	movne	r3, #64	@ 0x40
 8013f50:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8013f54:	2000      	movs	r0, #0
 8013f56:	6031      	str	r1, [r6, #0]
 8013f58:	602b      	str	r3, [r5, #0]
 8013f5a:	b016      	add	sp, #88	@ 0x58
 8013f5c:	bd70      	pop	{r4, r5, r6, pc}
 8013f5e:	466a      	mov	r2, sp
 8013f60:	f000 f8f0 	bl	8014144 <_fstat_r>
 8013f64:	2800      	cmp	r0, #0
 8013f66:	dbec      	blt.n	8013f42 <__swhatbuf_r+0x12>
 8013f68:	9901      	ldr	r1, [sp, #4]
 8013f6a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8013f6e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8013f72:	4259      	negs	r1, r3
 8013f74:	4159      	adcs	r1, r3
 8013f76:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8013f7a:	e7eb      	b.n	8013f54 <__swhatbuf_r+0x24>

08013f7c <__smakebuf_r>:
 8013f7c:	898b      	ldrh	r3, [r1, #12]
 8013f7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013f80:	079d      	lsls	r5, r3, #30
 8013f82:	4606      	mov	r6, r0
 8013f84:	460c      	mov	r4, r1
 8013f86:	d507      	bpl.n	8013f98 <__smakebuf_r+0x1c>
 8013f88:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8013f8c:	6023      	str	r3, [r4, #0]
 8013f8e:	6123      	str	r3, [r4, #16]
 8013f90:	2301      	movs	r3, #1
 8013f92:	6163      	str	r3, [r4, #20]
 8013f94:	b003      	add	sp, #12
 8013f96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013f98:	ab01      	add	r3, sp, #4
 8013f9a:	466a      	mov	r2, sp
 8013f9c:	f7ff ffc8 	bl	8013f30 <__swhatbuf_r>
 8013fa0:	9f00      	ldr	r7, [sp, #0]
 8013fa2:	4605      	mov	r5, r0
 8013fa4:	4639      	mov	r1, r7
 8013fa6:	4630      	mov	r0, r6
 8013fa8:	f7fc fca8 	bl	80108fc <_malloc_r>
 8013fac:	b948      	cbnz	r0, 8013fc2 <__smakebuf_r+0x46>
 8013fae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013fb2:	059a      	lsls	r2, r3, #22
 8013fb4:	d4ee      	bmi.n	8013f94 <__smakebuf_r+0x18>
 8013fb6:	f023 0303 	bic.w	r3, r3, #3
 8013fba:	f043 0302 	orr.w	r3, r3, #2
 8013fbe:	81a3      	strh	r3, [r4, #12]
 8013fc0:	e7e2      	b.n	8013f88 <__smakebuf_r+0xc>
 8013fc2:	89a3      	ldrh	r3, [r4, #12]
 8013fc4:	6020      	str	r0, [r4, #0]
 8013fc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8013fca:	81a3      	strh	r3, [r4, #12]
 8013fcc:	9b01      	ldr	r3, [sp, #4]
 8013fce:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8013fd2:	b15b      	cbz	r3, 8013fec <__smakebuf_r+0x70>
 8013fd4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8013fd8:	4630      	mov	r0, r6
 8013fda:	f000 f8c5 	bl	8014168 <_isatty_r>
 8013fde:	b128      	cbz	r0, 8013fec <__smakebuf_r+0x70>
 8013fe0:	89a3      	ldrh	r3, [r4, #12]
 8013fe2:	f023 0303 	bic.w	r3, r3, #3
 8013fe6:	f043 0301 	orr.w	r3, r3, #1
 8013fea:	81a3      	strh	r3, [r4, #12]
 8013fec:	89a3      	ldrh	r3, [r4, #12]
 8013fee:	431d      	orrs	r5, r3
 8013ff0:	81a5      	strh	r5, [r4, #12]
 8013ff2:	e7cf      	b.n	8013f94 <__smakebuf_r+0x18>

08013ff4 <_putc_r>:
 8013ff4:	b570      	push	{r4, r5, r6, lr}
 8013ff6:	460d      	mov	r5, r1
 8013ff8:	4614      	mov	r4, r2
 8013ffa:	4606      	mov	r6, r0
 8013ffc:	b118      	cbz	r0, 8014006 <_putc_r+0x12>
 8013ffe:	6a03      	ldr	r3, [r0, #32]
 8014000:	b90b      	cbnz	r3, 8014006 <_putc_r+0x12>
 8014002:	f7fd fa9f 	bl	8011544 <__sinit>
 8014006:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8014008:	07d8      	lsls	r0, r3, #31
 801400a:	d405      	bmi.n	8014018 <_putc_r+0x24>
 801400c:	89a3      	ldrh	r3, [r4, #12]
 801400e:	0599      	lsls	r1, r3, #22
 8014010:	d402      	bmi.n	8014018 <_putc_r+0x24>
 8014012:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8014014:	f7f0 f86c 	bl	80040f0 <__retarget_lock_acquire_recursive>
 8014018:	68a3      	ldr	r3, [r4, #8]
 801401a:	3b01      	subs	r3, #1
 801401c:	2b00      	cmp	r3, #0
 801401e:	60a3      	str	r3, [r4, #8]
 8014020:	da05      	bge.n	801402e <_putc_r+0x3a>
 8014022:	69a2      	ldr	r2, [r4, #24]
 8014024:	4293      	cmp	r3, r2
 8014026:	db12      	blt.n	801404e <_putc_r+0x5a>
 8014028:	b2eb      	uxtb	r3, r5
 801402a:	2b0a      	cmp	r3, #10
 801402c:	d00f      	beq.n	801404e <_putc_r+0x5a>
 801402e:	6823      	ldr	r3, [r4, #0]
 8014030:	1c5a      	adds	r2, r3, #1
 8014032:	6022      	str	r2, [r4, #0]
 8014034:	701d      	strb	r5, [r3, #0]
 8014036:	b2ed      	uxtb	r5, r5
 8014038:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801403a:	07da      	lsls	r2, r3, #31
 801403c:	d405      	bmi.n	801404a <_putc_r+0x56>
 801403e:	89a3      	ldrh	r3, [r4, #12]
 8014040:	059b      	lsls	r3, r3, #22
 8014042:	d402      	bmi.n	801404a <_putc_r+0x56>
 8014044:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8014046:	f7f0 f868 	bl	800411a <__retarget_lock_release_recursive>
 801404a:	4628      	mov	r0, r5
 801404c:	bd70      	pop	{r4, r5, r6, pc}
 801404e:	4629      	mov	r1, r5
 8014050:	4622      	mov	r2, r4
 8014052:	4630      	mov	r0, r6
 8014054:	f7fd fbe7 	bl	8011826 <__swbuf_r>
 8014058:	4605      	mov	r5, r0
 801405a:	e7ed      	b.n	8014038 <_putc_r+0x44>

0801405c <__sccl>:
 801405c:	b570      	push	{r4, r5, r6, lr}
 801405e:	780b      	ldrb	r3, [r1, #0]
 8014060:	4604      	mov	r4, r0
 8014062:	2b5e      	cmp	r3, #94	@ 0x5e
 8014064:	bf0b      	itete	eq
 8014066:	784b      	ldrbeq	r3, [r1, #1]
 8014068:	1c4a      	addne	r2, r1, #1
 801406a:	1c8a      	addeq	r2, r1, #2
 801406c:	2100      	movne	r1, #0
 801406e:	bf08      	it	eq
 8014070:	2101      	moveq	r1, #1
 8014072:	3801      	subs	r0, #1
 8014074:	f104 05ff 	add.w	r5, r4, #255	@ 0xff
 8014078:	f800 1f01 	strb.w	r1, [r0, #1]!
 801407c:	42a8      	cmp	r0, r5
 801407e:	d1fb      	bne.n	8014078 <__sccl+0x1c>
 8014080:	b90b      	cbnz	r3, 8014086 <__sccl+0x2a>
 8014082:	1e50      	subs	r0, r2, #1
 8014084:	bd70      	pop	{r4, r5, r6, pc}
 8014086:	f081 0101 	eor.w	r1, r1, #1
 801408a:	54e1      	strb	r1, [r4, r3]
 801408c:	4610      	mov	r0, r2
 801408e:	4602      	mov	r2, r0
 8014090:	f812 5b01 	ldrb.w	r5, [r2], #1
 8014094:	2d2d      	cmp	r5, #45	@ 0x2d
 8014096:	d005      	beq.n	80140a4 <__sccl+0x48>
 8014098:	2d5d      	cmp	r5, #93	@ 0x5d
 801409a:	d016      	beq.n	80140ca <__sccl+0x6e>
 801409c:	2d00      	cmp	r5, #0
 801409e:	d0f1      	beq.n	8014084 <__sccl+0x28>
 80140a0:	462b      	mov	r3, r5
 80140a2:	e7f2      	b.n	801408a <__sccl+0x2e>
 80140a4:	7846      	ldrb	r6, [r0, #1]
 80140a6:	2e5d      	cmp	r6, #93	@ 0x5d
 80140a8:	d0fa      	beq.n	80140a0 <__sccl+0x44>
 80140aa:	42b3      	cmp	r3, r6
 80140ac:	dcf8      	bgt.n	80140a0 <__sccl+0x44>
 80140ae:	3002      	adds	r0, #2
 80140b0:	461a      	mov	r2, r3
 80140b2:	3201      	adds	r2, #1
 80140b4:	4296      	cmp	r6, r2
 80140b6:	54a1      	strb	r1, [r4, r2]
 80140b8:	dcfb      	bgt.n	80140b2 <__sccl+0x56>
 80140ba:	1af2      	subs	r2, r6, r3
 80140bc:	3a01      	subs	r2, #1
 80140be:	1c5d      	adds	r5, r3, #1
 80140c0:	42b3      	cmp	r3, r6
 80140c2:	bfa8      	it	ge
 80140c4:	2200      	movge	r2, #0
 80140c6:	18ab      	adds	r3, r5, r2
 80140c8:	e7e1      	b.n	801408e <__sccl+0x32>
 80140ca:	4610      	mov	r0, r2
 80140cc:	e7da      	b.n	8014084 <__sccl+0x28>

080140ce <__submore>:
 80140ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80140d2:	460c      	mov	r4, r1
 80140d4:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 80140d6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80140da:	4299      	cmp	r1, r3
 80140dc:	d11d      	bne.n	801411a <__submore+0x4c>
 80140de:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80140e2:	f7fc fc0b 	bl	80108fc <_malloc_r>
 80140e6:	b918      	cbnz	r0, 80140f0 <__submore+0x22>
 80140e8:	f04f 30ff 	mov.w	r0, #4294967295
 80140ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140f0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80140f4:	63a3      	str	r3, [r4, #56]	@ 0x38
 80140f6:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 80140fa:	6360      	str	r0, [r4, #52]	@ 0x34
 80140fc:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
 8014100:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8014104:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
 8014108:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 801410c:	f880 33fd 	strb.w	r3, [r0, #1021]	@ 0x3fd
 8014110:	f200 30fd 	addw	r0, r0, #1021	@ 0x3fd
 8014114:	6020      	str	r0, [r4, #0]
 8014116:	2000      	movs	r0, #0
 8014118:	e7e8      	b.n	80140ec <__submore+0x1e>
 801411a:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
 801411c:	0077      	lsls	r7, r6, #1
 801411e:	463a      	mov	r2, r7
 8014120:	f7fc fc78 	bl	8010a14 <_realloc_r>
 8014124:	4605      	mov	r5, r0
 8014126:	2800      	cmp	r0, #0
 8014128:	d0de      	beq.n	80140e8 <__submore+0x1a>
 801412a:	eb00 0806 	add.w	r8, r0, r6
 801412e:	4601      	mov	r1, r0
 8014130:	4632      	mov	r2, r6
 8014132:	4640      	mov	r0, r8
 8014134:	f7fd fdb0 	bl	8011c98 <memcpy>
 8014138:	e9c4 570d 	strd	r5, r7, [r4, #52]	@ 0x34
 801413c:	f8c4 8000 	str.w	r8, [r4]
 8014140:	e7e9      	b.n	8014116 <__submore+0x48>
	...

08014144 <_fstat_r>:
 8014144:	b538      	push	{r3, r4, r5, lr}
 8014146:	4d07      	ldr	r5, [pc, #28]	@ (8014164 <_fstat_r+0x20>)
 8014148:	2300      	movs	r3, #0
 801414a:	4604      	mov	r4, r0
 801414c:	4608      	mov	r0, r1
 801414e:	4611      	mov	r1, r2
 8014150:	602b      	str	r3, [r5, #0]
 8014152:	f7ef fb1b 	bl	800378c <_fstat>
 8014156:	1c43      	adds	r3, r0, #1
 8014158:	d102      	bne.n	8014160 <_fstat_r+0x1c>
 801415a:	682b      	ldr	r3, [r5, #0]
 801415c:	b103      	cbz	r3, 8014160 <_fstat_r+0x1c>
 801415e:	6023      	str	r3, [r4, #0]
 8014160:	bd38      	pop	{r3, r4, r5, pc}
 8014162:	bf00      	nop
 8014164:	20006dbc 	.word	0x20006dbc

08014168 <_isatty_r>:
 8014168:	b538      	push	{r3, r4, r5, lr}
 801416a:	4d06      	ldr	r5, [pc, #24]	@ (8014184 <_isatty_r+0x1c>)
 801416c:	2300      	movs	r3, #0
 801416e:	4604      	mov	r4, r0
 8014170:	4608      	mov	r0, r1
 8014172:	602b      	str	r3, [r5, #0]
 8014174:	f7ef fb1a 	bl	80037ac <_isatty>
 8014178:	1c43      	adds	r3, r0, #1
 801417a:	d102      	bne.n	8014182 <_isatty_r+0x1a>
 801417c:	682b      	ldr	r3, [r5, #0]
 801417e:	b103      	cbz	r3, 8014182 <_isatty_r+0x1a>
 8014180:	6023      	str	r3, [r4, #0]
 8014182:	bd38      	pop	{r3, r4, r5, pc}
 8014184:	20006dbc 	.word	0x20006dbc

08014188 <abort>:
 8014188:	b508      	push	{r3, lr}
 801418a:	2006      	movs	r0, #6
 801418c:	f000 f82c 	bl	80141e8 <raise>
 8014190:	2001      	movs	r0, #1
 8014192:	f7ef fac7 	bl	8003724 <_exit>

08014196 <_raise_r>:
 8014196:	291f      	cmp	r1, #31
 8014198:	b538      	push	{r3, r4, r5, lr}
 801419a:	4605      	mov	r5, r0
 801419c:	460c      	mov	r4, r1
 801419e:	d904      	bls.n	80141aa <_raise_r+0x14>
 80141a0:	2316      	movs	r3, #22
 80141a2:	6003      	str	r3, [r0, #0]
 80141a4:	f04f 30ff 	mov.w	r0, #4294967295
 80141a8:	bd38      	pop	{r3, r4, r5, pc}
 80141aa:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80141ac:	b112      	cbz	r2, 80141b4 <_raise_r+0x1e>
 80141ae:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80141b2:	b94b      	cbnz	r3, 80141c8 <_raise_r+0x32>
 80141b4:	4628      	mov	r0, r5
 80141b6:	f000 f831 	bl	801421c <_getpid_r>
 80141ba:	4622      	mov	r2, r4
 80141bc:	4601      	mov	r1, r0
 80141be:	4628      	mov	r0, r5
 80141c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80141c4:	f000 b818 	b.w	80141f8 <_kill_r>
 80141c8:	2b01      	cmp	r3, #1
 80141ca:	d00a      	beq.n	80141e2 <_raise_r+0x4c>
 80141cc:	1c59      	adds	r1, r3, #1
 80141ce:	d103      	bne.n	80141d8 <_raise_r+0x42>
 80141d0:	2316      	movs	r3, #22
 80141d2:	6003      	str	r3, [r0, #0]
 80141d4:	2001      	movs	r0, #1
 80141d6:	e7e7      	b.n	80141a8 <_raise_r+0x12>
 80141d8:	2100      	movs	r1, #0
 80141da:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80141de:	4620      	mov	r0, r4
 80141e0:	4798      	blx	r3
 80141e2:	2000      	movs	r0, #0
 80141e4:	e7e0      	b.n	80141a8 <_raise_r+0x12>
	...

080141e8 <raise>:
 80141e8:	4b02      	ldr	r3, [pc, #8]	@ (80141f4 <raise+0xc>)
 80141ea:	4601      	mov	r1, r0
 80141ec:	6818      	ldr	r0, [r3, #0]
 80141ee:	f7ff bfd2 	b.w	8014196 <_raise_r>
 80141f2:	bf00      	nop
 80141f4:	200001f0 	.word	0x200001f0

080141f8 <_kill_r>:
 80141f8:	b538      	push	{r3, r4, r5, lr}
 80141fa:	4d07      	ldr	r5, [pc, #28]	@ (8014218 <_kill_r+0x20>)
 80141fc:	2300      	movs	r3, #0
 80141fe:	4604      	mov	r4, r0
 8014200:	4608      	mov	r0, r1
 8014202:	4611      	mov	r1, r2
 8014204:	602b      	str	r3, [r5, #0]
 8014206:	f7ef fa7d 	bl	8003704 <_kill>
 801420a:	1c43      	adds	r3, r0, #1
 801420c:	d102      	bne.n	8014214 <_kill_r+0x1c>
 801420e:	682b      	ldr	r3, [r5, #0]
 8014210:	b103      	cbz	r3, 8014214 <_kill_r+0x1c>
 8014212:	6023      	str	r3, [r4, #0]
 8014214:	bd38      	pop	{r3, r4, r5, pc}
 8014216:	bf00      	nop
 8014218:	20006dbc 	.word	0x20006dbc

0801421c <_getpid_r>:
 801421c:	f7ef ba6a 	b.w	80036f4 <_getpid>

08014220 <_init>:
 8014220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014222:	bf00      	nop
 8014224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8014226:	bc08      	pop	{r3}
 8014228:	469e      	mov	lr, r3
 801422a:	4770      	bx	lr

0801422c <_fini>:
 801422c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801422e:	bf00      	nop
 8014230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8014232:	bc08      	pop	{r3}
 8014234:	469e      	mov	lr, r3
 8014236:	4770      	bx	lr
